{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Tech Notes","text":""},{"location":"while-coding/","title":"While Coding","text":""},{"location":"while-coding/API-driven-dev/","title":"API driven development","text":"<p>There is a popular saying in the API world: \"An API is as good as its documentation.\" Hence, API documentation is one of the tasks that should be done with utmost clarity.</p> <p>When using swagger (and in general too) for API drive development, Remember there are two approaches:</p>"},{"location":"while-coding/API-driven-dev/#code-first","title":"Code-first","text":"<ol> <li>Code your API implementation.</li> <li>Automatically generate the API definition from the source code, for example, using Swagger Core annotations and Swagger Maven plugin. See the Swagger Core wiki to learn more.</li> <li>Upload the generated API definition to SwaggerHub using the SwaggerHub Maven plugin.</li> </ol>"},{"location":"while-coding/API-driven-dev/#design-first","title":"Design-first","text":"<ol> <li>Write your API definition on SwaggerHub.</li> <li>Download the API definition using the SwaggerHub Maven plugin.</li> <li>Pass the API definition to another Swagger tool, for example:<ul> <li>Use Swagger Codegen Maven plugin to generate API server and client code.</li> <li>Use Swagger Inflector to automatically wire up the API definition to the implementation and provide out-of-the-box mocking.</li> </ul> </li> </ol>"},{"location":"while-coding/API-driven-dev/#design-first-approach-how-to-use-swagger-for-api-driven-development-and-integrate-it-with-spring-boot-app","title":"Design first approach: How to use swagger for api driven development and integrate it with Spring boot app :","text":""},{"location":"while-coding/API-driven-dev/#working-with-editorswaggerio","title":"Working with editor.swagger.io","text":"<p>In the swagger yaml, there are four basic sections :</p> <p>1) info : it has general info about API documentation like title, description, version etc 2) basepath : version info</p> <p>3) tags : main category sections of api</p> <p>4) schemes : http, https</p> <p>5) paths : actual api details that will be categorised by tags</p> <p>6) definitions : contains model information</p> <p>There are many other sections but above have the main contents.</p>"},{"location":"while-coding/API-driven-dev/#now-you-need-to-use-this-yaml-in-your-project-to-do-two-things","title":"Now you need to use this yaml in your project to do two things :","text":"<p>1) generate code if you want to (https://reflectoring.io/spring-boot-openapi/)</p> <p>2) generate documents ( https://songrgg.github.io/operation/host-swagger-documentation-with-yaml-json-files/ )</p> <p>steps below are derived from above two pages :</p> <p>once your yaml file is ready then put in under src-&gt;main-&gt;resources in your project.</p> <p>Let's start with step 1, code generation :</p> <p>Now put below in your pom.xml</p> <p>in the dependency :</p> <pre><code>&lt;dependency&gt;\n  &lt;groupId&gt;io.springfox&lt;/groupId&gt;\n  &lt;artifactId&gt;springfox-boot-starter&lt;/artifactId&gt;\n  &lt;version&gt;3.0.0&lt;/version&gt;\n&lt;/dependency&gt;\n&lt;dependency&gt;\n  &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\n  &lt;artifactId&gt;spring-boot-starter-validation&lt;/artifactId&gt;\n&lt;/dependency&gt;\n&lt;dependency&gt;\n  &lt;groupId&gt;org.openapitools&lt;/groupId&gt;\n  &lt;artifactId&gt;jackson-databind-nullable&lt;/artifactId&gt;\n  &lt;version&gt;0.2.1&lt;/version&gt;\n&lt;/dependency&gt;\n</code></pre> <p>And in plug-ins :</p> <pre><code>&lt;plugin&gt;\n  &lt;groupId&gt;org.openapitools&lt;/groupId&gt;\n  &lt;artifactId&gt;openapi-generator-maven-plugin&lt;/artifactId&gt;\n  &lt;version&gt;4.3.1&lt;/version&gt;\n  &lt;executions&gt;\n    &lt;execution&gt;\n      &lt;goals&gt;\n        &lt;goal&gt;generate&lt;/goal&gt;\n      &lt;/goals&gt;\n      &lt;configuration&gt;\n        &lt;inputSpec&gt;${project.basedir}/src/main/resources/api.yaml&lt;/inputSpec&gt;\n        &lt;generatorName&gt;java&lt;/generatorName&gt;\n        &lt;configOptions&gt;\n          &lt;sourceFolder&gt;src/gen/java/main&lt;/sourceFolder&gt;\n        &lt;/configOptions&gt;\n      &lt;/configuration&gt;\n    &lt;/execution&gt;\n  &lt;/executions&gt;\n&lt;/plugin&gt;\n</code></pre> <p>now if you compile, it'll generate code for model etc</p>"},{"location":"while-coding/API-driven-dev/#lets-now-look-at-generating-document","title":"Let's now look at generating document :","text":"<p>Add below to file which is having @SpringbootApplication</p> <pre><code>@Bean\npublic Docket swagger() {\n    return new Docket(SWAGGER_2)\n            .select()\n            .apis(RequestHandlerSelectors.any())\n            .paths(PathSelectors.any())\n            .build();\n}\n</code></pre> <p>then create a new class under ( preferably in a new package called 'com.xyz.config' ) as below :</p> <pre><code>package com.gsg.config;\n\nimport org.springframework.context.annotation.Bean;\nimport org.springframework.context.annotation.Configuration;\nimport org.springframework.context.annotation.Primary;\nimport springfox.documentation.swagger.web.InMemorySwaggerResourcesProvider;\nimport springfox.documentation.swagger.web.SwaggerResource;\nimport springfox.documentation.swagger.web.SwaggerResourcesProvider;\n\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.List;\n\n@Configuration\npublic class SwaggerSpecConfig {\n\n    @Primary\n    @Bean\n    public SwaggerResourcesProvider swaggerResourcesProvider(\n            InMemorySwaggerResourcesProvider defaultResourcesProvider) {\n        return () -&gt; {\n            List&lt;SwaggerResource&gt; resources = new ArrayList&lt;&gt;();\n            Arrays.asList(\"gsg\")\n                    .forEach(resourceName -&gt; resources.add(loadResource(resourceName)));\n            return resources;\n        };\n    }\n\n    private SwaggerResource loadResource(String resource) {\n        SwaggerResource wsResource = new SwaggerResource();\n        wsResource.setName(resource);\n        wsResource.setSwaggerVersion(\"1.0\");\n        wsResource.setLocation(\"/resources/gsg-event-service-v1.yaml\");\n        return wsResource;\n    }\n}\n</code></pre> <p>Make appropriate changes to point to where your yaml files are stored in the project.</p>"},{"location":"while-coding/API-driven-dev/#code-first-approach","title":"code first approach:","text":"<ul> <li>Write code and annotate it</li> <li>generate model from annotations ( start from : https://github.com/swagger-api/swagger-core/wiki/Swagger-2.X---Getting-started )</li> <li>then use model to generate documentation and client library if needed</li> </ul>"},{"location":"while-coding/API-driven-dev/#api-versioning","title":"API versioning :","text":"<p>A good video : https://www.youtube.com/watch?v=M2KCu0Oq3JE</p>"},{"location":"while-coding/API-driven-dev/#install-and-use-swagger-ui-locally-on-linux","title":"Install and Use swagger-ui locally on linux","text":"<p>You need to have port 80 free.</p> <pre><code>sudo docker run -p 80:8080 swaggerapi/swagger-ui\n</code></pre> <p>Now if you want to browse a swagger specification (json or yaml) file using swagger UI Then </p> <pre><code>sudo docker run -p 80:8080 -e SWAGGER_JSON=/jans/jans-config-api/docs/jans-config-api-swagger.yaml -v /home/dhaval/IdeaProjects/Janssen/jans:/jans swaggerapi/swagger-ui\n</code></pre> <p>Now hit <code>http://localhost:80</code> and see your yaml or json swagger spec rendered using swagger UI. This is especially useful because now you can point the local copy of the spec file to locally installed REST api server and test your apis. For this you need to edit the <code>server</code> element in your local yaml. Just save the file after change and refresh the browser.</p>"},{"location":"while-coding/API-driven-dev/#references","title":"References:","text":"<ul> <li>https://dzone.com/articles/abcs-of-api-driven-development</li> <li>https://dzone.com/articles/the-api-life-cycle#:~:text=The%20API%20lifecycle%20involves%20a,designing%2C%20authentication%2C%20and%20creation.&amp;text=In%20the%20API%20lifecycle%2C%20there,Manages%20and%20monetizes%20the%20API.</li> <li>famous apis : https://developer.paypal.com/docs/api/overview/</li> <li>twitter</li> </ul>"},{"location":"while-coding/CDI-weld-notes/","title":"CDI weld notes","text":"<ul> <li>With very few exceptions, almost every concrete Java class that has a constructor with no parameters (or a constructor designated with the annotation @Inject) is a bean.</li> </ul> <p>A managed bean is a Java class. You can explicitly declare a managed bean by annotating the bean class @ManagedBean, but in CDI you don\u2019t need to. According to the specification, the CDI container treats any class that satisfies the following conditions as a managed bean:</p> <ul> <li>It is not a non-static inner class.</li> <li>It is a concrete class, or is annotated @Decorator.</li> <li>It is not annotated with an EJB component-defining annotation or declared as an EJB bean class in ejb-jar.xml.</li> <li>It does not implement javax.enterprise.inject.spi.Extension.</li> <li>It has an appropriate constructor\u2014either:</li> <li>the class has a constructor with no parameters, or</li> <li>the class declares a constructor annotated @Inject.</li> </ul> <p>Bean types for a managed bean contains the bean class, every superclass and all interfaces it implements directly or indirectly.</p> <p>If a managed bean has a public field, it must have the default scope @Dependent</p> <ul> <li> <p>@Inject may be applied to a constructor or method of a bean, and tells the container to call that constructor or method when instantiating the bean. The container will inject other beans into the parameters of the constructor or method.</p> </li> <li> <p>Notice the controller bean is request-scoped and named (<code>@Named @RequestScoped</code>). Since this combination is so common in web applications, there\u2019s a built-in annotation for it in CDI that we could have used as a shorthand. When the (stereotype) annotation <code>@Model</code> is declared on a class, it creates a request-scoped and named bean. Alternatively, we may obtain an instance of TextTranslator programmatically from an injected instance of Instance, parameterized with the bean type: <code>@Inject Instance&lt;TextTranslator&gt; textTranslatorInstance;</code></p> </li> <li> <p>it isn\u2019t necessary to create a getter or setter method to inject one bean into another. CDI can access an injected field directly (even if it\u2019s private!), which sometimes helps eliminate some wasteful code. The name of the field is arbitrary. It\u2019s the field\u2019s type that determines what is injected.</p> </li> <li> <p>At system initialization time, the container must validate that exactly one bean exists which satisfies each injection point. In our example, if no implementation of Translator is available\u2014if the SentenceTranslator EJB was not deployed\u2014the container would inform us of an unsatisfied dependency. If more than one implementation of Translator were available, the container would inform us of the ambiguous dependency.</p> </li> </ul>"},{"location":"while-coding/CDI-weld-notes/#creating-an-user-defined-qualifier-annotation","title":"creating an user defined <code>@Qualifier</code> annotation:","text":"<p>Define:</p> <pre><code>@Qualifier\n@Target({TYPE, METHOD, PARAMETER, FIELD})\n@Retention(RUNTIME)\npublic @interface CreditCard {}\n</code></pre> <p>Qualify bean:</p> <pre><code>@CreditCard\npublic class CreditCardPaymentProcessor\n  implements PaymentProcessor { ... }\n</code></pre> <p>Use it during injection:</p> <pre><code>@Inject @CreditCard PaymentProcessor paymentProcessor\n</code></pre>"},{"location":"while-coding/CDI-weld-notes/#scopes","title":"Scopes","text":"<p>Each scope is represented by an annotation type.</p> <p>Keep in mind that once a bean is bound to a context, it remains in that context until the context is destroyed. There is no way to manually remove a bean from a context. If you don\u2019t want the bean to sit in the session indefinitely, consider using another scope with a shorted lifespan, such as the request or conversation scope.</p> <p>If a scope is not explicitly specified, then the bean belongs to a special scope called the dependent pseudo-scope. Beans with this scope live to serve the object into which they were injected, which means their lifecycle is bound to the lifecycle of that object.</p>"},{"location":"while-coding/CDI-weld-notes/#el-name","title":"EL name","text":"<p>If you want to reference a bean in non-Java code that supports Unified EL expressions, for example, in a JSP or JSF page, you must assign the bean an EL name. The EL name is specified using the <code>@Named</code> annotation</p> <pre><code>public @SessionScoped @Named(\"cart\")\nclass ShoppingCart implements Serializable { ... }\n</code></pre> <p>Now we can easily use the bean in any JSF or JSP page:</p> <p><pre><code>&lt;h:dataTable value=\"#{cart.lineItems}\" var=\"item\"&gt;\n  ...\n&lt;/h:dataTable&gt;\n</code></pre> We can let CDI choose a name for us by leaving off the value of the @Named annotation. The name defaults to the unqualified class name, decapitalized; in this case, <code>shoppingCart</code>.</p>"},{"location":"while-coding/CDI-weld-notes/#denoting-implementation-alternatives","title":"Denoting implementation alternatives:","text":"<p>sometimes we have an interface (or other bean type) whose implementation varies depending upon the deployment environment. For example, we may want to use a mock implementation in a testing environment. An alternative may be declared by annotating the bean class with the <code>@Alternative</code> annotation.</p> <pre><code>public @Alternative\nclass MockPaymentProcessor extends PaymentProcessorImpl { ... }\n</code></pre> <p>We can choose between alternatives at deployment time by selecting an alternative in the CDI deployment descriptor META-INF/beans.xml of the jar or Java EE module that uses it. Different modules can specify that they use different alternatives.</p>"},{"location":"while-coding/CDI-weld-notes/#producer-methods","title":"producer methods:","text":"<p>Not everything that needs to be injected can be boiled down to a bean class instantiated by the container using new. There are plenty of cases where we need additional control. What if we need to decide at runtime which implementation of a type to instantiate and inject? What if we need to inject an object that is obtained by querying a service or transactional resource, for example by executing a JPA query?</p> <p>A producer method is a method that acts as a source of bean instances. The method declaration itself describes the bean and the container invokes the method to obtain an instance of the bean when no instance exists in the specified context. A producer method lets the application take full control of the bean instantiation process.</p> <p>A producer method is declared by annotating a method of a bean class with the @Produces annotation.</p> <pre><code>import javax.enterprise.inject.Produces;\n@ApplicationScoped\npublic class RandomNumberGenerator {\n  private java.util.Random random = new java.util.Random(System.currentTimeMillis());\n  @Produces @Named @Random int getRandomNumber() {\n     return random.nextInt(100);\n }\n}\n</code></pre> <p>We can\u2019t write a bean class that is itself a random number. But we can certainly write a method that returns a random number. By making the method a producer method, we allow the return value of the method\u2014in this case an <code>Integer</code>\u2014to be injected. We can even specify a qualifier\u2014in this case @Random, a scope\u2014which in this case defaults to @Dependent, and an EL name\u2014which in this case defaults to randomNumber according to the JavaBeans property name convention. Now we can get a random number anywhere:</p> <p><pre><code>@Inject @Random int randomNumber;\n</code></pre> Notice the name of the member above. It is not the name of the bean class, but it is EL name of the <code>@Produces</code> variable.</p>"},{"location":"while-coding/CDI-weld-notes/#producer-fields","title":"Producer fields","text":"<p>A producer field is a simpler alternative to a producer method. A producer field is declared by annotating a field of a bean class with the @Produces annotation\u2014the same annotation used for producer methods.</p> <pre><code>import javax.enterprise.inject.Produces;\npublic class Shop {\n  @Produces PaymentProcessor paymentProcessor = ....;\n  @Produces @Catalog List&lt;Product&gt; products = ....;\n}\n</code></pre>"},{"location":"while-coding/CDI-weld-notes/#injection-points","title":"Injection points","text":"<p>Injection can occur via three different mechanisms.</p> <ul> <li>Bean constructor parameter injection   <pre><code>public class Checkout {\n private final ShoppingCart cart;\n @Inject\n public Checkout(ShoppingCart cart) {\n   this.cart = cart;\n }\n}\n</code></pre></li> <li>Initializer method parameter injection</li> </ul> <pre><code>public class Checkout {\n private ShoppingCart cart;\n @Inject\n void setShoppingCart(ShoppingCart cart) {\n   this.cart = cart;\n }\n}\n</code></pre> <ul> <li>direct field injection</li> </ul> <p><pre><code>public class Checkout {\n private @Inject ShoppingCart cart;\n}\n</code></pre>   Getter and setter methods are not required for field injection to work</p> <p>Dependency injection always occurs when the bean instance is first instantiated by the container. Simplifying just a little, things happen in this order: \u2022 First, the container calls the bean constructor (the default constructor or the one annotated @Inject), to obtain an instance of the bean. \u2022 Next, the container initializes the values of all injected fields of the bean. \u2022 Next, the container calls all initializer methods of bean (the call order is not portable, don\u2019t rely on it). \u2022 Finally, the @PostConstruct method, if any, is called.</p> <p>Typesafe resolution is performed at system initialization time, which means that the container will inform the developer immediately if a bean\u2019s dependencies cannot be satisfied.</p>"},{"location":"while-coding/CDI-weld-notes/#good-resources","title":"Good resources:","text":"<ul> <li>https://docs.jboss.org/cdi/learn/userguide/CDI-user-guide.pdf</li> <li>https://www.youtube.com/watch?v=lyuU24ZFlY4</li> </ul>"},{"location":"while-coding/LXC-LXD-linux-containers-notes/","title":"LxC - LxD linux container notes","text":""},{"location":"while-coding/LXC-LXD-linux-containers-notes/#references","title":"References","text":"<ul> <li>https://www.youtube.com/watch?v=kXBsghAug2c</li> <li>https://discuss.linuxcontainers.org/t/solved-static-ip-address-to-lxc-container/7704</li> <li>lxc commands: https://linuxcontainers.org/lxd/getting-started-cli/#instance-management</li> </ul>"},{"location":"while-coding/LXC-LXD-linux-containers-notes/#what-is-lxc-and-lxd","title":"what is LxC and LxD","text":"<ul> <li>LxC (LinuX Container)</li> <li>LxD (Lx Deamon)</li> </ul> <p>For long version read this and for differences read this</p> <p>In short:</p> <p>LxC is core containerization which is used by LxD(which is newer and makes LxC containerization more user friendly). LxD uses LxC underneath. Recommendation for all new users is to use LxD unless there is a special need of using LxC directly. For commandline, there is a confusion caused by name of lxd client, which is called <code>lxc</code>. This gets confused with <code>lxc</code> containers. You'll find two sets of commands like <code>lxc start</code> and also <code>lxc-start</code>. Remember that <code>lxc start</code> is LxD command and <code>lxc-start</code> is an LxC command. Try to stick to first version so you continue to use LxD.</p>"},{"location":"while-coding/LXC-LXD-linux-containers-notes/#installing","title":"Installing","text":"<p>On Ubuntu:</p> <pre><code>sudo apt-get install lxd\n</code></pre> <p>Now check status :</p> <pre><code>systemctl status snap.lxd.daemon\n</code></pre> <p>Start LXD:</p> <pre><code>systemctl start snap.lxd.daemon\n</code></pre> <p>Add your user:</p> <p>If you want to run your lxc command without using <code>sudo</code> everytime, you should have your user name in lxd group. To check:</p> <pre><code>getent group lxd\n</code></pre> <p>output:</p> <pre><code>lxd:x:131:dhaval\n</code></pre> <p>here <code>dhaval</code> is my username, that is already made part of lxd group at the installation time. In case your user is not part of the group then you can add it using </p> <pre><code>sudo gpasswd -a dhaval lxd\n</code></pre> <p>preferrably, logout and log back in so that changes can take effect.</p>"},{"location":"while-coding/LXC-LXD-linux-containers-notes/#initialize-lxd","title":"Initialize lxd","text":"<pre><code>dhaval@thinkpad:~/IdeaProjects/Janssen$ lxd init\nWould you like to use LXD clustering? (yes/no) [default=no]: \nDo you want to configure a new storage pool? (yes/no) [default=yes]: \nName of the new storage pool [default=default]: \nName of the storage backend to use (btrfs, dir, lvm, ceph) [default=btrfs]: dir\nWould you like to connect to a MAAS server? (yes/no) [default=no]: \nWould you like to create a new local network bridge? (yes/no) [default=yes]:         \nWhat should the new bridge be called? [default=lxdbr0]: \nWhat IPv4 address should be used? (CIDR subnet notation, \u201cauto\u201d or \u201cnone\u201d) [default=auto]: \nWhat IPv6 address should be used? (CIDR subnet notation, \u201cauto\u201d or \u201cnone\u201d) [default=auto]: \nWould you like the LXD server to be available over the network? (yes/no) [default=no]: \nWould you like stale cached images to be updated automatically? (yes/no) [default=yes]     \nWould you like a YAML \"lxd init\" preseed to be printed? (yes/no) [default=no]: \ndhaval@thinkpad:~/IdeaProjects/Janssen$ \n</code></pre>"},{"location":"while-coding/LXC-LXD-linux-containers-notes/#steps-to-create-and-setup-an-lxc-container","title":"Steps to create and setup an lxc container","text":"<ol> <li>select linux distribution from new image server, https://images.lxd.canonical.com/. Note down values in first three columns of the container that you want (distribution, release, architecture) and then run      <pre><code>sudo lxc launch ubuntu:22.04 ubuntu-container\n</code></pre></li> </ol> <pre><code>Note: If you have built container from custom image of (ubuntu-20-4-base), then all the setup till step 7 are already in place. You can try connecting via ssh using user (dev) password (dev)\n</code></pre> <ol> <li> <p>list your container using <code>lxc ls</code></p> </li> <li> <p>to get into container shell <code>lxc exec my-ubuntu-container bash</code></p> </li> <li>to see the files in container <code>cd ..</code> and then <code>ls</code></li> <li>now to be able to connect to container directly via ssh (and not via <code>lxc</code> command), we need to install ssh server on container using <code>sudo apt install openssh-server</code></li> <li>create a new user <code>adduser dev</code></li> <li>restart sshd service <code>service sshd restart</code></li> <li>Now to connect to container from other PC using ssh and the newly created user you have to use: <code>sudo ssh dev@&lt;ip&gt;</code>. This ip is internal IP of the container. If can be found by logging into container using lxc command and then firing <code>ip a</code>. Output will be something like this     <pre><code>root@my-ubuntu-container:~# ip a\n1: lo: &lt;LOOPBACK,UP,LOWER_UP&gt; mtu 65536 qdisc noqueue state UNKNOWN group default qlen 1000\n    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00\n    inet 127.0.0.1/8 scope host lo\n       valid_lft forever preferred_lft forever\n    inet6 ::1/128 scope host \n       valid_lft forever preferred_lft forever\n7: eth0@if8: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc noqueue state UP group default qlen 1000\n    link/ether 00:16:3e:09:dc:5c brd ff:ff:ff:ff:ff:ff link-netnsid 0\n    inet 10.229.38.143/24 brd 10.229.38.255 scope global dynamic eth0\n       valid_lft 3288sec preferred_lft 3288sec\n    inet6 fd42:7394:a42:7262:216:3eff:fe09:dc5c/64 scope global dynamic mngtmpaddr noprefixroute \n       valid_lft 3158sec preferred_lft 3158sec\n    inet6 fe80::216:3eff:fe09:dc5c/64 scope link \n       valid_lft forever preferred_lft forever\n</code></pre>     from this, you have to pick up <code>10.229.38.143</code> ip. Now from local PC you can run <code>sudo ssh dev@10.229.38.143</code> to login to container.</li> <li> <p>Now, to install a web server on container and access that web page from local machine </p> <ul> <li>first login to container as root using <code>lxc exec my-ubuntu-container bash</code></li> <li>then install apache server <code>sudo apt install apache2</code></li> <li>check if apache service is running <code>service apache2 status</code></li> <li>now go to your local machine, open browser and try to hit the IP of the container <code>10.229.38.143</code>. You should be able to access default apache page</li> </ul> </li> <li> <p>if you want to create a shared folder between local computer and container</p> <ul> <li>from local machine run <code>sudo lxc config device add my-ubuntu-container shared_dir disk path=/var/www/localhost/htdocs source=\"/home/nevyan/web_dev\"</code></li> <li>above command will map content of local directory <code>/home/nevyan/web_dev</code> to <code>/var/www/localhost/htdocs</code> directory within the container</li> </ul> </li> <li> <p>you can delete this container     <code>lxc delete my-ubuntu-container</code></p> </li> </ol> <p>Note: </p> <pre><code>1) in my case IP address when run `lxc ls` from local machine and address from running `ip a` from within container are same\n\n2) This ip address stayed static even after stopping and starting container as well as local machine.\n</code></pre>"},{"location":"while-coding/LXC-LXD-linux-containers-notes/#creating-a-reusable-image-from-container","title":"creating a reusable image from container","text":"<p>The easiest way by far to build an image with LXD is to just turn a container into an image.</p> <p>This can be done with:</p> <pre><code>lxc launch ubuntu:14.04 my-container\nlxc exec my-container bash\n&lt;do whatever change you want&gt;\nlxc publish my-container --alias my-new-image\n</code></pre> <p>You can even turn a past container snapshot into a new image:</p> <p><code>lxc publish my-container/some-snapshot --alias some-image</code></p> <p>Now you can see this image in the list of available images:</p> <p><code>lxc image list</code></p> <p>you can create new containers from this image:</p> <p><code>lxc launch image-name container-name</code></p>"},{"location":"while-coding/LXC-LXD-linux-containers-notes/#creating-lxc-with-ip-mapping","title":"creating lxc with ip mapping","text":"<p><pre><code>snap install lxd\nsnap refresh\nlxd init # Default settings looks good. I only specifid dir storage method to access container filesystem /var/snap/lxd/common/lxd/storage-pools/default/containers/ubuntu20/rootfs/\nlxc launch images:ubuntu/20.04/amd64 ubuntu20\nlxc config device add ubuntu20 myport443 proxy listen=tcp:0.0.0.0:443 connect=tcp:127.0.0.1:443\nlxc config device add ubuntu20 myport1636 proxy listen=tcp:0.0.0.0:1636 connect=tcp:127.0.0.1:1636\nlxc config set ubuntu20 limits.memory 4GB\n</code></pre> (understanding of <code>proxy</code> is here)</p> <p>to login</p> <p><code>lxc exec ubuntu20 -- sudo --user root --login</code> or  <code>lxc exec ubuntu20 -- /bin/bash</code></p>"},{"location":"while-coding/LXC-LXD-linux-containers-notes/#how-to-transfer-files-from-lxd-container-to-host","title":"how to transfer files from LxD container to host","text":"<p>this can be done via scp, steps to setup: 1) setup ssh on host <pre><code># ubuntu\nsudo apt install openssh-server\n\n# opensuse\nsudo zypper install openssh\nsudo systemctl start sshd\nsudo systemctl enable sshd\nsudo firewall-cmd --permanent --add-service=ssh\nsudo firewall-cmd --reload\n</code></pre></p> <p>2) Above will open port 22, you can check this by  <pre><code>sudo ss -tulwn | grep LISTEN\n</code></pre> 3) now you can send file from container. Make sure that destination directory has permissions 777. <pre><code>scp gluudb-dump.sql dhaval@192.168.1.19:/home/dhaval/\n</code></pre></p>"},{"location":"while-coding/LXC-LXD-linux-containers-notes/#how-to-transfer-from-host-to-container","title":"how to transfer from host to container","text":"<p>From above steps, follow 1, 2 on LxD container. 3rd, from host run</p> <p><pre><code>scp gluudb-dump.sql dev@192.168.1.19:/home/dhaval/\n</code></pre> (note: I tried to use <code>root</code> but couldn't find the password. So i used a custom created <code>dev</code> user with <code>dev</code> as password and it worked)</p>"},{"location":"while-coding/LXC-LXD-linux-containers-notes/#important-commands","title":"important commands:","text":"<ul> <li><code>lxc launch ubuntu-20-4-base jans-dynamic-ldap-2</code></li> <li><code>lxc start &lt;cntr-name&gt;</code></li> <li><code>lxc stop &lt;cntr-name&gt;</code></li> <li><code>lxc delete &lt;cntr-name&gt;</code></li> <li><code>lxc exec jans-dynamic-ldap bash</code></li> <li><code>lxc config device add &lt;cntr-name&gt; myport443 proxy listen=tcp:0.0.0.0:443 connect=tcp:127.0.0.1:443</code></li> <li><code>lxc config device add &lt;cntr-name&gt; myport1636 proxy listen=tcp:0.0.0.0:1636 connect=tcp:127.0.0.1:1636</code></li> <li><code>lxc config device list &lt;cntr-name&gt;</code> to know list of devices configured for a container (like shared disk, proxy etc) </li> </ul>"},{"location":"while-coding/LXC-LXD-linux-containers-notes/#troubleshooting","title":"Troubleshooting","text":"<p>Verify this by checking that <code>ping google.com</code> stopped working.</p>"},{"location":"while-coding/LXC-LXD-linux-containers-notes/#not-able-to-access-internet-from-within-lxc-container","title":"not able to access internet from within lxc container","text":"<p>On 20.04 and 22.04:</p> <p>Solution is from here: https://discuss.linuxcontainers.org/t/containers-do-not-have-outgoing-internet-access/10844/4</p> <p>How I applied above solution is by creating a <code>.sh</code> script with content as below on host machine (where lxc is installed):</p> <pre><code>for ipt in iptables iptables-legacy ip6tables ip6tables-legacy;\ndo\n        sudo $ipt --flush;\n        sudo $ipt --flush -t nat;\n        sudo $ipt --delete-chain;\n        sudo $ipt --delete-chain -t nat;\n        sudo $ipt -P FORWARD ACCEPT;\n        sudo $ipt -P INPUT ACCEPT;\n        sudo $ipt -P OUTPUT ACCEPT;\ndone\n</code></pre> <p>then run this script from host machine</p> <pre><code> . lxd-network-script.sh\n</code></pre> <p>Then run</p> <pre><code>sudo systemctl reload snap.lxd.daemon\n</code></pre> <p>Restart your lxc container:</p> <pre><code>lxc stop jans-dynamic-ldap-2\nlxc start jans-dynamic-ldap-2\nenter the bash and then run\napt-get update\napt-get upgrade\n</code></pre> <p>And you should be able to access network from within lxc container</p>"},{"location":"while-coding/SUSE/","title":"SUSE","text":""},{"location":"while-coding/SUSE/#difference-between-sles-opensuse-leap-opensuse-tumbleweed","title":"Difference between SLES, OpenSUSE Leap, OpenSUSE Tumbleweed","text":"<ul> <li>https://www.suse.com/suse-defines/definition/opensuse-leap/</li> </ul> <p>In essence, it starts with Tumbleweed(Free and managed by OpenSUSE), which is the most unstable but most frequently updated version. From this, the SLE (licensed and with paid support) and Leap(Free and managed by OpenSUSE) are created. Both are almost the same, with SLE being little more stable and certified for enterprises. </p>"},{"location":"while-coding/SUSE/#onboarding-to-suse-package-hub","title":"Onboarding to SUSE package hub","text":"<p>To onboard to suse package hub, you need to build your software on SUSE Open Build System (OBS)</p> <p>Good information on how to build on OBS: https://openbuildservice.org/help/manuals/obs-user-guide/art.obs.bg.html</p> <p>all user guides: https://openbuildservice.org/help/manuals/obs-user-guide/index.html</p> <p>add java packages repo to fresh sles 15sp3</p> <pre><code>sudo zypper ar https://download.opensuse.org/repositories/Java:/packages/SLE_15_SP2/Java:packages.repo\nsudo zypper refresh\nzypper search --provides -v \"mvn(io.prometheus:simpleclient_common)\"\n</code></pre> <p>Output of last command above is </p> <pre><code>S | Name                                | Type    | Version     | Arch   | Repository\n--+-------------------------------------+---------+-------------+--------+-----------------------------------\n  | prometheus-simpleclient-java-common | package | 0.8.0-17.66 | noarch | Factory Java packages (SLE_15_SP2)\n    provides: mvn(io.prometheus:simpleclient_common) = 0.8.0\n  | prometheus-simpleclient-java-common | package | 0.8.0-17.67 | noarch | Factory Java packages (SLE_15_SP2)\n    provides: mvn(io.prometheus:simpleclient_common) = 0.8.0\n  | prometheus-simpleclient-java-common | package | 0.8.0-17.69 | noarch | Factory Java packages (SLE_15_SP2)\n    provides: mvn(io.prometheus:simpleclient_common) = 0.8.0\n</code></pre> <p>This means that package <code>prometheus-simpleclient-java-common</code> in repository <code>Factory Java packages (SLE_15_SP2)</code> provides <code>io.prometheus:simpleclient_common</code> maven dependency.</p>"},{"location":"while-coding/SUSE/#imp-commands","title":"imp commands","text":"<p><code>zypper lr -u</code> to list all the repo <code>zypper rr &lt;repo_alias&gt;</code> to delete repo</p>"},{"location":"while-coding/SUSE/#links","title":"links:","text":"<p>spec file guidelines: https://en.opensuse.org/openSUSE:Specfile_guidelines</p> <p>packaging java: https://en.opensuse.org/openSUSE:Packaging_Java</p> <p>About packaging: https://fedora-java.github.io/howto/latest/</p>"},{"location":"while-coding/apache_on_ubuntu/","title":"Apache2 on Ubuntu","text":""},{"location":"while-coding/apache_on_ubuntu/#good-reference","title":"Good reference","text":"<p>basics: https://phoenixnap.com/kb/how-to-install-apache-web-server-on-ubuntu-18-04#:~:text=They%20are%20all%20located%20in,Apache%20does%20on%20your%20system. Configuration file details: https://httpd.apache.org/docs/2.4/sections.html</p>"},{"location":"while-coding/apache_on_ubuntu/#install-apache","title":"Install Apache","text":"<p>Run following commands to install Apache server. <pre><code>sudo apt-get update\nsudo apt-get install apache2\n</code></pre></p> <p>Run following command to see the Apache services are active <pre><code>sudo systemctl status apache2.service\n</code></pre></p> <p>Enable sso: From the link: https://www.arubacloud.com/tutorial/how-to-enable-https-protocol-with-apache-2-on-ubuntu-20-04.aspx - Perform step <code>Configuring the Apache SSL parameters</code> section - Enabled modules as per <code>How to configure Apache</code> section  - no changes in the certificates. - no changes in the port configurations - added <code>ServerName test.local.rp.io</code> in <code>/etc/apache2/sites-available/default-ssl.conf</code> - Firewall on Ubuntu was inactive by default so did not have to configure it. But if you have an active firewall then execute <code>Configure Your Firewall</code> section of this</p> <p>How to configure virtual host: https://docs.oracle.com/en/operating-systems/oracle-linux/6/admin/ol_virthosts.html#:~:text=The%20Apache%20HTTP%20server%20supports,content%20and%20to%20behave%20differently.</p>"},{"location":"while-coding/apache_on_ubuntu/#useful-commands","title":"Useful commands","text":"<ul> <li><code>apache2ctl -M</code> to see which all module are active</li> </ul>"},{"location":"while-coding/apache_on_ubuntu/#logging","title":"logging","text":"<ul> <li>apache logs can be found at <code>/var/log/apache2</code></li> <li>Under this you'll find files like <code>access.log</code> and <code>error.log</code>. As name suggests access log will log every request and response (more), while error will give you errors.</li> <li>You can configure logging level under apache configuration file <code>sudo vim /etc/apache2/apache2.conf</code>. After this restart apache2 using <code>systemctl restart apache2</code>.</li> <li><code>error.log</code> file is misnamed by apache because it doesn't just pring errors. It follows the leve set in <code>LogLevel</code> directive. For example <code>LogLevel info</code> will print all the info. By default it is set to warn.</li> <li>If log level is warn then it'll not print problems like 404. You have to set level to info for that. </li> <li>You can set log level for just one module also, like <code>LogLevel warn core:info</code>. This will print info level for <code>core</code> module but keep <code>warn</code> for all other. </li> <li>useful logging links</li> <li>https://httpd.apache.org/docs/2.4/logs.html</li> <li>https://stackoverflow.com/questions/20386073/apache-httpd-request-response-logging</li> </ul>"},{"location":"while-coding/aws-developer-associate/","title":"AWS Developer associate (DVA-C02)","text":"<p>downloaded material at: /home/dhaval/docs/learning/tech/learning material/aws/developer associate certification/</p>"},{"location":"while-coding/aws-developer-associate/#understanding-aws-account","title":"Understanding AWS account","text":"<p>When you open a new aws account, the user using which you create aws account becomes your <code>root</code> user. And each was account has an ID. Like, <code>805640060484</code>. Every other user(called IAM user) you create will be recognised in reference to this id. So for example, AWS recommends creating another user with <code>admin</code> privileges instead of root user for all further logins. So, when you want to use this admin user, you need to add the account ID along with user-name and password. While the root user doesn't need account id.</p>"},{"location":"while-coding/aws-developer-associate/#iam","title":"IAM:","text":"<ul> <li>IAM is a global service so there is no region to be selected</li> <li>first, you create a root account and set up aws account with it. After this, using that user or sharing creds with anyone is not recommended.</li> <li>AWS works on shared responsibility model where AWS is responsible for protecting and keeping AWS services safe but you(root user) is responsible to keep all the account users safe by creating proper password policies, enabling MFA etc.</li> </ul>"},{"location":"while-coding/aws-developer-associate/#users-and-groups","title":"users and groups","text":"<ul> <li>a single user can be part of multiple groups</li> <li>there can be users who are not part of any group</li> <li>groups can't contain other groups</li> <li>group is a set of users who we want to apply same policies</li> <li>Policies are group of permissions.</li> </ul>"},{"location":"while-coding/aws-developer-associate/#user-credentials","title":"user credentials","text":"<ul> <li>when you create a user, AWS doesn't ask to set a password by default. User is created without any security credentials</li> <li>How user will be authenticated depends on what mode of interaction will the user be using to connect with AWS. There are three ways you can interact with AWS</li> <li>AWS management console (password and MFA protected)</li> <li>AWS CLI (access key)</li> <li>AWS SDK (access key) Like for example, if you allow user the access to the admin management console, aws will ask to set the password. While if the user is just going to interact with aws using CLI then admin can create an access key for the user. If the user is going to just use <code>codecommit</code> service to commit the code, then admin should just create SSH public key for the user.</li> </ul>"},{"location":"while-coding/aws-developer-associate/#iam-policies","title":"IAM policies","text":"<ul> <li>a policy can be applied to a group or an individual user.</li> <li>policy applied to individual user is called <code>inline</code> policies</li> <li>Policy structure:   <pre><code>{\n  \"Version\": \"2023-03-23\",\n  \"Id\": \"allowRootToS3\",\n  \"Statement\":\n  [\n    {\n      \"Sid\": \"1\",\n      \"Effect\": \"Deny\",\n      \"Principal\":\n      {\n        \"AWS\": [\"arn:aws:iam::34523532453:root\"]\n      },\n      \"Action\":\n      [\n        \"s3:GetObject\",\n        \"s3:PutObject\"\n      ],\n      \"Resource\":\n      [\n        \"arn:aws:s3:::mybucket/*\"\n      ]\n      \"Condition\": {\n                \"NumericLessThanEquals\": {\"aws:MultiFactorAuthAge\": \"3600\"}\n      }\n    }\n  ]\n</code></pre></li> <li>condition is optional in a statement</li> <li>initially, in any new AWS account, there are no users, no groups. But there are predefined policies. Like <code>AdministratorAccess</code>.</li> <li>policies have permissions within them. Permissions are simply a list of actions/resources that are allowed or denied under that policy.</li> <li>password policy is under account settings for admin/root user. So, this will not be available for normal users. But MFA, is available under User profile -&gt; security credetials, so it should be available to all the users not just admin/root.</li> </ul>"},{"location":"while-coding/aws-developer-associate/#roles","title":"Roles","text":"<ul> <li>While groups are for IAM users, the roles are for amazon services or users that are not authenticated by amazon IAM (for example, SAML, web identity by external providers etc)</li> <li>One role is created for one service only (one role one service)</li> <li>for exam only the roles or <code>aws services</code> are important</li> <li>when you create a role, you have to choose which service it may apply to. </li> <li>You need to attach one or more permissions to a role</li> </ul>"},{"location":"while-coding/aws-developer-associate/#aws-cli","title":"AWS CLI","text":""},{"location":"while-coding/aws-developer-associate/#configuration","title":"configuration","text":"<ul> <li>cli needs an access key to be able to authenticate</li> <li>Root/admin user can create an access key for any user from the management console &gt; IAM &gt; users &gt; select the user &gt; security credentials &gt; access key. From here the root/admin user can generate access key (every access key has a access key ID as well).</li> </ul>"},{"location":"while-coding/aws-developer-associate/#cloudshell","title":"Cloudshell","text":"<ul> <li>cloud shell is not available in all regions</li> <li>when you click on cloudshell icon on management console it opens a shell with the same credentials as the management console.</li> <li>You can create new files on cloudshell. These files will persist. Also, you can upload and download files to cloudshell.</li> <li>provide access key ID and key to the user</li> <li>user can install CLI on its machine and run <code>aws configure</code> on command line to configure the access key ID and access key</li> </ul>"},{"location":"while-coding/aws-developer-associate/#commands","title":"commands","text":""},{"location":"while-coding/aws-developer-associate/#-if-a-user-doesnt-have-permissions-to-perform-an-action-the-cli-will-simply-returns-a-blank-response","title":"- if a user doesn't have permissions to perform an action, the cli will simply returns a blank response.","text":""},{"location":"while-coding/aws-developer-associate/#ec2","title":"EC2","text":""},{"location":"while-coding/aws-developer-associate/#billing-info-and-setup-of-budget","title":"billing info and setup of budget","text":"<ul> <li>There are three important sections under this</li> <li>budget: allows you to set budget</li> <li>bills: shos you breakdown of the monthly bills</li> <li>free tier: shows usage under free tier and whether the usage will exceed free tier allowed usage</li> <li>At the start budget and cost management is only available to the root user and not to any IAM users. Not even IAM users with admin policy access.</li> <li>to allow the IAM admin user the access to budget and cost management, the root user has to go to its account home page, and enable the <code>iam user and the role access to the billing information</code>.</li> <li>billing info page can show following info</li> <li>monthly bill</li> <li>breakdown of monthly bill by service and even more granular</li> </ul>"},{"location":"while-coding/aws-developer-associate/#ec2_1","title":"EC2","text":"<ul> <li>elastic compute cloud = ec2</li> <li>covers services of EBS, ELB, ASG</li> <li>each instance has private and public IPs and corresponding DNS names for both</li> <li>for each OS, amazon creates an initial user. For amazon linux AMI, the default user is <code>ec2-user</code>. You can use this user when you want to ssh into the instance. </li> <li>An ec2 instance config involves choosing:<ul> <li>cpu</li> <li>ram</li> <li>storage (either <code>instance store</code> on the same EC2 hardware, or the network attached (EBS or EFS))</li> <li>network: network speed, do you need static IP or not,</li> <li>firewall: using security groups</li> <li>Bootstrap script called <code>user data</code> (only configurable at the first launch)</li> <li>remember that even a stopped instance will continue to be charged for attached resources like EBS and elastic ip if any.</li> </ul> </li> </ul>"},{"location":"while-coding/aws-developer-associate/#security-groups","title":"Security groups","text":"<ul> <li>SG is a firewall around an ec2 instance.</li> <li>it consists of rules for inbound and outbound network traffic</li> <li>by default all inbound traffic is blocked and all outbound traffic is enabled for an EC2 instance that doesn't have an SG attached</li> <li>SG to EC2 is an many to many relation. One SG can be attached to multiple EC2 and a single EC2 can be assigned multiple SGs</li> <li>SGs are regione and VPC specific</li> <li>Tip: if you are trying to access an ec2 instance from outside (like using htttp, ss etc) and your request is timing out, then it is a problem with SG. But if your request is returning with <code>connection refused</code> then it may be your application issue</li> <li>each SG rules are made up of <code>type</code>, <code>protocol</code>, <code>port</code>, <code>SOURCE ip</code>. Type is like SSH, HTTP, https etc, while the protocol is TCP</li> <li>a security group can also allow connections from and to other security groups. That is all the EC2 instances that have that SG attached to them.</li> <li></li> </ul>"},{"location":"while-coding/aws-developer-associate/#ec2-buying-options","title":"EC2 buying options","text":"<ul> <li>EC2 is billed per second</li> <li>3 Different ways to book a EC2 instance that will affect the final price. With each category a different type of discount is applied to EC2 instance price.</li> <li>On demand EC2 instances: pricing</li> <li>savings plan: Savings Plans is a flexible pricing model that can help you reduce your bill by up to 72% compared to On-Demand prices, in exchange for a one- or three-year hourly spend commitment. AWS offers three types of Savings Plans: Compute Savings Plans, EC2 Instance Savings Plans, and Amazon SageMaker Savings Plans.</li> <li>Reserved instances: Amazon EC2 Reserved Instances (RI) provide discount in return of a capacity reservation. Reservation can be either 1 year or 3 years.</li> <li>Spot instances : Amazon EC2 Spot Instances let you take advantage of unused EC2 capacity in the AWS cloud and are available at a discount of up to 90% compared to On-Demand prices. These instances can be taken away any time. These are good for fault-tolerant, stateless operations.</li> <li>2 ways to get reserved capacity or instance</li> <li>On-demand capacity reservation: On-Demand Capacity Reservations enable you to reserve compute capacity for your EC2 instances in a specific Availability Zone for any duration. Capacity reservations mitigate against the risk of being unable to get On-Demand capacity in case of capacity constraints and ensure that you always have access to EC2 capacity when you need it, for as long as you need it. On-Demand Capacity Reservations are recommended for:<ul> <li>Business-critical events or workloads that require capacity assurance</li> <li>Workloads that need to meet regulatory requirements for high availability</li> <li>Disaster recovery</li> </ul> </li> <li>Dedicated Host: A Dedicated Host is a physical EC2 server fully dedicated for your use. Dedicated Hosts can help you reduce costs by allowing you to use your existing server-bound software licenses, including Windows Server, SQL Server, and SUSE Linux Enterprise Server (subject to your license terms). Dedicated Hosts can be purchased On-Demand (hourly) or can be purchased as part of Savings Plans. Dedicated Hosts are recommended for:<ul> <li>Users looking to save money on licensing costs</li> <li>Workloads that need to run on dedicated physical servers</li> <li>Users looking to offload host maintenance onto AWS, while controlling their maintenance event schedules to suit their business\u2019s operational needs</li> </ul> </li> </ul>"},{"location":"while-coding/aws-developer-associate/#storage-options","title":"Storage options","text":""},{"location":"while-coding/aws-developer-associate/#ebs","title":"EBS","text":""},{"location":"while-coding/cedar-policy-authoring/","title":"Cedar","text":""},{"location":"while-coding/cedar-policy-authoring/#what-is-cedar","title":"What is Cedar?","text":"<p>Cedar is two things. Language + specification for interpreter.</p> <p>Cedar is a language for defining permissions as policies, which describe who should have access to what. </p> <p>It is also a specification for evaluating those policies. </p>"},{"location":"while-coding/cedar-policy-authoring/#what-is-it-used-for","title":"What is it used for?","text":"<p>Use Cedar policies to control what each user of your application is permitted to do and what resources they may access.</p>"},{"location":"while-coding/cedar-policy-authoring/#parc-model","title":"PARC model","text":"<p>Works on <code>PARC</code> model:</p> <ul> <li>Principal: The user or the actor of the request</li> <li>Action: action to be taken (like CRUD actions)</li> <li>Resource: Subject of the request (like a photo, some data in the app or some feature)</li> <li>Context: Contextual info about the principal (like has the pricipal been authenticated etc)</li> </ul>"},{"location":"while-coding/cedar-policy-authoring/#policy-statement","title":"policy statement","text":"<p>Every policy statement must include an effect and a scope:</p> <ul> <li>The effect specifies whether this is a permit or a forbid policy.</li> <li>The <code>scope = PAR</code>, scope specifies the principal[s], the action[s], and the resource[s] to which the effect applies.</li> <li>Optionally, the statement may also include one or more conditions in the form of <code>when</code> or <code>unless</code> clauses. Conditions help add the context in decision making.</li> </ul> <p>Each principal and resource are identified by a type and id (action doesn't have type, it is always <code>action</code>). Everytime you refer to a resource or principal, you have to mention the type and its id. For example, the type could be <code>user</code> and id could be <code>alice</code>.</p> <p>Policy applicability: A policy is applicable if the scope matches that of the authorization request, and all conditions are met.</p> <p>How engine evaluates the final effect: Cedar policies are evaluated by a Cedar evaluation engine. The engine considers a set of policy statements in response to an authorization request, and returns either an allow or deny decision. For the authorization request to be allowed, there must be at least one applicable permit statement and no applicable forbid statements. </p>"},{"location":"while-coding/cedar-policy-authoring/#writting-broader-policies","title":"Writting broader policies:","text":""},{"location":"while-coding/cedar-policy-authoring/#broader-actions-using-sets","title":"Broader actions using sets","text":"<p>Within the policy scope you can define sets for actions, but not principals or resources. You can not, for example, define a scope for a set of principals.</p> <pre><code>permit(\n  principal == User::\"alice\", \n  action in [Action::\"view\", Action::\"edit\", Action::\"delete\"], \n  resource == Photo::\"VacationPhoto94.jpg\"\n);\n</code></pre>"},{"location":"while-coding/cedar-policy-authoring/#broadening-the-policies-by-leaving-undefined-in-scope","title":"Broadening the policies by leaving undefined in scope","text":"<p>if you leave principal or action or resource undefined, then it applies to all the entities. For example, the policy below will apply to all the principals.</p> <pre><code>permit(\n  principal, \n  action in [Action::\"view\", Action::\"edit\", Action::\"delete\"], \n  resource == Photo::\"vacationPhoto.jpg\"\n);\n</code></pre>"},{"location":"while-coding/cedar-policy-authoring/#broaden-principals-using-roles-rbac","title":"broaden principals using roles (RBAC)","text":"<p>The other way to broaden the scope of a policy is to define it for a group of entities, rather than an individual entity. Principal groups provide us with a way to manage permissions using roles.</p> <pre><code>permit(\n  principal in Role::\"vacationPhotoJudges\",\n  action == Action::\"view\",\n  resource == Photo::\"vacationPhoto94.jpg\"\n);\n</code></pre> <p>Cedar engine will match the above policy with a request for principal as <code>bob</code>, action as <code>view</code> and resource as <code>vacationPhoto94.jpg</code>. But how does cedar engine know if the <code>bob</code> as principal is part of the role <code>vacationPhotoJudges</code>? That is done through passing the <code>entities</code> to cedar engine at the time of evaluation call, like below:</p> <pre><code>let decision = authorizer.is_authorized(&amp;request, &amp;policy_set, &amp;entities);\n</code></pre> <p>What is entities json and what does it look like?</p> <p>Entities JSON is data about the entities mentioned in the request. In this case, it is data about bob and his roles. See below:</p> <pre><code>[\n    {\n        \"uid\": {\n            \"type\": \"User\",\n            \"id\": \"Bob\"\n        },\n        \"attrs\": {},\n        \"parents\": [\n            {\n                \"type\": \"Role\",\n                \"id\": \"vacationPhotoJudges\"\n            },\n            {\n                \"type\": \"Role\",\n                \"id\": \"juniorPhotographerJudges\"\n            }\n        ]\n    },\n    {\n        \"uid\": {\n            \"type\": \"Role\",\n            \"id\": \"vacationPhotoJudges\"\n        },\n        \"attrs\": {},\n        \"parents\": []\n    },\n    {\n        \"uid\": {\n            \"type\": \"Role\",\n            \"id\": \"juniorPhotographerJudges\"\n        },\n        \"attrs\": {},\n        \"parents\": []\n    }\n]\n</code></pre> <p>As you can see above, the Bob's user entity has parents. Two roles. Both roles are also defined in the same JSON. Since <code>vacationPhotoJudges</code> is parent to Bob, the cedar engine interpretes this as bob having the role of <code>vacationPhotoJudges</code> and the policy will match the request for bob accessing the photo.</p> <p>In short, to broaden the scope:</p> <ul> <li>Leave principal, action, resource blank. Blank means <code>*</code></li> <li>Additionally, actions can be broadened by using sets, while principal can be broadened by using role</li> </ul>"},{"location":"while-coding/cedar-policy-authoring/#attribute-based-access-control-abac","title":"Attribute based access control (ABAC)","text":"<p>The policy below permits any principal to view any resource, but only on the condition that the accessLevel for the resource is designated as public. It permits any principal to view any photo, but only on the condition that the resource is tagged as public and the location of the principal is equal to \"USA\".</p> <pre><code>permit(\n  principal,\n  action == Action::\"view\",\n  resource\n)\nwhen {resource.accessLevel == \"public\" &amp;&amp; principal.location == \"USA\"};\n</code></pre> <p>With entity json as:</p> <pre><code>{\n        \"uid\": {\n            \"type\": \"Photo\",\n            \"id\": \"VacationPhoto94.jpg\"\n        },\n        \"attrs\": {\n            \"accessLevel\": \"public\"\n        },\n        \"parents\": []\n    },\n    {\n        \"uid\": {\n            \"type\": \"User\",\n            \"id\": \"alice\"\n        },\n        \"attrs\": {\n            \"location\": \"USA\"\n        },\n        \"parents\": []\n    }\n</code></pre> <p>Operators available for condition:</p> <ul> <li>&amp;&amp;</li> <li>||</li> <li>==</li> </ul> <p>The example above uses an attribute of type String. Cedar can also support the following types:</p> <ul> <li>Boolean</li> <li>Integer</li> <li>Entity ID: eg. User::\"Alice\"</li> <li>Sets: collections of values, expressed with []</li> <li>!=</li> </ul> <p>Define conditions that compare the values of different attributes:</p> <pre><code>permit(\n  principal, \n  action in [Action::\"view\", Action::\"edit\", Action::\"delete\"], \n  resource \n)\nwhen {\n  resource.owner == principal.id\n};\n</code></pre>"},{"location":"while-coding/cedar-policy-authoring/#context-record","title":"Context record","text":"<p>In the examples so far we\u2019ve examined policies based on attributes of the principal and/or the resource. But what if you wanted to write a policy that takes takes into account variables that are unrelated to either the principal or the resource? Cedar provides a way for you to do this, using the Context record. Context enables you to pass additional data into the authorization request, which can be referenced in policy conditions.</p> <p>Examples of context data you might use are OpenID claims in a JWT or anything else that is only known at the time of the incoming request and not necessarily stored in your database.</p> <p>In prior examples our conditions have all been evaluated against static values. Cedar also lets you define conditions that compare the values of different attributes. The example policy below permits any principal to view, edit or delete, any resource, with the condition that the resource owner is the principal.</p> <p>The policy below permits a User called Alice to update and delete a photo called VacationPhoto94.jpg, but only on the condition that she has authenticated using multi-factor authentication and is accessing the application from a specific IP address.</p> <pre><code>permit(\n    principal in User::\"alice\", \n    action in [Action::\"update\", Action::\"delete\"],\n    resource == Photo::\"flower.jpg\")\nwhen {\n    context.mfa_authenticated == true &amp;&amp;\n    context.request_client_ip == \"222.222.222.222\"\n};\n</code></pre> <p>The context and entities parameters of the request are different. The entities parameter enables the calling application to provide data about the resource and principal, such as attribute values and group membership. Context provides a mechanism for you to write policies that consider other data beyond that of the principal and resource.</p>"},{"location":"while-coding/cedar-policy-authoring/#schema","title":"schema","text":"<p>Cedar uses schema to </p> <ul> <li>Validate policies</li> <li>Deserialize entity data coming in the authz request</li> </ul> <p>A schema is a formal declaration of the names and structure of your entity types. You declare the name of each type of principal, resource, and action that your application supports. The definition of those entities can also include a list of the attributes that define an entity of that type, with each attribute specifying a name and a data type. Schema is not a must but it can help you make policy evaluations less error prone. </p> <p>A schema is defined by using JSON. Schemas have three main properties:</p> <ul> <li>Namespace: uniquely identifies the schema. The namespace helps you distinguish between elements with the same name from multiple schemas, for example HRApp::File and MedicalRecordsApp::File. The namespace is expressed as the top level key of the schema. Within each namespace, there is a JSON object defining entityTypes, actions, and types.</li> <li>entityTypes: defines the principal types and resource types supported by your application. Each entity type defines a shape that describes its characteristics. The shape must specify a Cedar supported data type, and define the structure for the more complex types like records or sets. The entity can also specify an optional memberOf attribute to describe how this type can participate in a hierarchy, like files can be in folders, users can be members of groups, or photos can be organized in albums. Note that if you specify that an entity can be a member of its own type, then you are specifying that you can nest them, such as placing folders in other folders.</li> <li>actions: defines the operations that the principals can potentially perform on the resources. Each action defines a name for the action, and a list of the resources and principals to which the action can apply.</li> <li>commonTypes: defines type aliases for complex record types in the schema. Pre-defining types allows for code re-usability whenever the same type is referenced in multiple entities. This key is optional.</li> </ul> <p>Example:</p> <pre><code>{\n    \"PhotoApp\": {\n        \"commonTypes\": {\n            \"PersonType\": {\n                \"type\": \"Record\",\n                \"attributes\": {\n                    \"age\": {\n                        \"type\": \"Long\"\n                    },\n                    \"name\": {\n                        \"type\": \"String\"\n                    }\n                }\n            },\n            \"ContextType\": {\n                \"type\": \"Record\",\n                \"attributes\": {\n                    \"ip\": {\n                        \"type\": \"Extension\",\n                        \"name\": \"ipaddr\"\n                    }\n                }\n            }\n        },\n        \"entityTypes\": {\n            \"User\": {\n                \"shape\": {\n                    \"type\": \"Record\",\n                    \"attributes\": {\n                        \"employeeId\": {\n                            \"type\": \"String\",\n                            \"required\": true\n                        },\n                        \"personInfo\": {\n                            \"type\": \"PersonType\"\n                        }\n                    }\n                },\n                \"memberOfTypes\": [\n                    \"UserGroup\"\n                ]\n            },\n            \"UserGroup\": {\n                \"shape\": {\n                    \"type\": \"Record\",\n                    \"attributes\": {}\n                }\n            },\n            \"Photo\": {\n                \"shape\": {\n                    \"type\": \"Record\",\n                    \"attributes\": {}\n                },\n                \"memberOfTypes\": [\n                    \"Album\"\n                ]\n            },\n            \"Album\": {\n                \"shape\": {\n                    \"type\": \"Record\",\n                    \"attributes\": {}\n                }\n            }\n        },\n        \"actions\": {\n            \"viewPhoto\": {\n                \"appliesTo\": {\n                    \"principalTypes\": [\n                        \"User\",\n                        \"UserGroup\"\n                    ],\n                    \"resourceTypes\": [\n                        \"Photo\"\n                    ],\n                    \"context\": {\n                        \"type\": \"ContextType\"\n                    }\n                }\n            },\n            \"createPhoto\": {\n                \"appliesTo\": {\n                    \"principalTypes\": [\n                        \"User\",\n                        \"UserGroup\"\n                    ],\n                    \"resourceTypes\": [\n                        \"Photo\"\n                    ],\n                    \"context\": {\n                        \"type\": \"ContextType\"\n                    }\n                }\n            },\n            \"listPhotos\": {\n                \"appliesTo\": {\n                    \"principalTypes\": [\n                        \"User\",\n                        \"UserGroup\"\n                    ],\n                    \"resourceTypes\": [\n                        \"Photo\"\n                    ],\n                    \"context\": {\n                        \"type\": \"ContextType\"\n                    }\n                }\n            }\n        }\n    }\n}\n</code></pre>"},{"location":"while-coding/cedar-policy-authoring/#policy-templates","title":"policy templates","text":"<p>When you write a complete policy that specifies both the principal and the resource, it\u2019s referred to as a static policy. A static policy is immediately ready for use in authorization decisions.</p> <p>However, sometimes you\u2019ll want to use one set of authorization rules and apply them to many different principals and resources.</p> <pre><code>permit (\n    principal == User::\"x\", // \"Alice\"\n    action in [Action::\"readFile\", Action::\"writeFile\"],\n    resource in Folder::\"r1\"   // \"Vacation Photos\"\n);\n</code></pre> <pre><code>permit (\n    principal == User::\"y\", // \"Bob\"\n    action in [Action::\"readFile\", Action::\"writeFile\"],\n    resource in Folder::\"r2\"   // \"Birthday Photos\"\n);\n</code></pre> <p>Instead of creating two or more policies like above, you can create a template like the below and pass in the placeholder value dynamically to generate policies.</p> <p>Template:</p> <pre><code>permit(\n    principal == ?principal, \n    action in [Action::\"readFile\", Action::\"writeFile\"] \n    resource  == ?resource\n  );\n</code></pre> <p>Using static policies in this way can result in a lot of redundant policies that differ only in the principal and resource elements. It also introduces a big issue If you ever need to make a change in the underlying business logic of what sharing a photo means. In that case you\u2019d have to update every one of the individual policies.</p> <p>Policy templates solve this issue by letting you create policies from a template that uses placeholders for the principal or resource, or both. After creating a policy template, you can instantiate individual policies by referencing the template and providing values for the specific principal and resource to use. This template-linked policy then works just like an static policy.</p> <p>Placeholders can appear only in the header of a policy, and only on the right-hand side of the == or in operators. You can\u2019t use a placeholder for actions, and you can\u2019t use a placeholder in a when or unless clause.</p>"},{"location":"while-coding/cedar-policy-authoring/#references","title":"References","text":"<ul> <li>https://github.com/cedar-policy</li> </ul>"},{"location":"while-coding/cedar-policy-authoring/#random-notes","title":"Random notes","text":"<ul> <li>By default, in the absence of an applicable permit policy, the authorization decision will be DENY.</li> <li>Forbid polices override permit policies. Hence forbid policies can act as guard rails ensuring that certain requests will always be denied regardless of any permit policies.</li> <li>The sequence in which policies are arranged has no impact on the outcome of the evaluation.</li> <li>Role is not a reserved word</li> </ul>"},{"location":"while-coding/container-security-cosign/","title":"Container Security Cosign","text":"<p>Reference links: </p> <p>1) https://www.youtube.com/watch?v=fZfd4orrn8Y&amp;t=3162s 2) https://www.youtube.com/watch?v=gCi9_4NYyR0</p>"},{"location":"while-coding/containerisation-notes/","title":"Containerisation Notes","text":"<p>tutorials :</p> <p>docker :</p> <p>https://app.pluralsight.com/library/courses/docker-kubernetes-big-picture/table-of-contents</p> <p>https://app.pluralsight.com/library/courses/docker-getting-started/table-of-contents</p> <p>Openshift :</p> <p>https://app.pluralsight.com/library/courses/deploy-applications-red-hat-openshift-container-platform/table-of-contents</p> <p>Installing docker on linux (Ubuntu 20 )</p> <pre><code>sudo wget -qO- https://get.docker.com | sh\nadd your user to docker group:\nsudo usermod -aG docker dhaval\n</code></pre> <p>after this, you have to log out and log back in for group command to take effect</p> <p>Project :</p> <p>it is a logical grouping of apps that are part of one. Like front-end app and back-end app of one application.</p> <p>Pod :</p> <p>Pod represents one </p>"},{"location":"while-coding/copilot/","title":"Copilot","text":"<p>Copilot = cp</p> <ul> <li>Open cp chat in VSCode : ctrl+alt+i</li> <li>Open inline chat in code: ctrl+i</li> </ul>"},{"location":"while-coding/copilot/#vs-code-copilot-chat-vs-copilot-edits","title":"VS code: Copilot chat Vs Copilot Edits","text":"<p>These are two different views in copilot. While copilot chat is your natural language companion, the copilot edits is where the code editing happens. For example, if you want to create a new file, you have to go to copilot edits(ctrl+alt+shift+i). Then type <code>/new &lt;relative path to file from project root&gt;</code></p>"},{"location":"while-coding/copilot/#usecases","title":"Usecases","text":""},{"location":"while-coding/copilot/#ask-explain-something-in-terminal","title":"ask explain something in terminal","text":"<p>In this case it understood the git message in the terminal and correctly pointed out the file that was reported to be in conflict.</p> <p></p>"},{"location":"while-coding/copilot/#ask-to-uncomment-code","title":"ask to uncomment code","text":"<p>In this, the first simple prompt didn't work. But when used with <code>/fix</code> it worked.</p> <p></p>"},{"location":"while-coding/copilot/#ask-to-create-new-files","title":"ask to create new files","text":"<ul> <li>Go to copilot edits (ctrl+shift+alt+i)</li> <li><code>/new &lt;path relative to project root&gt;</code></li> <li>If your project root is <code>jans</code> and you want to create a file under <code>jans/docs/</code> the give command <code>/new docs/cedarling/quick-start.md</code></li> </ul>"},{"location":"while-coding/copilot/#find-the-missing-files-from-a-list-of-files","title":"find the missing files from a list of files","text":"<ul> <li> <p>problem: in mkdocs.yml, there are file paths listed like shown below. Ideally, All these files should be available under <code>docs/</code>. But some of these files don't. This leads to 404 when corresponding link is clicked on the doc site. Solution is to create these files. CP can help identify which files are missing.</p> </li> <li> <p>Select the part of the code which you want CP to analyse</p> </li> <li>Go to CP chat <code>ctrl+alt+i</code></li> <li> <p>prompt <code>separate out file paths from #selection</code></p> <p>   - prompt: <code>prepend docs/ to these paths</code></p> <p>   - as you can see above, some of the files are still not identified as files. Those are the missing ones.   - I couldn't get copilot to create these files automatically.</p> </li> </ul>"},{"location":"while-coding/curl-notes/","title":"curl notes","text":""},{"location":"while-coding/curl-notes/#resources","title":"Resources:","text":"<ul> <li>Very good site to learn and try out : https://reqbin.com/curl</li> <li>curl official tutorial: https://curl.se/docs/manual.html</li> <li>curl official book: https://everything.curl.dev/</li> </ul>"},{"location":"while-coding/curl-notes/#detailed-info-about-request-response","title":"detailed info about request response","text":"<pre><code>curl -v http://google.com\n</code></pre> <p>more details</p> <pre><code>curl --trace-ascii ./temp/debugdump.txt https://www.google.com\n</code></pre>"},{"location":"while-coding/curl-notes/#send-get","title":"Send GET","text":"<pre><code>curl https://www.google.com\n</code></pre>"},{"location":"while-coding/curl-notes/#send-post","title":"send POST","text":"<pre><code>curl -X POST https://www.google.com\n</code></pre>"},{"location":"while-coding/curl-notes/#custom-port","title":"custom port","text":"<pre><code>curl https://localhost:4444\n</code></pre>"},{"location":"while-coding/curl-notes/#send-request-parameters","title":"send request parameters","text":"<pre><code>curl --data-urlencode \"name=I am Daniel\" http://www.example.com\n</code></pre>"},{"location":"while-coding/curl-notes/#curl-with-ignore-self-signed-certificates","title":"curl with ignore self-signed certificates","text":"<p>use <code>-k</code></p> <pre><code>curl -X POST -k https://127.0.0.1:443/.well-known/openid-configuration\n</code></pre>"},{"location":"while-coding/curl-notes/#send-json-data-with-post","title":"send json data with post","text":"<pre><code>curl -X POST https://reqbin.com/echo/post/json\n   -H 'Content-Type: application/json'\n   -d '{\"login\":\"my_login\",\"password\":\"my_password\"}'\n</code></pre>"},{"location":"while-coding/curl-notes/#post-json-file","title":"POST JSON File","text":"<pre><code>curl -X POST https://reqbin.com/echo/post/json -d @filename\n</code></pre>"},{"location":"while-coding/curl-notes/#userid-password-for-basic-authentication","title":"userid-password for basic authentication","text":"<p>This can be done using <code>-u</code>. For example </p> <pre><code>curl -k -u \"FF81-2D39:FF81-2D39-jans-dynamic-ldap\" https://jans-dynamic-ldap/jans-auth/restv1/token -d  \"grant_type=client_credentials&amp;scope=token\"\n</code></pre> <p>In the request this will be converted to header like below. User name and password string gets converted in base64 encoded string as below.</p> <pre><code>Authorization: Basic RkY4MS0yRDM5OkZGODEtMkQzOS1qYW5zLWR5bmFtaWMtbGRhcA==\n</code></pre>"},{"location":"while-coding/devops/","title":"Devops","text":"<p>Good resource that describes skills and attitude of DevOps engineer: https://github.com/scott45/devops-learningmap</p>"},{"location":"while-coding/devops/#ci-cd","title":"CI-CD","text":""},{"location":"while-coding/devops/#ci-flow","title":"CI flow","text":"<p>Essential actions to take place when PR is created or merged into the mail line.</p> <ol> <li>Automate the build</li> <li>Build and project and create artifacts</li> <li>Add automated tests in the code</li> <li>Unit tests</li> <li>integration tests</li> <li>Linting</li> <li>code style checks</li> <li>security scans</li> <li>static code analysis</li> <li>document linting</li> <li>Commit checks</li> <li>commit message styles (conventional commit)</li> <li>commit should have DCO</li> </ol> <p>First, when the PR is created, these automation steps will run at every commit. <code>pull_request</code> event.</p> <p>Then it should be possible to dispatch an action and create a cloud environment where the software build gets installed with new changes. This environment can be used to perform manual QA plus and manual UI tests.</p> <p>then when PR is merged, the above steps should run on the merged code. <code>Push</code> event on main.</p>"},{"location":"while-coding/devops/#gitops","title":"GitOps","text":"<p>CNCF site: https://opengitops.dev/ and https://github.com/cncf/tag-app-delivery/tree/main/gitops-wg CNCF tool for gitops: flux good repo for gitops: resources: https://github.com/weaveworks/awesome-gitops</p>"},{"location":"while-coding/digital-certificates/","title":"Digital Certificates","text":"<p>Digital certificates are used by browsers (or any client server communication) to enstablish trust on the other party and to make sure that data received is not tempered with.</p> <p>So let's understand the basics first. </p> <p>\ud83d\udd10 What Is Digital Signing? - Sender: Signature is basically hash of the message that is encrypted using private key of the signing party. Sender sends (message+signature) to receiver. - Receiver: Signature verification is basically the process of decrypting the hash using public key of the sender(this means message is coming from the authentic source).  - Receiver: Message verification is process of matching this hash with the locally derived hash of the message content. If the has match then the message has not been  tempered with. - Digital signing is the process of generating a unique proof (signature) that a specific person/entity created a message and that the message has not been altered.</p> <p>In above, it is most important for the receiver to have the public key of the sender from a trusted source. In case of WEB, the web-browser(receiver) receives the public key of the sender through the x.509 certificate that the sender shares. </p> <p>x.509 certificate is nothing but public key of the sender, with signature of the CA. Again, to ensure that the public key is authentic, and not tempered with, the browser has to use CA authority's public key to decrypt the CA's signature in the x.509 certificate. </p> <p>Browsers come pre-populated with public keys of the world's most of the trusted CAs. So, browser already has the a public key of the CA. </p> <p>So here is the sequence.</p> <ul> <li>Sender creates it's own private and public key pair</li> <li>It keeps the private key with itself and gives public key along with other details (company name, domain name for which the cert is required, phone number etc)   to the CA when requesting for an x.509 certificate</li> <li>CA does the background check to verify if the company and the domain are legitimate, and then issues an x.509 certificate. Most important part   of the certificate is the public key of the sender and signature of CA. Certificate content looks similar   to below.</li> </ul> <p><pre><code>Certificate:\n  Data:\n      Version: 3 (0x2)\n      Serial Number:\n          04:93:2a:1e:bd:77:f3:b1:8c:15:d2:30:11:8c:0f:ac:cc:7b\n  Signature Algorithm: sha256WithRSAEncryption\n      Issuer: C = US, O = Let's Encrypt, CN = R3\n      Validity\n          Not Before: Jun  1 00:00:00 2024 GMT\n          Not After : Aug 30 23:59:59 2024 GMT\n      Subject: CN = www.example.com\n      Subject Public Key Info:\n          Public Key Algorithm: rsaEncryption\n              RSA Public-Key: (2048 bit)\n              Modulus:\n                  00:b5:af:3b:dc:...:3f:7b\n              Exponent: 65537 (0x10001)\n      X509v3 extensions:\n          X509v3 Basic Constraints:\n              CA:FALSE\n          X509v3 Key Usage:\n              Digital Signature, Key Encipherment\n          X509v3 Extended Key Usage:\n              TLS Web Server Authentication\n          X509v3 Subject Alternative Name:\n              DNS:www.example.com, DNS:example.com\n  Signature Algorithm: sha256WithRSAEncryption\n       a4:5c:cd:3e:...:b6\n</code></pre>   - Sender stores this certificate along with the corresponding private key of it's web server.   - When any browser requests a web page over HTTPS, a TLS handshake occures before serving the page.   - In TLS handshake,     - Browser requests the x.509 certificate of the domain     - server sends the certificate. Certificate has the name of the certificate issuer.     - The browser looks up its pre-loaded CA database. If it finds the CAs public key there, then it uses the public key to       verify the x.509's authenticity by decrypting the signature and obtaining the hash. Then it hashes the public key of the       sender contained in the certificate to create the hash. If these two hashes match then the certificate is authentic and       public key of the sender as mentioned in the certificate is also correct.     - Now, browser has the authentic public key of the server. Next, the browser creates a random number to be used as a session key. Encrypts it using       the server's public key. Sends the encrypted session key to the server. Server uses it's the private key to decrypt the session key.     - Session key is then used to encrypt all future communication between browser and server during that session.</p> <p>======= more info ==========================================</p> <p>\ud83d\udd04 The Two Main Steps \ud83d\udd8a\ufe0f 1. Signing (Done by Sender) Input: Message + Private Key Output: Digital Signature</p> <p>Steps:</p> <p>Take the message (e.g. a certificate or document).</p> <p>Generate a hash of the message (e.g. using SHA-256). \ud83d\udc49 This is a fixed-length fingerprint of the content.</p> <p>Encrypt the hash using the sender's private key. \ud83d\udc49 This encrypted hash is the digital signature.</p> <p>Send both: message + digital signature.</p> <p>Example:</p> <pre><code>Message: \"I owe you \u20b9500\"\nHash (SHA-256): abc123...\nSignature = Encrypt(hash, Alice's Private Key)\n</code></pre> <p>\u2705 2. Signature Verification (Done by Receiver) Input: Message + Signature + Public Key Goal: Verify the message\u2019s origin and integrity</p> <p>Steps:</p> <p>Receiver takes the same message and computes the hash (e.g., SHA-256).</p> <p>Decrypts the digital signature using the sender\u2019s public key to get the original hash.</p> <p>Compares both hashes:</p> <p>If they match: \u2705 message is authentic and unaltered.</p> <p>If not: \u274c tampered or invalid signature.</p> <p>\ud83d\udd0d Why it works:</p> <p>Only the sender's private key could produce a signature that matches the public key.</p> <p>Any change to the message changes the hash \u2192 verification fails.</p>"},{"location":"while-coding/digital-certificates/#above-process-with-respect-to-x509-ca-certificates","title":"Above process With respect to x.509 CA certificates","text":"<ul> <li>x.509 certificate is in short, your public key(in plain text) with signature of a CA. here</li> </ul>"},{"location":"while-coding/digital-certificates/#company-company1-wants-a-certificate-for-their-domain-domain1-from-ca1","title":"Company company1 wants a certificate for their domain domain1 from ca1.","text":""},{"location":"while-coding/docker-notes/","title":"Docker notes","text":"<p>To view all available images : <pre><code>docker images\n</code></pre></p> <p>Build image : <pre><code>docker build -t &lt;image-name&gt; &lt;dir where Dockerfile is kept&gt;\ndocker build -t event-service .\n</code></pre></p> <p>create a container using image : <pre><code>docker create &lt;image-name&gt;\noutput is a container id\n</code></pre></p> <p>Start a container <pre><code>docker start container-id\n</code></pre></p> <p>to create and start in one go ( more preferred then above two ): <pre><code>docker run &lt;image&gt;           \ndocker container run -d --name event-service-cntnr -p 8080:8080 event-service\n</code></pre></p> <p>to see currently running containers <pre><code>docker ps\n</code></pre></p> <p>to see all the containers available <pre><code>docker ps -a\n</code></pre></p> <p>To stop a container <pre><code>docker stop &lt;container-name&gt;\n</code></pre></p> <p>To operate on multiple containers. this will stop all the containers <pre><code>docker stop $(docker ps -aq)\n</code></pre></p> <p>To remove a container <pre><code>docker rm &lt;container-name&gt;\n</code></pre></p> <p>To remove all containers <pre><code>docker rm $(docker ps -a -q)\n</code></pre></p> <p>to remove an image <pre><code>docker rmi &lt;imagename&gt;\n</code></pre></p> <p>to remove all images</p> <pre><code>docker rmi -f $(docker images -aq)\n</code></pre> <p>To remove everything unused in docker. This removes unused images, networks etc.</p> <pre><code>docker system prune -a -f\n</code></pre> <p>copies images to docker host</p> <pre><code> docker pull &lt;image&gt; \n</code></pre> <p>get into shell of a running container : <pre><code>docker exec -ti &lt;container-id&gt; bash\n</code></pre></p> <p>to come out of bash and keep the container running :  <pre><code>ctrl P+Q\n</code></pre></p> <p>Access logs of a container  <pre><code>docker logs &lt;container-name&gt;\n</code></pre></p>"},{"location":"while-coding/docker-notes/#containerise-a-spring-boot-app-using-docker","title":"Containerise a spring-boot app using docker :","text":"<p>create a Dockerfile in the root folder where the target folder resides. Dockerfile content</p> <pre><code>FROM openjdk:11\nARG JAR_FILE=target/gsg-event-service-1.0-SNAPSHOT.jar\nCOPY ${JAR_FILE} app.jar\nENTRYPOINT [\"java\",\"-jar\",\"/app.jar\"]\n</code></pre> <p>Now use below command to build image. Here the tag could be anything :</p> <pre><code>docker build -t event-service .\n</code></pre> <p>Now use below command to create container using the image :</p> <pre><code>docker container run -d --name web1 -p 8080:8080 event-service\n</code></pre> <p>Now, hit localhost:8080 to access your app.</p>"},{"location":"while-coding/docker-notes/#how-to-install-and-run-jenkins-using-dockers","title":"How to install and run jenkins using dockers :","text":"<pre><code>docker pull jenkins/jenkins:lts\n\ndocker container run -p 8080:8080 jenkins/jenkins:lts\n</code></pre> <p>in the log that is printed on the screen while container is coming up, there will be a password string printed, keep that password. It is password for 'admin' user that is auto created.</p> <p>then access http://localhost:8080 or  http://localhost:8080/</p>"},{"location":"while-coding/docker-notes/#docker-volumes","title":"docker volumes :","text":"<p>Docker can store data in three different ways :</p> <p>1) Volumes ( recommended ) 2) Mounts 3) tmpfs ( in-memory )</p> <p>volume is most preferred. And has many advantages over mounts. Basic difference between a volume and mount is that with mount you can specify a directory on your local machine which docker should mount on the container's file system. You have control over this directory. While when you use a volume, a new directory is created within Docker\u2019s storage directory (/var/lib/docker/volumes/) on the host machine and this directory is mounted on container's file system. Docker manages that directory\u2019s contents.</p> <p>ref :</p> <ul> <li>https://docs.docker.com/storage/volumes/</li> <li>https://docs.docker.com/storage/bind-mounts/</li> </ul> <p>it is storage space on your hard disk which you ask docker container to use when you create a container. This is important when you are using docker to run software like jenkins, where you want to  persist state of software running in the container so that you don't have to recreate and reconfigure it when you restart the container.</p> <pre><code>docker container run -d -p 8080:8080 -v jenkinsvol1:/var/jenkins_home --name jenkins-local jenkins/jenkins:lts\n</code></pre> <p>In above case, a directory called 'jenkinsvol1' will be created under /var/lib/docker/volumes/ and mounted to container's file system under '/var/jenkins_home'</p> <pre><code>docker container run -d -p 8080:8080 -v /home/jenkinsvol1:/var/jenkins_home --name jenkins-local jenkins/jenkins:lts\n</code></pre> <p>commands for volume : </p> <p>create volume : </p> <pre><code>docker volume create &lt;name&gt;\n</code></pre> <p>list volumes :</p> <pre><code>docker volume ls\n</code></pre> <p>details of a volume :</p> <pre><code>docker volume inspect &lt;name&gt;\n</code></pre> <p>remove a volume :</p> <pre><code>docker volume rm &lt;name&gt;\n</code></pre> <p>Note : use volumes when you want to store data that is persisted even if you stop or remove container. Or if you want to share data across containers and machines. But if you want to store temporary data then you should use tmpfs if you are on linux.  https://docs.docker.com/storage/tmpfs/</p> <p>Pass environment variables at the start of the container with <code>-e</code></p> <pre><code>sudo docker container run -d  -e KEYCLOAK_USER='admin' -e KEYCLOAK_PASSWORD='admin' --name custom-kc-container -p 8080:8080 custom-kc\n</code></pre>"},{"location":"while-coding/docker-notes/#know-if-the-image-is-new-or-same-as-old","title":"know if the image is new or same as old","text":"<p>you can use <code>inspect</code> command</p> <pre><code>sudo docker image ls\n</code></pre> <pre><code>REPOSITORY                TAG         IMAGE ID       CREATED        SIZE\njanssenproject/monolith   1.0.3_dev   0a32df8668fd   24 hours ago   370MB\njanssenproject/monolith   &lt;none&gt;      548be1516b12   2 days ago     370MB\nmysql                     8.0.30      43fcfca0776d   2 weeks ago    449MB\n</code></pre> <pre><code>sudo docker image inspect 0a32df8668fd\n</code></pre> <pre><code>[\n    {\n        \"Id\": \"sha256:0a32df8668fd50e598e145d56f4e805417ad6062cdb18823dc2a97d72e304185\",\n        \"RepoTags\": [\n            \"janssenproject/monolith:1.0.3_dev\"\n        ],\n        \"RepoDigests\": [],\n        \"Parent\": \"\",\n        \"Comment\": \"buildkit.dockerfile.v0\",\n        \"Created\": \"2022-09-29T14:05:20.136637609+05:30\",\n        \"Container\": \"\",\n        \"ContainerConfig\": {\n            \"Hostname\": \"\",\n            \"Domainname\": \"\",\n            \"User\": \"\",\n            \"AttachStdin\": false,\n            \"AttachStdout\": false,\n            \"AttachStderr\": false,\n            \"Tty\": false,\n            \"OpenStdin\": false,\n            \"StdinOnce\": false,\n            \"Env\": null,\n            \"Cmd\": null,\n            \"Image\": \"\",\n            \"Volumes\": null,\n            \"WorkingDir\": \"\",\n            \"Entrypoint\": null,\n            \"OnBuild\": null,\n            \"Labels\": null\n        },\n        \"DockerVersion\": \"\",\n        \"Author\": \"\",\n        \"Config\": {\n</code></pre> <p>In above output, you can see the sha and creation date of the image.</p>"},{"location":"while-coding/docker-notes/#notes","title":"Notes:","text":"<ul> <li>what is diff between <code>docker run</code> and <code>docker container run</code></li> </ul> <p>Reference:   - very good quick turotial for using docker with intellij and quickly create containers, install db, and use docker compose:   https://www.youtube.com/watch?v=ck6xQqSOlpw&amp;t=1038s</p>"},{"location":"while-coding/docker-notes/#install-docker-engine-compose-and-desktop-on-ubuntu-2204","title":"Install docker-engine, compose and desktop on Ubuntu 22.04","text":"<p>This worked perfectly :</p> <p>https://docs.docker.com/engine/install/ubuntu/#install-using-the-repository</p>"},{"location":"while-coding/docker-notes/#know-ip-address-of-a-docker-container","title":"know ip address of a docker container","text":"<p><code>sudo docker inspect &lt;container name or id&gt; | grep IPAddress</code></p>"},{"location":"while-coding/docker-notes/#copy-files-from-docker-container-to-host","title":"copy files from docker container to host","text":"<pre><code>docker cp &lt;containerId&gt;:/file/path/within/container /host/path/target\n</code></pre>"},{"location":"while-coding/docker-notes/#docker-compose","title":"Docker compose","text":""},{"location":"while-coding/docker-notes/#docker-vs-docker-compose","title":"Docker vs docker compose","text":"<p>Docker manages individual containers. Vs Docker compose manages <code>services</code> that can be made up of multiple containers.</p> <p>For instance, docker compose can create service call <code>backend-app</code> which has 5 containers. Multiple services created using the docker compose can refer to each other via name (instead of IP). This way, if a container goes down and a new container is created, still the service name stays the same. </p>"},{"location":"while-coding/docker-notes/#reference","title":"Reference","text":"<p>docker compose subcommand list: https://docs.docker.com/reference/cli/docker/compose/#subcommands</p>"},{"location":"while-coding/docker-notes/#docker-compose-build-and-redeploy-code","title":"Docker compose build and redeploy code","text":"<pre><code>sudo docker-compose ps\nsudo docker-compose build\nsudo docker-compose rm\nsudo docker-compose up\n</code></pre> <p>Get list of docker compose projects running currently:</p> <pre><code>docker compose ls\n</code></pre> <p>Get list of containers running as part of a docker project</p> <pre><code>docker compose -f jans-mysql-compose.yml ps\n</code></pre> <p>Docker compose down doesn't completely remove everything. It will not remove the volumes or images for example. To remove everything use</p> <pre><code>docker compose down --rmi all --volumes\n</code></pre>"},{"location":"while-coding/docker-notes/#docker-compose-networking","title":"docker compose networking","text":"<p>By default Compose sets up a single network for your app. Each container for a service joins the default network and is both reachable by other containers on that network, and discoverable by the service's name. Your app's network is given a name based on the \"project name\", which is based on the name of the directory it lives in. </p> <pre><code>services:\n  web:\n    build: .\n    ports:\n      - \"8000:8000\"\n  db:\n    image: postgres\n    ports:\n      - \"8001:5432\"\n</code></pre> <p>When you run docker compose up, the following happens:</p> <ul> <li>A network called myapp_default is created.</li> <li>A container is created using web's configuration. It joins the network myapp_default under the name web.</li> <li>A container is created using db's configuration. It joins the network myapp_default under the name db.</li> </ul> <p>Each container can now look up the service name web or db and get back the appropriate container's IP address. For example, web's application code could connect to the URL postgres://db:5432 and start using the Postgres database.</p> <p>It is important to note the distinction between HOST_PORT and CONTAINER_PORT. In the above example, for db, the HOST_PORT is 8001 and the container port is 5432 (postgres default). Networked service-to-service communication uses the CONTAINER_PORT. When HOST_PORT is defined, the service is accessible outside the swarm as well.</p> <p>Within the web container, your connection string to db would look like postgres://db:5432, and from the host machine, the connection string would look like postgres://{DOCKER_IP}:8001 for example postgres://localhost:8001 if your container is running locally.</p> <p>If you make a configuration change to a service and run docker compose up to update it, the old container is removed and the new one joins the network under a different IP address but the same name. Running containers can look up that name and connect to the new address, but the old address stops working.</p> <p>If any containers have connections open to the old container, they are closed. It is a container's responsibility to detect this condition, look up the name again and reconnect.</p> <p>Reference containers by name, not IP, whenever possible. Otherwise you\u2019ll need to constantly update the IP address you use.</p>"},{"location":"while-coding/docker-notes/#command-to-build-and-redeploy-a-spring-boot-app-using-docker-compose","title":"Command to build, and redeploy a spring boot app using docker compose","text":"<pre><code> mvn clean install package -DskipTests &amp;&amp; docker compose build &amp;&amp; docker compose up\n</code></pre>"},{"location":"while-coding/docker-notes/#get-sbom-from-a-docker-image","title":"get SBOM from a docker image","text":"<ul> <li>Download the image</li> </ul> <pre><code>docker pull ghcr.io/janssenproject/jans/auth-server:1.5.0-1\n</code></pre> <ul> <li>Get from the SBOM from it</li> </ul> <pre><code>docker buildx imagetools inspect ghcr.io/janssenproject/jans/auth-server:1.5.0-1  --format \"{{ json .SBOM.SPDX }}\"\n</code></pre>"},{"location":"while-coding/ff4j-notes/","title":"FF4J notes:","text":""},{"location":"while-coding/ff4j-notes/#about-feature-toggles","title":"about feature toggles","text":"<p>From:  https://martinfowler.com/articles/feature-toggles.html</p> <ul> <li>Feature toggles can be categorized across two major dimensions: how long the feature toggle will live and how dynamic the toggling decision must be.</li> <li>Release Toggles: Release Toggles allow incomplete and un-tested codepaths to be shipped to production as latent code which may never be turned on. Product Managers may have other reasons for not wanting to expose features even if they are fully implemented and tested. Feature release might be being coordinated with a marketing campaign, for example. Using Release Toggles in this way is the most common way to implement the Continuous Delivery principle of \"separating [feature] release from [code] deployment.<ul> <li>Short lived (few days/weeks)</li> <li>Effect is very static in nature as requests from all users experience same flags. Usually set at the time of deployment (not release). </li> </ul> </li> <li>Experiment Toggles: Experiment Toggles are used to perform multivariate or A/B testing. Each user of the system is placed into a cohort and at runtime the Toggle Router will consistently send a given user down one codepath or the other, based upon which cohort they are in. By tracking the aggregate behavior of different cohorts we can compare the effect of different codepaths. This technique is commonly used to make data-driven optimizations to things such as the purchase flow of an ecommerce system<ul> <li>lives long enough to generate enough data (few Hours to weeks)</li> <li>Effect is very dynamic as request from each user takes different path based on flags.</li> </ul> </li> <li>Ops toggles: These flags are used to control operational aspects of our system's behavior. We might introduce an Ops Toggle when rolling out a new feature which has unclear performance implications so that system operators can disable or degrade that feature quickly in production if needed. <code>kill switches</code> can be long lived which will allow support teams to disable few heavy features in case of heavy traffic.</li> <li> <p>Permissioning Toggles: These flags are used to change the features or product experience that certain users receive. For example we may have a set of \"premium\" features which we only toggle on for our paying customers. Or perhaps we have a set of \"alpha\" features which are only available to internal users and another set of \"beta\" features which are only available to internal users plus beta users.</p> <ul> <li>can be very long lived ( multi-year) in cases where we are controlling premium features for paid customers</li> <li>effect is very dynamic as each user request may be treated differently</li> </ul> </li> <li> <p>Manage different toggles differently:</p> </li> <li>These differences should be embraced, and different toggles managed in different ways, even if all the various toggles might be controlled using the same technical machinery. Initially we might have placed that section behind a Release Toggle while it was under development. We might then have moved it to being behind an Experiment Toggle to validate that it was helping drive revenue. Finally we might move it behind an Ops Toggle so that we can turn it off when we're under extreme load. If we've followed the earlier advice around de-coupling decision logic from Toggle Points then these differences in toggle category should have had no impact on the Toggle Point code at all. However from a feature flag management perspective these transitions absolutely should have an impact. As part of transitioning from Release Toggle to an Experiment Toggle the way the toggle is configured will change, and likely move to a different area - perhaps into an Admin UI rather than a yaml file in source control. Product folks will likely now manage the configuration rather than developers. Likewise, the transition from Experiment Toggle to Ops Toggle will mean another change in how the toggle is configured, where that configuration lives, and who manages the configuration.</li> </ul> <p>Other good links: - https://dzone.com/articles/feature-toggles-are-one-worst - https://www.abhishek-tiwari.com/decoupling-deployment-and-release-feature-toggles/</p>"},{"location":"while-coding/ff4j-notes/#about-ff4j","title":"about ff4j","text":""},{"location":"while-coding/ff4j-notes/#features","title":"features","text":"<ul> <li>feature store: For distributed architecture, <code>feature store</code> works as central repo for all feature toggles which all the microservices can refer.</li> <li>permission based feature toggles: </li> <li> <p>conditional feature toggles:</p> </li> <li> <p>FF4J works using strategies.You can create your own strategies too.</p> </li> </ul>"},{"location":"while-coding/ff4j-notes/#code-and-design","title":"code and design","text":"<ul> <li>two main classes <code>WebAPIController</code> and <code>*Provider</code></li> <li><code>provider</code> has single overridden method <code>getFF4j</code> which provides <code>FF4J</code> object.<ul> <li><code>FF4J</code> object has xml where features details are given, datasource connection details, propertystore, featurestore and eventstore instances with datasource given as argument.</li> </ul> </li> <li><code>WebAPIController</code> has single method <code>getWebApiConfiguration</code> that returns <code>apiconfig</code> object. This method takes creates a provider and gets <code>FF4J</code> object and gives it to instance of <code>ApiConfig</code> class. It also sets various properties of <code>ApiConfig</code> like audit, port, authentication and authorization etc<ul> <li></li> </ul> </li> </ul>"},{"location":"while-coding/ff4j-notes/#trying-out-jdbc-sample","title":"trying out jdbc sample","text":"<ul> <li>sample we are trying out is <code>https://github.com/ff4j/ff4j-samples/tree/master/webapp-jetty/ff4j-sample-simplejdbc</code></li> <li>Notable changes:</li> <li>change the Jersey class name in <code>web.xml</code> <ul> <li>from <code>&lt;servlet-class&gt;com.sun.jersey.spi.container.servlet.ServletContainer&lt;/servlet-class&gt;</code> to <code>&lt;servlet-class&gt;org.glassfish.jersey.servlet.ServletContainer&lt;/servlet-class&gt;</code></li> <li>got error <code>UnsatisfiedLinkError: Can't load library: /usr/lib/jvm/java-11-openjdk-amd64/lib/libawt_xawt.so</code> : </li> <li>this was resolved when I set JAVA_HOME to amazon corretto instead of <code>/usr/lib/jvm/java-11-openjdk-amd64</code></li> </ul> </li> </ul>"},{"location":"while-coding/ff4j-notes/#api","title":"API:","text":"<ul> <li>http://localhost:8080/api/ff4j/store</li> <li>http://localhost:8080/api/ff4j/store/features/feature_X</li> <li>http://localhost:8080/api/ff4j/store/features/feature_X/disable (you need to use post: <code>curl -X POST --trace-ascii ./temp/debugdump.txt http://localhost:8080/api/ff4j/store/features/feature_X/enable</code></li> <li></li> </ul>"},{"location":"while-coding/ff4j-notes/#imp-links","title":"IMP links","text":"<ul> <li>Javadocs: https://javadoc.io/doc/org.ff4j/ff4j-core/latest/org/ff4j/core/package-summary.html</li> <li>couchbase support PR: https://github.com/ff4j/ff4j/issues/265</li> </ul>"},{"location":"while-coding/ff4j-notes/#notes-on-integration-with-janssen","title":"Notes on integration with Janssen","text":""},{"location":"while-coding/ff4j-notes/#couchbase-integration","title":"couchbase integration","text":"<ul> <li>couchbase provider stores data in key,value format. Look here. And so it Jans-ORM. See here</li> <li>Both ff4j and orm are working in same way:</li> <li>ff4j: featurestore uses couchbase connection to get feature bucket and then convert feature object into a document using mapper. Then stores the document in the bucket.</li> <li>ORM : CouchbaseOperationServiceImpl uses connection provider to get bucket and then stores the Json object with the key in that bucket.</li> </ul> <p>Design: - application - provider - ff4j core - ORM</p>"},{"location":"while-coding/git-commands-notes/","title":"Git commands","text":"<p>Git initial setup :</p> <p><code>git config --global user.name \"First-name last-name\"</code></p> <p><code>git config --global user.email myemail@github.com</code></p> <p><code>git config --list</code></p> <p>Git command for finding details of which remote repo you are currently working with :</p> <p><code>git remote -v</code> or <code>git remote show origin</code></p> <p>Adding a remote :</p> <p><code>git remote add origin https://github.com/ossdhaval/angular-getting-started.git</code></p> <p>Command to change the url pointed by 'origin' :</p> <p><code>git remote set-url origin https://github.com/ossdhaval/gsg-giftrecommender-service.git</code></p> <p>Command to rename remote repo</p> <pre><code>git remote rename origin jans-home\n</code></pre> <p>Command to get help on any git command :</p> <pre><code>git help pull\n</code></pre> <p>or to see usage of a git command :</p> <pre><code>git add -h\n</code></pre> <p>clone existing repo :</p> <pre><code>git clone https://github.com/libgit2/libgit2\n</code></pre> <p>Deleting files from your workspace that are commited or pushed : <pre><code>git rm &lt;filename&gt;\n</code></pre></p> <p>Deleting directory ( and files inside them ) from your workspace that are commited or pushed : git rm  -r <p>Note : difference between removing files directly from file system Vs 'git rm' : If you remove file directly, it becomes an untracked change in 'git status' which then you have to do a 'git add'. While 'git rm' will do these two steps in one go. You'll see that  after 'git rm' the deletions are already staged for next commit.</p> <p>Moving files and directories : git considers a movement as renaming. So, if you move a file using simple 'mv' command then it becomes a untracked changed that you have to add to the staging area. If you do  it using 'git mv' then it'll move the file and stage it as well for next commit.</p> <p>to move a file from sub-directory to current dir : git mv gsg-event-service/pom.xml .</p> <p>To move a directory ( and all file in it ) from a subdirectory to current dir : git mv  gsg-event-service/src .</p> <p>To avoid entering username and password everytime when you do git push : git remote set-url origin https://ossdhaval:open\\$5github@github.com/ossdhaval/gsg-shared-kernel.git note that the '\\' before $ is because $ is considered as special character and hence needed an escape character.</p> <p>get current commit history of your local active branch ( HEAD points to local active branch ) <code>git log HEAD</code> Note : HEAD is case-sensitive. Also, this will show all the commits coming from the target branch too</p> <p>To see commit history of current branch after it was created from the target branch</p> <pre><code>git log main..\n</code></pre> <p>This will only show commits made to the current branch after it was created from main</p> <p>get current commit history of your remote branch ( origin usually points to branch that is your current remote  ) <code>git log origin</code></p> <p>to see what code actually changed use 'patch' option.  <code>git log --patch</code></p> <p>to limit commits use option <code>git log -8</code></p> <p>to get list of files changed per commit in a branch  <code>git log --name-only --oneline</code></p> <p>To get list of contributions grouped by author</p> <p><code>git shortlog</code></p> <p>To check what all changes a particular file has gone through(even deleted files)</p> <pre><code>git log -- */cli-agama.md\n</code></pre> <p>To get list of commits that are not in main branch but are made to your current branch with details of files that are changed:</p> <pre><code>git log main.. --stat\n</code></pre> <pre><code>commit bbc024e023aa0f41e83519eb10a9818d8a72cb17 (HEAD -&gt; docs-remove-spanner, origin/docs-remove-spanner)\nAuthor: ossdhaval &lt;343411+ossdhaval@users.noreply.github.com&gt;\nDate:   Wed Nov 6 12:06:31 2024 +0530\n\n    fix(docs): remove spanner\n\n    Signed-off-by: ossdhaval &lt;343411+ossdhaval@users.noreply.github.com&gt;\n\n jans-pycloudlib/docs/api/persistence/spanner.md | 3 ---\n jans-pycloudlib/mkdocs.yml                      | 1 -\n 2 files changed, 4 deletions(-)\n\ncommit df4b64c255103bd920163252fe2afa3437b4e16a\nAuthor: ossdhaval &lt;343411+ossdhaval@users.noreply.github.com&gt;\nDate:   Wed Nov 6 10:41:16 2024 +0530\n\n    fix(docs): remove spanner\n\n    Signed-off-by: ossdhaval &lt;343411+ossdhaval@users.noreply.github.com&gt;\n\n docs/janssen-server/reference/database/spanner-config.md | 186 ------------------------------------------------------------------------\n docs/janssen-server/reference/database/spanner-ops.md    |  18 -------\n docs/janssen-server/reference/database/spanner-schema.md |  18 -------\n mkdocs.yml                                               |   4 --\n 4 files changed, 226 deletions(-)\n</code></pre> <p>To see status of all files with short representation of status : <pre><code>git status --short\n</code></pre></p> <p>To add all untracked and modified tracked files and folders recursively in git staging area ( ready for next commit ) git add -A ( 'git add' will just do it for files in current directory and not recursively )</p> <p>To remove a file after adding it to tracked changes using 'git add' git reset  <p>Branch information :</p> <p>Remember: HEAD is a pointer to a branch, and a branch is a pointer to a commit.  So when you say <code>git commit</code>, git first looks at where the HEAD is pointing, and then it'll move that branch pointer to point to new commit. </p> <p>There are two useful command to understand current branches and their status more : git log --oneline --decorate --all and  git remote show origin</p> <p>First command shows which all branches you have in local, at which commit they are pointing to, and which one is your current working directory branch ( pointed to by HEAD ). </p> <p><code>dhaval@thinkpad:~/IdeaProjects/Janssen/home$ git log --oneline --decorate --all</code> <pre><code>a81b684 (origin/main, origin/HEAD) Update Gemfile\n1c345e4 Merge branch 'main' of https://github.com/ossdhaval/mysite\n37009fd Update Gemfile\n37210da (HEAD -&gt; gh-pages) Update _config.yml to fix the description\n9839c2a Update _config.yml\nec2ca67 Set theme jekyll-theme-cayman\n647f71c (origin/gh-pages) Update index.md\n75894c8 Update index.md\nb25aef9 Update RELEASE_NOTES.md\n51bed95 Update index.md\n931132e Create RELEASE_NOTES.md\n</code></pre></p> <p>Second command tells you about remote repository. And what is current state with respect to local branches.</p> <p><code>:~/IdeaProjects/Janssen/home$ git remote show origin</code>  ``` * remote origin   Fetch URL: https://ossdhaval:open$5github@github.com/ossdhaval/mysite.git   Push  URL: https://ossdhaval:open$5github@github.com/ossdhaval/mysite.git   HEAD branch: main   Remote branches:     gh-pages                            tracked     main                                tracked     refs/remotes/origin/viagluu-patch-1 stale (use 'git remote prune' to remove)   Local branch configured for 'git pull':     main merges with remote main   Local refs configured for 'git push':     gh-pages pushes to gh-pages (local out of date)     main     pushes to main     (local out of date) dhaval@thinkpad:~/IdeaProjects/Janssen/home$  <pre><code>Branch (i.e tracking branch) :\n\nMost of the local branches that get created during clone are tracking branches. Which means they are tracking a remote branch. You can see which local tracking branch is tracking which remote branch, you can do it with \n</code></pre> git branch -vv  <pre><code>### local branches, remote tracked branches, branches on remote server\n\n In git, code can reside on your local machine or some remote server. Both local machine and remote can have branches that other one don't know about. Branch that is in local machine is called 'local branch', branch that is in remote server is called 'remote branch'. Git also maintains remote-tracking branches on your local machines for every remote that you have. This is essentially download of all the branches and code that was on remote server when you connected with it last time using `fetch` (or `pull`).\n\nNow, you can link-up your local branch to a remote tracking branch for ease of use. If you do, git automatically knows which remote branch a local branch pushes to or fetches from. If you want to see which of your local branches are linked to which remote-tracking branches, you can use\n\n ```\n git branch -vv\n ```\n\nif you want to see complete list of branches on the remote (i.e github) for this repo:\n</code></pre> git branch -r <pre><code> #### About local branches\n\n ##### first option of using untracked local branch\n\n - you can create a simple local branch that doesn't link to any remote tracker using `git branch &lt;name&gt;`\n   - Remember that changes in the current branch that you haven't committed yet will also be part of new branch\n - Start using this branch by switching to it: `git switch &lt;name&gt;`\n - Remember, even if your local branch is not tracking a remote tracking branch, you can still use it to work with any remote branch. It is just that you have to mention which remote and which branch of that remote should be used for that operation everytime. I recommend this manual approach as it makes it clear where your code is going and coming.\n - To make local branch track a remote branch: `git branch -u &lt;remote&gt;/&lt;branch&gt; &lt;local-branch&gt;`\n\n ##### second option of using tracked local branch\n\n benefit of this approach is that you know later \n\n - `git checkout -b &lt;new-branch-name&gt;`\n - `git push --set-upstream origin &lt;new-branch-name&gt;`\n - Now if you do `git branch -vv` you'll see that local branch is tracking the remote branch. \n - run `git fetch -p`. After this remote branch is deleted (after merge) you'll see that `git branch -vv` mentions `gone` against the remote branch. This was you know that local branch is no longer useful and delete it. In the first option above, it is hard to find out whether a local branch has been delivered and not longer usefu. So it is hard to delete it for cleanup.\n\n\n\n### create branch localy and push it to github\n\n`git checkout -b 'feature-1'` - Create and switch to new branch\n</code></pre>  git branch --set-upstream-to origin/feature-1  git push  <pre><code>Above sets remote tracking branch for current branch\n\n or you can do \n</code></pre>  git push origin feature-1:feature-1 <pre><code> above will create a new branch on remote 'origin' and push changes of local branch to that branch\n</code></pre></p> <p>dhaval@thinkpad:~/IdeaProjects/ossdhaval/github-action-check$ git checkout -b 'feature-1' Switched to a new branch 'feature-1' dhaval@thinkpad:~/IdeaProjects/ossdhaval/github-action-check$ git status On branch feature-1 nothing to commit, working tree clean dhaval@thinkpad:~/IdeaProjects/ossdhaval/github-action-check$ git push origin fatal: The current branch feature-1 has no upstream branch. To push the current branch and set the remote as upstream, use</p> <pre><code>git push --set-upstream origin feature-1\n</code></pre> <p>dhaval@thinkpad:~/IdeaProjects/ossdhaval/github-action-check$ git push --set-upstream origin feature-1 Total 0 (delta 0), reused 0 (delta 0), pack-reused 0 remote:  remote: Create a pull request for 'feature-1' on GitHub by visiting: remote:      https://github.com/ossdhaval/git-action-check/pull/new/feature-1 remote:  To https://github.com/ossdhaval/git-action-check.git  * [new branch]      feature-1 -&gt; feature-1 Branch 'feature-1' set up to track remote branch 'feature-1' from 'origin'. dhaval@thinkpad:~/IdeaProjects/ossdhaval/github-action-check$ </p> <p><pre><code>`git push origin main` what this command actually is this `git origin master:master`. Which means take my *master* branch and push it to *origin*'s master branch. Using this you can also push changes in your master branch to some other branch on remote.\n\n\n#### How to know which branches can be deleted?\n\n\n\n1. Look at `git branch -vv`\n\n Above will list all the branches with it's remote tracking branches. If you see the `gone` mentioned along side of the remote branch, that it may be a case were the branch was merged using a PR and then workflow has deleted the remote branch on GH. Local Branches where remote branches are `gone` can be deleted.\n\n2. To further confirm whether the most lastest commit on the local branch have been added to main, you can search the main branch using command below for the commit message of the last commit on the local branch.\n\n `git log main --grep=\"fix: add missing README files`\n\n\n#### How to completely remove local branch and remote-tracking branch and start fresh from remote branch:\n\nIn case you have messy code in your local branch that you have committed but not pushed to remote. You want to get rid of this code and start afresh from remote branch. For this you have to \n\n 1. Delete local branch: `git branch -D file-sync-22-master-1623760119`. Check using `git branch -vv`\n 2. Delete local remote-tracking branch: `git branch -dr origin/file-sync-22-master-1623760119`. Check using `git remote show &lt;remote-name&gt;`\n 3. Get remote branch in local tracker branch again: `git pull`. Check using `git remote show &lt;remote-name&gt;`\n 4. Create new local branch from newly created local remote-tracking branch: `git checkout -b file-sync-22-master-1623760119 origin/file-sync-22-master-1623760119`. Check using `git branch -vv`.\n\n `ref:` https://stackoverflow.com/a/23961231/2331225\n\n\n## Ignoring files\n\nThere are three ways to which files should git ignore:\n\n- using `.gitignore` file in your repo : best way to share with other developers who use the same repo\n- using `$LOCAL_REPO_DIR/info/exclude`: use this when you want to ignore files and don't want to commit to the repo. But this `exclude` file is repository-specific\n- using `core.excludesFile` global ignore files: best way to ignore ide-specific or user-specific files in the local workspace **that need to be applied to all the local git repositories**\n  - create a text file anywhere and list the files which you want to ignore. For example, if you want to ignore `.vscode` directory, put the content below in the file.\n    ```\n    .vscode\n    ```\n  - run the command below to make a settings entry in your global git config file which is usually at your home directory `~/.gitconfig`\n    ```\n    git config --global core.excludesFile '~/code/personal-configs/git-global-ignore-settings'\n    ```\n  - after this `.vscode` directory will be ignored everywhere in all your repositories on this machine\n\n### About git ignore:\n\n- git ignore doesn't have a command. It is only controlled by patterns mentioned in the files.\n- There are two files that you can edit. Below is except from [here](https://git-scm.com/docs/gitignore)\n  ```\n  Which file to place a pattern in depends on how the pattern is meant to be used.\n\n  Patterns which should be version-controlled and distributed to other repositories\n  via clone (i.e., files that all developers will want to ignore) should go into a .gitignore file.\n  Meaning, these are files created by your project itself and should be ignored by every developer\n  who is using this codebase.\n\n  Patterns which are specific to a particular repository but which do not need to be shared with other\n  related repositories (e.g., IDE specific files like `.vscode` etc) should go into the $GIT_DIR/info/exclude file.\n  ```\n\nAvoiding to use .gitignore for your custom file :\n\nIn a large project, everyone shares the same gitignore file which is commited and maintained in repository just like any other common code file. I you want to add few custom ignores to this file, it'll affect everyone. To avoid this, use below :\n\nhttps://medium.com/@dave_lunny/exclude-files-from-git-without-committing-changes-to-gitignore-986fa712e78d\n\n\nMy co-worker pointed me to the .git/info/exclude file which, much like a .gitignore file, allows you to ignore files from being staged. This keeps things nice and clean, and the best part is that you don\u2019t commit anything in the .git/ directory, so it\u2019s like your own personal .gitignore that no one else can see or touch!\n\ngitignore general guidlines :\n\nSetting up a .gitignore file for your new repository before you get going is generally a good idea so you don\u2019t accidentally commit files that you really don\u2019t want in your Git repository\n\nIn the simple case, a repository might have a single .gitignore file in its root directory, which applies recursively to the entire repository. However, it is also possible to have additional .gitignore files in subdirectories. The rules in these nested .gitignore files apply only to the files under the directory where they are located.\n\nGitHub maintains a fairly comprehensive list of good .gitignore file examples for dozens of projects and languages at https://github.com/github/gitignore if you want a starting point for your project.\n\nsome useful patterns :\n\n### ignore all .a files\n*.a\n\n### but do track lib.a, even though you're ignoring .a files above\n!lib.a\n\n### only ignore the TODO file in the current directory, not subdir/TODO\n/TODO\n\n### ignore all files in any directory named build\nbuild/\n\n### ignore doc/notes.txt, but not doc/server/arch.txt\ndoc/*.txt\n\n### ignore all .pdf files in the doc/ directory and any of its subdirectories\ndoc/**/*.pdf\n\nHow to see what changes have you made to files and are not staged or staged but are not commited :\n\ngit diff\n\nTo see what you\u2019ve changed but not yet staged, type git diff with no other arguments\n\nIf you want to see what you\u2019ve staged that will go into your next commit, you can use git diff --staged. This command compares your staged changes to your last commit\n\n\n\nTo push your changes to remote repo :\ngit push remote-name branch-name\nexample: git push origin master\nthis will ask for github username and password. \n\nGuidlines for git commit messages from PRO-git:\n\nThe last thing to keep in mind is the commit message. Getting in the habit of creating quality\ncommit messages makes using and collaborating with Git a lot easier. As a general rule, your\n129messages should start with a single line that\u2019s no more than about 50 characters and that describes\nthe changeset concisely, followed by a blank line, followed by a more detailed explanation. The Git\nproject requires that the more detailed explanation include your motivation for the change and\ncontrast its implementation with previous behavior \u2014 this is a good guideline to follow. Write your\ncommit message in the imperative: \"Fix bug\" and not \"Fixed bug\" or \"Fixes bug.\"\n\nMore guidelines for commit messages:\n https://robertcooper.me/post/git-commit-messages\n\n### How to troubleshoot : 'Your branch and 'origin/master' have diverged' problem.\n\nthis is because the your branch has commits that are not built on top of commits currently available in same branch on origin(remote).  i.e : master branch in your local repo vs master branch in remote repo.\n\nhead(master)    : commit1, commit2, commit3, commit5\n\norigin(master)  : commit1, commit2, commit3, commit4\n\nIt may be because while you were working on code changes for commit5 in your local repo and committed to local repo, the remote branch moved on due to somebody else pushed changes in it. \nAt this point, if you do a 'git status', you get above message.\n\ndhaval@dhaval-Lenovo-U41-70:~/code/eclipse-workspace/gsg-event-service$ git status\nOn branch master\nYour branch and 'origin/master' have diverged,\nand have 1 and 1 different commits each, respectively.\n  (use \"git pull\" to merge the remote branch into yours)\n\nNow there are two solutions when you have to synch up two branches: rebase or merge.\n\nIn this case, we want to synch up with same branch on remote server. \n\n Since merge creates a non-linear history, rebase is preferred by many. \nrebase essentially brings in commit5 from remote into your local repo and then puts back commit4 on top of that. \n\nTo use this option :\n</code></pre> git pull --rebase <pre><code> See the https://stackoverflow.com/questions/2452226/master-branch-and-origin-master-have-diverged-how-to-undiverge-branches/2452610\n\n\n\n### synching your local feature branch with main (or some other branch)\n\n Here you have two options like in above case: rebase or merge\n\n In above case we were getting latest commits from remote of same branch, but in here, we want to get latest commits from main branch and make our branch latest.\n\n - If your feature branch is public (i.e pushed to github) then use merge as merge doesn't change SHA of existing commits but creates a new merge commit (to avoid this, many people use rebase as below)\n</code></pre>  git switch main  git pull  git switch feature  git merge main <pre><code> - if your feature branch is still only on your local then use rebase as rebase creates a linear history by getting commits from main to your branch (keeping the SHA same) and then recreating your commits on top of those (SHA changes for your commits). It is said `rebase feature onto main`\n\n ```\n git switch main\n git pull\n git switch feature\n git rebase main\n ```\n\n **REMEMBER: But rebase alters old commits and create new ones** so if the branch has been made public then **rebase should not be used**.\n\n - reference: https://www.atlassian.com/git/tutorials/merging-vs-rebasing#the-golden-rule-of-rebasing\n - [Golden rule of rebasing](https://www.atlassian.com/git/tutorials/merging-vs-rebasing#the-golden-rule-of-rebasing)\n\nHow to remove files from 'Changes not staged for commit' category of git status :\n</code></pre> git checkout  <pre><code>git checkout essentially overwrites your local modified file by latest copy from local branch.\n\n\nhow do you know if you have committed changes in your local branch but not pushed to remote :\nRun git status.  Message would say that 'your local is ahead of remote by x number of commits'\n\nYour branch is ahead of 'origin/master' by 1 commit.\n  (use \"git push\" to publish your local commits)\n\nThis means you have one commit that you have not pushed. \n\nTo see what is going to get committed in next push :\n</code></pre> git log --stat <pre><code>This will give you history of commits. From this history, you can see one commit that are marked with (head-&gt;master), and then few commits down the line, you'll see a commit marked with (origin/master, origin/HEAD). \nIn the next push, your commit marked with (head-&gt;master) and all the commits till and not including (origin/master, origin/HEAD) will be pushed. \n\n\nDifferent file states in git :\n\n\n- Unstaged : untracked files + modified tracked files\n    ```\n    git add\n    ```\n- Staged : files that are ready to go in next commit\n    ```\n    git commit\n    ```\n\n- Committed files to local branch\n    ```\n    git log --stat\n    ```\n\n- Pushed to remote repo\n    ```\n    git log --stat\n    ```\n\nGit file moving through various states :\n\n- when you create a new file, it is untracked :\n\n\nnow make this a tracked file :\n\n\n\n\n\n\n\nNow to change it back to untracked :\n\n\n\n\n\n\n\nTo untrack everything which is there in staging area :\n</code></pre> git reset <pre><code>How to remove files from 'Changes not staged for commit' category of git status :\n</code></pre> git restore  or git checkout  <pre><code>git checkout essentially overwrites your local modified file by latest copy from local branch.\n\n\nadd to the staging area :\n\nmodified of the already updated file, just for the completeness of the example :\n\nto move back to previous state :\n\nNow commit these files to local git branch :\n\nsee your commit in local branch log :\n\nNow roll back commit which still in local brach and not pushed to shared repo :\n</code></pre> git reset --soft HEAD~ <pre><code>( --mixed will undo the commit + it'll unstage the changes from staging area,  but will leave changes in the working copy as is.\n--hard will undo the commit, unstage the changes and update the working copy with what is in the local branch)\n\nNow push commit to remote repo \n\n\n\nFirst commit them back in :\n\n\n\n\n\n\nsee Git log to confirm what is going to get pushed :\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNow push to remote :\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ncheck the git log of remote repo to see that the commit has been made :\n\n\n\n\n\n\n\nNow undo commit from remote repo :\n(ref: https://gist.github.com/gunjanpatel/18f9e4d1eb609597c50c2118e416e6a6)\n\nfirst check if you are on the right branch by running git status. Then\n</code></pre> git revert a81b684513aa2d3faa2cced70460797cc8397528 <pre><code>this will not rewrite the history unlike reset above\n\nThis can also be done using reset (not recommended as rewrites history) :\n</code></pre> git reset a81b684513aa2d3faa2cced70460797cc8397528 --hard <pre><code>(here commit number is the commit which you want to point to going foward. i.e all the commits after\nthis one will be removed from github, also from insights&gt;network )\n\nand then run :\n</code></pre> git push origin main -f <pre><code>storing your changes in a separate branch :\n\nSuppose you are working on branch B1. You have made changes to certain files. You now think that these changes are not required for now and you want to store these changes as a separate branch and come back to B1 and start working on that. For example : I was working on a project where first I tried to integrate with RDBMS using JPA. All these changes were pushed to B1. Then I started to make changes on my local to integrate with DynamoDB instead of RDBMS. But that didn't go well. So, Now I wanted to go back to last commited changes on B1 without loosing my DynamoDB changes. So I decided that I'll create a new branch and store DynamoDB changes on a that branch. And then again switch back to B1 and continue working on RDBMS. Below is the sequence of commands that helped.\n</code></pre> git branch NoSQL git checkout NoSQL <pre><code>now you'll see that master, NoSQL and origin/master are on the same commit using 'git log'\n\ncommit 009ed95a6d83e5b899b5c864a8b84bf72cbb4740 (HEAD -&gt; NoSQL, origin/master, master)\n</code></pre> git status <p>git add .</p> <p>git commit -m 'Initial attempt at sing DynamoDB'</p> <p>git push origin NoSQL</p> <p>git checkout master <pre><code>In case you have made direct changes in your code from github ( or someone else has committed changes in the branch ) and you want to make your local branch updated with those changes then :\ngit checkout\nYour branch is behind 'origin/dhaval-development' by 40 commits, and can be fast-forwarded.\n  (use \"git pull\" to update your local branch)\ngit pull\nUsername for 'https://github.com': ossdhaval\nPassword for 'https://ossdhaval@github.com': \nUpdating 17e6c35..579473e\nFast-forward\n Jenkinsfile  | 24 ++++++++++++++++++++++++\n package.json |  9 +++------\n 2 files changed, 27 insertions(+), 6 deletions(-)\n create mode 100644 Jenkinsfile\n\n\n`git fetch &lt;remote&gt;` brings all data about that remote to your local machine, including references of new branches that are created on remote server by others.\n\n`git fetch &lt;remote&gt; &lt;branch&gt;` brings data from remote only about a particular branch.\n\n### Using git fetch and merge instead of pull:\n\nWhile the `git fetch &lt;remote&gt;` command will fetch all the changes on the server that you don\u2019t have yet, it will\nnot modify your working directory at all. It will simply get the data for you and let you merge it\nyourself. However, there is a command called git pull which is essentially a git fetch immediately\nfollowed by a git merge in most cases.\n\nGenerally it\u2019s better to simply use the fetch and merge commands explicitly as the magic of git pull\ncan often be confusing.\n\nSecondly, Suppose there is a branch called `serverfix` on remote server that you don't have.\nIt\u2019s also important to note that when you do a fetch that brings down new remote-tracking branches, you don\u2019t automatically have local, editable copies of them. In other words, in this case, you don\u2019t have a new serverfix branch\u2009\u2014\u2009you have only an origin/serverfix pointer that you can\u2019t modify.\n\nTo merge this work into your current working branch, you can run git merge origin/serverfix. If you want your own serverfix branch that you can work on, you can base it off your remote-tracking branch:\n</code></pre> $ git checkout -b serverfix origin/serverfix Branch serverfix set up to track remote branch serverfix from origin. Switched to a new branch 'serverfix' <pre><code>This gives you a local branch that you can work on that starts where origin/serverfix is.\n\n\n\n#### Workflow for Contributing to an opensource project :\n\ncreate a fork\n\nclone that fork in your local machine\n\nthen make sure you have this setup so that your fork is updated: \nhttps://gist.github.com/CristinaSolana/1885435 or\nhttps://stefanbauer.me/articles/how-to-keep-your-git-fork-up-to-date\n\n#### To view files in some other branch without switching from your branch\n\nSyntax:\n</code></pre> git show branch-name:relative-path-of-file <pre><code>Example:\n</code></pre> git show pull-request-decoration:.github/workflows/build-with-coverage.yml</p> <pre><code>#### To store credentials for 18 hours:\n</code></pre> <p>git config --global credential.helper \"cache --timeout 64800\"</p> <p><pre><code>#### add description to your commit using command line.\n\n When you fire `git commit` without a `-m`, git will open an editor within terminal. You can put your commit title and description in there. \n - `git commit` ( or you can continue to use other flags as well like `git commit -S -a` )\n - opens an editor\n - put your commit title after first few commented lines.\n - leave a line blank and then put your description\n - `ctrl+o`\n - enter\n - `ctrl+x\n\n#### resolving git merge conflicts:\n\nIf you are trying to pull some changes and merge conflicts happen then you have two choices:\n 1) use commandline to merge using `git merge -t vimdiff`. This will open vimdiff on the terminal and show merge conflicts that you have merge. But this is little\n difficult as it is difficult to navigate commandline.\n 2) use Intellij's merge conflict tool. To use it:\n  - Press `shift+shift` and then search for 'conflict'. You should see a tool in `git` category.\n  - open this tool and then using it you should be easily able to merge. It shows three files.\n    - Left: is your local changes\n    - Right: is incoming changes\n    - Center: is will be the final outcome. This is what you have to edit.\n  - Once completed, click apply to apply the changes. \n  - now if you go and fire `git status` then you'll see that your local copy has been modified. You can commit that.\n\n ### cherry picking:\n\nA cherry-pick in Git is like a rebase for a single commit. It takes the patch that was introduced in a commit\nand tries to reapply it on the branch you\u2019re currently on. This is useful if you have a number of\ncommits on a topic branch and you want to integrate only one of them, or if you only have one\ncommit on a topic branch and you\u2019d prefer to cherry-pick it rather than run rebase.\n\nremember that when cherry picking, you don't have to mention the source-branch. Just mention the commit sha.\n\nBy default cherry pick will bring in the changes from source commit and commit them to your branch. See the command below. (you can use -n option if you don't want to commit the incoming changes. Then it'll just stage those changes, which you can edit and manually merge. This is very useful)\n</code></pre>  $ git cherry-pick -S e43a6 Finished one cherry-pick. [master]: created a0a41a9: \"More friendly message when locking the index fails.\" 3 files changed, 17 insertions(+), 3 deletions(-) <pre><code> Or cherry pick a range of commits. Notice the `^` character at the end of first commit. This is to indicate to git to include that commit as well in cherry pick:\n\n ```\n git cherry-pick -S dc99f87656a952f3548c320c6459278876f9f7b7^..6967cfc4751c87579c563ba9cbb3721116b72be0\n ```\n\n if your cherry pick gets a merge conflict, it'll show message as below\n</code></pre> Auto-merging CONTRIBUTING.md CONFLICT (content): Merge conflict in CONTRIBUTING.md error: could not apply 2e158b7... docs: update triage section details hint: after resolving the conflicts, mark the corrected paths hint: with 'git add ' or 'git rm ' hint: and commit the result with 'git commit' <pre><code>You can edit conflicted file and resolve the conflict, run `git add` to add that file and then `git commit` to commit that file. But, cherry pick would stop when it finds a conflict and doesn't pick rest of the commits in the range. So, you have to again start cherry pick from where it left. But first you have to stop the previous cherry pick by `git cherry-pick --quit` and then git another cherry pick command with remaining commits as range.\n\n Now you can remove your topic branch and drop the commits you didn\u2019t want to pull in.\n\n &gt; Note: when you cherry-pick a commit, git essentially generates a new commit. And if the original commit had a signature (using -S), then new commit **will not** have that signature. If you want to add signature to new commit as well, use `-S` with cherry-pick as well.\n\n  ```\n git cherry-pick -S 2493781^..c5e9df3\n ```\n\n\n\n ### What to do when you have unsigned commits in your PR\n\n\n\n### Reset a branch to be same as remote branch\n\n ```\n git reset --hard origin/&lt;branch-name&gt;\n ```\n\n### using sparse checkout to just check out one directory from monorepo\n</code></pre> 4581  02/02/22 11:24:08 mkdir jans-evelen 4582  02/02/22 11:24:15 cd jans-evelen/ 4583  02/02/22 11:24:20 git init 4584  02/02/22 11:24:37 git sparse-checkout init --cone 4585  02/02/22 11:25:05 git sparse-checkout set jans-eleven 4586  02/02/22 11:25:25 git remote add origin git@github.com:JanssenProject/jans.git 4587  02/02/22 11:26:08 git pull origin main <pre><code>### (not recommended) how to sign commits that you have already pushed to Github\n\n#### Recommended\n\n - One way which is not recommended is to amend the commits and force push. But this will rewrite the history. So, not suggestable.\n - Second approach is to create a new branch, cherry-pick all commits of the old branch to new branch and sign them in the process\n - create a new PR for merging and close old PR without merging\n - Above steps in more details\n - go to intellij and switch to `main`\n - git pull\n - git branch new-branch\n - git switch new-branch\n - git cherry-pick -S 2493781^..c5e9df3 (here the first commit sha is taken from first commit of the old PR and the second sha is last commit)\n - push this branch and create a new PR\n - close old PR\n\n#### Not recommended (uses force push) \n\n Reference: https://stackoverflow.com/questions/13043357/git-sign-off-previous-commits\n\n Remember that commit number will change when you do this. So, you'll have to force push to github.\n\n `git rebase --signoff -S HEAD~3` : this will add PGP sign and `signed-off by` message to last three commits\n\n `git rebase --signoff -S &lt;SHA&gt;` : this is for one particular commit \n\n after this do `git push --force-with-lease` to push out changes. But one thing that I noticed is that in the PR I could still see previous unsigned commits. I expected those commits to be overwritten.\n\n\n ### why to avoid force push \n https://blog.developer.atlassian.com/force-with-lease/\n\n### git revert\n\n### git clean \n\nremove all the untracked files from repo\n</code></pre> git clean -f <pre><code>remove all untracked, ignored files plus directories. \n</code></pre> git clean -dxf <pre><code>### rewriting a commit message\n\n Commit message is part of commit itself, so when you change the message, the commit sha changes. It is like you are creating new commit and replacing old one. \n\n - if commit has not been pushed: `git commit --amend`\n - If commit has been pushed to remote(GH): Since old commit has already been pushed, you'll have to force push new commit which is a bad practise. So, in this case, you better create a new branch and new PR with good commit. Close the old PR without merging.\n Reference: https://docs.github.com/en/pull-requests/committing-changes-to-your-project/creating-and-editing-commits/changing-a-commit-message\n\n ### check commit signatures \n\n ```\n git log --show-signature\n ```\n\n ### How to create commit without any code change (empty commit)\n\n ```\n git commit --allow-empty -S -m 'docs: no changes required'\n ```\n\n ### Stash\n\n To stash whatever you have now (tracked + untracked)\n\n ```\n git stash push -u -m 'my stash message'\n ```\n\n To get the last stash reapplied (`--index` will stage the files again which were previously staged)\n\n ```\n git stash apply --index\n ```\n\n List all awailable stashes:\n\n ```\n git stash list\n ```\n\n See contents of a particular stash:\n\n ```\n git stash show stash@{0}\n ```\n\n Delete or drop a stash\n\n ```\n git stash drop stash@{0}\n ```\n\n Apply stash by name\n\n ```\n git stash apply stash^{/my_stash_name}\n ```\n\n ### apply signature to commit automatically\n\n Use below command as one-time setting \n\n ```\n git config --global commit.gpgsign true\n ```\n\n Due to this\n - all commits will be signed automatically, like what `git commit -S` command does manually. You can ignore `-S` now\n - if you cherry-pick a commit, all commits are newly created. In this case, commits will be auto signed\n - if you `rebase` any thing, all commits are newly created. In this case, commits will be auto signed\n\n### mentioning someone else as author in a commit\n\n ```\n git commit --author=\"temp-ossdhaval\" -S -m 'message'\n ```\n\n ### difference between GPG sign a commit (-S) vs adding Sign-off (-s)\n\n - GPG signing is done by adding -S to commit command. Using this GH can verifies only the intended dev is making the commit.\n - `sign off by` is added by `-s`. It is up to the organisation how to interprete the sign off given by the developer.\n - in intellij you can configure signing of every commit with gpg using alt+ctrl+s -&gt; search git -&gt; click configure GPG -&gt; check mark on `sign all commits`\n - sign-off can be done by clicking `commit options` on the commit tool window that can open using `ctrl+0`\n\n ### Detached head state\n\n - HEAD is a file in git that points to the current branch normally\n - sometimes HEAD can also contain a SHA value of a commit. This is `detached HEAD` state. This happens when you checkout a particular commit, a tag, a PR, or a remote branch without fetching it first. \n\n ### Branch vs Tag\n\n - Branch is a reference to a commit and that reference changes when next commit is made\n - Tag is also a reference to a commit and it will **not** move if new commits are made\n\n ### How to know if there are any conflicts between two branches\n\n - Before raising a PR for your feature branch, if you want to know if PR will get merge conflict with base branch(let's say main) or not, then do this locally on your system:\n</code></pre>  # make sure you are on feature branch  git switch feature-branch <p># create temp branch from your feature branch  git checkout -b temp-feature-branch</p> <p># merge main  git merge main</p> <p># this will give you output as below. It'll exactly tell you if there are conflicts and which files  Auto-merging docs/admin/auth-server/crypto/key-generation.md  CONFLICT (content): Merge conflict in docs/admin/auth-server/crypto/key-generation.md  Automatic merge failed; fix conflicts and then commit the result.</p> <p># abort the merge  git merge --abort</p> <p># Now since our purpose is served, Delete the temp branch   git switch feature-branch  git branch -D temp-feature-branch</p> <p><pre><code> # Working with patch\n\n Git doesn't have a `git patch` command. What it has is `git format-patch` command. \n\n ## Create a patch\n\n Of uncommitted changes\n</code></pre> git diff &gt; my_patch.diff <pre><code>Generate a Patch for Staged Changes\n</code></pre> git diff --cached &gt; my_patch.diff <pre><code> Generate a Patch for the Last Commit\n ```\ngit format-patch -1\n</code></pre></p>"},{"location":"while-coding/git-commands-notes/#apply-a-patch","title":"Apply a patch","text":"<p>apply a patch file <pre><code>git apply my_patch.diff\n</code></pre></p>"},{"location":"while-coding/git-commands-notes/#copy-a-file-from-a-different-branch-to-your-current-branch","title":"copy a file from a different branch to your current branch","text":"<p><pre><code>git checkout &lt;other-branch-name&gt; file-path\n</code></pre> file will be added to the same location in your branch as the other branch.</p>"},{"location":"while-coding/git-commands-notes/#add-all-files-except-one","title":"add all files except one","text":"<pre><code>git add . :^mkdocs.yml\n</code></pre>"},{"location":"while-coding/git-commands-notes/#getting-new-changes-without-loosing-local-changes","title":"getting new changes without loosing local changes","text":"<p>scenario:</p> <p>You have made some local changes in the file but have not committed yet. Then you get to know that someone has pushed changes to the same branch in the same file but in a different section of the file. Now you want to get those new changes and put your changes in the new file. If you simply <code>git pull</code> then it'll fail with error as below:</p> <pre><code>error: Your local changes to the following files would be overwritten by merge:\n        docs/janssen-server/developer/agama/quick-start-using-agama-lab.md\nPlease commit your changes or stash them before you merge.\nAborting\n</code></pre> <p>Solution:</p> <pre><code># create a stash, this will clear your branch of any uncommitted changes and \ngit stash\n\n# now pull. It should be successful\ngit pull\n\n# apply the stash. If the changes are not overlapping, meaning they are not on the same line numbers then the apply will be successful\ngit stash apply\n</code></pre>"},{"location":"while-coding/git-commands-notes/#when-and-why-do-you-need-to-checkout-a-pr","title":"When and why do you need to checkout a PR","text":"<p>When you want to review a PR by testing it locally on your computer, you usually checkout that PR branch locally and test. But when someone from outside of the org, i.e community, raises a PR, they create a branch on their fork and not on the project repo. In this case, you should checkout the PR and not the contributors branch from forked repo. Because if you checkout branch from forked repo, your changes will not flow to the PR, but they'll go to the contributor's branch from where they have to push them. </p>"},{"location":"while-coding/git-commands-notes/#how-to-checkout-a-pr-using-git-command-line","title":"How to checkout a PR using git command line","text":"<p>If you want to checkout PR number 1234 locally run the command below. It'll fetch the pr and create a local branch <code>any-name</code> on your local.</p> <p><pre><code>git fetch origin pull/1234/head:any-name\n</code></pre> <pre><code>git checkout any-name\n</code></pre></p>"},{"location":"while-coding/github-actions-notes/","title":"Github Actions","text":""},{"location":"while-coding/github-actions-notes/#references","title":"References","text":""},{"location":"while-coding/github-actions-notes/#course","title":"course :","text":"<p>https://app.pluralsight.com/library/courses/github-actions-getting-started/table-of-contents</p>"},{"location":"while-coding/github-actions-notes/#how-to-run-a-workflow-for-all-branches-but-run-an-action-on-a-specific-branch","title":"How to run a workflow for all branches but run an action on a specific branch","text":"<p>https://stackoverflow.com/questions/58139406/only-run-job-on-specific-branch-with-github-actions</p>"},{"location":"while-coding/github-actions-notes/#options-for-yml-tags-of-a-github-workflow","title":"Options for yml tags of a github workflow:","text":"<p>https://docs.github.com/en/actions/reference/workflow-syntax-for-github-actions</p>"},{"location":"while-coding/github-actions-notes/#checkout-action-documentation","title":"Checkout action documentation:","text":"<p>https://github.com/actions/checkout</p>"},{"location":"while-coding/github-actions-notes/#insightful-article-on-pull_request-action-trigger","title":"insightful article on <code>pull_request</code> action trigger","text":"<p>https://frontside.com/blog/2020-05-26-github-actions-pull_request/</p>"},{"location":"while-coding/github-actions-notes/#list-of-workflow-trigger-events","title":"list of workflow trigger events","text":"<p>https://docs.github.com/en/actions/learn-github-actions/events-that-trigger-workflows</p>"},{"location":"while-coding/github-actions-notes/#a-good-reference-of-a-major-project-that-uses-github-action-for-ci-cd","title":"A good reference of a major project that uses github action for ci-cd","text":"<p>cpython which is official python interpreter: https://github.com/python/cpython</p>"},{"location":"while-coding/github-actions-notes/#action-that-can-build-multiple-dependent-projects","title":"Action that can build multiple dependent projects","text":"<p>Here current repository needs BOM project, which is a separate project, to be built first.</p> <pre><code>jobs:\n  build:\n\n    runs-on: ubuntu-latest\n\n    steps:\n      - name: Set up JDK 11\n        uses: actions/setup-java@v2\n        with:\n          java-version: '11'\n          distribution: 'adopt'\n\n      - name: Checkout Maven BOM repo\n        uses: actions/checkout@v2\n        with:\n          repository: JanssenProject/jans-bom\n          path: bom\n\n      - name: Build Maven BOM repo\n        run: mvn install\n        working-directory: ./bom\n\n      - name: checkout current repo\n        uses: actions/checkout@v2\n        with:\n          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of sonarqube analysis\n\n      - name: Build with Maven\n        run: mvn clean -fae jacoco:prepare-agent test install jacoco:report\n</code></pre>"},{"location":"while-coding/github-actions-notes/#contexts-and-expressions-available-to-workflow","title":"Contexts and expressions available to workflow:","text":"<p>https://docs.github.com/en/actions/reference/context-and-expression-syntax-for-github-actions#github-context</p>"},{"location":"while-coding/github-actions-notes/#github-action-contexts-vs-runner-variables","title":"github action contexts vs Runner variables:","text":"<p>https://docs.github.com/en/actions/reference/context-and-expression-syntax-for-github-actions#determining-when-to-use-contexts</p> <p>basically, in your workflow code, the part apart from 'run:' is executed by Github action and code under 'run:' is executed by runner. You have contexts like <code>github.repository</code> in the part which is executed by github action, while runner doesn't have context but it has many environment variables, like <code>$GITHUB_REF</code>. The <code>github</code> context contains information about the workflow run and the event that triggered the run.You can also read most of the <code>github</code> context data(available to action) in environment variables <code>env</code> context (available in <code>run</code>).</p>"},{"location":"while-coding/github-actions-notes/#run-scripting","title":"Run scripting","text":"<p>run: basically runs commands on operating system shell. In case of <code>runs-on: ubuntu-latest</code>, you can write all commands and scripts that you can run on ubuntu shell.</p>"},{"location":"while-coding/github-actions-notes/#how-to-print-all-values-in-any-context","title":"how to print all values in any context.","text":"<pre><code>- name: Dump github context\n  shell: bash\n  env:\n   GITHUB_CONTEXT: ${{ toJson(github) }}\n  run:   echo \"$GITHUB_CONTEXT\"\n</code></pre>"},{"location":"while-coding/github-actions-notes/#print-all-the-environment-variables","title":"print all the environment variables:","text":"<pre><code>      - name: Get env variables\n        run: \n          echo ${ENV}\n</code></pre>"},{"location":"while-coding/github-actions-notes/#convert-context-value-to-lowercase","title":"convert context value to lowercase:","text":"<p>https://github.community/t/additional-function-s-lowercase-uppercase/140632</p>"},{"location":"while-coding/github-actions-notes/#setting-a-variable-in-one-action-and-using-it-in-another","title":"setting a variable in one action and using it in another:","text":"<p>https://docs.github.com/en/actions/reference/workflow-commands-for-github-actions#setting-an-environment-variable</p>"},{"location":"while-coding/github-actions-notes/#how-to-work-with-a-list-set-and-access-environment-variable-run-linux-commands","title":"how to work with a list, set and access environment variable, run linux commands","text":"<pre><code>name: workflow with list\non:\n  push:\n    branches:\n      - main\n  pull_request:\n    branches:\n      - main\n  workflow_dispatch:\njobs:\n  job-1:\n    name: job-1\n    runs-on: ubuntu-latest\n    steps:\n      - uses: actions/checkout@v3\n        with:\n          fetch-depth: 0\n      - name: print all\n        env:\n          JVM_PROJECTS: |\n            mod1\n            mod2\n        run: |\n          ls\n          echo $JVM_PROJECTS\n          for module in $JVM_PROJECTS\n          do\n            echo \"Module: $module\"\n            echo \"==============\"\n            mvn -f $module/pom.xml javadoc:javadoc\n            ls $module/target/site/apidocs/\n          done\n</code></pre>"},{"location":"while-coding/github-actions-notes/#how-to-create-an-array-of-values-returned-from-a-command-and-loop-through-it","title":"how to create an array of values returned from a command and loop through it","text":"<pre><code>        run: |\n          pwd\n          sub_modules=($( mvn help:evaluate -Dexpression=project.modules -q -DforceStdout | tail -n +2 | head -n -1 | sed 's/\\s*&lt;.*&gt;\\(.*\\)&lt;.*&gt;/\\1/'))\n          for module in \"${sub_modules[@]}\"\n          do\n            echo \"Module: $module\"\n            echo \"==============\"\n            mvn -f $module/pom.xml javadoc:javadoc\n            echo \"==============================================================\"\n            ls $module/target/site/apidocs/\n          done\n</code></pre>"},{"location":"while-coding/github-actions-notes/#misc","title":"Misc","text":"<ul> <li>Actions can be looked at from two different places:</li> <li>from <code>actions</code> tab under repository's main screen.</li> <li>go to PR-&gt;checks</li> <li>PR checks may have more checks than directly triggered by workflows in <code>action</code> tab. For example, when <code>code quality check</code> workflow get triggered for a PR, at the end of it, sonar cloud also pushes a check in the PR-&gt;checks section that summarizes result of the scan. So, in <code>action</code> section you'll just see <code>code quality check</code> workflow, but in PR-&gt;checks you'll see <code>sonarcloud</code> check as well. </li> <li>A workflow run is made up of one or more jobs, which run in parallel by default. Each job runs in a runner environment specified by runs-on. By default, GitHub will maximize the number of jobs run in parallel depending on the available runners on GitHub-hosted virtual machines. To run jobs sequentially, you can define dependencies on other jobs using the jobs..needs keyword.  <li>Each step runs in its own process in the runner environment and has access to the workspace and filesystem. Because steps run in their own process, changes to environment variables are not preserved between steps. GitHub provides built-in steps to set up and complete a job. Reference</li> <li>Commands run using non-login shells by default. You can choose a different shell and customize the shell used to run commands. For more information, see jobs..steps[*].shell. Each run keyword represents a new process and shell in the runner environment. When you provide multi-line commands, each line runs in the same shell <li>Strategy matrix is at job level and not at step level</li> <li></li>"},{"location":"while-coding/github-notes/","title":"Github notes","text":""},{"location":"while-coding/github-notes/#github-authenticating-with-git","title":"Github authenticating with Git","text":"<p>Your local git repo may be setup with email and username etc, but these are for local git. These do not help with authenticating with platforms like github or gitlab. Using just a git initialized directory, you will be able to clone remote public repositories from these platforms but you will not be able to perform actions like pushing commits, cloning using SSH etc. </p>"},{"location":"while-coding/github-notes/#cloning-a-repo","title":"Cloning a repo","text":"<p>You can clone repo from github using three ways -  HTTPS: No authentication needed for cloning, so this is the easiest way to clone a repo. But when you try to push a commit, it'll ask for github username and password. In the password, you have to provide personal token (not the password). So, prefer this mode when you plan to work with the repo for short time and mostly for read-only purposes. -  SSH: Here the authentication with github is required up-front. You have to setup ssh authentication even to clone the repo. But once done, you can push commits etc. Prefer this mode when you plan to use the repo for longer time, and not just for read-only purposes. -  GH CLI</p> <p>When working with github, you'll need to setup authentication for GitHub in your local git settings </p>"},{"location":"while-coding/github-notes/#setting-up-github-commit-signature-verification","title":"setting up github commit signature verification:","text":"<ul> <li>First check that your email id is verified:</li> <li>go to github-&gt;user settings-&gt;emails-&gt;see if it mentions 'unverified' below your email id</li> <li>ref here</li> </ul>"},{"location":"while-coding/github-notes/#signing-using-ssh-key-preferred","title":"signing using SSH key (preferred)","text":"<ul> <li>I am preferring this method as here you can use the same ssh key to authenticate with github as well as to sign the commits. So, you have to manage only one key. And since there is only one key, it is easy to move it to a different machine if you are setting up a new hardware. To move ssh key, you just have to copy the public and private key files from ~/.ssh/ directory to new machine, same directory.</li> <li>In this method you can add the same SSH key as signing and authn key in the github settings -&gt; ssh and gpg key section.</li> <li>Two setting that you have to change in the local git configuration is as below:   </li> </ul>"},{"location":"while-coding/github-notes/#signing-using-gpg-key","title":"signing using GPG key","text":"<ul> <li>Check if you have a GPG key (private-public key pair) already generated for this email id on your machine</li> <li><code>gpg --list-secret-keys --keyid-format LONG</code></li> <li>if you don't have a key generate it</li> <li>while generating the key, it'll ask for inputs, most of it is ok to keep default and email is your github (preferrably private, or public) email id.</li> <li><code>gpg --full-generate-key</code></li> <li>ref here</li> <li>Now check the key that got generated</li> <li><code>gpg --list-secret-keys --keyid-format LONG</code></li> <li>output have a line similar to <code>sec   rsa4096/&lt;your key&gt; 2021-06-02 [SC]</code></li> <li>Now, set GPG key in your local git client</li> <li><code>git config --global user.signingkey &lt;your key&gt;</code></li> <li>Now we need to add same key to your github account</li> <li>get public key block<ul> <li><code>gpg --armor --export &lt;your key&gt;</code></li> <li>copy the entire text that got printed on your screen, starting from first '-' to last '-'</li> </ul> </li> <li>now go to github-&gt;profile-&gt;settings-&gt;SSH and GPG keys-&gt;New GPG key. Paste public key block that you copied in step above.</li> <li>after this whenever you want to sign a commit add <code>-S</code> flag</li> <li><code>git commit -S -m your commit message</code> </li> <li>If you want to move gpg key from some other machine to a new hardware setup, then do following</li> <li>find the id of the key. List the existing keys on current machine as below and <code>id</code> is the part after <code>rsa4096</code> in <code>sec   rsa4096/[**YOUR KEY ID**] 2024-03-30 [SC]</code> </li> <li>export keys from currect machine     <pre><code># export public key\ngpg --export -a [your key id] &gt; gpg-pub.asc\n\n# export private key\ngpg --export-secret-keys -a [your key] &gt; gpg-sc.asc\n</code></pre></li> <li>Move these key files to new machine and import keys using     <pre><code>gpg --import gpg-pub.asc\ngpg --import gpg-sc.asc\n</code></pre></li> <li>ref: https://blog.ridaeh.com/migrate-you-gpg-keys-from-one-machine-to-another-3341e980dfac</li> <li>You have to edit this key to add trust and validity<ul> <li>add validity using: <code>gpg --lsign-key &lt;key-fingerprint&gt;</code>, you can find the fingerprint using <code>gpg --list-keys --fingerprint</code>, the line below <code>pub rsa..</code> is the finger print.</li> <li>add trust using <code>gpg --edit-key &lt;key-id&gt;</code>, this will show your a <code>gpg&gt;</code> prompt. Type <code>trust</code>, select <code>5</code> that is <code>ultimate</code>, type <code>save</code>. It might say that <code>no update needed</code> but still the change has been made.</li> </ul> </li> <li>With this setup, you should be able to use the key for signing and github will show <code>verified</code></li> <li>Troubleshooting:</li> <li>Many times people face this error while trying to push to github.   <code>commits must have valid signatures</code>    this error is saying that you are trying push commits that are unsigned. Many times people confuse it with commits that are already there in github. To solve this you have to find the unsinged commit and sign it. To see all commits with its signing information run <code>git log --show-signature</code>.</li> <li>when you run <code>git log --show-signature</code>, you'll see that there are lot of red warnings which are like this.       <pre><code>gpg: Signature made Monday 25 October 2021 10:10:36 PM IST\ngpg:                using RSA key 4AEE18F83AFDEB23\ngpg: Can't check signature: No public key\nMerge: 2880250f3 f5ec22d37\nAuthor: YuriyZ &lt;yzabrovarniy@gmail.com&gt;\nDate:   Mon Oct 25 19:40:36 2021 +0300\n</code></pre>       it says <code>signature made</code> but no public key available. This is will be the case with commits signed by other members of your team. Because you don't have their public key stored with you. To do so, run <code>curl https://github.com/ossdhaval.gpg | gpg -import</code> to download key for user <code>ossdhaval</code>.</li> </ul> <p>Above steps were derived from links given here</p>"},{"location":"while-coding/github-notes/#issues-vs-prs","title":"issues vs PRs","text":"<p>##### Issues   - Used for raising bug or feature requests or tracking large development work   - Focus is around requesting, planning and tracking tasks and work</p> <p>##### PRs   - Used for tracking, discussing code changes    - Focus is on code and not planning or tracking work</p>"},{"location":"while-coding/github-notes/#linking-issues-and-prs","title":"Linking issues and PRs","text":""},{"location":"while-coding/github-notes/#linking-issues-with-issues","title":"linking issues with issues","text":"<ul> <li>do it with <code>issue mentions</code> or creating issues from <code>task lists</code></li> </ul>"},{"location":"while-coding/github-notes/#issues-with-prs","title":"issues with PRS","text":"<ul> <li>in issue : do it with <code>linked PR</code> section on the right</li> <li>in PR : you can link issue by using key words like <code>closes</code></li> <li>In both you can refer to an issue using number afte #</li> </ul>"},{"location":"while-coding/github-notes/#prs-with-prs","title":"PRs with PRs","text":""},{"location":"while-coding/github-notes/#creating-issue-and-pr-templates-that-apply-to-all-the-repos-in-org","title":"Creating Issue and PR templates that apply to all the repos in org","text":"<p>If you want certain files to be set as default for all the repos under your org, you can create a <code>.github</code> repo. Github uses files under this repo as default. Reference here</p>"},{"location":"while-coding/github-notes/#issue-template","title":"Issue template","text":"<ul> <li>creat a new repo <code>.github</code> in org github account</li> <li>To create a new template called <code>development-item</code>, create a new file as <code>.github/ISSUE_TEMPLATE/development-item.md</code>. This will create two new folders and one file. </li> <li>Put below header in the file and then start writting your contents for template.</li> </ul> <pre><code>---\nname: Contribution item\nabout: Developers should use this when contributing a feature or bug fix\ntitle: ''\nlabels: ''\nassignees: ''\n---\n</code></pre> <ul> <li>create another template in <code>ISSUE_TEMPLATE</code> directory in similar way. For example <code>feature-request.md</code></li> <li>You may have to enable templates from <code>settings</code> of <code>.github</code> repo as well. But not sure if this step is required. Ideally, after the first step, whenever you create a new issue, git hub should first show you a screen to select the issue template.</li> </ul>"},{"location":"while-coding/github-notes/#pr-template","title":"PR template","text":"<ul> <li>Create a PR template file named <code>pull_request_template.md</code> under <code>.github</code> repository root folder. </li> <li>Not tried: if you have more than one pull request templates, you should put it under <code>PULL_REQUEST_TEMPLATES</code> folder</li> </ul> <p>reference here.</p>"},{"location":"while-coding/github-notes/#code-owners","title":"code owners","text":"<ul> <li>you can define code owners by creating <code>CODEOWNERS</code> file in target branch.</li> <li>code owners are specific to branch and hence you can have different code owners per branch</li> <li>There are two things that code owners file can help with    1) when you raise a pull request, the code owners as defined in base branch will get review requests   2) when you have turned on branch protection for that branch from <code>settings</code> of repo, you can require approval from code owner of that branch for all PRs before merging.</li> </ul>"},{"location":"while-coding/github-notes/#repository-defaults","title":"Repository defaults","text":"<ul> <li>you can define following as default for every new repository in your org</li> <li>Labels</li> <li>default branch name</li> <li>this can be done from organization settings -&gt; repository defaults</li> </ul>"},{"location":"while-coding/github-notes/#security","title":"Security","text":"<ul> <li>have SECURITY.md in .github repository at org level, like this</li> <li>enable security advisory in github, like this</li> <li>Enable Dependabot scanning</li> <li>read process around security vulnerability reporting</li> <li>Best practices</li> </ul>"},{"location":"while-coding/github-notes/#labelling","title":"Labelling :","text":"<ul> <li>good artice</li> <li>good discussion about maintaining labels</li> <li>check this labeler</li> </ul>"},{"location":"while-coding/github-notes/#github-api","title":"github api:","text":"<p>you can get programatic access to github data using rest api. For example, to get all repositories in JanssenProject org:</p> <pre><code>curl  https://api.github.com/orgs/JanssenProject/repos\n</code></pre>"},{"location":"while-coding/github-notes/#using-github-rest-api","title":"using github rest api","text":"<p>Till version 3, github had rest apis but from version 4 they have moved to GraphQL. </p>"},{"location":"while-coding/github-notes/#using-version-4-graphql-api","title":"using version 4 (graphQL API)","text":"<ul> <li>Reference : https://docs.github.com/en/graphql</li> <li>public schema: https://docs.github.com/en/graphql/overview/public-schema</li> <li>how to use without explorer: https://docs.github.com/en/graphql/guides/forming-calls-with-graphql</li> <li>how to use : https://docs.github.com/en/graphql/guides/using-the-explorer</li> <li>explorer url: https://docs.github.com/en/graphql/overview/explorer</li> </ul>"},{"location":"while-coding/github-notes/#using-rest-api","title":"using rest API","text":"<p>all APIs are listed https://docs.github.com/en/rest/reference</p> <p>you can access public data without authenticating. For example:</p> <pre><code>curl https://api.github.com/users/ossdhaval\n</code></pre> <p>but to access some information plus to make changes to github data you have to authenticate.</p>"},{"location":"while-coding/github-notes/#authentication","title":"authentication","text":"<p>Your regular ssh key will not work. You have to get an OAuth key or generate a personal token.</p> <p>Then you can fire command using curl</p> <pre><code>curl -u ossdhaval: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 -H \"Accept: application/vnd.github.zzzax-preview+json\" https://api.github.com/repos/ossdhaval/gitcheck/branches/main/protection/required_signatures\n</code></pre>"},{"location":"while-coding/github-notes/#useful-tools","title":"Useful Tools","text":"<ul> <li>for analysing github data of your org and multiple repos: https://livablesoftware.com/tools-mine-analyze-github-git-software-data/</li> <li>Agile project management on github: https://www.zenhub.com/</li> </ul>"},{"location":"while-coding/github-notes/#github-repository-permission-levels","title":"github repository permission levels","text":"<p>https://docs.github.com/en/organizations/managing-access-to-your-organizations-repositories/repository-permission-levels-for-an-organization</p>"},{"location":"while-coding/github-notes/#github-change-log-audit-log","title":"github change log (audit log)","text":"<p>you can see all the changes that happend to all the entites in your organisation in github using audit logs. You need to be organization <code>owner</code> to be able to see this. https://docs.github.com/en/organizations/keeping-your-organization-secure/reviewing-the-audit-log-for-your-organization#accessing-the-audit-log</p>"},{"location":"while-coding/github-notes/#branch-protections","title":"branch protections","text":"<ul> <li><code>Require status checks to pass before merging</code></li> <li>at this time, when you turn on this protection, only statuses that were run in last week will be available for selection in the search box. so if there is an active status check but corresponding workflow did not run during last week then that status check will not be available for selection</li> <li>name of the status check is the name of the job within workflow or externally injected status</li> <li>only jobs from those workflow will be appear in search selection box which get triggered on [pull-request] event</li> </ul> <p>a good link for troubleshooting: </p> <p>https://docs.github.com/en/repositories/configuring-branches-and-merges-in-your-repository/defining-the-mergeability-of-pull-requests/troubleshooting-required-status-checks</p>"},{"location":"while-coding/github-notes/#useful-shortcuts","title":"useful shortcuts","text":"<ul> <li><code>e</code>   Open source code file in the Edit file tab</li> <li><code>ctrl+s</code> write commit message</li> <li><code>.</code> to open Quick IDE at github.dev</li> <li><code>ctrl+k</code> to open command palette</li> </ul> <p>full list</p>"},{"location":"while-coding/github-notes/#how-to-split-a-big-pr-into-smaller-prs","title":"How to split a big PR into smaller PRs","text":"<ul> <li>there is no direct way of doing this as Github only allows one PR per branch. To solve this problem, you have to move changes into separate branch and create a PR from there.</li> <li>So if you have a branch <code>big-branch</code> from master with three changes <code>c1</code>, <code>c2</code> and <code>c3</code> and a PR has been created on top of that then you have to follow two step process</li> <li>Create new branch from parent of <code>big-branch</code> and call it <code>b1</code>. We want to move change <code>c1</code> to <code>b1</code> </li> <li>and then remove <code>c1</code> from <code>big-branch</code></li> </ul>"},{"location":"while-coding/github-notes/#move-c1-to-b1","title":"move <code>c1</code> to <code>b1</code>","text":"<ul> <li>Create a branch <code>c1</code> from <code>main</code>. <code>main</code> is parent of <code>big-branch</code>.</li> <li>switch to <code>b1</code></li> <li>Now cherry pick commit/commits related to <code>c1</code></li> </ul>"},{"location":"while-coding/github-notes/#remove-c1-from-big-branch","title":"remove <code>c1</code> from <code>big-branch</code>","text":""},{"location":"while-coding/github-notes/#ways-to-interact-with-github","title":"Ways to interact with Github","text":"<ul> <li>UI</li> <li>REST API (V2)</li> <li>GraphQL API (V3)</li> <li>Github CLI</li> <li>Github libraries</li> </ul>"},{"location":"while-coding/github-notes/#efficient-and-power-user-tips","title":"Efficient and power user tips","text":"<ul> <li>Give comments quickly with saved responses</li> </ul>"},{"location":"while-coding/github-notes/#questions-or-missing-features","title":"questions or missing features:","text":"<ul> <li>how to know which all PRs are containing changes for a particular file? At times what happens is that same file is being changed in multiple PRs that leads to merge conflicts later on.</li> <li>sometimes it happens that after looking at file content you want to know who changed this piece of text? there should be a way to find commit and PR that changed that part in file</li> <li>We need codeowner groups. So that review can be requested from a group and if anyone from that group gives approval, that should be sufficient (configurable).</li> </ul>"},{"location":"while-coding/github-notes/#search-for-issues-or-pr-excluding-certain-words","title":"search for issues or PR excluding certain words","text":"<ul> <li><code>is:pr is:open NOT chore NOT Snyk</code> will give you all open PRs which doesn't have word <code>chore</code> or <code>Snyk</code></li> </ul>"},{"location":"while-coding/github-notes/#emoji-list","title":"emoji list","text":"<p>https://github.com/ikatyang/emoji-cheat-sheet/blob/master/README.md#emoji-cheat-sheet just type <code>:</code> followed by a search character in github issues, PRs, comments etc and any .md file and github will show a list of emojis</p>"},{"location":"while-coding/github-notes/#list-of-shields-that-you-can-use-in-your-readme-or-other-files-on-github","title":"list of shields that you can use in your readme or other files on github","text":"<p>https://shields.io/</p>"},{"location":"while-coding/github-notes/#github-recommendations-around-file-sizes-repo-sizes","title":"Github recommendations around file sizes, repo sizes","text":"<p>https://docs.github.com/en/repositories/working-with-files/managing-large-files/about-large-files-on-github</p> <p>I couldn't find any guidelines online so I took a screenshot and saved it as png to check the size. It came out to be 400kb. So I recommended 1MB max size and png as format.</p>"},{"location":"while-coding/github-notes/#how-to-create-an-internal-pull-request-from-a-pr-from-a-fork","title":"how to create an internal pull request from a PR from a fork","text":"<ul> <li>This was required when we had a limitation from sonarcloud integration where sonarcloud analysis will not trigger on a PR coming from a fork</li> <li>Basic flow is</li> <li><code>xyzuser</code> has forked your repo <code>forkthis</code></li> <li><code>xyzuser</code> has pushed code into <code>main</code> branch of his fork.</li> <li><code>xyzuser</code> has created PR on <code>main</code> branch of your <code>forkthis</code></li> <li>once you have received a PR from a fork, you create another branch from <code>main</code> of <code>forkthis</code> <pre><code>git switch main\ngit branch review-external-pr\ngit switch review-external-pr\n</code></pre></li> <li>then you pull the changes from feature branch of the PR (i.e xyzuser/forkedrepo and my-fix branch)     <pre><code>git pull git@github.com:xyzuser/forkedrepo.git my-fix\n</code></pre></li> <li>Now your branch has all the changes from <code>xyzuser</code> and you can create another PR which will be an internal PR based on a branch instead of a fork</li> </ul> <p>reference: https://gist.github.com/Chaser324/ce0505fbed06b947d962#manually-merging-a-pull-request</p>"},{"location":"while-coding/github-notes/#pr-merge-commits","title":"PR merge commits","text":"<p>When you raise a PR, Github create a new commit behind the scene to see how merged code will look like. So, you can checkout PR in two versions: - unmerged version of code, represented by head: <code>refs/pull/&lt;number&gt;/head</code> - Code merged with target branch, represented by merge: <code>refs/pull/&lt;number&gt;/merge</code> when you are looking at diff in github for a PR, you are looking at diff of how it'll look after merging your branch with base branch.</p> <p>Plus, github action <code>checkout</code> action by default checks out merge commit and runs actions on that. So, when actions run, they are running on code from your branch plus code from base branch. See the GH action log below. Second last line is sayting that it has checked out a commit which is merge of two commits, one from current branch and another from base branch:</p> <pre><code>Run actions/checkout@v3\nSyncing repository: JanssenProject/jans\nGetting Git version info\nDeleting the contents of '/home/runner/work/jans/jans'\nInitializing the repository\nDisabling automatic garbage collection\nSetting up auth\nFetching the repository\nDetermining the checkout info\nChecking out the ref\n  /usr/bin/git checkout --progress --force refs/remotes/pull/1123/merge\n  Note: switching to 'refs/remotes/pull/1123/merge'.\n\n  You are in 'detached HEAD' state. You can look around, make experimental\n  changes and commit them, and you can discard any commits you make in this\n  state without impacting any branches by switching back to a branch.\n\n  If you want to create a new branch to retain commits you create, you may\n  do so (now or later) by using -c with the switch command. Example:\n\n    git switch -c &lt;new-branch-name&gt;\n\n  Or undo this operation with:\n\n    git switch -\n\n  Turn off this advice by setting config variable advice.detachedHead to false\n\n  HEAD is now at bf42446c2 Merge 4ed88dd504315988fc8114535068d7db8e57043d into 41b6fa185505d3a6a1b5423a6f6df38337a14168\n/usr/bin/git log -1 --format='%H'\n'bf42446c2ea150faaabcb4037eb1e625a4b4016d'\n</code></pre>"},{"location":"while-coding/github-notes/#difference-between-release-vs-tag-in-github","title":"Difference between release vs tag in github","text":"<p>Ref : https://stackoverflow.com/a/18512221/2331225</p> <p>In short, tag is a Git concept. It points to a commit and can be enriched by more content like creator etc While <code>release</code> is a GH concept built on top of tag. While creating release from a tag, you can add release notes, artifacts etc.</p> <p>About backporting changes to old tag/release: ref: https://stackoverflow.com/a/21466838/2331225</p> <pre><code>You can't put a new commit into an existing tag without breaking an important Git guideline: Never(*) modify commits that you have published.\n\nTags in Git aren't meant to be mutable. Once you push a tag out there, leave it alone.\n\nYou can, however, add some changes on top of v1.1 and release something like v1.1.1 or v1.2\n</code></pre>"},{"location":"while-coding/github-notes/#github-reference-material","title":"GitHub reference material:","text":"<ul> <li>Mohammad abu's github cheatsheet: https://medium.com/@moabu/the-github-cheat-sheet-df4b3e3b42a8</li> </ul>"},{"location":"while-coding/github-notes/#notifications","title":"Notifications","text":"<ul> <li>Inbox : the number shown besides <code>inbox</code> on left menu is just unread messages (not all the messages). So, when you mark a notification in <code>octobox</code> as <code>read</code> by pressing <code>d</code> (and click synch button), it reduces that number on github as well, but remember that the notification is still in the <code>inbox</code>. You can see all the messages in GH inbox by clicking <code>all</code> button on GH.</li> <li>There is no way to mark something <code>done</code> using octobox directly.</li> <li>Mute on octobox also mutes a notification on GH</li> </ul>"},{"location":"while-coding/github-notes/#guidelines-for-good-pr-and-communication","title":"Guidelines for Good PR and communication","text":"<p>https://github.blog/2015-01-21-how-to-write-the-perfect-pull-request/</p> <p>There two points that are good:</p> <ul> <li>Be aware of negative bias with online communication. (If content is neutral, we assume the tone is negative.) Can you use positive language as opposed to neutral?</li> <li>Use emoji to clarify tone. Compare \u201csparkles sparkles Looks good +1 sparkles sparkles\u201d to \u201cLooks good.\u201d</li> </ul> <p>Another good article: https://github.com/alphagov/styleguides/blob/master/pull-requests.md</p>"},{"location":"while-coding/github-notes/#issue-resolved-comments-are-useful","title":"issue resolved comments are useful","text":"<p>See the comment at the end of this issue. It is really useful when people know when a fix was available for that particular issue.</p> <p></p>"},{"location":"while-coding/github-notes/#pull-request-reviews-approving-reviews-vs-non-approving-reviews","title":"Pull request reviews: approving reviews Vs non-approving reviews","text":"<p>when someone reviews and approves a PR, based on who is providing the approval, the review can be considered <code>approving</code>. See in this PR image below, there are three reviewers. PR needs two approving reviewers to be able to merge. Though two out of three reviewers have given the approval, the PR was not ready to merge as one of the reviewer who gave the approval was not an <code>approving reviewer</code>.</p> <p></p> <p>In the image above, you see that one of the review approval is shown as green tick while the other one is grey. Green one is from an approving reviewer, which the other one is from a normal user.</p> <p>I still have to find out what makes a reviewer an <code>approving</code> reviewer, but CODEOWNERs attached to that PR are surely the <code>approving</code> reviewers.</p>"},{"location":"while-coding/github-notes/#github-graphql-queries","title":"Github graphql queries","text":"<p>Use these queries at: https://docs.github.com/en/graphql/overview/explorer</p>"},{"location":"while-coding/github-notes/#get-issues-and-prs-raised-by-you-between-two-dates","title":"get issues and PRs raised by you between two dates","text":"<pre><code>{\n  viewer {\n    login\n    contributionsCollection(from:\"2024-03-31T00:00:00Z\", to:\"2024-04-05T00:00:00Z\") {\n      issueContributions(first: 100) {\n        edges {\n          node {\n            occurredAt\n            issue {\n              id\n              title\n            }\n\n          }\n        }\n      }\n      pullRequestContributions(first:100){\n                 edges{\n                  node{\n                    occurredAt\n                    pullRequest{\n                      title\n                  }\n                }\n             }\n          }\n\n        }\n      }\n    }\n</code></pre>"},{"location":"while-coding/github-notes/#configuring-ssh-key-for-github","title":"configuring ssh key for GitHub","text":"<ul> <li>create a key   <pre><code>ssh-keygen -f ssh-key-github-ed25519-ossdhaval -t ed25519 -C \"343411+ossdhaval@users.noreply.github.com\"\n</code></pre></li> <li>Open the public key file   <pre><code>cat ~/.ssh/ssh-key-github-ed25519-ossdhaval.pub\n</code></pre>   copy the content of this</li> <li>Add public key to GitHub</li> <li>go to your github account on web &gt; settings &gt; ssh and gpg keys &gt; add ssh key</li> <li>paste the public key content copied above</li> <li>On your machine, start the ssh-agent   <pre><code>eval `ssh-agent`\n</code></pre>   This will show a PID.</li> <li>add your private key to ssh agent   <pre><code>ssh-add ~/.ssh/ssh-key-github-ed25519-ossdhaval\n</code></pre></li> <li>Then test authentication with github   <pre><code>ssh -T git@github.com\n</code></pre>   This should show a message like below if the authn is successful.   <pre><code>Hi ossdhaval! You've successfully authenticated, but GitHub does not provide shell access.\n</code></pre></li> </ul>"},{"location":"while-coding/github-notes/#resolve-merge-conflicts-reported-in-a-github-pr","title":"Resolve merge conflicts reported in a GitHub PR","text":"<p>Sometimes GH PRs can't be merged due to merge conflicts between your branch and the base branch. And GitHub can't even merge it automatically and asks you to merge it manually. </p> <p>Follow the steps below:</p> <ul> <li>First update your base branch, like <code>main</code> <pre><code>git pull origin main\n</code></pre></li> <li>checkout the PR branch or PR   <pre><code># Using github cli\ngh checkout pr &lt;pr-number&gt;\n</code></pre>   Above will switch your workspace to PR branch</li> <li>Now checkout the files in conflict from the base branch.   <pre><code>git checkout main -- docs/janssen-server/developer/scripts/interception-scripts-debug.md docs/janssen-server/developer/scripts/link.md docs/janssen-server/developer/scripts/persistence.md\n</code></pre>   if there are merge conflicts, resolve those and make a new commit to the PR branch. Note that sometimes Git will be able to auto-merge the changes even though GitHub reported that the conflicts can't be merged automatically. This is due to GH is not trying to merge like local git. </li> <li>Push the commit to the PR branch</li> </ul>"},{"location":"while-coding/github-notes/#sbom","title":"SBOM","text":"<p>You can get SBOM of any project from <code>insights</code> -&gt; <code>dependency graph</code> -&gt; <code>export SBOM</code></p>"},{"location":"while-coding/github-notes/#difference-between-a-github-app-vs-an-oauth-app","title":"difference between a GitHub app Vs an OAuth app","text":"<p>OAuth app means a third party app that uses <code>login using GitHub</code> button, and asks for github access permissions in the next steps. Like octostats. A github app is more integrated into github. Like octobox.</p> <p>very insightful Reference: https://docs.github.com/en/apps/oauth-apps/building-oauth-apps/differences-between-github-apps-and-oauth-apps</p>"},{"location":"while-coding/github-notes/#what-counts-as-a-contribution-on-the-profile-graph","title":"What counts as a contribution on the profile graph","text":"<p>https://docs.github.com/en/account-and-profile/reference/profile-contributions-reference</p>"},{"location":"while-coding/github-notes/#sample-complex-github-query-with-multiple-criteria-and-logical-operator","title":"sample complex github query with multiple criteria and logical operator","text":"<p><code>is:issue state:open AND (kind-feature OR author:nxyz OR label:enhancement)</code></p>"},{"location":"while-coding/gitter-notes/","title":"Gitter notes","text":""},{"location":"while-coding/gitter-notes/#how-to-get-link-to-a-chat-message","title":"how to get link to a chat message:","text":"<p>Just click on the date-time of the chat message. You'll see the link in address bar changing. use that link.</p>"},{"location":"while-coding/install-docker-on-suse-enterprise/","title":"install docker on suse enterprise linux","text":"<p>reference: https://documentation.suse.com/sles/15-SP1/html/SLES-all/cha-docker-installation.html</p> <p>Note: SUSE enterprise linux doesn't provide free version but only 60 day evaluation. When you install SLES using iso, and skip registration, you can't install  other software like docker etc without registration. For registration, you need registration code. </p> <p>How to get registration code: - you need to have account on suse customer care (scc.suse.com) - once you have logged into scc.suse.com, go to https://www.suse.com/download/sles/ - at the bottom of the page you'll see a button <code>get your 60 day trial code</code> - click on that and on the next page you can create your registration code for evaluation copy - Use this code to register your installation - On your vm follow these steps: https://documentation.suse.com/sles/15-SP1/html/SLES-all/cha-register-sle.html#sec-register-sle-system</p>"},{"location":"while-coding/intellijIdea_notes/","title":"intellijIdea notes","text":"<p>Good beginner tutorials :</p> <p>https://www.youtube.com/watch?v=S764o0mAXhg&amp;list=PLs5n5nYB22fI83_UAFbPLC-Mg9Uc6jeU4&amp;index=3&amp;t=0s</p> <p>https://www.youtube.com/watch?v=1bCgzjatcr4&amp;list=PLs5n5nYB22fI83_UAFbPLC-Mg9Uc6jeU4&amp;index=3</p> <p>https://www.youtube.com/watch?v=uUzRMOCBorg&amp;list=PLs5n5nYB22fI83_UAFbPLC-Mg9Uc6jeU4&amp;index=4</p>"},{"location":"while-coding/intellijIdea_notes/#eclipse-to-intellij","title":"eclipse to intellij","text":"<p>workspace -&gt; project</p> <p>project -&gt; module</p> <p>facet -&gt; facet</p> <p>library -&gt; library</p> <p>jre -&gt; sdk</p> <p>classpath variable -&gt; path variable</p>"},{"location":"while-coding/intellijIdea_notes/#intellij-shortcuts","title":"Intellij shortcuts:","text":"<p>( to see all shortcuts go to settings (ctrl+alt+s) and select 'keymap')</p> <p>alt+7 -&gt; structure(or outline in eclispse)</p> <p>ctrl+f -&gt; search in file</p> <p>ctrl+r -&gt; replace in file</p> <p>ctrl+shift+f -&gt; find global ( equivalent to ctrl+H in eclipse )</p> <p>ctrl+shift+r -&gt; replace global</p> <p>ctrl+f3 -&gt; go to next occurance of selected word in a file (equivalent to ctrl+k in eclipse)</p> <p>all these and more options under edit-&gt;find</p> <p>shift+shift -&gt; search for anything, including Idea menu options and settings etc</p> <p>ctrl+n -&gt; search for classes ( part of dialogue with above shortcut )</p> <p>alt+f12 -&gt; open terminal</p> <p>all these options under view-&gt;tool windowns ( like 'show view' in eclipse )</p> <p>press 'escape' from anywhere to bring control back to editor window</p> <p>Shift+Escape moves the focus to the editor and hides the current or the last active tool window.</p> <p>F12 moves the focus from the editor to the last focused tool window.</p> <p>ctrl+shift+f12 : minimize or maximize editor window</p> <p>ctrl+alt+s : opens settings window</p> <p>ctrl+alt+y : reload all from disk</p> <p>ctrl+H : open class hierarchy</p> <p>ctrl+shift+H : highlight a method name and this will show which class defines it and which ones implement or override it</p> <p>ctrl+alt+H : Method call tree. Highlight method name and this will show other methods which are calling this method (top-left first icon on the tool window), and methods being called by this method are recursively (second icon on tool window)</p> <p>ctrl+click: on a method or variable will take you to declaration of it. To navigate backwards use : alt+shift+left key. To navigate forward, use alt+shift+right.</p> <p>ctrl+tab: opens <code>switcher</code> and then you can release the tab and press the shortcut key as shown on the switcher window to quickly open corresponding tool window </p> <p>alt+home : open navigation bar </p> <p>ctrl + e : recent files</p> <p>ctrl + shift + e + e : recently editted locations</p> <p>alt+0 : open commit dialogue box. This can be used to add <code>Co-authored-by:</code> like message trailors.</p> <p>Custom settings:</p> <p>go to keymap and remove <code>shift+esc</code> from <code>hide active tool window</code>. This is because same short cut is used for focusing back on editor. After removing this, you'll be able to switch to editor without hiding the current tool window.</p> <p>in keymap, under <code>terminal</code>, remove <code>esc</code> from <code>switch focus to editor</code>. This is because many times to break terminal commands we use <code>esc</code> instead of <code>q</code>. This accidental press of <code>esc</code> moves focus to editor and then whatever you type gets written to editor file by mistake. To avoid this, change this setting.</p> <p>In order to integrate with Github</p> <ul> <li>go to vcs menu and use 'get from version control' </li> </ul> <p>in order to start getting content assist</p> <ul> <li> <p>setup sdk</p> </li> <li> <p>make directory as source root or test root</p> </li> </ul> <p>in order to build project</p> <ul> <li>setup output path in project structure screen</li> </ul> <p>ERROR fixing :</p> <p>'Java 14 not supported' error on 'build output' when trying to build a project.</p> <ul> <li>Root cause was in 'project structure' dialogue where it was mentioned that 'Project language level' was java 14. And the SDK I had was java 11. Error solved once i selected 'SDK default' in the language level.</li> </ul> <p>To see which SDK(JDK) you are using :</p> <p>file-&gt;project structure-&gt;project settings-&gt;project</p> <p>to remove a module from project :</p> <p>file &gt; project structure &gt; select the module and then click '-' at the top of the panel</p> <p>ctrl+f12 : open list of members of current class that you can search ( like ctrl+o in eclipse )</p> <p>ctrl+i : to see what are the interface methods you need to implement in implementing class</p> <p>formatting json :</p> <p>if you have a JSON text  and you want to view it in proper format, you can do it in intellij :</p> <p>create a scrap file with .json extention.</p> <p>paste your Json in it</p> <p>press ctrl+alt+L</p> <p>Setting for intellij will ask which project to open at the starup :</p> <p>shift+shift : search for 'startup'</p> <p>you'll see option 'reopen project at startup', go there and setup as you wish</p> <p>Intellij debug keys :</p> <p>f7 : step into</p> <p>f8 : step over</p> <p>f9 : resume programe</p> <p>make a simple project or module a java module :</p> <p>Right click on project/module name &gt; \"add framework support\" &gt; check 'maven'</p> <p>this will enable all the java related things in that project, including context help and compilation </p> <p>errors etc. </p> <p>Searching using ctrl+shift+f</p> <p>How to search a string in files accept files with <code>Test</code> in its name: enable file mask -&gt; put pattern like <code>!*Test.java</code> now give the search string. How to search with in files of a directory only click on <code>directory</code> and then give path of your choice. Use <code>scopes</code> for more granular control use <code>module</code> if you want to see occurrence of a string only within one module of project Now once you have the results, to browse the results it is easier in find window, so press <code>ctrl+enter</code> or click <code>open in find window</code> In the find window, to easy browsing, make sure the group-by settings are correct click on icon on left bar in find window ensure that only <code>module</code>, <code>flatten module</code> and <code>package</code> are enabled.</p> <p>Structure and properties:</p> <p>when you are viewing structure of a class (alt+7), it will show all the getters and setters also. This makes spotting real methods difficult in the structure. To avoid this, always keep <code>show properties</code> on (purple botton on top bar of the structure tool). This will club all the setters and getters with its relevant field and call it properties. Now you have clear view of all the fields and real methods of the class in the structure tool</p>"},{"location":"while-coding/intellijIdea_notes/#auto-generate-uml-sequence-diagram-from-code","title":"auto generate UML sequence diagram from code","text":"<ul> <li>install <code>sequenceDiagram</code> plug in for intellij. ( install may fail couple of times )</li> </ul>"},{"location":"while-coding/intellijIdea_notes/#how-to-get-problem-analysis-on-entire-project-and-not-just-one-file","title":"how to get problem analysis on entire project and not just one file","text":"<p>This was required when I wanted to find out how many problems are there in all the .md files across the project. By default, the <code>problem</code> view only shows problems for currently selected file. </p> <p>To see the problems in all files, you have to click on <code>project errors</code> tab in <code>problems</code> view. Then click on <code>inspect</code> the project (if you are not able to build it). It'll list all the issues in entire project.</p>"},{"location":"while-coding/intellijIdea_notes/#opening-a-file-while-working-in-intellij-terminal","title":"opening a file while working in intellij terminal","text":"<p>There is no direct way, but you can select the file name (with path if possible) and then click ctrl+shift+N, this will automatically search for the file in the text selection along with the path.</p>"},{"location":"while-coding/intellijIdea_notes/#troubleshooting","title":"Troubleshooting:","text":"<p>scenario: I was working on one branch of project. Then I switched the branch. suddenly, Idea stopped giving context help, or stopped showing hyperlink in name of classes in code where you can click on it and go to that class. Even you can't find class using ctrl+n.</p> <p>solution:</p> <p>I noticed that pom file for all the child projects were shown as ignored ( greyed out and strikethrough ). On searching I found that they were ignored under ( settings (ctrt+alt+s) &gt; build,executing,deployment &gt; maven &gt; ignored files). There is a list of files with checkbox which are ignored. I unchecked all and everything started working.</p>"},{"location":"while-coding/intellijIdea_notes/#setting-up-java-maven-based-projects-in-intellij","title":"Setting up java (maven based) projects in Intellij","text":"<p>When you setup a new project from version control, you project may start showing lots of errors. These are some of the steps that you should take to make the project error free.</p> <ul> <li>Make it a maven project by <code>right click on pom file -&gt; add as maven project</code></li> <li>Mark <code>src/main/java</code> as source root by <code>right click on java folder -&gt; mark directory as -&gt; mark as source root</code></li> <li>Make sure you have the correct JDK attached to the project</li> <li>if the project is using lombok, make sure you have <code>lombok</code> plugin downloaded. <code>main menu -&gt; settings -&gt; plugins -&gt; marketplace</code></li> <li>if you are going to use <code>mvnw</code> for building the project, and it is showing issues about classnotfound then you have to download the requied jar files. To do so, just run <code>mvn wrapper:wrapper</code>.</li> </ul>"},{"location":"while-coding/jetty-notes/","title":"Jetty notes","text":""},{"location":"while-coding/jetty-notes/#imp-commands","title":"Imp commands","text":"<p><code>java -jar $JETTY_HOME/start.jar --list-config</code> - lists current configuration of the server</p> <ul> <li>location for jetty logs : <code>vim $JETTY_BASE/logs/</code></li> </ul>"},{"location":"while-coding/jetty-notes/#enable-jetty-logging","title":"Enable jetty logging:","text":"<pre><code>&gt; cd $JETTY_BASE\n&gt; java -jar $JETTY_HOME/start.jar --add-to-start=logging-jetty\n</code></pre> <p>above will create </p> <pre><code>$JETTY_BASE/resources/jetty-logging.properties\n</code></pre> <p>You can edit this file to enable logging levels for different packages. Commented examples are given in default generated file itself. For example, if you want to enable debug level for Jetty itself, then uncomment line below and set logging level to<code>DEBUG</code>.</p> <pre><code>org.eclipse.jetty.LEVEL=DEBUG\n</code></pre> <p>Log file will be created at <code>$JETTY_BASE/logs/</code></p>"},{"location":"while-coding/jetty-notes/#how-jetty-configuration-properties-work","title":"How Jetty configuration properties work","text":"<p>Every module has xml and corresponding one or more ini files. Mapping is given at home/modules/http.mod base/start.d/http.ini -&gt; home/etc/jetty-http.xml</p> <p>users will change values in ini files to configure module properties</p> <p>if you look at xmls, they are like bean configurations for various jetty classes. Like spring beans. Jetty actually uses an IoC container to inject these beans created using these xmls.</p> <p>You can also give property values in jetty start.jar command line argument also if you don't want to modify ini file.</p> <p>like</p> <pre><code>java -jar start.jar jetty.http.port=8080\n</code></pre>"},{"location":"while-coding/jetty-notes/#jetty-default-configuration-files-can-be-downloaded-from","title":"Jetty default configuration files can be downloaded from","text":"<ul> <li>jetty.xml: https://github.com/eclipse/jetty.project/blob/jetty-9.4.x/jetty-server/src/main/config/etc/jetty.xml</li> <li>jetty-http.xml: https://github.com/eclipse/jetty.project/blob/jetty-9.4.x/jetty-server/src/main/config/etc/jetty-http.xml</li> <li>jetty-ssl.xml: https://github.com/eclipse/jetty.project/blob/jetty-9.4.x/jetty-server/src/main/config/etc/jetty-ssl.xml </li> <li>jetty-ssl-context.xml: https://github.com/eclipse/jetty.project/blob/jetty-9.4.x/jetty-server/src/main/config/etc/jetty-ssl-context.xml</li> <li>jetty-https.xml: https://github.com/eclipse/jetty.project/blob/jetty-9.4.x/jetty-server/src/main/config/etc/jetty-https.xml</li> </ul>"},{"location":"while-coding/jetty-notes/#jetty-ssl-self-signed-certificate-can-be-downloaded-from","title":"Jetty SSL self signed certificate can be downloaded from","text":"<ul> <li>https://github.com/eclipse/jetty.project/blob/jetty-9.4.x/jetty-server/src/main/config/modules/ssl/keystore</li> <li>default password is <code>storepwd</code></li> </ul>"},{"location":"while-coding/keycloak-notes/","title":"keycloak","text":""},{"location":"while-coding/keycloak-notes/#install","title":"install","text":"<p>Ref: https://www.keycloak.org/getting-started/getting-started-docker</p> <p>run the command below to install using docker <pre><code>docker run -p 8080:8080 -e KEYCLOAK_ADMIN=admin -e KEYCLOAK_ADMIN_PASSWORD=admin quay.io/keycloak/keycloak:23.0.6 start-dev\n</code></pre></p> <p>then access <pre><code>http://localhost:8080/admin\n</code></pre></p> <p>User: admin, password: admin</p>"},{"location":"while-coding/keycloak-notes/#local-start","title":"Local start:","text":"<pre><code>cd ./IdeaProjects/others/oidc-with-quarkus/\nsudo sh keycloak-up.sh\n</code></pre> <p>This starts a docker instance of Keycloak. You can check that using</p> <pre><code>docker ps\n</code></pre> <p>You can access keycloak at</p> <pre><code>http://localhost:8180/auth/\n</code></pre> <p>signin to the admin console using user <code>admin</code> and password <code>admin</code>.</p>"},{"location":"while-coding/kubernetes-notes/","title":"Kubernetes Notes","text":""},{"location":"while-coding/kubernetes-notes/#then-and-now","title":"then and now","text":"<p>earlier :</p> <p>we used to have applications deployed on clusters of web-servers ( like websphere, tomcat etc ) and there was a load-balancer which was managing load across all those. In this, what was missing is when one of the server nodes in the cluster goes down. You needed to manually intervene and bring up a new node. All the network configurations were manual too. The load balancer only managed load with available server nodes in the cluster. It could not scale by creating new servers as needed and destroying those which were not needed. </p> <p>With kubernetes :</p> <p>It manages the containers ( start, stop, check health etc ) It eliminates single point of failure ( like load balancer ealier ) Scale containers by create more containers if needed Update the containers without bringing down the application it also manages networking and interconnections among containers plus, facilities like service discovery, configuration management etc</p>"},{"location":"while-coding/kubernetes-notes/#key-things-in-kubernetes-setup","title":"Key things in kubernetes setup :","text":""},{"location":"while-coding/kubernetes-notes/#why-should-a-developer-learn-kubernetes","title":"why should a developer learn kubernetes :","text":"<p>Emulate production environment locally to : ensure that application scales properly ensure that secrets and configs are working properly Performance testing along with scaling How to install and run kubernetes on local machine :</p> <p>there are few options :</p> <ul> <li>Docker desktop : most preferred and easiest. But has limitation where you can have only one master and one node. Can't scale out. But it is not available for Linux. </li> <li>minikube : best bet for Linux development machines and created by Kubernetes project itself. </li> <li>Kind</li> <li>kubeadm : this is fully fledged kubernetes</li> </ul> <p>For production ready light-weight kubernetes, look at k3s(by Rancher), microk8s(by Ubuntu/canonical).  Here, light-weight means they have lesser memory footprint. See this for comparison. </p> <p>We will go with minikube here.</p>"},{"location":"while-coding/kubernetes-notes/#install-minikube","title":"install minikube :","text":"<p>reference : https://minikube.sigs.k8s.io/docs/start/</p> <pre><code>curl -LO https://storage.googleapis.com/minikube/releases/latest/minikube_latest_amd64.deb\n\nsudo dpkg -i minikube_latest_amd64.deb\n\nminikube start\n</code></pre> <p>Now install kubectl :</p> <pre><code>sudo snap install kubectl --classic\n</code></pre> <p>Starting kubernetes dashboard :</p> <pre><code>minikube dashboard\n</code></pre>"},{"location":"while-coding/kubernetes-notes/#kubernetes-pods","title":"Kubernetes PODs :","text":"<ul> <li>Pod is the smallest and most basic unit for Kubernetes</li> <li>Pod provides environment for container to run</li> <li>Pod can have multiple containers, but mostly generally, it is used to host one container</li> <li>Pod has its own IP address, memory, volumes.</li> <li>Pod, once destroyed, can never be resurrected.</li> <li>One node can have multiple pods. One pod can have multiple containers. Each pod has unique IP address. So if the app is running on different pods, it can listen on the same Port. But if an app is running on containers on the same POD then each instance need to use a different port.</li> </ul>"},{"location":"while-coding/kubernetes-notes/#creating-a-pod","title":"Creating a pod :","text":"<p>Create a pod</p> <pre><code>kubectl run my-first-pod --image=nginx:alpine\n</code></pre> <p>check if the pod has been created </p> <pre><code>kubectl get all\n</code></pre> <p>Accessing service on that Pod :</p> <pre><code>kubectl port-forward my-first-pod 8080:80\n</code></pre> <p>Keep the process running</p> <p>now go to browser and hit 'localhost:8080'. You should see welcome page of nginx</p> <p>here in command, 8080 is external port, request to which is being forwarded to internal port 80 of cluster IP of pod where the container is listening</p> <p>deleting the pod</p> <pre><code>kubectl delete pod my-first-pod\n</code></pre>"},{"location":"while-coding/kubernetes-notes/#creating-pod-using-yaml","title":"Creating POD using YAML :","text":"<p>Simple yaml :</p> <p>use create, apply commands when creating pod using yaml. If you are not using yaml then you can directly use 'kubectl run' as mentioned above.</p> <pre><code>apiVersion: v1\nkind: Pod\nmetadata:\n  name: my-nginx\n  labels:\n    app: nginx\n    rel: stable\nspec:\n  containers:\n  -    name: my-nginx\n       image: nginx:alpine\n       ports:\n       - containerPort: 80\n</code></pre> <p>To create pod:</p> <pre><code>kubectl create -f ~/code/docker-kubernetes/dk/src/nginx.pod.yaml --save-config\n</code></pre> <p>To get list:</p> <pre><code>kubectl get all\n</code></pre> <p>To get more details about pod :</p> <pre><code>kubectl describe pod my-nginx\n</code></pre> <p>To get access to shell of the container running inside the pod :</p> <pre><code>kubectl exec my-nginx -it sh\n(you can find your html files hosted with nginx under '/usr/share/nginx/html/' )\n</code></pre> <p>To delete the pod :</p> <pre><code>kubectl delete -f ~/code/docker-kubernetes/dk/src/nginx.pod.yaml\n</code></pre> <p>Configuring liveness and readiness probs : </p> <pre><code>apiVersion: v1\nkind: Pod\nmetadata:\n  name: my-nginx\n  labels:\n    app: nginx\n    rel: stable\nspec:\n  containers:\n  -    name: my-nginx\n       image: nginx:alpine\n       ports:\n       - containerPort: 80\n       livenessProbe:\n         httpGet:\n           path: /index.html\n           port: 80\n         initialDelaySeconds: 15\n         timeoutSeconds: 2 #default: 1\n         periodSeconds: 5 #default: 10\n         failureThreshold: 1 #default: 3\n       readinessProbe:\n         httpGet:\n           path: /index.html\n           port: 80\n         initialDelaySeconds: 3\n         periodSeconds: 5 #default: 10\n         failureThreshold: 1 #default: 3\n</code></pre>"},{"location":"while-coding/kubernetes-notes/#replicasets-and-deployment","title":"ReplicaSets and Deployment :","text":""},{"location":"while-coding/kubernetes-notes/#replicaset","title":"ReplicaSet :","text":"<p>In Kubernetes, replicaset came into existance first and then deployments came in as wrapper of replicasets to further ease the configuration. </p> <p>self-healing is provided by replicasets.  replicaset ensures that we have intended number of pods running at any time. takes care of scaling when required</p> <p>You don't need to create pods directly if you use replicaset.</p>"},{"location":"while-coding/kubernetes-notes/#deployment","title":"Deployment :","text":"<p>deployment is a wrapper around replicaset. Plus, deployment also adds support for zero-downtime deployments, roll-back of deployments ( pod template labels are useful here).</p> <p>yaml of replicaset and deployment are almost same.</p> <pre><code>apiVersion: apps/v1 # this is mandatory attribute\nkind: Deployment\nmetadata:\n  name: my-frontend\n  labels:\n    app: frontend\nspec:\n  replicas: 2\n  selector:\n    matchLabels:\n      app: frontend\n  template: # template can be stored in a separate file also\n    metadata:\n      labels:\n        app: frontend\n    spec:\n      containers:\n        - name: my-ngnix\n          image: nginx:alpine\n          ports:\n            - containerPort: 80\n          resources:\n            limits:\n              memory: \"128Mi\" #128 MB\n              cpu: \"200m\" #200 millicpu (.2 cpu or 20% of the cpu)\n</code></pre> <p>Here, deployment will look for templates that has matching labels as mentioned in the selector section </p> <p>to start the deployment :</p> <pre><code>kubectl create -f ~/code/docker-kubernetes/dk/src/frontend.deployment.yaml --save-config\n</code></pre> <p>To get info about deployment :</p> <pre><code>kubectl describe deployment my-frontend\n</code></pre> <p>To see all the deployments along with their labels :</p> <pre><code>kubectl get deployment --show-labels\n</code></pre> <p>To see deployment with a certain label :</p> <pre><code>kubectl get deployment -l app=frontend\n</code></pre> <p>To scale a running deployment : <pre><code>kubectl scale -f ~/code/docker-kubernetes/dk/src/frontend.deployment.yaml --replicas=4\n</code></pre></p> <p>or if you want to do via yaml then put the 'replica' entry in yaml as given above and then run apply as below: <pre><code>kubectl apply -f ~/code/docker-kubernetes/dk/src/frontend.deployment.yaml\n</code></pre></p> <p>From here on, I have not listed everything in detail. Just commands and what they do. Need to go back and take more detailed notes from video below and onwards :</p> <p>https://app.pluralsight.com/course-player?clipId=32f4f873-30d1-4a70-9cf0-510a899d2223</p>"},{"location":"while-coding/kubernetes-notes/#zero-downtime-deployments","title":"zero downtime deployments :","text":"<p>here there are 4 versions of the same app which we are trying to deploy one after other :</p> <p>yaml for all four are standard deployment yaml.</p> <p>deployments are done with standard create or apply commands and deployment will take care of rolling deployments(zero down time ) automatically.</p>"},{"location":"while-coding/kubernetes-notes/#creating-services","title":"creating services :","text":"<p>services are all about networking.</p>"},{"location":"while-coding/kubernetes-notes/#networking-notes-from-httpskubernetesiodocsconceptsservices-networking","title":"networking notes from (https://kubernetes.io/docs/concepts/services-networking/)","text":"<ul> <li>Every Pod gets its own IP address. </li> <li>Pods can be treated much like VMs or physical hosts from the perspectives of port allocation, naming, service discovery, load balancing, application configuration, and migration.</li> <li>containers within a Pod share their network namespaces - including their IP address and MAC address. This means that containers within a Pod can all reach each other's ports on localhost. This also means that containers within a Pod must coordinate port usage, but this is no different from processes in a VM. This is called the \"IP-per-pod\" model.</li> </ul> <p>Kubernetes networking addresses four concerns:</p> <ul> <li>Containers within a Pod use networking to communicate via loopback.</li> <li>Cluster networking provides communication between different Pods.</li> <li>The Service resource lets you expose an application running in Pods to be reachable from outside your cluster.</li> <li>You can also use Services to publish services only for consumption inside your cluster.</li> </ul>"},{"location":"while-coding/kubernetes-notes/#helm","title":"Helm","text":"<p>Reference: https://www.youtube.com/watch?v=Zzwq9FmZdsU&amp;t=2s</p> <ul> <li>helm is three things</li> <li>templating enging ( i.e use values and templates to create actual k8s yaml)</li> <li>app lifecycle manager (install-uninstall-status-upgrade-rollback)</li> <li>Provide packages from central repository like a package manager</li> <li> <p>helm also keeps history of what got installed with what version of chart. This helps in upgrade and rollback. This is not possible via kubectl</p> </li> <li> <p>Helm has few supporting projects</p> </li> <li>Helmhub</li> </ul>"},{"location":"while-coding/learning-journal/","title":"Learning Journal","text":"<p>21st Nov 2022   - Release please <code>learn</code>   - Working with swagger spec <code>learn</code></p> <p>28th May 2024</p> <p>FFI : A foreign function interface (FFI) is a mechanism by which a program written in one programming language can call routines or make use of services written or compiled in another one. </p> <p>Like Agama can call functions in java</p>"},{"location":"while-coding/makdown-notes/","title":"Markdown notes","text":"<p>Advanced techniques: https://github.com/DavidWells/advanced-markdown/</p> <p>mermaid Diagrams: https://docs.github.com/en/get-started/writing-on-github/working-with-advanced-formatting/creating-diagrams</p>"},{"location":"while-coding/makdown-notes/#to-check-invalid-links-across-all-the-docs-in-repo","title":"to check invalid links across all the docs in repo","text":"<p>Use https://github.com/dkhamsing/awesome_bot#installation 1. Clone code locally 2. install the gem 3. run command </p> <p>Note: but this doesn't seem to check relative links in github md files plus it gets stuck some times.</p>"},{"location":"while-coding/makdown-notes/#how-to-add-image-to-github-read-me-and-center-align","title":"how to add image to github read me and center align:","text":"<pre><code>&lt;p align=\"center\"&gt;\n &lt;img src=\"../../assets/user/using-jans-cli/images/image-using-jans-cli-comp-04222022.png\"&gt;\n&lt;/p&gt;\n</code></pre> <p>adding gif with size options:</p> <pre><code>&lt;p align=\"center\"&gt;\n  &lt;img src=\"../../assets/user/using-jans-cli/images/gif-jans-cli-interactive-mode-04232022.gif\" width=\"40\" height=\"40\" /&gt;\n&lt;/p&gt;\n</code></pre>"},{"location":"while-coding/maven-notes/","title":"Maven Notes","text":""},{"location":"while-coding/maven-notes/#primary-uses","title":"Primary uses :","text":""},{"location":"while-coding/maven-notes/#as-build-tool","title":"As build tool","text":"<ul> <li>compile</li> <li>run tests</li> <li>build jars</li> <li>build wars and ears</li> <li>deploy to server</li> </ul>"},{"location":"while-coding/maven-notes/#as-project-management-tool","title":"As project management tool","text":"<ul> <li>dependency management</li> </ul>"},{"location":"while-coding/maven-notes/#difference-between-maven-and-ant","title":"difference between maven and ant :","text":"<p>Ant uses many configurations ( for example specifying in which folder your code is ) while maven use 'convention over configuration' and so reduces configuration. For example, when you run 'mvn compile' it assumes that code is under src/main/java.</p>"},{"location":"while-coding/maven-notes/#maven-conventions","title":"Maven conventions:","text":"<ul> <li> <p>Java source code is available at {base-dir}/src/main/java</p> </li> <li> <p>Test cases are available at {base-dir}/src/test/java</p> </li> <li> <p>The type of the artifact produced is a JAR file</p> </li> <li> <p>Compiled class files are copied to {base-dir}/target/classes</p> </li> <li> <p>The final artifact is copied to {base-dir}/target</p> </li> <li> <p>http://repo.maven.apache.org/maven2, is used as the repository URL.</p> </li> </ul>"},{"location":"while-coding/maven-notes/#maven-lifecycle-phases-and-plugin-goals","title":"Maven lifecycle phases and plugin goals :","text":"<p>We usually ask maven ( via mvn ) command to run either of two things : a lifecycle phase or a plugin goal. eg. 'mvn install' is a asking maven to run install phase. 'mvn archetype:generate' is asking maven to run generate goal within archetype plugin.</p> <p>Plugin goals are independent and they can be invoked individually. While lifecycle phases are hierarchical. When you ask maven to do 'mvn install', maven is going to run all lifecycle phases before 'install' which are 'prepare-resource, compile, test, package'.</p> <p>Plugin goals are actual code while lifecycle phases are logical. Maven internally calls a goal of a plugin to execute that lifecycle phase. It also has a default mapping of these phases to plugin goals ( compile phase maps to 'compiler:compiler', test maps to 'surefire:test', package maps to 'jar:jar' ). So, when you say 'mvn install', it is going to invoke lifecycle phases ( a.k.a plugin goals ) one after other.</p> <p>One tricky thing here : lifecycle phase to plugin goal is not one way binding. Its two way binding where goals also specify what lifecycle phase they attach to. In this case, if you run a goal, maven will invoke all phases ( and associated goals to those phases ) before running actual goal. For example : code of surefire:test plugin mentions that it is a test phase goal. So, whether you run 'mvn test' or 'mvn surefire:test' it'll have same effect. All goals attached to preceding phases will be executed in both cases..</p> <p>One more tricky thing : There can be phases that don't have any goal attached. And there can be goals that are not associated with any phase.</p> <p>it is not that there is single lifecycle phase hierarchy. There are different hierarchies for different packaging. So, what you specify in  tag will control what lifecycle phase hierarchy is invoked. So, packaging determines which one of default hierarchies are invoked, hierarchy has phases. Again based on packaging specified, maven may attach different goal to same phase. For example : 'package' phase will be attached to jar:jar if packaging is mentioned as jar. But for 'war' packaging, maven will attach 'package' phase with war:war. In all, based on packaging, maven will determine hierarchy and goals attached to phases. <p>For further reference : http://maven.apache.org/guides/introduction/introduction-to-the-lifecycle.html#Built-in_Lifecycle_Bindings</p>"},{"location":"while-coding/maven-notes/#simplest-parent-pom","title":"Simplest parent POM :","text":"<p>take pom of a quickstart project and create a copy of it. Give a group ID. This ID will be same across all modules unless they specify thier own. Give artifact ID. Doesn't matter much. Give something like 'productparent'. Give packaging as 'pom'</p> <p>remove all dependencies</p> <p>Note : when you want to create a simple spring project, use below dependency :</p> <pre><code>&lt;dependency&gt;\n    &lt;groupId&gt;org.springframework&lt;/groupId&gt;\n    &lt;artifactId&gt;spring-context&lt;/artifactId&gt;\n    &lt;version&gt;4.3.10.RELEASE&lt;/version&gt;\n&lt;/dependency&gt;\n</code></pre>"},{"location":"while-coding/maven-notes/#scopes","title":"Scopes :","text":"<p>There are total six scopes :  - compile  - test - run - provided - system  - and one more.</p> <p>'compile' scope is default. </p> <p>Also, anything dependency in compile scope is available in test and run as well. So, if you declare a dependency without specifying scope, that jar becomes part of the deployable bundle. So, if there is anything like servlet api etc, it is very imp that you mention explicitely that it is in 'provided' scope, otherwise your deployeble would be very heavy. Similarly, you should mention 'test' scope for junit dependencies.</p> <p>a good reference : https://maven.apache.org/guides/introduction/introduction-to-dependency-mechanism.html</p>"},{"location":"while-coding/maven-notes/#making-projects-dependent-on-each-other","title":"Making projects dependent on each other :","text":"<p>common utilities projects like 'shared-kernel' etc which are bundled as jar are often dependency for others. To access util projects in other projects, add following to maven of dependent project :</p> <p><pre><code>&lt;dependency&gt;\n  &lt;groupId&gt;com.gsg.kernel&lt;/groupId&gt;\n  &lt;artifactId&gt;gsg-shared-kernel&lt;/artifactId&gt;\n  &lt;version&gt;1.0-SNAPSHOT&lt;/version&gt;\n&lt;/dependency&gt;\n</code></pre> Don't forget to mention version tag for this. Also, since by default scope is compile, this jar will be bundled with your project as dependency all the way to deployment.</p>"},{"location":"while-coding/maven-notes/#note-on-packaging","title":"Note on Packaging :","text":"<p>\u201cPOM\u201d as value to  like pom <p>\u201cPOM\u201d packaging is mentioned for a pom file where there is no out put in form of a war or ear or jar. It is usually used in a pom file along multiple modules, and these modules will actually have packaging as war etc in their pom files. Basically, used when you want a POM file as top level orchestrator between modules.</p> <p>When no packaging is declared, Maven assumes the artifact is the default: jar</p> <p>The current core packaging values are: pom, jar, maven-plugin, ejb, war, ear, rar, par</p>"},{"location":"while-coding/maven-notes/#note-on-important-maven-concepts","title":"Note on important maven concepts :","text":"<p>1)      Dependency 2)      Inheritance 3)      Aggregation</p>"},{"location":"while-coding/maven-notes/#2-inheritance","title":"2. Inheritance :","text":"<p>Elements in the POM that are merged are the following: - dependencies - developers and contributors - plugin lists (including reports) - plugin executions with matching ids - plugin configuration - resources inheritance is when you specify  element in your child pom. Primary use of inheritance is to keep common configuration in a central POM which can be used by multiple projects. Super pom is an example of that.  In inheritance, parent is not aware of its children. ie: if parent is built then build for child projects will not be triggered automatically."},{"location":"while-coding/maven-notes/#3-aggregation","title":"3. Aggregation","text":"<p>aggregation is when you define  in top-level POM. Here the purpose is to club together those projects which need to be built together. Here, inheritance of plugins and dependencies ( and other elements ) will not happen but if you build the aggregated POM then the projects mentioned as modules will be triggered for build as well. <p>useful reference : https://stackoverflow.com/questions/17482320/maven-module-inheritance-vs-aggregation )</p> <p>Note : </p> <p>when you want to see what all dependencies your app has, you generally open POM file in eclipse and go to 'dependency Hierarchy' tab. But here, you can't see dependencies pulled by parent POM. But this is visible in 'effective POM' tab. 'Dependency Hierarchy' only shows things defined in current POM as 'dependency'</p>"},{"location":"while-coding/maven-notes/#maven-versioning","title":"Maven versioning :","text":"<p>http://kylelieber.com/2012/06/maven-versioning-strategy/</p>"},{"location":"while-coding/maven-notes/#maven-commandline-options-switches","title":"Maven commandline options / switches","text":"<p>Source : https://books.sonatype.com/mvnref-book/reference/running-sect-options.html</p> <p>-e, --errors: Produce execution error messages</p> <p>-X, --debug: Produce execution debug output</p> <p>-q, --quiet: Quiet output - only show errors</p> <p>The -q option only prints a message to the output if there is an error or a problem.</p> <p>The -X option will print an overwhelming amount of debugging log messages to the output. This option is primarily used by Maven developers and by Maven plugin developers to diagnose problems with Maven code during development. This -X option is also very useful if you are attempting to diagnose a difficult problem with a dependency or a classpath.</p> <p>The -e option will come in handy if you are a Maven developer, or if you need to diagnose an error in a Maven plugin. If you are reporting an unexpected problem with Maven or a Maven plugin, you will want to pass both the -X and -e options to your Maven process.</p> <p><code>mvn dependency:resolve</code>     resolve(or download) dependencies as per pom.xml</p> <p>To activate one or more build profiles from the command line, use the following option: -P, --activate-profiles  Comma-delimited list of profiles to activate <p>To define a property use the following option on the command line:</p> <p><code>-D</code>, --define : Defines a system property <p><code>-h</code>, --help: Display help information</p> <p><code>mvn -h</code></p> <p><code>-f</code> to run mvn from a different directory than where the pom file is located</p> <p><code>-o</code>  don't download dependencies everytime and just use the local repo(.m2). Very useful when running tests repeatedly during dev.</p> <p><code>--log-file &lt;file-name&gt;</code> to write console log to a log file <code>$ mvn --log-file ./mvn.log clean compile</code></p> <pre><code>mvn -f jans-auth-server/pom.xml compile\n</code></pre>"},{"location":"while-coding/maven-notes/#multimodule-projects","title":"Multimodule projects:","text":""},{"location":"while-coding/maven-notes/#failures","title":"failures","text":"<p>The following options control how Maven reacts to a build failure in the middle of a multi-module project build:</p> <p><code>-fae</code>, <code>--fail-at-end</code> :  Only fail the build afterwards; allow all non-impacted builds to continue</p> <p><code>-ff</code>, <code>--fail-fast</code> : Stop at first failure in reactorized builds</p> <p><code>-fn</code>, <code>--fail-never</code> : NEVER fail the build, regardless of project result</p> <p>The -fn and -fae options are useful options for multi-module builds that are running within a continuous integration tool like Hudson. The -ff option is very useful for developers running interactive builds who want to have rapid feedback during the development cycle.</p> <p>if you want to skip certain modules from getting build, then use <code>-pl</code> option.</p> <p><code>mvn clean -fae -X -pl \\!module1,\\!module2 jacoco:prepare-agent test install jacoco:report</code></p> <p>Or you can set profile to only build other modules.</p> <p>Source : https://books.sonatype.com/mvnref-book/reference/_using_advanced_reactor_options.html</p>"},{"location":"while-coding/maven-notes/#how-to-find-where-your-m2-and-settingsxmls-are-which-are-being-used-by-maven-from-commandline","title":"How to find where your .m2 and settings.xmls are which are being used by maven from commandline :","text":"<p>Remember that settings.xml does not get created by default. just fire <code>mvn -X</code> command. This will trigger a build which will probably fail, but it'll also print all the information on console like below :</p> <pre><code>dhaval@dhaval-Lenovo-U41-70:~/code/ij-projects/java8/Java 8 certification$ mvn -X\nApache Maven 3.6.3\nMaven home: /usr/share/maven\nJava version: 11.0.8, vendor: Ubuntu, runtime: /usr/lib/jvm/java-11-openjdk-amd64\nDefault locale: en_IN, platform encoding: UTF-8\nOS name: \"linux\", version: \"5.4.0-47-generic\", arch: \"amd64\", family: \"unix\"\n.\n.\n.\n[DEBUG] Reading global settings from /usr/share/maven/conf/settings.xml\n[DEBUG] Reading user settings from /home/dhaval/.m2/settings.xml\n[DEBUG] Reading global toolchains from /usr/share/maven/conf/toolchains.xml\n[DEBUG] Reading user toolchains from /home/dhaval/.m2/toolchains.xml\n[DEBUG] Using local repository at /home/dhaval/.m2/repository\n[DEBUG] Using manager EnhancedLocalRepositoryManager with priority 10.0 for /home/dhaval/.m2/repository\n</code></pre> <p>so you'll see all the important info in this.</p>"},{"location":"while-coding/maven-notes/#command-to-skip-tests","title":"command to skip tests","text":"<p>difference between <code>mvn install -DskipTests</code> and <code>mvn install -Dmaven.test.skip=true</code></p> <p>First one will compile and create tests jar files but will not run the tests while the second one will not even compile the test classes and will not run it. Ref</p>"},{"location":"while-coding/maven-notes/#command-to-run-one-particular-test","title":"command to run one particular test:","text":"<p>`mvn -Dcfg=test.dd.jans.io -Dtest=AccessTokenAsJwtHttpTest#accessTokenAsJwt -DfailIfNoTests=false -Dcvss-score=9 -Dfindbugs.skip=true -Ddependency.check=false clean test</p> <p>Starting with the Maven 2.1 release, there are new Maven command line options which allow you to manipulate the way that Maven will build multimodule projects. These new options are:</p> <p>-rf, --resume-from: Resume reactor from specified project</p> <p>-pl, --projects: Build specified reactor projects instead of all projects</p> <p>-am, --also-make: If project list is specified, also build projects required by the list</p> <p>-amd, --also-make-dependents: If project list is specified, also build projects that depend on projects on the list</p>"},{"location":"while-coding/maven-notes/#plugin-management-vs-plugins-references-so","title":"Plugin-management vs plugins (references : SO)","text":"<p>In pom.xml, you may see plugin definitions at two places. 1. Under </p> <pre><code>&lt;build&gt;\n    &lt;pluginManagement&gt;\n        &lt;plugins&gt;\n</code></pre> <ol> <li>Under </li> </ol> <pre><code>&lt;build&gt;\n    &lt;plugins&gt;\n</code></pre> <p>it is important to understand the difference when <code>&lt;plugins&gt;</code> appear under <code>&lt;pluginManagement&gt;</code>, and when same tag appears without <code>&lt;pluginManagement&gt;</code>.</p> <p><code>&lt;plugins&gt;</code> mentioned under <code>&lt;pluginManagement&gt;</code> tag, are just definition. They provide a central place to define plugin version, plugin configuration etc in an multi-module project where there are  multiple pom.xml files in different modules. All of them can not use same plugin configuration as defined in <code>&lt;pluginManagement&gt;</code> in parent or super pom. When you define plugin under <code>&lt;pluginManagement&gt;</code>, you  are actually not activating it. It is just a common definition.</p> <p>To activate plugins, you have to define same plugins in <code>&lt;plugins&gt;</code> tag outside of <code>&lt;pluginManagement&gt;</code>. You can do this either in same same pom where <code>&lt;pluginManagement&gt;</code> is defined, or in individual module pom files. But now, you don't have to define version or any other configuration for those plugins which  are already defined in the <code>&lt;pluginManagement&gt;</code>. Just mention <code>group</code> and <code>artifactId</code> and maven will  pickup rest of the details from <code>&lt;pluginManagement&gt;</code>. Remember, when you are mentioning <code>&lt;executions&gt;</code>,  you have to do it in <code>&lt;plugins&gt;</code> outside of <code>&lt;pluginManagement&gt;</code></p> <p>It is a classic mistake to put plugin information in <code>&lt;pluginManagement&gt;</code> and expect it to start working. I made this mistake when integrating JaCoCo in a multimodule project.</p>"},{"location":"while-coding/maven-notes/#maven-profiles","title":"Maven profiles:","text":"<p>reference : https://maven.apache.org/guides/introduction/introduction-to-profiles.html</p> <ul> <li>Profiles override or add configuration in effective POM at build time</li> <li>You can activate profiles automatically by setting certain env variable or by presence of certain file or many other ways.</li> <li>From commandline you can use option <code>-p</code> like below: <code>mvn groupId:artifactId:goal -P profile-1,profile-2</code></li> </ul> <p>Profiles specified in the POM can modify the following POM elements:</p> <pre><code>&lt;repositories&gt;\n&lt;pluginRepositories&gt;\n&lt;dependencies&gt;\n&lt;plugins&gt;\n&lt;properties&gt; (not actually available in the main POM, but used behind the scenes)\n&lt;modules&gt;\n&lt;reports&gt;\n&lt;reporting&gt;\n&lt;dependencyManagement&gt;\n&lt;distributionManagement&gt;\n</code></pre> <p>a subset of the <code>&lt;build&gt;</code> element, which consists of:</p> <pre><code>&lt;defaultGoal&gt;\n&lt;resources&gt;\n&lt;testResources&gt;\n&lt;directory&gt;\n&lt;finalName&gt;\n&lt;filters&gt;\n&lt;pluginManagement&gt;\n&lt;plugins&gt;\n</code></pre>"},{"location":"while-coding/maven-notes/#how-to-build-project-with-forcing-all-dependencies-to-be-reloaded","title":"How to build project with forcing all dependencies to be reloaded","text":"<p>There are two commands.   1) Using <code>-U</code> option ( eg. <code>mvn -U clean install' ). This will force all the snapshot dependencies to be reloaded from respective maven repos.   2) Using</code>dependency:purge-local-repository<code>option (eg.</code>mvn dependency:purge-local-repository compile install` ). This is similar to deleting .m2 and reloading everything including release dependencies more details here</p>"},{"location":"while-coding/maven-notes/#troubleshooting","title":"Troubleshooting:","text":""},{"location":"while-coding/maven-notes/#deactivating-certain-modules-using-profiles","title":"deactivating certain modules using profiles:","text":"<p>Ideally, as per above, if you put <code>&lt;modules&gt;</code> tag in a profile and mention list of <code>&lt;module&gt;</code> under it, then this should override the modules listed under <code>&lt;project&gt;</code> in same pom. But this doesn't happen. Why I don't know. I faced it and also see here. <code>Actual maven behaviour seems to be that that one profile can override modules on if they are defined in another profile.</code> So the solution is that you remove modules from POM's <code>&lt;project&gt;</code> and create a profile that loads by default that lists superset of modules, then you also should have another profile that lists subset of modules that you want to run. Now, when you run <code>mvn</code> by mentioning name of profile with subset, the default profile will not load. Hence only subset mentioned in your profile will be taken into account.</p> <p>Another maven behaviour which is documented but not very much known is that default profile mentioned in POM xml using <code>&lt;activeByDefault&gt;true&lt;/activeByDefault&gt;</code> will only be activated if there are no other profiles getting activated at the time of build. So, it is either the default profile or other profiles that get active. Most multimodule projects run with multiple profiles active at a time, hence default profiles are not very useful in multimodule projects. And due to this behaviour, the above solution of deactivating cetain modules using profiles also not usable. Plus, it seems this is not recommended too</p> <p>Finally, I have to deactivate modules using reactor commandline argument <code>-pl</code> like below:</p> <p><code>mvn clean -fae -X -pl \\!module1,\\!module2 jacoco:prepare-agent test install jacoco:report</code></p>"},{"location":"while-coding/maven-notes/#error-could-not-resolve-dependencies-for-project-due-to-blocked-mirror-for-repositories","title":"Error: <code>Could not resolve dependencies for project</code> due to <code>Blocked mirror for repositories</code>:","text":"<pre><code>I got this when I was trying to run maven build using github actions.\n</code></pre>"},{"location":"while-coding/maven-notes/#releasing-artifacts-on-maven-central","title":"Releasing artifacts on maven central:","text":"<p>Reference:  - https://itnext.io/publishing-artifact-to-maven-central-b160634e5268 - for dealing with gpg keys: https://central.sonatype.org/publish/requirements/gpg/ - Nice article to understand why we can't change artifact (apart from snapshot) once it is released on maven central    https://central.sonatype.org/faq/can-i-change-a-component/ - related GitHub issue for janssen</p> <p>Notes:</p> <ul> <li>follow steps in this link</li> <li>Few important notes<ul> <li>Steps to prove your domain will be new</li> <li>in real life scenario, you'll have to change entries in settings.xml of jenkins. Or may be find out other way of providing same information. Like giving details to a maven plugin in pom.xml of the project which reads particular details from environment variables.</li> </ul> </li> </ul>"},{"location":"while-coding/maven-notes/#high-level-summary-of-steps","title":"High level summary of steps:","text":"<ul> <li>pom.xml: change group id to <code>io.github.ossdhaval</code></li> <li>Sonatype jira:</li> <li>open an account on <code>https://issues.sonatype.org/</code>. Log in name and password that you create here will be used to authenticate while uploading artifacts</li> <li>then open an new issue similar to this</li> <li>here, as an org, you need to prove that <code>io.github.ossdhaval</code> is owned by you. For this, they asked to create a temporary repo. For org like janssen, may be same will apply. Or may be some other way. <code>Need to check</code>.</li> <li>~/.m2/settings.xml:</li> <li> <p>```  ossrh dhavaltdesai open$5Sonatype ossrh gpg tomy ossrh <pre><code> - Here, when doing this from Jenkins, we need to find out how to pass passphrase and login creds using environment variables. There are some pointers in [this](https://itnext.io/publishing-artifact-to-maven-central-b160634e5268) article.\n\n- pom.xml\n  make these changes:\n    ```\n    --- a/pom.xml\n+++ b/pom.xml\n@@ -4,7 +4,7 @@\n   xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\"&gt;\n   &lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;\n\n-  &lt;groupId&gt;com.gsg.kernel&lt;/groupId&gt;\n+  &lt;groupId&gt;io.github.ossdhaval&lt;/groupId&gt;\n   &lt;artifactId&gt;gsg-shared-kernel&lt;/artifactId&gt;\n   &lt;version&gt;1.0-SNAPSHOT&lt;/version&gt;\n   &lt;packaging&gt;jar&lt;/packaging&gt;\n@@ -40,11 +40,11 @@\n   &lt;distributionManagement&gt;\n     &lt;snapshotRepository&gt;\n       &lt;id&gt;ossrh&lt;/id&gt;\n-      &lt;url&gt;https://oss.sonatype.org/content/repositories/snapshots&lt;/url&gt;\n+      &lt;url&gt;https://s01.oss.sonatype.org/content/repositories/snapshots&lt;/url&gt;\n     &lt;/snapshotRepository&gt;\n     &lt;repository&gt;\n       &lt;id&gt;ossrh&lt;/id&gt;\n-      &lt;url&gt;https://oss.sonatype.org/service/local/staging/deploy/maven2/&lt;/url&gt;\n+      &lt;url&gt;https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/&lt;/url&gt;\n     &lt;/repository&gt;\n   &lt;/distributionManagement&gt;\n\n\n@@ -110,4 +110,70 @@\n       &lt;/plugins&gt;\n     &lt;/pluginManagement&gt;\n   &lt;/build&gt;\n+\n+  &lt;profiles&gt;\n+    &lt;profile&gt;\n+      &lt;id&gt;release&lt;/id&gt;\n+      &lt;build&gt;\n+        &lt;plugins&gt;\n+          &lt;plugin&gt;\n+            &lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt;\n+            &lt;artifactId&gt;maven-javadoc-plugin&lt;/artifactId&gt;\n+            &lt;version&gt;3.0.0&lt;/version&gt;\n+            &lt;executions&gt;\n+              &lt;execution&gt;\n+                &lt;id&gt;attach-javadocs&lt;/id&gt;\n+                &lt;goals&gt;\n+                  &lt;goal&gt;jar&lt;/goal&gt;\n+                &lt;/goals&gt;\n+              &lt;/execution&gt;\n+            &lt;/executions&gt;\n+          &lt;/plugin&gt;\n+          &lt;plugin&gt;\n+            &lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt;\n+            &lt;artifactId&gt;maven-source-plugin&lt;/artifactId&gt;\n+            &lt;version&gt;3.0.1&lt;/version&gt;\n    +            &lt;executions&gt;\n+              &lt;execution&gt;\n+                &lt;id&gt;attach-sources&lt;/id&gt;\n+                &lt;goals&gt;\n+                  &lt;goal&gt;jar&lt;/goal&gt;\n+                &lt;/goals&gt;\n+              &lt;/execution&gt;\n+            &lt;/executions&gt;\n+          &lt;/plugin&gt;\n+          &lt;plugin&gt;\n+            &lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt;\n+            &lt;artifactId&gt;maven-gpg-plugin&lt;/artifactId&gt;\n+            &lt;version&gt;1.6&lt;/version&gt;\n+            &lt;executions&gt;\n+              &lt;execution&gt;\n+                &lt;id&gt;sign-artifacts&lt;/id&gt;\n+                &lt;phase&gt;verify&lt;/phase&gt;\n+                &lt;goals&gt;\n+                  &lt;goal&gt;sign&lt;/goal&gt;\n+                &lt;/goals&gt;\n+                &lt;configuration&gt;\n+                  &lt;keyname&gt;0x2D78228A&lt;/keyname&gt;\n+                  &lt;passphraseServerId&gt;0x2D78228A&lt;/passphraseServerId&gt;\n+                &lt;/configuration&gt;\n+              &lt;/execution&gt;\n+            &lt;/executions&gt;\n+  &lt;/plugin&gt;\n+          &lt;plugin&gt;\n+            &lt;groupId&gt;org.sonatype.plugins&lt;/groupId&gt;\n+            &lt;artifactId&gt;nexus-staging-maven-plugin&lt;/artifactId&gt;\n+            &lt;version&gt;1.6.8&lt;/version&gt;\n+            &lt;extensions&gt;true&lt;/extensions&gt;\n+            &lt;configuration&gt;\n+              &lt;serverId&gt;ossrh&lt;/serverId&gt;\n+              &lt;nexusUrl&gt;https://s01.oss.sonatype.org/&lt;/nexusUrl&gt;\n+              &lt;autoReleaseAfterClose&gt;true&lt;/autoReleaseAfterClose&gt;\n+            &lt;/configuration&gt;\n+          &lt;/plugin&gt;\n+        &lt;/plugins&gt;\n+      &lt;/build&gt;\n+    &lt;/profile&gt;\n+  &lt;/profiles&gt;\n</code></pre></p> </li> <li> <p>Once this is done, run these three commands as explained in <code>release</code> section of this</p> </li> </ul>"},{"location":"while-coding/maven-notes/#how-to-list-only-the-direct-dependencies-and-exclude-transitive-dependencies","title":"how to list only the direct dependencies and exclude transitive dependencies","text":"<pre><code>```\nmvn dependency:list -DexcludeTransitive=true\n```\n\nFor more such options [here](https://maven.apache.org/plugins/maven-dependency-plugin/list-mojo.html#dependency-list)\n\nsimilarly, list dependencies excluding the compile scope\n\n```\nmvn dependency:list -DexcludeTransitive=true -o -DexcludeScope=compile\n```\n\nfinding all the test dependencies of a multimodule maven project\n\n```\n find . -name pom.xml -exec mvn -f {} dependency:list -DexcludeTransitive=true -o -DexcludeScope=compile \\; &gt;&gt; ~/temp/test-deps.txt\n```\n</code></pre>"},{"location":"while-coding/maven-notes/#list-all-the-submodules-of-a-pom","title":"list all the submodules of a pom","text":"<pre><code>mvn help:evaluate -Dexpression=project.modules -q -DforceStdout | tail -n +2 | head -n -1 | sed 's/\\s*&lt;.*&gt;\\(.*\\)&lt;.*&gt;/\\1/'\n</code></pre>"},{"location":"while-coding/maven-notes/#useful-ways-to-run-maven-commands","title":"useful ways to run maven commands","text":"<p><pre><code>mvn test | egrep 'Running|Tests|TEST'\n</code></pre> above is useful in seeing progress as each test gets executed.</p>"},{"location":"while-coding/md-test/","title":"Janssen Server Configuration Properties","text":"Property Name Description Mandatory Default Value baseEndpoint This is base end point true https://sampleBase/ authorizationEndpoint This is authorization end point false https://sampleAuth/"},{"location":"while-coding/mkdocs-notes/","title":"MKDocs notes","text":"<p>Used material for Mkdocs for documentation. It is a robust theme on top of mkdocs. When you install <code>material for Mkdocs</code> it also install Mkdocs. </p>"},{"location":"while-coding/mkdocs-notes/#install-on-ubuntu","title":"install on Ubuntu","text":"<ol> <li>install mkdocs</li> </ol> <pre><code>sudo apt install mkdocs\n</code></pre> <ol> <li>install mkdocs-material theme</li> </ol> <p>This theme can't be installed with package manager i.e apt. Also, if you try using <code>pip install mkdocs-material==\"8.3.0\"</code> then you get an error <code>error: externally-managed-environment</code>. Solution is to create a python virtual environment and then install and use from within it. -  setup a python virtual environment     <pre><code># create a directory to hold all your python virtual envs\nmkdir ~/python-venvs\n\n# create venv for mkdocs-material\npython3 -m venv ~/python-venvs/mkdocs-material-venv\n\n# activate venv\nsource ~/python-venvs/mkdocs-material-venv/bin/activate\n\n# install mkdocs-material using pip\npip install mkdocs-material==\"8.3.0\"\n\n# to use and deploy your docs using mkdocs and mkdocs-material\n# go to the directory where the mkdocs.yml is located from within the activated environment\ncd ~/vscode/gluu/GluuFederation/docs-gluu-server-prod/docs\n\n# start the mkdocs\nmkdocs serve    \n</code></pre></p>"},{"location":"while-coding/mkdocs-notes/#installing-plugins","title":"installing plugins","text":"<p>you can search plugins on pypi and then install using pip command given there. For example: <code>https://pypi.org/project/mkdocs-git-committers-plugin-2/</code>. You need to install plugins within the venv itself.</p> <pre><code>pip install mkdocs-git-revision-date-localized-plugin\npip install mkdocs-exclude-search\npip install mkdocs-include-markdown-plugin\n</code></pre>"},{"location":"while-coding/mkdocs-notes/#icons-sets-available-in-mkdocs-by-default","title":"Icons sets available in mkdocs by default","text":"<p>https://squidfunk.github.io/mkdocs-material/reference/icons-emojis/#configuration</p>"},{"location":"while-coding/mkdocs-notes/#reference","title":"reference","text":"<ul> <li>https://squidfunk.github.io/mkdocs-material/reference/</li> <li>url for local deployment: http://127.0.0.1:8000/</li> </ul>"},{"location":"while-coding/mkdocs-notes/#troubleshooting","title":"troubleshooting","text":""},{"location":"while-coding/mkdocs-notes/#indexmd-getting-mapped-to-the-category-header","title":"index.md getting mapped to the category header","text":"<p>See this PR Here since there was only one index.md under the <code>plugins</code> directory, it was getting mapped to the category and ignoring the mapping given in the mkdocs.yml. This got fixed when file name was changed to something apart from <code>index.md</code>.</p>"},{"location":"while-coding/mysql-notes/","title":"Mysql Notes","text":"<ul> <li> <p>login to mysql    <pre><code>sudo mysql -u &lt;username&gt; -p &lt;schema-name&gt;\n</code></pre>   it'll ask for password for <code>username</code></p> </li> <li> <p>Get list of all users.</p> </li> </ul> <pre><code>select user from mysql.user;\n</code></pre> <ul> <li>drop a user</li> </ul> <pre><code>sudo mydql (to log in as super user)\ndrop user gluu@localhost;\n</code></pre> <ul> <li>Get list of all available schemas (DBs)</li> </ul> <pre><code>SHOW DATABASES;\n</code></pre> <ul> <li>get list of all all available tables in current schema.</li> </ul> <pre><code>show tables;\n</code></pre> <ul> <li>get information about table:</li> </ul> <pre><code>describe &lt;tablename&gt;\n</code></pre> <ul> <li>Inserting text with double quotes and new lines.</li> </ul> <p>To do this, you have to surround value by single quotes.</p> <pre><code>update jsontest set json2 = '{\"keys\" : [ {\n    \"descr\" : \"Signature Key: RSA RSASSA-PKCS1-v1_5 using SHA-256\",\n    \"kty\" : \"RSA\",\n  }]}'\n    where json1 = \"json\";\n</code></pre> <ul> <li> <p>import data dump sql file <pre><code>sudo mysql -u root -p jansdb &lt; /root/jansdb_withtestdata_dump_15_nov_2021.sql\n</code></pre></p> </li> <li> <p>create a data dump of a schema</p> </li> </ul> <pre><code>mysqldump -u root -p gluudb &gt; ~/gluudb-dump.sql\n</code></pre>"},{"location":"while-coding/mysql-notes/#remove-or-uninstall-mysql-from-ubuntu","title":"Remove or uninstall mysql from ubuntu","text":"<pre><code>sudo apt-get remove --purge mysql*\nsudo apt-get purge mysql*\nsudo apt-get autoremove\nsudo apt-get autoclean\nsudo apt-get remove dbconfig-mysql\nsudo apt-get dist-upgrade\n</code></pre>"},{"location":"while-coding/mysql-notes/#troubleshooting","title":"Troubleshooting","text":"<p>when trying to connect with MySQL instance on local host from mysql workbench, I faced error as below:</p> <pre><code>An AppArmor policy prevents this sender from sending this message to this\n</code></pre> <p>Solution : <code>sudo snap connect mysql-workbench-community:password-manager-service :password-manager-service</code> reference : here</p>"},{"location":"while-coding/notes-monorepo/","title":"Monorepo notes","text":"<p>Reference: 1) overview: https://www.youtube.com/watch?v=rdeBtjBNcDI 2) optimize git performance for a monorepo: https://www.youtube.com/watch?v=RcqLV1lU408 3) </p> <p>Plan: - branching strategy - branch protections - checks (commit message check, sonar check etc) - Know what will stay with old repo and not move to new repo   - branches   - PR conversations and review comments.   - PR commit history (it'll be single commit in new repo)   - issue labels</p> <p>Create a new repo which will be you Monorepo - Create labels (labels can't be transferred). Most importantly have labels for each component. Like <code>comp-componentname</code>. You will apply this labels to issues and PRs as you move them from respective repository to monorepo. In absence of these labels, issues/prs will be lumped together at the repo-level. No way to find out which issue/PR belonged to which component/module. - enable checks (like signed commit, convensional commit and other branch protection) - give write permissions to the team members who will need it to push branches for PR move</p> <p>Move each repo as submodule of monorepo - transfer issues manually and relabel them with appropriate <code>comp-</code> label - moving PRs   - don't move closed PRs. They say in the old repo which will be archived. And commits have been already merged so commits will move.   - Open PRs basically represent code which is not yet merged in trunk. Code is still in the feature branches. There are two ways get this code over to new repo     - Copy over       - In this approach, we ask PR owner to          - clone new monorepo         - create a new branch from the trunk of the monorepo (name prefixed with <code>modulename-</code>)         - then copy over files with code changes to new branch         - push the new branch         - create new PR.       - Basically, we are not moving PR here. We are just copying the code. Easiest and least error prone approach.      - Rebase branch       - In this approach, we ask PR owner to          - add monorepo as a new remote         - create a new branch from the trunk of the monorepo (name prefixed with <code>modulename-</code>)         - rebase you current branch with changes on this new branch         - push and create new PR       - In this approach, we maintain the commit history. More complex than <code>copy over</code> approach.   - In either approach, we had following points as checklist for PR owners:     - branch name should have component name as prefix, like <code>modulename-</code>     - commits should be signed     - use convensional commits     - link new PR to old PR     - Apply appropriate component label <code>comp-</code></p> <ul> <li>Useful points when working with Monorepo</li> <li>Sparse checkouts: https://github.blog/2020-01-17-bring-your-monorepo-down-to-size-with-sparse-checkout/</li> </ul>"},{"location":"while-coding/postgres_notes/","title":"Postgres Notes","text":""},{"location":"while-coding/postgres_notes/#using-docker","title":"Using docker","text":"<p>install postgres using docker:</p> <pre><code>sudo docker run --name postgresql-container -p 5432:5432 -e POSTGRES_PASSWORD=secretpw -d postgres\n</code></pre> <p>If you have already created the container above, then just start it</p> <pre><code>sudo docker start postgresql-container\n</code></pre> <p>start PGadmin (but this was not able to query the db and giving internal server errors):</p> <pre><code>docker run --rm -p 5050:5050 thajeztah/pgadmin4\n</code></pre> <p>login to the postgres container shell: <pre><code>sudo docker exec -ti p1 bash\n</code></pre></p> <p>then switch to default user <pre><code>su postgres\n</code></pre></p> <p>start psql <pre><code>psql\n</code></pre></p> <p>Now you can do <code>\\dt</code> to see all the tables. And execute select queries.</p>"},{"location":"while-coding/postgres_notes/#without-docker-direct-install-on-machine","title":"without docker direct install on Machine","text":"<p>Good referece : https://www.digitalocean.com/community/tutorials/how-to-install-and-use-postgresql-on-ubuntu-20-04</p> <p>once installed you can start and stop postgres using command like below:</p> <pre><code>sudo systemctl start postgresql.service\n</code></pre>"},{"location":"while-coding/postgres_notes/#creating-user-and-db","title":"creating user and db","text":"<p>During installation, postgres has created a new linux user called <code>postgres</code> you can use this login:</p> <pre><code>sudo -u postgres psql\n</code></pre>"},{"location":"while-coding/postgres_notes/#create-a-different-user","title":"create a different user","text":"<p>first create a linux user: </p> <pre><code>sudo adduser crux_integ\n</code></pre> <p>Create new db user with same name as linux user</p> <pre><code>sudo -u postgres\n\ncreateuser --interactive\n</code></pre>"},{"location":"while-coding/postgres_notes/#navigating-postgres","title":"Navigating Postgres","text":"<p>In PostgreSQL, a database is a self-contained unit of data storage, while a schema is a logical namespace within a database that groups related objects like tables, views, and functions, enabling better organization and security</p> <p>Create db</p> <pre><code>sudo -i -u postgres\n\ncreatedb crux_db\n</code></pre> <p>connect using new user to new db</p> <pre><code>sudo -i -u crux_user\n\npsql -d crux_db\nor\n\\c crux_db\n</code></pre> <p>Set the password for db user</p> <pre><code>crux_db=#  ALTER USER crux_user PASSWORD 'secretpw';\n</code></pre> <p>List all available users:</p> <pre><code>crux_db=#  \\du\n</code></pre> <p>List all available db:</p> <pre><code>crux_db=#  \\l\n</code></pre> <p>List all available tables:</p> <pre><code>crux_db=#  \\dt\n</code></pre> <p>Describe a table and know the columns</p> <pre><code>\\d &lt;table-name&gt;\n</code></pre> <p>To exit psql prompt:</p> <pre><code>crux_db=#  \\q\n</code></pre>"},{"location":"while-coding/postgres_notes/#install-pgadmin","title":"Install PGAdmin","text":"<pre><code>// to add PGadmin repository to your system\ncurl https://www.pgadmin.org/static/packages_pgadmin_org.pub | sudo apt-key add\nsudo sh -c 'echo \"deb https://ftp.postgresql.org/pub/pgadmin/pgadmin4/apt/$(lsb_release -cs) pgadmin4 main\" &gt; /etc/apt/sources.list.d/pgadmin4.list &amp;&amp; apt update'\n\n// actually installs PGAdmin\nsudo apt install pgadmin4\n</code></pre>"},{"location":"while-coding/python-notes/","title":"Python notes","text":""},{"location":"while-coding/python-notes/#installing-anaconda-3","title":"installing Anaconda 3","text":"<pre><code>argument to control this behavior.\ninstallation finished.\nDo you wish to update your shell profile to automatically initialize conda?\nThis will activate conda on startup and change the command prompt when activated.\nIf you'd prefer that conda's base environment not be activated on startup,\n   run the following command when conda is activated:\n\nconda config --set auto_activate_base false\n\nYou can undo this by running `conda init --reverse $SHELL`? [yes|no]\n</code></pre>"},{"location":"while-coding/python-notes/#how-to-run-python-code-locally","title":"How to run python code locally:","text":"<ul> <li>activate the python environment. For example, <code>conda activate base</code></li> <li>run python program: <code>python3 /tmp/p1-self.py</code></li> </ul>"},{"location":"while-coding/python-notes/#indentation-and-spaces-rules","title":"indentation and spaces rules","text":"<ul> <li>Blank lines are ignored</li> <li>Indentation is mandatory in Python to indicate blocks of code such as those following statements like if, for, while, def, and class.</li> <li>Each indented block must use consistent whitespace; mixing the number of spaces or tabs within the same block causes errors.</li> <li>The standard convention is to use 4 spaces per indentation level.</li> </ul> <p>In summary, Python uses indentation not just for readability but as a core part of the syntax to define program structure, with 4 spaces per level being the widely accepted standard.</p> <p>Indentation applies to all lines that belong to the same block and must be uniform in that block.</p>"},{"location":"while-coding/quarkus%20notes/","title":"Quarkus notes","text":"<p>Reference: quick start: https://developers.redhat.com/blog/2021/05/11/building-an-api-using-quarkus-from-the-ground-up#exception_handling</p>"},{"location":"while-coding/quarkus%20notes/#how-to-create-fresh-quarkus-rest-api-project","title":"how to create fresh quarkus REST API project","text":"<ul> <li>run the command below:</li> </ul> <pre><code>mvn io.quarkus.platform:quarkus-maven-plugin:3.5.3:create     -DprojectGroupId=com.trial.quarkus     -DprojectArtifactId=member-service     -DjavaVersion=11     -DclassName=MemberController     -Dpath=members     -Dextensions=io.quarkus:quarkus-jsonb,io.quarkus:quarkus-flyway,io.quarkus:quarkus-rest-client,io.quarkus:quarkus-hibernate-orm-panache,io.quarkus:quarkus-resteasy,io.quarkus:quarkus-jdbc-postgresql,io.quarkus:quarkus-smallrye-openapi,io.quarkus:quarkus-arc,io.quarkus:quarkus-hibernate-orm,io.quarkus:quarkus-rest-client-jackson,io.quarkus:quarkus-jacoco,io.rest-assured:rest-assured,org.projectlombok:lombok\n</code></pre> <ul> <li>Open intellij and <code>file -&gt; open -&gt; select project folder</code></li> <li>project will open in intellij. Now right click on pom.xml and select <code>add as maven project</code></li> <li>now run <code>./mvnw quarkus:dev</code></li> </ul> <p>Also, note that because you have added db related things like <code>quarkus-jdbc-postgresql</code>, when you do <code>./mvnw quarkus:dev</code>, the quarkus creates a postgre db in a docker container. This is evident from log messages like <code>Dev Services for default datasource (postgresql) started - container ID is e0fea71aa704</code>. Note the container ID in this message. The db user is <code>quarkus</code>. You can also enter this docker container and access db using below command sequence:</p> <pre><code>docker exec -ti e0fea71aa704 bash\n&lt;prompt will change&gt;\npsql -U quarkus\n&lt;again prompt will change&gt;\n</code></pre> <p>Now you can run <code>\\dt</code> to see all the available tables.</p> <p>you can also connect to this db using pgadmin by configuring db as below. Here the password is <code>quarkus</code>:</p> <p></p> <p>While performing operations in pgadmin on Ubutu, it is throwing errors but still working.</p>"},{"location":"while-coding/rancher-notes/","title":"Rancher Notes","text":"<p>Difference between Rancher and RKE</p>"},{"location":"while-coding/rancher-notes/#troubleshooting","title":"Troubleshooting","text":""},{"location":"while-coding/rancher-notes/#after-installing-openebs-chart-on-a-rancher-cluster-rancher-on-a-single-docker-container-the-openebs-ndm-pod-doesnt-come-up-it-stays-in-creatingcontainer-state","title":"after installing openebs chart on a Rancher cluster (<code>rancher on a single docker container</code>), the openebs-ndm pod doesn't come up. It stays in <code>creatingcontainer</code> state.","text":"<ul> <li>root cause:</li> <li>on rancher dashboard if you go to <code>apps -&gt; openebs -&gt; openebs-ndm(daemonset) -&gt;   recent events</code> it'll show you errors like <code>MountVolume.SetUp failed for volume \"udev\" : hostPath type check failed: /run/udev is not a directory</code> and <code>Unable to attach or mount volumes: unmounted volumes=[udev], unattached volumes=[procmount devmount basepath sparsepath kube-api-access-tskml config udev]: timed out waiting for the condition</code></li> <li>Solution: is to create a <code>udev</code> directory under <code>/run</code> on the docker container</li> <li>find the docker container ID by running this command on host os:       <pre><code>docker ps\n</code></pre></li> <li>Copy the container id and open bash of that container       <pre><code>docker exec -ti 373a506bcf20 bash\n</code></pre></li> <li>create the directory <code>mkdir /run/udev</code></li> </ul>"},{"location":"while-coding/random-notes/","title":"Random notes","text":""},{"location":"while-coding/random-notes/#troubleshooting-vmware-player-error-on-ubuntu","title":"Troubleshooting VMware player error on Ubuntu","text":"<p>error is about vmmon and vmnet modules when you try to start vmware on ubuntu.</p> <p>Solution: </p> <p>first : https://communities.vmware.com/t5/VMware-Workstation-Pro/VMware-16-2-3-not-working-on-Ubuntu-22-04-LTS/m-p/2905637/highlight/true#M175412</p> <p>second : https://askubuntu.com/a/1145426</p> <p>These instructions have been tested for VMWare player 16.2.1 and Ubuntu 18.04 up to 19.04.</p> <p>Install VMWare</p> <p>Run this</p> <pre><code>cd /usr/lib/vmware/modules/source\nsudo git clone https://github.com/mkubecek/vmware-host-modules\ncd vmware-host-modules\nsudo git checkout player-16.2.1\nsudo make\nsudo tar -cf vmnet.tar vmnet-only\nsudo tar -cf vmmon.tar vmmon-only\nsudo mv vmnet.tar /usr/lib/vmware/modules/source/\nsudo mv vmmon.tar /usr/lib/vmware/modules/source/\n</code></pre> <pre><code>sudo vmware-modconfig --console --install-all\n</code></pre> <p>You'll see that there are issues with monitor and net, thas ok.</p> <p>Generate a key</p> <pre><code>sudo openssl req -new -x509 -newkey rsa:2048 -keyout VMWARE15.priv -outform DER -out VMWARE15.der -nodes -days 36500 -subj \"/CN=VMWARE/\"\n</code></pre> <p>You'll see info that it did it ok.</p> <p>Use this key we just generated to sign the two kernel modules.</p> <pre><code>sudo /usr/src/linux-headers-$(uname -r)/scripts/sign-file sha256 ./VMWARE15.priv ./VMWARE15.der $(modinfo -n vmmon)\nsudo /usr/src/linux-headers-$(uname -r)/scripts/sign-file sha256 ./VMWARE15.priv ./VMWARE15.der $(modinfo -n vmnet)\n</code></pre> <p>This does not give any feedback</p> <p>Check that signatures are applied correctly.</p> <p><pre><code>tail $(modinfo -n vmmon) | grep \"Module signature appended\"\n</code></pre> You should get Binary file (standard input) matches</p> <p>Now we make this key trusted by importing it to machine owner key (MOK) management system with the command below. Here you can read more about MOK\u2019s job in Linux.</p> <p><pre><code>sudo mokutil --import VMWARE15.der\n</code></pre> This will ask you for a password, enter some new password a bit long like 1515vmware. Reenter same password.</p> <p>Reboot, When reboot you should be presented with a menu with blue screen background, you have to make your way to enroll the key and enter the password you just created, this happens only once, then continue to boot.</p> <p>To test the driver / module installed correctly enter the command</p> <p><pre><code>mokutil --test-key VMWARE15.der\n</code></pre> You should get VMWARE15.der is already enrolled and that means VMWare should be working.</p>"},{"location":"while-coding/random-notes/#encryption-vs-hashing","title":"Encryption Vs Hashing","text":"<p>Ref: - https://www.ssl2buy.com/wiki/difference-between-hashing-and-encryption#:~:text=The%20difference%20between%20hashing%20and%20encryption&amp;text=In%20short%2C%20encryption%20is%20a,but%20also%20have%20some%20similarities. - https://www.simplilearn.com/tutorials/cyber-security-tutorial/sha-256-algorithm#:~:text=It%20takes%20a%20piece%20of,called%20the%20hash%20value%2Fdigest.</p> <p>Hashing and Encryption have different functions. Encryption includes encryption and decryption process while hashing is a one-way process that derives a message digest (alphnumeric string ) from data. This string is irreversible meaning you can't derive data back from string. </p> <p>Hashing algorithms:</p> <p>SHA algorithm \u2013 Secure Hash Algorithm was designed by the National Security Agency to be used in their digital signature algorithm. It has a length of 160 bits. Just like the latter, security weaknesses in it means that it is no longer used SHA and SHA-1, organizations are using strong SHA-2 (256 bit) algorithm for the cryptographic purpose. </p> <p>Usages:</p> <ul> <li>systems store password in hashed format. Meaning to confirm password is correct or not they derive SHA256 hash from it and compare the hash. For same password, everytime the has will be same.</li> <li>Check the authenticity of downloaded files. </li> <li>Download provider provides file and also publishes SHA256sum with it. User after download can generate SHA256sum from downloaded file and compare with what is published by the provider. If the downloaded file has been corrupted during download or if it is different from the original one, then the SHA will not be the same. This provides protection against network corruptions to large files plus limited assurance of authenticity of the file that it is the one that was produced by original producer. For full authenticity, producers should publish GPG signatures and downloaders should verify that.</li> </ul> <p>Purpose of hashing:</p> <p>Hashing can be used to compare a large amount of data. Hash values can be created for different data, meaning that it is easier comparing hashes than the data itself.  It is easy to find a record when the data is hashed. Hashing algorithms are used in cryptographic applications like a digital signature. Hashing is used to generate random strings to avoid duplication of data stored in databases. Geometric hashing \u2013 widely used in computer graphics to find closet pairs and proximity problems in planes. It is also called grid method and it has also been adopted in telecommunications. These characteristics mean that hash can be used to store passwords. This way, it becomes difficult for someone who has the raw data to reverse them.</p>"},{"location":"while-coding/random-notes/#gpg-signatures-on-packages-aka-artifacts","title":"GPG signatures on packages aka artifacts","text":"<p>Good link for understanding : https://central.sonatype.org/publish/requirements/gpg/</p>"},{"location":"while-coding/random-notes/#how-to-check-hash-for-python-pip-packages","title":"how to check hash for python (pip) packages","text":"<ul> <li>pip gets packages from pypi. For example, for mkdocs-exclude-search package : https://pypi.org/project/mkdocs-exclude-search</li> <li>at this location, go to download files section : https://pypi.org/project/mkdocs-exclude-search/#files</li> <li>here hashes are available for source and binary packages</li> <li>you can take has from above location and place it in your <code>requirements.txt</code> file like <code>https://github.com/JanssenProject/jans/blob/main/docs/requirements.txt</code>. This way, python will match the hash of downloaded package and only then install it</li> </ul>"},{"location":"while-coding/random-notes/#general-troubleshooting","title":"general troubleshooting","text":""},{"location":"while-coding/random-notes/#problem","title":"Problem","text":"<p>facing <code>Unable to correct problems, you have held broken packages</code> error when <code>sudo apt install npm</code></p> <p>solution:</p> <pre><code>sudo apt install aptitude\nsudo aptitude install npm\n</code></pre>"},{"location":"while-coding/redis-notes/","title":"Redis Notes","text":""},{"location":"while-coding/redis-notes/#install-redis","title":"Install redis","text":"<ul> <li>get a ubuntu VM or create a lxc</li> <li>run commands given below:   <pre><code>sudo apt install lsb-release curl gpg\ncurl -fsSL https://packages.redis.io/gpg | sudo gpg --dearmor -o /usr/share/keyrings/redis-archive-keyring.gpg\necho \"deb [signed-by=/usr/share/keyrings/redis-archive-keyring.gpg] https://packages.redis.io/deb $(lsb_release -cs) main\" | sudo tee /etc/apt/sources.list.d/redis.list\nsudo apt-get update\nsudo apt-get install redis\n</code></pre></li> <li>check if redis is installed fine:   <pre><code>systemctl status redis-server.service\n</code></pre></li> </ul>"},{"location":"while-coding/redis-notes/#configure-redis","title":"Configure redis","text":"<ul> <li>Redis config file is at <code>/etc/redis/redis.conf</code>. Note that restart redis server after you make any change in this file, using <code>systemctl restart redis-server.service</code></li> <li>Redis log file is at <code>/var/log/redis/redis-server.log</code></li> </ul>"},{"location":"while-coding/redis-notes/#setup-redis-cluster","title":"Setup redis cluster","text":"<ul> <li>to create redis cluster, this is a good link.</li> <li>essentially, you first need to have few redis instances running and then with one command you make them into a cluster</li> <li>There are few important configuration items which I encountered during my troubleshooting. It is listed below along with corresponding error  that it solved.</li> <li>Another thing, redis cluster is ideal if you have heavy load and you want scalability. If you just want a central cache with high-availability  then there is another redis high-available configuration which is separate from cluster. </li> </ul> <p>redis-cli INFO Replication</p>"},{"location":"while-coding/redis-notes/#replication","title":"Replication","text":"<p>role:master connected_slaves:0 master_failover_state:no-failover master_replid:61f9842bb857d92ab7d55255be8f0c713627c073 master_replid2:0000000000000000000000000000000000000000 master_repl_offset:0 second_repl_offset:-1 repl_backlog_active:0 repl_backlog_size:1048576 repl_backlog_first_byte_offset:0 repl_backlog_histlen:0</p> <p>ERR This instance has cluster support disabled</p> <p>----------- fix -------------------------------</p> <p>update the /etc/redis/redis.conf</p> <p>cluster-enabled yes  cluster-config-file nodes-6379.conf  cluster-node-timeout 15000</p> <p>and then restart redis server</p> <p>systemctl stop redis-server.service systemctl start redis-server.service</p> <p>you see this in the server logs/var/log/redis/redis-server.log :</p> <p>1684:C 31 Oct 2023 13:49:57.039 * Configuration loaded 1684:M 31 Oct 2023 13:49:57.039 * monotonic clock: POSIX clock_gettime 1684:M 31 Oct 2023 13:49:57.040 * Running mode=cluster, port=6379. 1684:M 31 Oct 2023 13:49:57.040 * No cluster configuration found, I'm fd7c05b19dabbb030f0b0f1eb5c9817c20e1dcf2 1684:M 31 Oct 2023 13:49:57.063 * Server initialized</p> <p>redis-cli --cluster create 10.229.38.197:6379 10.229.38.96:6379 10.229.38.183:6379 10.229.38.97:6379 10.229.38.122:6379 10.229.38.45:6379 --cluster-replicas 1</p> <p>getting error</p> <p>Could not connect to Redis at 10.229.38.197:6379: Connection refused</p> <p>------------ fix</p> <p>in redis.conf update bind address</p> <p>bind 10.229.38.197 -::1</p> <p>after this redis started listening on 10.229.38.197:6379 and the connection refused error went away.</p> <p>But started getting error as below</p> <p>[ERR] Node 10.229.38.197:6379 DENIED Redis is running in protected mode because protected mode is enabled and no password is set for the default user. In this mode connections are only accepted from the loopback interface. If you want to connect from external computers to Redis you may adopt one of the following solutions: 1) Just disable protected mode sending the command 'CONFIG SET protected-mode no' from the loopback interface by connecting to Redis from the same host the server is running, however MAKE SURE Redis is not publicly accessible from internet if you do so. Use CONFIG REWRITE to make this change permanent. 2) Alternatively you can just disable the protected mode by editing the Redis configuration file, and setting the protected mode option to 'no', and then restarting the server. 3) If you started the server manually just for testing, restart it with the '--protected-mode no' option. 4) Set up an authentication password for the default user. NOTE: You only need to do one of the above things in order for the server to start accepting connections from the outside.</p> <p>-------------fix ------------- uncommented below line requirepass foobared</p> <p>and kept below line as it is protected-mode</p> <p>getting </p> <p>[ERR] Node 10.229.38.197:6379 NOAUTH Authentication required.</p> <p>and changed the cluster create command to (added -a)</p> <p>redis-cli -a 'foobared' --cluster create 10.229.38.197:6379 10.229.38.96:6379 10.229.38.183:6379 10.229.38.97:6379 10.229.38.122:6379 10.229.38.45:6379 --cluster-replicas 1</p> <p>this resolved the above error.</p> <p>AUTH  <p>AUTH default"},{"location":"while-coding/release-please-notes/","title":"Release Please : Github Release automation tool from Google","text":""},{"location":"while-coding/release-please-notes/#configuring-release-please-on-a-spring-boot-project","title":"Configuring release-please on a spring-boot project","text":"<ol> <li>Create a <code>.github/workflows/release-please.yml</code></li> <li>Add these contents to that file    ```    on:     push:       branches:         - main</li> </ol> <p>permissions:      contents: write      pull-requests: write</p> <p>name: release-please</p> <p>jobs:      release-please:        runs-on: ubuntu-latest        steps:          - uses: googleapis/release-please-action@v4            with:              # this assumes that you have created a personal access token              # (PAT) and configured it as a GitHub action secret named              # <code>MY_RELEASE_PLEASE_TOKEN</code> (this secret name is not important).              token: ${{ secrets.MY_RELEASE_PLEASE_TOKEN }}              # this is a built-in strategy in release-please, see \"Action Inputs\"              # for more options              release-type: simple     <code>``  3. Push these changes to github repo 3. Create a token and configure as a secret:    - Go to your account settings &gt; developer settings &gt; create a new classic token with name</code>for release please<code>. Copy the token value.    - Go to the repository settings &gt; secrets and variables &gt; add a new secret</code>MY_RELEASE_PLEASE_TOKEN<code>with the token value    - Under the same repository settings, Move to the</code>Actions<code>&gt;</code>general<code>&gt; check the</code>Allow GitHub Actions to create and approve pull requests<code>4. Now all is set. Push any commit to the</code>main` branch in repo and the action above will create a new PR for next release. Example: here. This is just a release PR, release is not yet created. 5. merge this PR and a new release will be created. Example here</p>"},{"location":"while-coding/sbom/","title":"SBOM","text":""},{"location":"while-coding/sbom/#reference","title":"Reference:","text":""},{"location":"while-coding/sbom/#sbom-types","title":"SBOM types","text":"<p>https://www.cisa.gov/sites/default/files/2023-04/sbom-types-document-508c.pdf</p>"},{"location":"while-coding/sbom/#sbom-use","title":"SBOM use","text":"<p>https://www.cisa.gov/sites/default/files/2024-07/SBOM%20FAQ%202024.pdf</p>"},{"location":"while-coding/sbom/#sbom-data-field-definitions","title":"SBOM data field definitions","text":"<p>https://www.ntia.gov/files/ntia/publications/framingsbom_20191112.pdf</p>"},{"location":"while-coding/sbom/#path-to-generate-an-sbom","title":"path to generate an SBOM","text":"<ul> <li>Understand the types and decide which one is needed</li> <li>Decide how many levels of depth is required</li> <li>where would you publish? or will it be distributed on-demand</li> <li>sign an sbom</li> </ul>"},{"location":"while-coding/sbom/#github-dependency-tracking-and-sbom","title":"GitHub dependency tracking and SBOM","text":"<p>GitHub can create dependency graph and SBOM for each repository. Go to repository &gt; Insights &gt; dependency graph to enable it for the first time. If it is already enabled, you'll see a page like this listing <code>declared dependencies</code> (in pom.xml) and a prompt to enable <code>automatic dependency submission</code>:</p> <p></p> <p><code>Ecosystem</code> means that different package managers available in your repo, i.e maven, node, etc. Each of these package managers have typically a file that lists all the dependencies, for pom.xml for maven. GitHub automatically identifies these files for supported package ecosystems and lists the dependencies. </p> <p>Analysing transitive dependencies:</p> <p>Github by default, only analyses the <code>declared dependencies</code>. Exported SBOM will also only contain <code>declared dependencies</code>. But if you enable <code>automatic dependency submission</code>, then github will go and find out all the transitive dependencies too. To enable `` GitHub doesn't support analysis of transitive dependencies on all the package ecosystems. See the listing in the link above. </p> <p>To turn on the automatic dependency reporting, go to <code>repository settings &gt; code security</code>. As soon as you do that, you'll see a new github action job being triggered to analyse your project. See this job running under <code>actions</code> tab. In sometime you'll see the dependency graph has lot more dependencies due to addition of transitive dependencies.</p>"},{"location":"while-coding/sonar-notes/","title":"Sonar notes","text":""},{"location":"while-coding/sonar-notes/#sonarcloud-terms","title":"sonarcloud terms:","text":"<ul> <li>Issues: have 3 types<ul> <li>vulnerabilities: A point in your code that's open to attack. <code>SECURITY</code></li> <li>Bugs: A coding error that will break your code and needs to be fixed immediately. Impacts <code>RELIABILITY</code>.</li> <li>code smells: A maintainability issue that makes your code confusing and difficult to maintain <code>MAINTAINABILITY</code></li> </ul> </li> <li>security hotspots: Normal issues are definitely problems (barring the odd false-positive) but Security Hotspots need a human to decide. Security Hotspot is a security-sensitive piece of code. I.e. it's a place where things could go wrong. Your particular use of that code might be a problem, or it might not. You won't know until you look.</li> </ul>"},{"location":"while-coding/sonar-notes/#integration-with-jacoco-and-sonarcloud","title":"Integration with JaCoCo and SonarCloud","text":"<p>High-level steps : 1. Integrate JaCoCo 2. Onboard to SonarCloud 3. Integrate with SonarCloud 4. Integrate with CI using Github Actions</p>"},{"location":"while-coding/sonar-notes/#1-integrate-jacoco","title":"1. Integrate JaCoCo","text":"<p>This is easy as you just have to add following plug-in in your project POM (parent pom in multimodule project) under <code>&lt;pluginManagement&gt;</code>.</p> <pre><code>                &lt;plugin&gt;\n                    &lt;groupId&gt;org.jacoco&lt;/groupId&gt;\n                    &lt;artifactId&gt;jacoco-maven-plugin&lt;/artifactId&gt;\n                    &lt;version&gt;0.8.7&lt;/version&gt;\n                &lt;/plugin&gt;\n</code></pre> <p>That is it.</p>"},{"location":"while-coding/sonar-notes/#2-onboard-to-sonarcloud","title":"2. Onboard to SonarCloud","text":"<ol> <li>login to SonarCloud</li> <li>go to <code>+</code> sign on top right which says 'add new project or organizationyour profile</li> <li>click organizations</li> <li>get organisations from Github</li> <li>Install SonarCloud app    Either give permission to see all repos or only select repos.</li> <li>Now you'll see projects under your organization and click 'analyze'</li> <li>Now you'll be taken to project configuration page on SonarCloud</li> <li>click on 'with github actions'</li> <li>step 1 is to create github secret as directed on page ( remember the 'settings' tab is on your github project page and not        under your profile )</li> <li>In the next step, sonarcloud will tell you what changes you need to make in your POM file and in you github repo ( like            adding workflow yml in your .github folder). Be careful when you are making these changes as you might need to change few          things as per your project needs. This is the last step. If you do these changes and execute your workflow in github, this        page will automatically refresh and it'll show you code analysis. Note : for coverage, this assumes that you have integration      with JaCoCo and JaCoCo is generating coverage reports already which SonarCloud will directly use.</li> </ol>"},{"location":"while-coding/sonar-notes/#troubleshooting","title":"Troubleshooting:","text":"<ul> <li><code>Could not find a default branch to fall back on</code></li> </ul> <p>This was due to <code>&lt;sonar.projectKey&gt;</code> in pom not having same value as configured in SonarCloud. The value is case-sensitive. </p>"},{"location":"while-coding/sonar-notes/#aggregare-report","title":"Aggregare report","text":"<p>Add aggregate code coverage report to your multimodule</p> <p>Reference: https://github.com/jacoco/jacoco/tree/master/jacoco-maven-plugin.test/it/it-report-aggregate</p> <p>command to run:  mvn install jacoco:report-aggregate</p> <p>But I couldn't implement it at the end due to many issues that I faced. 1. First of all, I started facing <code>suiteXmlFiles is configured, but there is no TestNG dependency</code> error when I run <code>mvn install</code>. 2. Once I added this dependency, <code>mvn install</code> started complaining that it did not find dependency of projects that had <code>war</code> packaging. This is due to the fact that we had to add all the projects in the newly created reporting module's pom file, including those projects that were having <code>war</code> packaging. Now maven started looking for <code>.jar</code> files for those dependencies which it didn't find. Soluiton was to now generate two artifacts from those <code>war</code> project. One <code>war</code> and other <code>jar</code> with contained all the classes. 3. To shortcut the effor and just to see things working, I removed those projects with <code>war</code> packaging from the build. Now, I was facing another error in the new reporting module that suit xml (defind in pom by tag <code>suiteXmlFile</code>) is invalid. </p> <p>Finally I left the effort.</p> <p>Overall, I felt that with Jacoco, generating aggregate report for multimodule maven project is difficult. Specially, if your project has modules with <code>war</code> packaging.</p>"},{"location":"while-coding/sonar-notes/#message-not-generating-jacoco-repot-due-to","title":"Message: Not generating jacoco repot due to :","text":"<p><code>Skipping JaCoCo execution due to missing execution data file.</code></p> <p>In my case it was due to Surefire plugin was defining  property within the  tag of plugin definition. Solution as described here is to move this property outside of surefire plugin definition and declare as POM property. Something like below: <p>Put this as pom property, outside of plugin. <pre><code>&lt;argLine&gt;-your -argline -parameters&lt;/argLine&gt;   \n</code></pre></p> <p>This is how surefire configuration should look like <pre><code>&lt;plugin&gt;\n    &lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt;\n    &lt;artifactId&gt;maven-surefire-plugin&lt;/artifactId&gt;\n    &lt;version&gt;2.19.1&lt;/version&gt;\n    &lt;configuration&gt;\n        &lt;argLine&gt;@{argLine}&lt;/argLine&gt;\n    &lt;/configuration&gt;\n</code></pre></p> <p>Helpful links:</p> <p>https://stackoverflow.com/a/36305148/2331225</p> <p>http://www.ffbit.com/blog/2014/05/21/skipping-jacoco-execution-due-to-missing-execution-data-file/</p> <p>official latest JaCoCo plug-in maven config</p>"},{"location":"while-coding/sonar-notes/#message-cant-have-2-modules-with-the-following-key","title":"Message: can't have 2 modules with the following key","text":"<p>when you are integrating a multimodule project with sonarcloud it'll ask you to put below properties in your POM</p> <pre><code>&lt;properties&gt;\n    &lt;sonar.projectKey&gt;someprojectkey&lt;/sonar.projectKey&gt;\n    &lt;sonar.organization&gt;someorg&lt;/sonar.organization&gt;\n    &lt;sonar.host.url&gt;https://sonarcloud.io&lt;/sonar.host.url&gt;\n&lt;/properties&gt;\n</code></pre> <p>but when you run this, sonar will complain with error as follows:</p> <pre><code>Error:  Failed to execute goal org.sonarsource.scanner.maven:sonar-maven-plugin:3.9.0.2155:sonar (default-cli) on project someproject: Project 'someprojectkey' can't have 2 modules with the following key: someprojectkey -&gt; [Help 1]\n</code></pre> <p>solution to this is to add a module key as below along with three properties suggested by sonarcloud:</p> <pre><code>&lt;sonar.moduleKey&gt;${project.groupId}:${project.artifactId}&lt;/sonar.moduleKey&gt;\n</code></pre>"},{"location":"while-coding/sonar-notes/#sonarcloud-analysis-types","title":"Sonarcloud analysis types:","text":"<p>There are two types of analysis supported. Automated and CI based. When you add a new project, sonar will analyse the code and decide whether it should do automatic analysis or not based on these limitations. If sonarcloud finds it ok to do automatic analysis then it'll go ahead and perform it. You'll directly see code quality dashboard. </p> <p>If automatic anaysis is not found suitable, then sonar will ask you to configure CI analysis where you have to make changes in you project to add configurations as suggested by sonar during project onboarding process. </p> <p>Both of these analysis can't be active together. If you want CI based analysis, you have to turn off automatic one. (project-&gt;administration-&gt;analysis types)</p> <p>I suggest CI analysis over automatic as it is easy to setup and gives more control on when a scan should run. For example, automatic analysis only runs on push on master or merge on master. But with CI based scan, you can ask it run for every push on every branch.</p>"},{"location":"while-coding/sonar-notes/#sonar-tokens","title":"Sonar tokens","text":"<p>When you configure CI based analysis, sonar will ask you to add a security token 'SONAR_TOKEN' in your github. Remember that you don't need a separate token for each repo of your org. You can use one token for all the repo by creating an github security token at org level instead of repo level.  - SonarCloud: go to your profile-&gt;security-&gt;generate a new token with any name. Name here doesn't matter, just copy the token value. - github: go to you organization landing page-&gt;security-&gt;create a new org token with name 'SONAR_TOKEN' with value as you copied above. - this github token will be used in the github action workflow yml that you will create.</p>"},{"location":"while-coding/sonar-notes/#excluding-files-from-duplication-check-from-sonar-cloud","title":"excluding files from duplication check from sonar cloud:","text":"<p>Next option is to exclude one of these files from duplication check by adding</p> <pre><code>&lt;sonarcube.cpd.exclusions&gt;\n  your file paths\n&lt;/sonarcube.cpd.exclusions&gt;\n</code></pre> <p>in pom.xml</p> <p>link : https://docs.sonarqube.org/latest/project-administration/narrowing-the-focus/</p>"},{"location":"while-coding/ssl-ssh-notes/","title":"Ssl Ssh Notes","text":"<p>Origins of SSL and TLS: http://tim.dierks.org/2014/05/security-standards-and-name-changes-in.html</p> <p>Basically, TLS has superseded SSL. So, the <code>s</code> in <code>https</code> stands for TLS. But people use SSL/TLS interchangeably because TLS is like SSL 3.1. A minor update on SSL 3.0. And changed name.</p> <p>Are SSL and TLS certificates different? No, they are the same X.509 digital certificates.</p> <p>default port for TLS is 443. Browser knows that so when you request URl using <code>HTTPS</code> and don't specify port, the browser sends it to 443 by default. </p> <p>http://times.usefulinc.com/2008/06/18-cert-maint</p> <p>http://times.usefulinc.com/2008/06/20-secure-ldap</p> <p>How to create key and certificates for SSL ( easy, only run 4 commands on linux ) :</p> <p>http://www.akadia.com/services/ssh_test_certificate.html</p> <p>How to convert .crt and .key in .pem http://stackoverflow.com/questions/991758/how-to-get-an-openssl-pem-file-from-key-and-crt-files</p> <p>openssl x509 -req -days 365 -in server.csr -signkey server.key -out server.crt</p>"},{"location":"while-coding/ssl-ssh-notes/#one-way-and-two-way-ssl","title":"One-way and two-way ssl","text":"<p>ref:https://www.youtube.com/watch?v=ohn89zOcf4M</p> <ul> <li>one-way ssl is when only client authenticates server while server doesn't care about knowing identity of client. Like when you access google.com. Or any other bank site which is https enabled.</li> <li>two-way ssl is when both party want to know and ensure the identity of other party. This is usually when two applications talk to each other. For example, when applications use middle ware like Tibco etc</li> </ul>"},{"location":"while-coding/ssl-ssh-notes/#generating-keypair-csr-cert","title":"Generating keypair -&gt; CSR -&gt; cert","text":"<ul> <li>Keypair : First of all, you create a key-pair, which is a single file that holds your private and public key</li> <li>if you want you can extract public key from this key-pair file to circulate to other parties</li> <li>CSR : From key pair, you generate Certificate Signing Request in a <code>.csr</code> file. This file is sent to certificate authority to request a sign. When you are creating CSR, it'll ask for your details like org name, location data, common name etc. Here, common name is most important input which should be the domain for which you are requesting a signed certificate.</li> <li>Signed certificate : Using details in CSR, and after due diligence, CA will send back a signed certificate. Or you can create your own self signed certificate. Usually with <code>.cer</code> extension. REMEMBER: CA only certifies your public key in form of certificate. Private key will never leave your machine. so a certificate is in short, is your public key with signature of a CA.</li> </ul>"},{"location":"while-coding/ssl-ssh-notes/#certificate-storage","title":"Certificate storage:","text":""},{"location":"while-coding/ssl-ssh-notes/#keystore-vs-truststore","title":"Keystore vs Truststore","text":"<p>Keystore holds private key and certified public key, while truststore hold only certified public keys. In one way SSL, server will have the keystore while client will have the truststore. If certified public key of server exists in trust store of client then client can trust server's identity. </p> <p>Once you have created key-pair and signed certificate (self or CA), you need to import them into Keystore. </p>"},{"location":"while-coding/ssl-ssh-notes/#keystore","title":"Keystore","text":""},{"location":"while-coding/ssl-ssh-notes/#truststore","title":"Truststore","text":""},{"location":"while-coding/ssl-ssh-notes/#steps-in-applying-certs-in-a-client-server-jetty-app","title":"Steps in applying certs in a client-server Jetty app","text":""},{"location":"while-coding/ssl-ssh-notes/#server","title":"server:","text":"<ul> <li>create keypair</li> <li>create self signed cert</li> <li>add these to your server keystore</li> <li>give cert to client app</li> </ul>"},{"location":"while-coding/ssl-ssh-notes/#client","title":"client","text":"<ul> <li>export root, intermediate and publickey cert on your machine</li> <li>now import these certs ( root first, the intermediate and then public key) in trust store. </li> <li>load ( or point your application ) to this truststore.</li> <li>then make call to server</li> </ul>"},{"location":"while-coding/ssl-ssh-notes/#imp-commands-to-work-with-java-keystore-or-truststore","title":"IMP commands to work with java keystore or truststore","text":""},{"location":"while-coding/ssl-ssh-notes/#see-what-is-in-the-keystore","title":"see what is in the keystore","text":"<pre><code>keytool -list -keystore keystore.test.local.jans.io.jks\n</code></pre>"},{"location":"while-coding/ssl-ssh-notes/#ssl-key-vs-ssh-key","title":"SSL key Vs SSH key","text":""},{"location":"while-coding/ssl-ssh-notes/#what-are-they-and-when-they-are-used","title":"what are they and when they are used?","text":"<ul> <li>SSL key: used to send encrypted messages to owner of the private key. Owner of the private key will share the public key with the other party(message sender). Then sender will encrypt a file using public key and then send across to the owner of the private key. Owner of the private key can decrypt. Tool used to create private and public key pair is <code>openssl</code></li> <li>SSH key: used to authenticate SSH session with remote machine. Here, the person needing ssh access to a machine will give a public key to administrator of the server. The admin will add that public key to the target server. Once after this configuration, when the person tries to access the machine using ssh, the protocol will look at private keys stored under <code>~/.ssh/</code> folder to authenticate. Since public key is already there on the server, it will be successful. Tool that is used for generating ssh key is <code>ssh-keygen</code>. By default, your ssh keys are generated under <code>~/.ssh/</code> directory</li> </ul>"},{"location":"while-coding/ssl-ssh-notes/#how-are-they-generated","title":"how are they generated?","text":"<ul> <li>SSL</li> <li>generating private key: <code>openssl genrsa -aes128 -out ~/my-ssl-keys/my-ssl.pem 1024</code></li> <li>getting public key: <code>openssl rsa -in ~/my-ssl-keys/my-ssl.pem -pubout &gt; /tmp/my_public_key-temp.pem</code></li> <li>See the public key: <code>cat /tmp/my_public_key-temp.pem</code></li> <li>SSH</li> <li>generating private key: <code>ssh-keygen -o</code></li> <li>getting corresponding public key: <code>ssh-keygen -y -f private-key-path &gt; my-ssh-pub-key.pub</code></li> </ul>"},{"location":"while-coding/ssl-ssh-notes/#steps-involved-in-getting-ssh-access-to-a-server-from-admin","title":"Steps involved in getting ssh access to a server from admin:","text":"<ul> <li>Give your SSH public key to admin</li> <li>he adds your key to the server</li> <li>You use the command <code>ssh -p 22222 -i path-to-private-key root@www.gluu.org</code></li> </ul>"},{"location":"while-coding/ssl-ssh-notes/#how-admin-can-share-user-id-password-of-something-in-encrypted-format-with-you","title":"How admin can share user id password of something in encrypted format with you","text":"<ul> <li>Give your SSL public key to admin</li> <li>admin will put username and password in a text file</li> <li>He will use your public key to encrypt that text file</li> <li>Send you encrypted text file via chat or email etc</li> <li>You use this command to decrypt the content: <code>openssl rsautl -decrypt -inkey path-to-private-key -in path-to-encrypted-file &gt; path-to-output-file</code> like <code>openssl rsautl -decrypt -inkey ~/my-ssl-keys/my-ssl.pem -in ~/docs/office/gluu/gluu_password_for_gluu_org.enc &gt; gluu_password_for_gluu_org.txt</code></li> </ul>"},{"location":"while-coding/ssl-ssh-notes/#ssh","title":"SSH","text":""},{"location":"while-coding/ssl-ssh-notes/#create-a-keypair","title":"Create a keypair","text":"<p>To create a <code>ed25519</code> key (sites like github and gitlab suggest and accept these keys)</p> <pre><code>ssh-keygen -t ed25519 -C \"my-generic-key\"\n</code></pre> <p>To create an rsa key</p> <pre><code>ssh-keygen -t rsa -b 4096 -C \"your_email@example.com\"\n</code></pre> <ul> <li>commands above will ask for a passphrase. You can leave it blank or if you provide the passphrase, remember it because it'll be asked whenever you try to connect with remote service using this key. Pass phrase like <code>mygenerickey</code></li> </ul> <p>Key pair gets created under <code>~/.ssh/</code> directory in form of two files with same name. One of them has <code>.pub</code> extension as it contains public key.</p> <p>To see and copy the public key (so that you can provide it to github/gitlab etc). Just open the <code>.pub</code> file with <code>vim</code> and copy the content.</p>"},{"location":"while-coding/tools-to-build-command-line-cli/","title":"Building a command line (CLI) module","text":"<p>very good guidelines https://clig.dev/</p>"},{"location":"while-coding/tools-to-build-command-line-cli/#option","title":"Option","text":"<ul> <li>Pythone (Click) REF</li> <li>Bash</li> </ul>"},{"location":"while-coding/vmware-notes/","title":"VMWare Player","text":""},{"location":"while-coding/vmware-notes/#how-can-you-make-two-running-vms-talk-to-each-other","title":"how can you make two running VMs talk to each other","text":"<p>Short answer is that VMs that you created with default configuration will be able to talk to each other automatically. Talk here means being able to access each other via IP. Plus, the ports like 80 and 443 are already open. So, basically IP of VMs are visible from base OS as well as each  other. In the default configuration, network adapter is in NAT mode.</p>"},{"location":"while-coding/vmware-notes/#troubleshooting-vmware-player-error-on-ubuntu","title":"Troubleshooting VMware player error on Ubuntu","text":"<p>error is about vmmon and vmnet modules when you try to start vmware on ubuntu. Solution: https://askubuntu.com/a/1145426</p>"},{"location":"while-coding/vmware-notes/#about-vm-tools","title":"about VM tools","text":"<p>To see vm scree in full screen resolution, you need vmware tools installed on that vm. Using</p> <pre><code>sudo apt-get update\nsudo apt install open-vm-tools-desktop\n</code></pre>"},{"location":"while-coding/vmware-notes/#taking-snapshot","title":"Taking snapshot","text":"<p>https://www.makeuseof.com/vmware-workstation-player-snapshot-free/</p>"},{"location":"while-coding/vscode-notes/","title":"VSCode Notes","text":""},{"location":"while-coding/vscode-notes/#essential-setup-items","title":"Essential setup items","text":"<ul> <li>install gitlens from gitkraken for git history visualization</li> <li>in settings(ctrl+,), search for <code>gpg</code> and enable commit signing for both (user and workspace)</li> <li>in settings(ctrl+,), search for <code>signoff</code> and enable the <code>Git: always sign off</code> for both (user and workspace)</li> </ul>"},{"location":"while-coding/vscode-notes/#shortcuts","title":"Shortcuts","text":"<ul> <li>ctrl+p: find files. It also shows most recently edited files.</li> <li>ctrl+shit+p: command palette</li> <li>ctrl+j: hide/unhide panel</li> <li>ctrl+`: open terminal panel</li> <li>crtl+shift+e: open editor view</li> <li>crtl+shift+f: open find view</li> <li>crtl+shift+g g: open git view</li> <li>ctrl+w: close current open editor file</li> <li>ctrl+k ctrl+w: close all open editor files</li> <li>ctrl+pgup or ctrl+pgdonw: to move between terminals</li> <li>ctrl+b : toggle side bar views (explorer, find, git etc)</li> <li>ctrl+k+p : open list of currently open editors</li> <li>ctrl+tab : cycle through currently open files</li> </ul>"},{"location":"while-coding/vscode-notes/#cloning-a-new-project-from-github","title":"cloning a new project from Github","text":"<ul> <li>From explorer, open the parent folder where you want to store the code</li> <li>now you can either use the command palette and search for <code>git clone</code> to get the code, or use terminal and use git commands to get the code</li> <li>command palette: If you use this, the VScode will require login to the github</li> <li>using terminal it is easy.<ul> <li>go to the parent folder where you want to clone the repo. For example <code>/home/xyz/vscode</code></li> <li>then check if you have a <code>.git</code> directory already there. If it exists, then the parent directory is already initialized. You don't have to run <code>git init</code>. Else run <code>git init</code></li> <li>then run <code>git clone &lt;https-url-for-cloning-the-repo&gt;</code></li> <li>This will create a new directory under the parent with the code from github <code>/home/xyz/vscode/my-repo</code></li> </ul> </li> <li>in vscode, you should download extension from microsoft <code>extension pack for java</code>. This extension pack installs 6 extensions to support java development.</li> </ul>"},{"location":"while-coding/vscode-notes/#enabling-settings-sync","title":"Enabling settings sync","text":"<p>When you turn on sync, your settings are linked to a Microsoft(outlook) or github account. Suppose you have a VSCode on your desktop and you also want same settings on GitHub codespaces. Do the following:</p> <ul> <li>On desktop VSCode</li> <li>Go to <code>settings</code> &gt; <code>backup and sync settings</code></li> <li>Choose what you want to sync and Click on <code>sign in</code></li> <li>Select GH or microsoft account (I have used ossdhavalATTHERATEoutlookDOTcom)</li> <li>and done. You settings sync is turned-on on desktop VSCode</li> <li>On GH codespaces</li> <li>to make sure your codespaces are using the same settings as desktop VScode do following</li> <li>go to GH web</li> <li>settings</li> <li>go to <code>Code, planning, and automation</code> &gt; <code>codespaces</code> section</li> <li>there is a section for <code>settings sync</code>, enable it</li> <li>also, since codespaces open for a particular repo, you have to add repo in the trusted repo list on the same page. Now when you open the codespace for that repo, settings will be synced. </li> </ul>"},{"location":"while-coding/vscode-notes/#references","title":"References","text":"<ul> <li>msft doc for using java in VScode: https://code.visualstudio.com/docs/java/java-tutorial</li> <li>keyboard shortcuts(OS vise): https://code.visualstudio.com/docs/getstarted/tips-and-tricks#_keyboard-reference-sheets</li> </ul>"},{"location":"while-coding/web-tools/","title":"Web tools","text":""},{"location":"while-coding/web-tools/#json-parcing","title":"JSON parcing","text":"<p>https://jsoncrack.com/</p> <p>https://jsonhero.io/</p>"},{"location":"while-coding/web-tools/#prototypingwireframemockups","title":"prototyping/wireframe/mockups","text":"<p>https://grapesjs.com/demo.html</p>"},{"location":"while-coding/web-tools/#video-recording-screen-capture-tutorials","title":"video recording, screen capture, tutorials","text":"<p>clipchamp.com - this is from microsoft. Allows you to download the recorded videos. For text to speech, select the <code>record and create</code> -&gt; select <code>text to speech</code>. For good voice, select <code>Andrew</code> with pace at 80% and default pitch.</p> <p>loom.com - good for recording screen casts and tutorials but doesn't allow download of videos</p> <p>AI image creation from text description: https://designer.microsoft.com/image-creator</p> <p>for auto scrolling scripts: www.speakflow.com</p>"},{"location":"while-coding/web-tools/#product-videos-and-demos","title":"Product videos and demos","text":"<p>https://www.arcade.software/pricing?utm_source=website&amp;utm_medium=nav_bar</p>"},{"location":"while-coding/web-tools/#product-discovery-and-customer-feedback","title":"Product discovery and customer feedback","text":"<p>https://productlane.com/docs/guide/concept</p>"},{"location":"while-coding/yaml/","title":"YAML","text":"<p>YAML: YAML Ain't Markup Language</p> <p>What It Is:   YAML is a human-friendly data serialization   language for all programming languages.</p> <ul> <li>How is it different from json? Json has elements like <code>{</code> and <code>]</code> to define elements. This adds additional elements that makes JSON harder to read and understand by humans.</li> <li>Yaml replaces additional structural elements with spaces. Spaces are really important in yaml.</li> <li>Yaml has following constructs.</li> </ul>"},{"location":"while-coding/yaml/#key-value-pairs","title":"Key value pairs:","text":"<p><pre><code>key:&lt;space&gt;value\n</code></pre> neither key nor value need to be in quotes. Value should be in double quotes only if there is a special character in it. A space is not a special character.</p>"},{"location":"while-coding/yaml/#arrays","title":"Arrays","text":"<p>Arrays just have values and sequence is maintained at retrieval</p> <p>Spacing is not important as long as same spacing is maintained throughout the file.</p> <pre><code>american:\n  - Boston Red Sox\n  - Detroit Tigers\n  - New York Yankees\nnational:\n  - New York Mets\n  - Chicago Cubs\n  - Atlanta Braves\n</code></pre>"},{"location":"while-coding/yaml/#maps","title":"maps","text":"<p>maps/dictionaries have key and values. But sequence is not important.</p> <p>Spacing is not important as long as same spacing is maintained throughout the file.</p> <pre><code>burger:\n  calories: 12\n  price: 15\n</code></pre> <p>you can mix arrays and maps.</p> <pre><code>drinks:\n  - milk:\n      calories: 4\n      price: 3\n  - water:\n      calories: 0\n      price: 0\n</code></pre> <p>```</p>"},{"location":"while-coding/IAM/","title":"IAM","text":"<p>Promoting Janssen:</p> <p>See this article from Auth0. It is a good marketing pitch that covers Auth0 features provide real world benefits. Using this, May be we can find what is missing in Jans, plus we also can write an article like this for Janssen.</p>"},{"location":"while-coding/IAM/OAuth2_oidc_notes/","title":"OAuth 2.0 and OpenID Connect","text":"<ul> <li>OAuth 2.0 and OpenID Connect</li> <li>OAuth 2/2.1<ul> <li>Grant types:</li> <li>Flows:</li> <li>Authorization Code Flow</li> <li>Authorization Code Flow with PKCE</li> <li>Implicit Flow with Form Post</li> <li>Hybrid Flow</li> <li>Client Credentials Flow</li> <li>Device Authorization Flow</li> <li>access token</li> <li>Refresh token</li> <li>HTTP redirection:</li> </ul> </li> <li>OAuth 2.0 Rich Authorization Requests (draft RFC)<ul> <li>Shortforms:</li> </ul> </li> <li>Notes from : https://www.udemy.com/course/enterprise-oauth-for-developers<ul> <li>Usecases:</li> </ul> </li> <li>16,17. Token<ul> <li>OAuth quick data sheet (</li> <li>OpenID Connect data sheet</li> </ul> </li> <li>OpenID Connect<ul> <li>OpenID Connect uses scopes differently</li> <li>Using keycloak to protect an app with angular frontend and Java backend</li> </ul> </li> <li>OAuth and OpenId Connect</li> <li>Client Registration<ul> <li>What is the purpose of <code>client</code> in OAuth Vs OIDC</li> <li>Client authentication</li> <li>Shared secret<ul> <li>client_secret_basic</li> </ul> </li> <li>client_secret_post</li> <li>client_secret_jwt</li> <li>private_key_jwt</li> <li>Few more</li> <li>Considerations for FAPI</li> <li>Subject type</li> <li>Sector identifier uri</li> <li>Grant</li> <li>Response types</li> <li>suppress authorization</li> <li>Redirect URIs</li> <li>Redirect regex</li> <li>Scopes</li> <li>access token type</li> <li>include claims in id_token</li> <li>run introspection script before JWT access token creation</li> <li>token binding confirmation method for id_token</li> <li>access token additional audiences</li> <li>access token lifetime</li> <li>refresh token lifetime</li> <li>Default max auth age</li> <li>Front channel logout uri</li> <li>post logout redirect uris</li> <li>Back channel logout uri</li> <li>Front channel logout session required</li> <li>Back channel logout session required</li> <li>contacts</li> <li>authorized JS origins</li> <li>software id</li> <li>software version</li> <li>software statement</li> <li>ciba</li> <li>token delivery method</li> <li>client notification endpoint</li> <li>require user code param</li> <li>PAR</li> <li>Request lifetime: zero default</li> <li>request PAR : check box</li> <li>UMA</li> <li>PRT token type</li> <li>claim redirect URI: text box</li> <li>RPT modification script: text box</li> </ul> </li> <li>Encryption/signing<ul> <li>client jwks uri: text</li> <li>client jwks: text</li> <li>other settings for algo: select</li> </ul> </li> <li>advance client properties<ul> <li>Default prompt login: checkbox</li> <li>persist authorizations: checkbox</li> <li>Allow spontaneous scopes: checkbox</li> <li>spontaneous scope validation regex: text</li> <li>initial login URI</li> <li>request URIs: text</li> <li>Default acr: text</li> <li>allowed acr: text</li> <li>TLS subject DN: text</li> <li>Client expiration date: select</li> </ul> </li> <li>client scripts<ul> <li>Spontaneous scopes: text</li> <li>Update token: text</li> <li>post authn: text</li> <li>instrospection: text</li> <li>password grant: text</li> <li>oauth consent: text</li> <li>Data collected during registration</li> <li>Mandatory</li> <li>Mandatory with Default Values</li> <li>optional</li> </ul> </li> <li>Dynamic Client Registration (RFC 7591) notes:</li> <li>other references</li> <li>Assertion</li> <li>Software Statement<ul> <li>In Authenticating Client</li> <li>In Dynamic Client Registration</li> </ul> </li> <li>Software Statement Assertions (SSA)</li> <li>JWT usecases<ul> <li>in authorization grant</li> <li>in client authentication</li> <li>in dynamic client registration</li> <li>what is special about software statement</li> </ul> </li> <li>All flows<ul> <li>Device authorization Grant</li> </ul> </li> <li>Important Terms</li> </ul>"},{"location":"while-coding/IAM/OAuth2_oidc_notes/#oauth-221","title":"OAuth 2/2.1","text":"<p>(oauth 2) and oauth 2.1</p>"},{"location":"while-coding/IAM/OAuth2_oidc_notes/#grant-types","title":"Grant types:","text":"<p>What is <code>Grant</code> in <code>grant type</code> : Basically, these are different ways of getting Granted an access token. All grant types has only one aim: to get access token. Because of different types of clients (confidential(backend) vs Public(SPA, mobile phone and desktop based native apps)) have different capabilities of protecting access tokens, there are different grant types.</p> <p>Grant types become part of request to token endpoint, with parameter, <code>grant_type</code> and </p> <p>1) Authorization code   - Uses an authorization server   - benefit: protects access token by not sharing it with user agent and uses authorization code to do that   - benefit: also authenticates client when it requests access token using authorization code   - downside: more round trips than implicit flow   - Authorization code -&gt; access token -&gt; </p> <p>2) Client credentials   - client acts on its own to access resources from resource server which are owned by client      itself. i.e. when client is the resource owner</p> <p>3) Refresh token:   - This grant type is used when request is sent to token endpoint, with request parameter <code>grant_type=refresh_token</code> and refresh token, to get a new access token.      refer: https://www.oauth.com/oauth2-servers/making-authenticated-requests/refreshing-an-access-token/#:~:text=To%20use%20the%20refresh%20token,the%20client%20credentials%20if%20required.</p> <p>4) Implicit : </p> <p>Note: Though pure implicit grant is discouraged and removed in oauth 2.1. You can safely use variant like Implicit Flow with Form Post when you just want an ID token and don't want to get an access token to access resources later. If your usecases also need to request access token as well then use Authorization code with PKCE</p> <ul> <li>used by client application that are built in scripting languages</li> <li>it doesn't use authorization code and directly gives out access token to user-agent</li> <li>benefit: more efficient than <code>authorization code</code> grant type as there are less roundtrips</li> <li>downside: less secure as access code is shared with user-agent</li> </ul> <p>5) Password credentials (removed in oAuth 2.1 - only used for if client app is trusted app. use auth code grant with pkce)   - resource owner gives user-id/password credentials to client application once and client app uses these      credentials to get a long-lived access token   - client doesn't store resource owner credentials once it has an access token or refresh token   - benefit: simplified workflown when dealing with a trusted client   - downside: very insecure as client gets the credentials</p> <p>6) Extension Grants As defined in: https://datatracker.ietf.org/doc/html/draft-ietf-oauth-v2-1-07#section-4.4</p> <p>Auth server can define and many other RFCs have created their own standard extension grants. For example, here the device code grant RFC defines it's own grant (extension grant) <code>urn:ietf:params:oauth:grant-type:device_code</code>.</p>"},{"location":"while-coding/IAM/OAuth2_oidc_notes/#flows","title":"Flows:","text":"<p>Ref for below content: https://auth0.com/docs/get-started/authentication-and-authorization-flow</p> <ul> <li>There are two things that decide what flow are you using</li> <li><code>response_type=</code> param in request to <code>authorize</code> endpoint</li> <li><code>grant_type=</code> param in request to <code>token</code> endpoint</li> </ul> flow response type grant other imp params comments Authorization Code Flow <code>code</code> <code>authorization_code</code> <code>scope</code> Suitable when you have a <code>confidential</code> client that can safely store client credentials, like an app running on server Authorization Code Flow with PKCE <code>code</code> <code>authorization_code</code> <code>code_challenge</code>, <code>code_challenge_method</code>, <code>scope</code> Use this grant type for applications that cannot store a client secret, such as native or single-page apps Implicit Flow with Form Post <code>id_token token</code> - - Suitable when application just needs user details(id_token) and doesn't need to request access token from token endpoint to make API calls Hybrid Flow <code>code id_token token</code> <code>authorization_code</code> - comments Client Credentials Flow - <code>client_credentials</code> other imp params comments Device Authorization Flow - <code>urn:ietf:params:oauth:grant-type:device_code</code> other imp params comments Resource Owner Password Flow - <code>password</code> other imp params comments <p>Usually, type of grant is the also the flow that you are using. But there can be flows that use combination of grants. Like hybrid flow.</p>"},{"location":"while-coding/IAM/OAuth2_oidc_notes/#authorization-code-flow","title":"Authorization Code Flow","text":"<ul> <li>Request to get the code from authorize endpoint</li> </ul> <p><code>json     https://{yourDomain}/authorize?     response_type=code&amp;     client_id={yourClientId}&amp;     redirect_uri={https://yourApp/callback}&amp;     scope=openid%20profile&amp;     state=xyzABC123\"</code></p> <ul> <li>Response should be similar to </li> </ul> <pre><code>  HTTP/1.1 302 Found\n  Location: {https://yourApp/callback}?code={authorizationCode}&amp;state=xyzABC123\n</code></pre> <ul> <li>Request token to token endpoint</li> </ul> <pre><code>curl --request POST \\\n--url 'https://{yourDomain}/oauth/token' \\\n--header 'content-type: application/x-www-form-urlencoded' \\\n--data grant_type=authorization_code \\\n--data 'client_id={yourClientId}' \\\n--data 'client_secret={yourClientSecret}' \\\n--data 'code=yourAuthorizationCode}' \\\n--data 'redirect_uri={https://yourApp/callback}'\n</code></pre> <ul> <li>Response from token endpoint</li> </ul> <pre><code>{\n\"access_token\": \"eyJz93a...k4laUWw\",\n\"refresh_token\": \"GEbRxBN...edjnXbL\",\n\"id_token\": \"eyJ0XAi...4faeEoQ\",\n\"token_type\": \"Bearer\"\n}\n</code></pre>"},{"location":"while-coding/IAM/OAuth2_oidc_notes/#authorization-code-flow-with-pkce","title":"Authorization Code Flow with PKCE","text":"<ul> <li>Request to get the code from authorize endpoint</li> </ul> <p><code>json   https://{yourDomain}/authorize?   response_type=code&amp;   code_challenge=E9Melhoa2OwvFrEMTJguCHaoeK1t8URWbuGJSstw-cM&amp;   code_challenge_method=S256&amp;   client_id={yourClientId}&amp;   redirect_uri={yourCallbackUrl}&amp;   scope=openid%20profile&amp;   state=xyzABC123</code></p> <ul> <li>Response should be similar to</li> </ul> <pre><code>HTTP/1.1 302 Found\nLocation: {yourCallbackUrl}?code={authorizationCode}&amp;state=xyzABC123\n</code></pre> <ul> <li>Request token to token endpoint</li> </ul> <pre><code>curl --request POST \\\n--url 'https://{yourDomain}/oauth/token' \\\n--header 'content-type: application/x-www-form-urlencoded' \\\n--data grant_type=authorization_code \\\n--data 'client_id={yourClientId}' \\\n--data 'code_verifier={yourGeneratedCodeVerifier}' \\\n--data 'code={yourAuthorizationCode}' \\\n--data 'redirect_uri={https://yourApp/callback}'\n</code></pre> <ul> <li>Response from token endpoint</li> </ul> <pre><code>https://{yourDomain}/authorize?\nresponse_type=code&amp;\ncode_challenge=E9Melhoa2OwvFrEMTJguCHaoeK1t8URWbuGJSstw-cM&amp;\ncode_challenge_method=S256&amp;\nclient_id={yourClientId}&amp;\nredirect_uri={yourCallbackUrl}&amp;\nscope=openid%20profile&amp;\nstate=xyzABC123\n</code></pre>"},{"location":"while-coding/IAM/OAuth2_oidc_notes/#implicit-flow-with-form-post","title":"Implicit Flow with Form Post","text":"<ul> <li>Request to get the code from authorize endpoint</li> </ul> <p><code>json   https://{yourDomain}/authorize?   response_type=id_token token&amp;   response_mode=form_post&amp;   client_id={yourClientId}&amp;   redirect_uri={https://yourApp/callback}&amp;   scope=read:tests&amp;   state=xyzABC123&amp;   nonce=eq...hPmz</code></p> <ul> <li>Response should be similar to</li> </ul> <pre><code>HTTP/1.1 302 Found\n  Content-Type: application/x-www-form-urlencoded\n  id_token=eyJ...acA&amp;\n  state=xyzABC123\n</code></pre>"},{"location":"while-coding/IAM/OAuth2_oidc_notes/#hybrid-flow","title":"Hybrid Flow","text":"<ul> <li>Request to get the code from authorize endpoint</li> </ul> <p><code>json   https://{yourDomain}/authorize?   response_type=code id_token token&amp;   client_id={yourClientId}&amp;   redirect_uri={https://yourApp/callback}&amp;     scope=appointments%20contacts&amp;   audience=appointments:api&amp;   state=xyzABC123&amp;   nonce=eq...hPmz</code></p> <ul> <li>Response should be similar to</li> </ul> <pre><code>  HTTP/1.1 302 Found\n  Content-Type: application/x-www-form-urlencoded\n  code=AUTHORIZATION_CODE&amp;\n  access_token=ey...MhPw\n  &amp;expires_in=7200\n  &amp;token_type=Bearer\n  id_token=eyJ...acA&amp;\n  state=xyzABC123\n</code></pre> <ul> <li> <p>Request token to token endpoint</p> <pre><code>curl --request POST \\\n--url 'https://{yourDomain}/oauth/token' \\\n--header 'content-type: application/x-www-form-urlencoded' \\\n--data grant_type=authorization_code \\\n--data 'client_id={yourClientId}' \\\n--data 'client_secret={yourClientSecret}' \\\n--data 'code=yourAuthorizationCode}' \\\n--data 'redirect_uri={https://yourApp/callback}'\n</code></pre> </li> <li> <p>Response from token endpoint</p> </li> </ul> <pre><code>{\n\"access_token\": \"eyJz93a...k4laUWw\",\n\"refresh_token\": \"GEbRxBN...edjnXbL\",\n\"id_token\": \"eyJ0XAi...4faeEoQ\",\n\"token_type\": \"Bearer\"\n}\n</code></pre>"},{"location":"while-coding/IAM/OAuth2_oidc_notes/#client-credentials-flow","title":"Client Credentials Flow","text":"<ul> <li>Request token to token endpoint</li> </ul> <pre><code>curl --request POST \\\n--url 'https://{yourDomain}/oauth/token' \\\n--header 'content-type: application/x-www-form-urlencoded' \\\n--data grant_type=client_credentials \\\n--data client_id=YOUR_CLIENT_ID \\\n--data client_secret=YOUR_CLIENT_SECRET \\\n--data audience=YOUR_API_IDENTIFIER\n</code></pre> <ul> <li>Response from token endpoint</li> </ul> <pre><code>{\n\"access_token\":\"eyJz93a...k4laUWw\",\n\"token_type\":\"Bearer\",\n\"expires_in\":86400\n}\n</code></pre>"},{"location":"while-coding/IAM/OAuth2_oidc_notes/#device-authorization-flow","title":"Device Authorization Flow","text":"<ul> <li>Request from the device to device code endpoint to get device code </li> </ul> <p><code>json   curl --request POST \\   --url 'https://{yourDomain}/oauth/device/code' \\   --header 'content-type: application/x-www-form-urlencoded' \\   --data 'client_id={yourClientId}' \\   --data 'scope={scope}' \\   --data 'audience={audience}'</code></p> <ul> <li>Response should be similar to</li> </ul> <pre><code>{\n\"device_code\": \"Ag_EE...ko1p\",\n\"user_code\": \"QTZL-MCBW\",\n\"verification_uri\": \"https://accounts.acmetest.org/activate\",\n\"verification_uri_complete\": \"https://accounts.acmetest.org/activate?user_code=QTZL-MCBW\",\n\"expires_in\": 900,\n\"interval\": 5\n}\n</code></pre> <ul> <li>Polling request from the device to token endpoint to get the token  </li> </ul> <pre><code>curl --request POST \\\n--url 'https://{yourDomain}/oauth/token' \\\n--header 'content-type: application/x-www-form-urlencoded' \\\n--data grant_type=urn:ietf:params:oauth:grant-type:device_code \\\n--data 'device_code={yourDeviceCode}' \\\n--data 'client_id={yourClientId}'\n</code></pre> <ul> <li>response should be similar to </li> </ul> <pre><code>{\n\"error\": \"authorization_pending\",\n\"error_description\": \"...\"\n}\n</code></pre> <p>\"error\" values can be <code>slow_down</code>, <code>access_denied</code>, <code>expired_token</code></p> <p>or when user successfully authorizes via browser, the next polling request from device gets below response</p> <p><code>json   {   \"access_token\":\"eyJz93a...k4laUWw\",   \"refresh_token\":\"GEbRxBN...edjnXbL\",   \"id_token\": \"eyJ0XAi...4faeEoQ\",   \"token_type\":\"Bearer\",   \"expires_in\":86400  }</code></p>"},{"location":"while-coding/IAM/OAuth2_oidc_notes/#resource-owner-password-flow","title":"Resource Owner Password Flow","text":"<ul> <li>Request token to token endpoint</li> </ul> <pre><code>curl --request POST \\\n--url 'https://{yourDomain}/oauth/token' \\\n--header 'content-type: application/x-www-form-urlencoded' \\\n--data grant_type=password \\\n--data 'username={username}' \\\n--data 'password={password}' \\\n--data 'audience={yourApiIdentifier}' \\\n--data scope=read:sample \\\n--data 'client_id={yourClientId}' \\\n--data 'client_secret={yourClientSecret}'\n</code></pre> <ul> <li>Response from token endpoint</li> </ul> <pre><code>{\n\"access_token\": \"eyJz93a...k4laUWw\",\n\"refresh_token\": \"GEbRxBN...edjnXbL\",\n\"id_token\": \"eyJ0XAi...4faeEoQ\",\n\"token_type\": \"Bearer\",\n\"expires_in\": 36000\n}\n</code></pre>"},{"location":"while-coding/IAM/OAuth2_oidc_notes/#access-token","title":"access token","text":"<ul> <li>Access token is created by authorization server, given to client to access resources on resource server.</li> <li>Access token can be opaque or structured token.</li> <li>Authorization server creates an access token. It also specifies a life time duration for token when      creating it. A background process on authorization server keeps on checking tokens and expires them as their lifetime ends.</li> <li>Janssen supports one token type which is bearer token as      described in this RFC6750</li> </ul>"},{"location":"while-coding/IAM/OAuth2_oidc_notes/#refresh-token","title":"Refresh token","text":"<ul> <li>refresh token is issued by authorization server at the time of issueing access token but this is not mendatory.</li> <li>once access token expires, the client can present refresh token to authorization server(AS) to get a new access token.</li> <li>client can also present refresh token to AS to get more access tokens with same or less priviledges</li> </ul>"},{"location":"while-coding/IAM/OAuth2_oidc_notes/#http-redirection","title":"HTTP redirection:","text":"<ul> <li>This specification makes extensive use of HTTP redirections, in which the client or the      authorization server directs the resource owner's user-agent to another destination. While the      examples in this specification show the use of the HTTP 302 status code, any other method available via the      user-agent to accomplish this redirection is allowed and is considered to be an implementation detail.</li> </ul>"},{"location":"while-coding/IAM/OAuth2_oidc_notes/#dpop","title":"DPoP","text":"<p>spec: https://www.ietf.org/archive/id/draft-ietf-oauth-dpop-16.html</p> <p>DPoP is used when MTLS can't be used. I.e in single page applications. Purpose of both DPoP and MTLS is to ensure that the access token in the request is being used by the client to which it was originally issued and not by someone who stole it. This is called <code>sender-constrained</code> token. DPoP is a method of creating such sender constrained access tokens.</p> <p>DPoP tokens are bound to the HTTP request and cannot be reused across different requests. This significantly reduces the risk of token theft and misuse. OAuth 2.0 access tokens are typically bearer tokens, which means anyone with possession of the token can use it.</p> <pre><code>The main data structure introduced by this specification is a DPoP proof JWT, described in detail below, which is sent as a header in an HTTP request. A client uses a DPoP proof JWT to prove the possession of a private key corresponding to a certain public key.\n\nRoughly speaking, a DPoP proof is a signature over some data of the HTTP request to which it is attached, a timestamp, a unique identifier, an optional server-provided nonce, and a hash of the associated access token when an access token is present within the request.\n</code></pre> <p>Using DPoP means, client sending DPoP proof when requesting a new access token, plus client sendig DPoP proof along with access token to access the protected resources. The DPoP proof is sent as value of request header <code>DPoP</code>. DPoP proofs(JWT) used in both steps are generated by client using a slightly different methods. The payload differs in both cases. In the first case (while requesting a new access token), the dpop proof JWT payload doesn't have hash created from access token. In the second case (while requesting a protected resource), the DPoP proof has the hash of the access token in it's payload. </p> <p>So, DPoP proof can be generated by client, and it is a JWT. (this JWT is created by HTTP request data (API that client want to access), timestamp, a unique id and optionally a server nonce, plus access token hash if request is also having the <code>Bearer</code> header with access token. And sign all these data elements using private key to create a JWT.</p>"},{"location":"while-coding/IAM/OAuth2_oidc_notes/#oauth-20-rich-authorization-requests-draft-rfc","title":"OAuth 2.0 Rich Authorization Requests (draft RFC)","text":"<p>Interpretation of the value of the \"type\" parameter, and the object    elements that the \"type\" parameter allows, is under the control of    the AS.</p> <p>change areas:</p> <ul> <li>Authorization requests as specified in [RFC6749],</li> <li>Device Authorization Request as specified in [RFC8628],</li> <li>Backchannel Authentication Requests as defined in [OpenID.CIBA].</li> </ul>"},{"location":"while-coding/IAM/OAuth2_oidc_notes/#shortforms","title":"Shortforms:","text":"<p><code>RP</code>: Relying Party (client) <code>OP</code>: OpenID provider</p>"},{"location":"while-coding/IAM/OAuth2_oidc_notes/#notes-from-httpswwwudemycomcourseenterprise-oauth-for-developers","title":"Notes from : https://www.udemy.com/course/enterprise-oauth-for-developers","text":""},{"location":"while-coding/IAM/OAuth2_oidc_notes/#usecases","title":"Usecases:","text":"<ol> <li>Introduction</li> <li>Websites asking you to login using facebook/google login</li> <li>email clients like outlook on your windows desktop that wants to aggregate emails from gmail, yahoo, etc</li> <li>TV that gives you a code to enter into a mobile app in order to log into tv app</li> <li>sites that aggregate hotel data and in order to show you cheapest rentals</li> <li> <p>finance apps taht show your finances at one place</p> </li> <li> <p>Security basics (Authentication and Authorization)</p> </li> <li>Service provider: This is the target application that is being protected. Authorization is responsibility of service provider</li> <li>Identity provider: takes care of authentication. Like active directory, LDAP etc</li> <li>service provider and identity provider could be in different data-centers. Like in enterprise app deployed in public cloud where user authentication is performed by on-prem cloud application of security reasons.</li> </ol> <p>6.   - Sending username-password to service provider is not good practice rather it should be sent directly to Identity provider</p> <ol> <li>SAML</li> <li>SAML addresses two issues<ul> <li>LDAP has to be in the same data-center</li> <li>User has to enter credentials manually</li> </ul> </li> <li>SAML flow depends on browser redirects, so only browser based users can be authenticated</li> <li>SAML uses xml to send data in request and response</li> <li> <p>SAML uses encrypted tokens so SAML identity provider and application Service provider need to have each others certificates in order to decrypt tokens</p> </li> <li> <p>Enterprise problem usecases</p> </li> <li>Securing the REST APIs. One way is to send SAML token in every request but this is not feasible as token is too large plus the REST API will have to store SAML metadata.</li> <li>Plus, when a process (lick cron job) is calling REST API, how can cron job get a SAML token?</li> <li> <p>SAML is great for implementing SSO in enterprise, but it can't hadle rest APIs authentication in an enterprise. </p> </li> <li> <p>Client registration</p> </li> <li>client registration is first step that any app has to perform in order to integrate an oauth flow</li> <li>In this process, client registers with oauth authorization server by furnishing various details and most importantly redirect urls. Details required for registration can change from oauth provider to provider. Like, okta might have different ask from authO.</li> <li>in response to registration, the client app gets two things client id and client secret. </li> <li> <p>This ID and secret are required to be sent to authorization server by client everytime client send resource owner's request for authorization </p> </li> <li> <p>Tokens</p> </li> <li>Tokens are of two types: Opaque and Structured<ul> <li>Opaque tokens are a randomly generated alpha-numeric string. It can be utilised by authorization server as access token. It is opaque as it doesn't contain any information about token itself. Like expiry time, who is the subject, scopes for which it was authorized etc. When client sends request to (by putting token in <code>Authorization: bearer &lt;token&gt;</code> request header) resource server to access resources with a opaque token, the resource server has to call authorization server to get details about token. This adds to performance problems. </li> <li>Structured token: This is second type of token that can be used as access token by autho server. This token, has jwt format and describes itself. On decoding it, resource server can get all the information like expiry, scopes etc. without needing to go to autho server. This token is signed by autho server using it's private key and resource server can varify this using public key. This token is also sent to resource server by client by putting token in <code>Authorization: bearer &lt;token&gt;</code> request header</li> </ul> </li> </ol> <p>16,17. Token   - </p>"},{"location":"while-coding/IAM/OAuth2_oidc_notes/#oauth-quick-data-sheet","title":"OAuth quick data sheet (","text":"<ul> <li>response_type : <code>code</code>, <code>token</code></li> <li>grant_type : <code>authorization_code</code>, <code>refresh_token</code>, <code>ropc</code>, <code>client_credentials</code></li> <li>scope : no specific values</li> <li>token : <code>access_token</code>, <code>refresh_token</code></li> <li>No identifiers from resource_owners(users)</li> <li>No resource enpoints</li> </ul>"},{"location":"while-coding/IAM/OAuth2_oidc_notes/#openid-connect-data-sheet","title":"OpenID Connect data sheet","text":"<ul> <li>response_type : <code>code</code>, <code>token</code>, <code>id_token</code> and any combination of these three for example <code>code id_token</code> or all three <code>code id_token token</code>. Note: as <code>implicite flow</code> is discouraged, try not to use any flow that involves <code>token</code> response type in authorization request.</li> <li>grant_type : <code>authorization_code</code>, <code>refresh_token</code>, OIDC has removed <code>ropc</code>, <code>client_credentials</code> scopes. </li> <li>scope : <code>openid</code> (this acts like a signal for auth server that this request is OIDC request and all other things like scopes and grant types should be processed with reference to OIDC. Without this scope, the request is treated as OAuth2 request), <code>profile</code>, <code>email</code>, <code>phone</code>, <code>address</code></li> <li>token : <code>access_token</code>, <code>refresh_token</code>, <code>id_token</code>(JWT)</li> <li>identifiers from resource_owners(users) : can get it through <code>id_token</code></li> <li>resource enpoints : /userinfo</li> </ul> <p>Reference: - very good understanding of OIDC with respect to OAuth: </p> <p>https://www.youtube.com/watch?v=VI3G4Quzsb8</p>"},{"location":"while-coding/IAM/OAuth2_oidc_notes/#openid-connect","title":"OpenID Connect","text":"<p>OpenID Connect is <code>authentication</code> layer on top of OAuth 2. Why 'on top of'? that is because OIDC adds one more token and few scopes within Oauth flows.</p> <p>OIDC has three flows:</p> <p>OIDC adds more scopes: - <code>openid</code>: requests <code>id token</code> from auth server. ID token is just a JSON token which contains basic information about user - <code>email</code>: requests auth server to add email information to <code>id token</code></p> <p>OIDC adds <code>id token</code> - ID token is just a JSON token which contains basic information about user - so if you have mentioned <code>openid</code> scope, then in auth-code flow, when you request access token from auth server using auth-code, auth server will send you id token along with access token. - </p>"},{"location":"while-coding/IAM/OAuth2_oidc_notes/#openid-connect-uses-scopes-differently","title":"OpenID Connect uses scopes differently","text":"<p>https://openid.net/specs/openid-connect-core-1_0.html#ScopeClaims</p> <p>Scopes are used to control what information about user should be returned by the userinfo endpoint. As scopes are associated with access token, the OP can look at token, find out the scopes and release information accordingly from userinfo endpoint response.</p> <p>profile: OPTIONAL. This scope value requests access to the End-User's default profile Claims, which are: name, family_name, given_name, middle_name, nickname, preferred_username, profile, picture, website, gender, birthdate, zoneinfo, locale, and updated_at.</p> <p>email: OPTIONAL. This scope value requests access to the email and email_verified Claims.</p> <p>address: OPTIONAL. This scope value requests access to the address Claim.</p> <p>phone: OPTIONAL. This scope value requests access to the phone_number and phone_number_verified Claims.</p>"},{"location":"while-coding/IAM/OAuth2_oidc_notes/#using-keycloak-to-protect-an-app-with-angular-frontend-and-java-backend","title":"Using keycloak to protect an app with angular frontend and Java backend","text":"<ul> <li>Here you can use it in two ways, one is to use standard <code>authorization code</code> flow and other is to use <code>authorization code flow wit PKCE</code></li> </ul>"},{"location":"while-coding/IAM/OAuth2_oidc_notes/#oauth-and-openid-connect","title":"OAuth and OpenId Connect","text":"<ul> <li>Since openid connect is built on top of oauth, there can not be an implementation of OIDC only. All the servers are      oauth first and then OIDC is developed on top of that. So, every OP(OpenId Connect Provider) is also an oauth provider.</li> <li>similarly, there can not be a client that is only oidc client. Rather, OIDC spec doesn't have definition of OIDC client.      An oauth client that requires users to be authenticated is called an RP (relying party). Hence there are no two flavors     of clients at the time of registration.</li> <li>When in Oauth context, refer to server as AS(Authorization Server) and client as client. When talking about OIDC,     refer to server as OP (OIDC provider) and client as RP (relying party)</li> </ul>"},{"location":"while-coding/IAM/OAuth2_oidc_notes/#client-registration","title":"Client Registration","text":""},{"location":"while-coding/IAM/OAuth2_oidc_notes/#what-is-the-purpose-of-client-in-oauth-vs-oidc","title":"What is the purpose of <code>client</code> in OAuth Vs OIDC","text":"<ul> <li>In OIDC, <code>client</code> is a server(called relying party) that wants to protect resources on resource server (RS) using authentication</li> <li>In OAuth, <code>client</code> is a third party app server which wants to access resources in RP/RS</li> </ul> <p>Major aspects of client registration is mentioned in the OAuth spec.  Important points are as below:</p> <ul> <li>Before initiating the protocol, the client registers with the authorization server.</li> <li>If the client registers as <code>confidential</code> client, it has to authenticate itself everytime it requests for an access token      at the token endpoint</li> </ul>"},{"location":"while-coding/IAM/OAuth2_oidc_notes/#client-authentication","title":"Client authentication","text":"<p>(In Jans, this defaults to <code>client_secret_basic</code>)</p> <p>Ref:     -   https://darutk.medium.com/oauth-2-0-client-authentication-4b5f929305d4     -   https://connect2id.com/products/server/docs/guides/oauth-client-authentication#credential-types</p> <p>OAuth spec does not details out how client authenticates with authz server , but mentions few methods as guidelines.</p> <p>OIDC spec gives more details. Janssen supports all four authentication methods(client_secret_basic(default), client_secret_post, client_secret_jwt,  as per )</p> <p>Authn methods can be broadly classified in Two types: -   Shared secret (client_secret_basic(default), client_secret_post, client_secret_jwt) -   Private key (private_key_jwt)</p>"},{"location":"while-coding/IAM/OAuth2_oidc_notes/#shared-secret","title":"Shared secret","text":""},{"location":"while-coding/IAM/OAuth2_oidc_notes/#client_secret_basic","title":"client_secret_basic","text":"<p>Refer 1.4 in this</p>"},{"location":"while-coding/IAM/OAuth2_oidc_notes/#client_secret_post","title":"client_secret_post","text":"<p>Refer 1.3 in this</p>"},{"location":"while-coding/IAM/OAuth2_oidc_notes/#client_secret_jwt","title":"client_secret_jwt","text":"<p>Refer 1.5 in this</p>"},{"location":"while-coding/IAM/OAuth2_oidc_notes/#private_key_jwt","title":"private_key_jwt","text":"<p>Refer 1.6 in this</p>"},{"location":"while-coding/IAM/OAuth2_oidc_notes/#few-more","title":"Few more","text":"<p>Refer 1.7 and 1.8 in this</p>"},{"location":"while-coding/IAM/OAuth2_oidc_notes/#considerations-for-fapi","title":"Considerations for FAPI","text":"<p>Refer 3. in this</p>"},{"location":"while-coding/IAM/OAuth2_oidc_notes/#subject-type","title":"Subject type","text":"<p>(Jans default: public) Defined by OIDC REF </p>"},{"location":"while-coding/IAM/OAuth2_oidc_notes/#sector-identifier-uri","title":"Sector identifier uri","text":"<p>(jans defaul: blank) Defined by OIDC section 8.1 REF</p>"},{"location":"while-coding/IAM/OAuth2_oidc_notes/#grant","title":"Grant","text":"<p>Jans Default selected on TUI: None </p> <p>Jans supports:  </p> <p>\"authorization_code\", \"refresh_token\", \"client_credentials\", \"urn:openid:params:grant-type:ciba\", \"urn:ietf:params:oauth:grant-type:uma-ticket\", \"implicit\", \"password\", \"urn:ietf:params:oauth:grant-type:token-exchange\", \"urn:ietf:params:oauth:grant-type:device_code\"</p> <p>Relationship between Grant Types and Response Types</p>"},{"location":"while-coding/IAM/OAuth2_oidc_notes/#response-types","title":"Response types","text":"<p>Jans Default selected on TUI: None</p> <p>Jans supports: all combinations of <code>code</code>, <code>token</code> and <code>id_token</code></p> <p>\"id_token\", \"token\", \"code\", \"id_token token code\", \"token code\", \"id_token token\", \"id_token code\"</p> <p>Relationship between Grant Types and Response Types</p> <p>Relation between response types and response modes</p>"},{"location":"while-coding/IAM/OAuth2_oidc_notes/#suppress-authorization","title":"suppress authorization","text":"<p>??</p>"},{"location":"while-coding/IAM/OAuth2_oidc_notes/#redirect-uris","title":"Redirect URIs","text":""},{"location":"while-coding/IAM/OAuth2_oidc_notes/#redirect-regex","title":"Redirect regex","text":""},{"location":"while-coding/IAM/OAuth2_oidc_notes/#scopes","title":"Scopes","text":"<p>------------ items below are in token category in tui --------</p>"},{"location":"while-coding/IAM/OAuth2_oidc_notes/#access-token-type","title":"access token type","text":"<p>Jans Default selected on TUI: JWT</p> <p>Jans supports <code>JWT</code> or <code>Reference</code> types. </p>"},{"location":"while-coding/IAM/OAuth2_oidc_notes/#include-claims-in-id_token","title":"include claims in id_token","text":"<p>Jans Default selected on TUI: blank checkbox</p>"},{"location":"while-coding/IAM/OAuth2_oidc_notes/#run-introspection-script-before-jwt-access-token-creation","title":"run introspection script before JWT access token creation","text":"<p>Jans Default selected on TUI: blank checkbox</p>"},{"location":"while-coding/IAM/OAuth2_oidc_notes/#token-binding-confirmation-method-for-id_token","title":"token binding confirmation method for id_token","text":"<p>Jans Default selected on TUI: blank checkbox</p> <p>RFCs for token binding:</p> <p>https://www.rfc-editor.org/rfc/rfc8471</p> <p>https://www.rfc-editor.org/rfc/rfc8473</p> <p>https://openid.net/specs/openid-connect-token-bound-authentication-1_0.html</p> <p>for quick understanding of what token binding is, read the first few paragraphs in below:</p> <p>https://medium.facilelogin.com/oauth-2-0-token-binding-e84cbb2e60</p>"},{"location":"while-coding/IAM/OAuth2_oidc_notes/#access-token-additional-audiences","title":"access token additional audiences","text":"<ul> <li>see why access token needs audience: https://openid.net/specs/openid-connect-core-1_0.html#AccessTokenRedirect</li> <li>what is audience: https://www.youtube.com/watch?v=LdyeC9Il3Cs</li> </ul> <p>Jans Default selected on TUI: blank</p>"},{"location":"while-coding/IAM/OAuth2_oidc_notes/#access-token-lifetime","title":"access token lifetime","text":""},{"location":"while-coding/IAM/OAuth2_oidc_notes/#refresh-token-lifetime","title":"refresh token lifetime","text":""},{"location":"while-coding/IAM/OAuth2_oidc_notes/#default-max-auth-age","title":"Default max auth age","text":"<p>------------ items below are in Logout category in tui --------</p> <p>Logout is OIDC thing. Not OAuth.</p> <p>To understand logout, understanding session management (spec) is important.</p> <pre><code>This specification complements the OpenID Connect Core 1.0 [OpenID.Core] specification by defining how to monitor \nthe End-User's login status at the OpenID Provider on an ongoing basis so that the Relying Party can log out an \nEnd-User who has logged out of the OpenID Provider.\n\nBoth this specification and the OpenID Connect Front-Channel Logout 1.0 [OpenID.FrontChannel] specification use \nfront-channel communication, which communicate logout requests from the OP to RPs via the User Agent. \nIn contrast, the OpenID Connect Back-Channel Logout 1.0 [OpenID.BackChannel] specification uses direct back-channel communication \nbetween the OP and RPs being logged out. The OpenID Connect RP-Initiated Logout 1.0 [OpenID.RPInitiated] specification \ncomplements these specifications by defining a mechanism for a Relying Party to request that an OpenID Provider log out \nthe End-User. This specification can be used separately from or in combination with these other three specifications.\n</code></pre> <p>The front and back channel logout specs complement core OpenID Connect with mechanisms for notifying concerned relying parties that an end-user has been logged out of the identity provider:</p> <ul> <li> <p>The front-channel logout mechanism(spec) notifies the relying party by calling a URL via a hidden browser iframe.</p> </li> <li> <p>The back-channel logout mechanism[(spec)] submits the notification as a special logout token (JWT) that is posted directly to the relying party</p> </li> </ul> <p>The relying party must be registered to receive front or back-channel notifications. Those will be delivered only for sessions into which the relying party previously logged in a user (received an ID token)</p> <p>for more understanding :  https://betterprogramming.pub/managing-user-sessions-and-openid-connect-logout-eb886facd321 https://medium.com/@robert.broeckelmann/openid-connect-logout-eccc73df758f https://curity.io/resources/learn/openid-connect-logout/</p> <p>Specifications:</p> <p>https://openid.net/specs/openid-connect-session-1_0.html https://openid.net/specs/openid-connect-rpinitiated-1_0.html https://openid.net/specs/openid-connect-frontchannel-1_0.html https://openid.net/specs/openid-connect-backchannel-1_0.html#BCSupport</p>"},{"location":"while-coding/IAM/OAuth2_oidc_notes/#front-channel-logout-uri","title":"Front channel logout uri","text":""},{"location":"while-coding/IAM/OAuth2_oidc_notes/#post-logout-redirect-uris","title":"post logout redirect uris","text":""},{"location":"while-coding/IAM/OAuth2_oidc_notes/#back-channel-logout-uri","title":"Back channel logout uri","text":""},{"location":"while-coding/IAM/OAuth2_oidc_notes/#front-channel-logout-session-required","title":"Front channel logout session required","text":""},{"location":"while-coding/IAM/OAuth2_oidc_notes/#back-channel-logout-session-required","title":"Back channel logout session required","text":"<p>------------ items below are in sofware info category in tui --------</p>"},{"location":"while-coding/IAM/OAuth2_oidc_notes/#contacts","title":"contacts","text":""},{"location":"while-coding/IAM/OAuth2_oidc_notes/#authorized-js-origins","title":"authorized JS origins","text":""},{"location":"while-coding/IAM/OAuth2_oidc_notes/#software-id","title":"software id","text":""},{"location":"while-coding/IAM/OAuth2_oidc_notes/#software-version","title":"software version","text":""},{"location":"while-coding/IAM/OAuth2_oidc_notes/#software-statement","title":"software statement","text":"<p>------------ items below are in ciba/par/uma category in tui --------</p>"},{"location":"while-coding/IAM/OAuth2_oidc_notes/#ciba","title":"ciba","text":""},{"location":"while-coding/IAM/OAuth2_oidc_notes/#token-delivery-method","title":"token delivery method","text":"<ul> <li>poll (default)</li> <li>push</li> <li>ping</li> </ul>"},{"location":"while-coding/IAM/OAuth2_oidc_notes/#client-notification-endpoint","title":"client notification endpoint","text":""},{"location":"while-coding/IAM/OAuth2_oidc_notes/#require-user-code-param","title":"require user code param","text":""},{"location":"while-coding/IAM/OAuth2_oidc_notes/#par","title":"PAR","text":""},{"location":"while-coding/IAM/OAuth2_oidc_notes/#request-lifetime-zero-default","title":"Request lifetime: zero default","text":""},{"location":"while-coding/IAM/OAuth2_oidc_notes/#request-par-check-box","title":"request PAR : check box","text":""},{"location":"while-coding/IAM/OAuth2_oidc_notes/#uma","title":"UMA","text":""},{"location":"while-coding/IAM/OAuth2_oidc_notes/#prt-token-type","title":"PRT token type","text":"<ul> <li>jwt</li> <li>reference (default)</li> </ul>"},{"location":"while-coding/IAM/OAuth2_oidc_notes/#claim-redirect-uri-text-box","title":"claim redirect URI: text box","text":""},{"location":"while-coding/IAM/OAuth2_oidc_notes/#rpt-modification-script-text-box","title":"RPT modification script: text box","text":"<p>------------ items below are in Cryptograph/signing category in tui --------</p> <p>remember: as per section 10 the jwks and keys used for signing and encryption are used across all places where encryption and signing is required. See the excerpt below:</p> <pre><code>Depending on the transport through which the messages are sent, the integrity of the message might not be guaranteed and the originator of the message might not be authenticated. To mitigate these risks, ID Token, UserInfo Response, Request Object, and Client Authentication JWT values can utilize\n</code></pre>"},{"location":"while-coding/IAM/OAuth2_oidc_notes/#encryptionsigning","title":"Encryption/signing","text":""},{"location":"while-coding/IAM/OAuth2_oidc_notes/#client-jwks-uri-text","title":"client jwks uri: text","text":""},{"location":"while-coding/IAM/OAuth2_oidc_notes/#client-jwks-text","title":"client jwks: text","text":""},{"location":"while-coding/IAM/OAuth2_oidc_notes/#other-settings-for-algo-select","title":"other settings for algo: select","text":"<p>------------ items below are in advance client properties category in tui --------</p>"},{"location":"while-coding/IAM/OAuth2_oidc_notes/#advance-client-properties","title":"advance client properties","text":""},{"location":"while-coding/IAM/OAuth2_oidc_notes/#default-prompt-login-checkbox","title":"Default prompt login: checkbox","text":""},{"location":"while-coding/IAM/OAuth2_oidc_notes/#persist-authorizations-checkbox","title":"persist authorizations: checkbox","text":""},{"location":"while-coding/IAM/OAuth2_oidc_notes/#allow-spontaneous-scopes-checkbox","title":"Allow spontaneous scopes: checkbox","text":""},{"location":"while-coding/IAM/OAuth2_oidc_notes/#spontaneous-scope-validation-regex-text","title":"spontaneous scope validation regex: text","text":""},{"location":"while-coding/IAM/OAuth2_oidc_notes/#initial-login-uri","title":"initial login URI","text":""},{"location":"while-coding/IAM/OAuth2_oidc_notes/#request-uris-text","title":"request URIs: text","text":""},{"location":"while-coding/IAM/OAuth2_oidc_notes/#default-acr-text","title":"Default acr: text","text":""},{"location":"while-coding/IAM/OAuth2_oidc_notes/#allowed-acr-text","title":"allowed acr: text","text":""},{"location":"while-coding/IAM/OAuth2_oidc_notes/#tls-subject-dn-text","title":"TLS subject DN: text","text":""},{"location":"while-coding/IAM/OAuth2_oidc_notes/#client-expiration-date-select","title":"Client expiration date: select","text":"<p>------------ items below are in client scripts category in tui --------</p>"},{"location":"while-coding/IAM/OAuth2_oidc_notes/#client-scripts","title":"client scripts","text":""},{"location":"while-coding/IAM/OAuth2_oidc_notes/#spontaneous-scopes-text","title":"Spontaneous scopes: text","text":""},{"location":"while-coding/IAM/OAuth2_oidc_notes/#update-token-text","title":"Update token: text","text":""},{"location":"while-coding/IAM/OAuth2_oidc_notes/#post-authn-text","title":"post authn: text","text":""},{"location":"while-coding/IAM/OAuth2_oidc_notes/#instrospection-text","title":"instrospection: text","text":""},{"location":"while-coding/IAM/OAuth2_oidc_notes/#password-grant-text","title":"password grant: text","text":""},{"location":"while-coding/IAM/OAuth2_oidc_notes/#oauth-consent-text","title":"oauth consent: text","text":""},{"location":"while-coding/IAM/OAuth2_oidc_notes/#data-collected-during-registration","title":"Data collected during registration","text":""},{"location":"while-coding/IAM/OAuth2_oidc_notes/#mandatory","title":"Mandatory","text":""},{"location":"while-coding/IAM/OAuth2_oidc_notes/#mandatory-with-default-values","title":"Mandatory with Default Values","text":""},{"location":"while-coding/IAM/OAuth2_oidc_notes/#optional","title":"optional","text":""},{"location":"while-coding/IAM/OAuth2_oidc_notes/#dynamic-client-registration-notes","title":"Dynamic Client Registration notes:","text":"<p>SPECS (in the dependency order) : - OpenId Connect DCR SPEC - OAuth dynamic client management(CRUD) - RFC 7592 - OAuth DCR - RFC 7591</p> <p>Traditionally, registration of a client with an authorization server    is performed manually.  The mechanisms defined in this specification    can be used either for a client to dynamically register itself with    authorization servers or for a client developer to programmatically    register the client with authorization servers.</p> <p>The OAuth DCR SPEC generalizes the    registration mechanisms defined by \"OpenID Connect Dynamic Client    Registration 1.0\" [OpenID.Registration] and used by \"User Managed    Access (UMA) Profile of OAuth 2.0\" [UMA-Core] in a way that is    compatible with both, while being applicable to a wider set of OAuth    2.0 use cases.</p> <p>Usecases: very useful for understanding and choices: https://www.rfc-editor.org/rfc/rfc7591#appendix-A</p>"},{"location":"while-coding/IAM/OAuth2_oidc_notes/#other-references","title":"other references","text":"<ul> <li>https://github.com/zmartzone/mod_auth_openidc/blob/master/auth_openidc.conf</li> <li>https://curity.io/resources/learn/openid-connect-understanding-dcr/</li> <li>https://curity.io/resources/learn/using-dynamic-client-registration/</li> <li>https://www.youtube.com/watch?v=AsCL8kMU1iY</li> <li>https://www.youtube.com/watch?v=WnI32e4eEuY</li> <li>https://connect2id.com/products/server/docs/api/client-registration#initial-access</li> <li>Very good link to understand issueing of tokens https://darutk.medium.com/diagrams-of-all-the-openid-connect-flows-6968e3990660</li> </ul> <p>Notes:</p> <ul> <li>sometimes people use DCR acronym to refer to <code>dynamic client request</code> and sometimes DCR means <code>dynamic client registration</code>. Dynamic client request is the request made to register the client dynamically. For example, in statement <code>In OpenBanking case DCR (Dynamic Client Request) is signed and must contain SSA (Software Statement Assertion) inside it.</code> DCR means the request.</li> <li>the OIDC DCR SPEC</li> <li></li> </ul>"},{"location":"while-coding/IAM/OAuth2_oidc_notes/#assertion","title":"Assertion","text":"<p>As defined in OAuth Assertion Framework</p> <pre><code>An assertion is a package of information that allows identity and\nsecurity information to be shared across security domains.  An\nassertion typically contains information about a subject or\nprincipal, information about the party that issued the assertion and\nwhen was it issued, and the conditions under which the assertion is\nto be considered valid, such as when and where it can be used.\n\nThe entity that creates and signs or integrity-protects the assertion\nis typically known as the \"Issuer\", and the entity that consumes the\nassertion and relies on its information is typically known as the\n\"Relying Party\".  In the context of this document, the authorization\nserver acts as a relying party.\n</code></pre> <ul> <li>assertions MUST be signed or signed+encrypted</li> <li>there are two common patterns by which client can obtain </li> <li>issued by third party (also called <code>security token service</code>, <code>token service</code>) ( see, now at this point, <code>assertion</code> is being called <code>token</code>. This is the reason behind token often being called assertion in general.)</li> <li>client creates assertions locally (using shared secret or private-public key pair). Although assertions are usually used to convey identity and     security information, self-issued assertions can also serve a different purpose.  They can be used to demonstrate knowledge of some secret, such as a client secret, without actually communicating the secret directly in the transaction.</li> </ul> <p>From the perspective of what must be done by the entity presenting the assertion, there are two general types of assertions:</p> <ul> <li> <p>Bearer Assertions: (Note: this is the origin of <code>bearer</code> token). Any entity in possession of a bearer assertion (the bearer) can use it to get access to the associated resources (without demonstrating possession of a cryptographic key).  To prevent misuse, bearer assertions need to be protected from disclosure in storage and in transport.  Secure communication channels are required between all entities to avoid leaking the assertion to unauthorized parties.</p> </li> <li> <p>Holder-of-Key Assertions: To access the associated resources, the entity presenting the assertion must demonstrate possession of additional cryptographic material.  The token service thereby binds a key identifier to the assertion, and the client has to demonstrate to the relying party that it knows the key corresponding to that identifier when presenting the assertion.</p> </li> <li> <p>Assertion framework itself doesn't specify format(like JSON etc) but it points to SAML and JWT specs for implementation details. JWT, as we know, is the more prefered and widely used. So this is how assertions, tokens and JWT are connected to each other via OAuth Assertion Framework.</p> </li> </ul> <p>This spec details two usages of assertions (read JWT) in two ways when communicating to <code>token endpoint</code>: - Using Assertions as Authorization Grants - Using Assertions for Client Authentication (from here the client authn methods of <code>client_secret_jwt</code> and <code>private_key_jwt</code> originates)</p>"},{"location":"while-coding/IAM/OAuth2_oidc_notes/#software-statement_1","title":"Software Statement","text":"<ul> <li>Defining Software statements: Under https://datatracker.ietf.org/doc/html/rfc7591#section-1.2</li> </ul> <pre><code>A digitally signed or MACed JSON Web Token (JWT) [RFC7519] that\nasserts metadata values about the client software.  In some cases,\na software statement will be issued directly by the client\ndeveloper.  In other cases, a software statement will be issued by\na third-party organization for use by the client developer.  In\nboth cases, the trust relationship the authorization server has\nwith the issuer of the software statement is intended to be used\nas an input to the evaluation of whether the registration request\nis accepted.  A software statement can be presented to an\nauthorization server as part of a client registration request.\n</code></pre> <ul> <li>Software statement can be signed by organization that is developing the client or a third party.</li> <li>this section also says:</li> </ul> <pre><code>In some cases, authorization servers MAY choose to accept a software\nstatement value directly as a client identifier in an authorization\nrequest, without a prior dynamic client registration having been\nperformed.\n</code></pre> <p>Usage: - In authenticating client - In registering client (DCR)</p>"},{"location":"while-coding/IAM/OAuth2_oidc_notes/#in-authenticating-client","title":"In Authenticating Client","text":""},{"location":"while-coding/IAM/OAuth2_oidc_notes/#in-dynamic-client-registration","title":"In Dynamic Client Registration","text":"<ul> <li> <p>When presented to the authorization server as part of a client registration request, the software statement MUST contain an \"iss\" (issuer) claim denoting the party attesting to the claims in the software statement.</p> </li> <li> <p>Can be controlled using feature flag</p> </li> <li>Relevent config properties:</li> <li>softwareStatementValidationType</li> <li>dcrSignatureValidationSoftwareStatementJwksURIClaim</li> <li> <p>dcrSignatureValidationSoftwareStatementJwksClaim</p> </li> <li> <p>Very little material is available around software statements and SSA. Below is a list</p> </li> <li> <p>How to create software statement, SSA and perform DCR in Openbanking: https://www.youtube.com/playlist?list=PLB4KVrA_iiEHiTHd0ZGLcPUkEuslABfdJ</p> </li> <li>Good videos which show how software statements are used in Open banking. Good for understanding: https://www.youtube.com/watch?v=YeviOSq1jjU&amp;t=173s</li> </ul>"},{"location":"while-coding/IAM/OAuth2_oidc_notes/#software-statement-assertions-ssa","title":"Software Statement Assertions (SSA)","text":"<ul> <li> <p>It is defined here: https://openbankinguk.github.io/dcr-docs-pub/v3.3/dynamic-client-registration.html#software-statement</p> </li> <li> <p>Software statement Vs Software Statement Assertions (SSA), are these two different?</p> </li> </ul> <p>Yes, Excerpt from here</p> <pre><code>In case of a typical client registration request in FAPI implementation, the request object which is a signed JWT (as seen in point 3) is also called     an SSA (Software statement Assertion) or DCR payload. This SSA can contain the software_statement inside it which is also a signed JWT. Each of the       JWTs, the outer JWT called the SSA and the inner JWT called the software_statement are signed by different entities - the TPP and OBIE respectively.\n</code></pre>"},{"location":"while-coding/IAM/OAuth2_oidc_notes/#jwt-usecases","title":"JWT usecases","text":""},{"location":"while-coding/IAM/OAuth2_oidc_notes/#in-authorization-grant","title":"in authorization grant","text":"<p>see this</p>"},{"location":"while-coding/IAM/OAuth2_oidc_notes/#in-client-authentication","title":"in client authentication","text":"<p>see this</p>"},{"location":"while-coding/IAM/OAuth2_oidc_notes/#in-dynamic-client-registration_1","title":"in dynamic client registration","text":""},{"location":"while-coding/IAM/OAuth2_oidc_notes/#what-is-special-about-software-statement","title":"what is special about software statement","text":""},{"location":"while-coding/IAM/OAuth2_oidc_notes/#understanding-acr","title":"Understanding ACR","text":"<p><code>ACR</code> is <code>Authentication Context Class Reference</code>. It is a value that denotes what is the level of authentication that this user has or should gone through. ACR values are custom to each implementation. To understand ACR more, we have to understand <code>Authentication Context</code> and <code>Authentication Context class</code>.</p> <p>Authentication Context:</p> <p>Definition as per OIDC core: Information that the Relying Party can require before it makes an entitlement decision with respect to an authentication response. Such context can include, but is not limited to, the actual authentication method used or level of assurance such as ISO/IEC 29115 [ISO29115] entity authentication assurance level</p> <p>So basically, it is the context which the RP uses to understand how this person has been authenticated. And may be based on that it gives entitlements to that person(i.e session)</p> <p>Authentication Context Class:</p> <p>Definition as per OIDC core: Set of authentication methods or procedures that are considered to be equivalent to each other in a particular context.</p> <p>Going by the definition, it looks like there can be more than one method or procedures that pertain to the same class.</p> <p>ACR: is a way to refer to the Authentication Context Class</p> <p>Basically, in jans, acr value -&gt; script has one to one relation. And every script has a level.</p> <p>Jans server:</p> <p><code>default_acr</code></p> <p><code>Internal ACR</code></p> <p>An Authentication method is offered by the AS if its ACR value i.e. its corresponding custom script is enabled.</p> <p>Level (rank) of an Authentication mechanism: </p> <p>Each authentication mechanism (script) has a \"Level\" assigned to it which describes how secure and reliable it is. The higher the \"Level\", higher is the reliability represented by the script. Though several mechanisms can be enabled at the same Janssen server instance at the same time, for any specific user's session only one of them can be set as the current one (and will be returned as acr claim of id_token for them). If initial session is created and then later a new authorization request from a RP comes in specifying another authentication method, its \"Level\" will be compared to that of the method currently associated with this session. If requested method's \"Level\" is lower or equal to it, nothing is changed and the usual SSO behavior is observed. If it's higher (i.e. a more secure method is requested), it's not possible to serve such request using the existing session's context, and user must re-authenticate themselves to continue. If they succeed, a new session becomes associated with that requested mechanism instead.</p> <p>Client level:</p> <p><code>default_acr_values</code></p> <p><code>acr_values</code></p> <p><code>acr</code> claim of id_token</p>"},{"location":"while-coding/IAM/OAuth2_oidc_notes/#all-flows","title":"All flows","text":""},{"location":"while-coding/IAM/OAuth2_oidc_notes/#device-authorization-grant","title":"Device authorization Grant","text":"<p>https://datatracker.ietf.org/doc/html/rfc8628</p> <pre><code>  +----------+                                +----------------+\n  |          |&gt;---(A)-- Client Identifier ---&gt;|                |\n  |          |                                |                |\n  |          |&lt;---(B)-- Device Code,      ---&lt;|                |\n  |          |          User Code,            |                |\n  |  Device  |          &amp; Verification URI    |                |\n  |  Client  |                                |                |\n  |          |  [polling]                     |                |\n  |          |&gt;---(E)-- Device Code       ---&gt;|                |\n  |          |          &amp; Client Identifier   |                |\n  |          |                                |  Authorization |\n  |          |&lt;---(F)-- Access Token      ---&lt;|     Server     |\n  +----------+   (&amp; Optional Refresh Token)   |                |\n        v                                     |                |\n        :                                     |                |\n       (C) User Code &amp; Verification URI       |                |\n        :                                     |                |\n        v                                     |                |\n  +----------+                                |                |\n  | End User |                                |                |\n  |    at    |&lt;---(D)-- End user reviews  ---&gt;|                |\n  |  Browser |          authorization request |                |\n  +----------+                                +----------------+\n\n                Figure 1: Device Authorization Flow\n</code></pre>"},{"location":"while-coding/IAM/OAuth2_oidc_notes/#important-terms","title":"Important Terms","text":"Term definition source example Identity Set of attributes related to an Entity OIDC Spec terms Entity Something that has a separate and distinct existence and that can be identified in a context. An End-User is one example of an Entity. OIDC Spec terms Authentication Process used to achieve sufficient confidence in the binding between the Entity and the presented Identity OIDC Spec terms Claim Piece of information asserted about an Entity OIDC Spec terms Claims Provider Server that can return Claims about an Entity OIDC Spec terms Essential Claim Claim specified by the Client as being necessary to ensure a smooth authorization experience for the specific task requested by the End-User OIDC Spec terms Voluntary Claim Claim specified by the Client as being useful but not Essential for the specific task requested by the End-User OIDC Spec terms Issuer Entity that issues a set of Claims OIDC Spec terms OpenID Provider (OP) OAuth 2.0 Authorization Server that is capable of Authenticating the End-User and providing Claims to a Relying Party about the Authentication event and the End-User OIDC Spec terms Request Object JWT that contains a set of request parameters as its Claims OIDC Spec terms Relying Party (RP) OAuth 2.0 Client application requiring End-User Authentication and Claims from an OpenID Provider OIDC Spec terms Subject Identifier Locally unique and never reassigned identifier within the Issuer for the End-User, which is intended to be consumed by the Client OIDC Spec terms Authentication Context Information that the Relying Party can require before it makes an entitlement decision with respect to an authentication response. Such context can include, but is not limited to, the actual authentication method used or level of assurance such as ISO/IEC 29115 [ISO29115] entity authentication assurance level OIDC Spec terms Authentication Context Class Set of authentication methods or procedures that are considered to be equivalent to each other in a particular context OIDC Spec terms Authentication Context Class Reference (acr) Identifier for an Authentication Context Class OIDC Spec terms OIDC Spec terms OIDC Spec terms OIDC Spec terms OIDC Spec terms OIDC Spec terms OIDC Spec terms"},{"location":"while-coding/IAM/OAuth2_oidc_notes/#openid-connect-native-sso-for-mobile-apps-draft","title":"OpenID Connect Native SSO for Mobile Apps draft","text":""},{"location":"while-coding/IAM/OAuth2_oidc_notes/#main-flow","title":"Main flow:","text":"<ul> <li>applies to <code>authorization code</code> flow of OAuth.</li> <li>a new scope <code>device_sso</code> is added. So, when an mobile-app-1(the client) uses a system browser to send authorization code request to <code>/authorize</code> endpoint, the request contains the <code>device_sso</code> scope.</li> <li>In response to this, the <code>/authorize</code> endpoint returns a code. AS on the backend knows what scopes are attached to this code.</li> <li>When the mobile-app-1 presents the <code>code</code> to the token endpoint, the AS looks at attached scopes and notices the <code>device_sso</code> scope attached. It sends back an <code>device_secret</code> token along with an access token back to the mobile-app-1. From this point onwards, the AS knows that this token has <code>device_sso</code> scope attached and an <code>device_secret</code> has also been issued, so it expects a <code>device_secret</code> to be passed in all future token requests.</li> <li>mobile-app-1 stores this <code>device_secret</code> in the local mobile storage which can be accessed only by other apps of the same company (e.g: facebook and instagram can access the same storage). So, if there is a mobile-app-2 on the mobile from the same vendor, then mobile-app-2 doesn't have to again to <code>/authorize</code> endpoint and reauthenticate the user. Instead, mobile-app-2 can take the client-id, device_secret and id_token and send it to token endpoint to receive an access token and refresh token directly.</li> </ul> <p>##### Notes</p> <ul> <li>a new <code>device_secret</code> is generated by token endpoint when it receives a token request with refresh token and client has <code>device_sso</code> scope and an <code>device_secret</code> had been issued earlier.</li> <li>Important point from spec:     <pre><code>The device secret contains relevant data to the device and the current users authenticated with the device. The device secret is completely opaque to the client and as such the AS MUST adequately protect the value such as using a JWE if the AS is not maintaining state on the backend.\n</code></pre></li> <li>Important point from spec:     <pre><code>The exact construction of the device_secret is out of scope for this specification.\n</code></pre>     So how to create <code>device_secret</code> is implementation-specific.</li> <li>Important point from spec:     <pre><code>If a mobile app requests a device secret via the device_sso scope and a device_secret exists, then the client MUST provide the device_secret on the request to the /token endpoint to exchange code for tokens.\n</code></pre></li> <li>Device secret rotation     <pre><code>The client SHOULD provide the device_secret to the /token endpoint during refresh token requests so that the AS may rotate the device_secret as necessary.\n</code></pre></li> <li>Important point from spec     <pre><code>If no device_secret is specified and the refresh_token contains the device_sso scope, a new device_secret will be generated.\n</code></pre></li> <li>two values added to the id_token: <code>ds_hash</code> and <code>sid</code></li> <li>device_secret validity     <pre><code>When the authorization server receives the device_secret it must validate the token. If the token is invalid it must be discarded and the request processed as if no device_secret was specified.\n</code></pre></li> <li>how device_secret is received     <pre><code>The device_secret is returned in the device_token claim of the returned JSON data.\n</code></pre></li> <li>In the request to token endpoint:     <pre><code>If no devices_secret is specified, then the AS MUST generate the token. If a device_secret is specified and is valid, the AS MAY update the device_secret as necessary. Regardless a device_secret must be returned in the response.\n</code></pre></li> <li>Cross device SSO</li> <li>ID token validation changes     <pre><code>Use of the id_token in this specification takes some liberties with id_token validation.\n</code></pre></li> </ul>"},{"location":"while-coding/IAM/SCIM/","title":"SCIM","text":""},{"location":"while-coding/IAM/SCIM/#rerence","title":"Rerence","text":"<ul> <li>good video: https://www.youtube.com/watch?v=JmA83cy0uVc</li> <li>scim main site: https://www.simplecloud.info/</li> </ul>"},{"location":"while-coding/IAM/SIOP-DID/","title":"Siop Did","text":""},{"location":"while-coding/IAM/SIOP-DID/#reference","title":"Reference","text":"<ol> <li>https://www.youtube.com/watch?v=T_ygzMZTB1o</li> <li>https://www.youtube.com/watch?v=Hd9PwHotU84</li> <li>https://www.youtube.com/watch?v=b5aaiIaYRNw</li> </ol>"},{"location":"while-coding/IAM/api-security/","title":"API security","text":"<p>Reference: - Maturity model - How to store tokens in applications</p>"},{"location":"while-coding/IAM/authorization/","title":"Authorization","text":"<p>RFC that is basis of authz: https://datatracker.ietf.org/doc/html/rfc2904</p>"},{"location":"while-coding/IAM/cryptography-security/","title":"Cyber Security","text":"<ul> <li>Authorities that drive and create standard: NIST</li> <li>Standards: </li> <li>DISA-STIG are guidelines for securing systems with certain settings etc<ul> <li>REF</li> <li>REF</li> </ul> </li> <li>FIPS is used to validate and certify cryptography modules<ul> <li>REF</li> </ul> </li> <li> <p>Usually, products will have different install options (profiles) which will install software in a way that is compliant with FIPS DISA STIG. Like specific settings etc. See REF</p> </li> <li> <p>cloud security alliance : https://cloudsecurityalliance.org/</p> </li> <li> <p>Complete and chart of types of cyber attacks : https://attack.mitre.org/versions/v12/</p> </li> </ul>"},{"location":"while-coding/IAM/jwt-notes/","title":"JWT Notes","text":"<ul> <li>JSON + sign = JWT</li> <li>JWT is value token (as opposed to session tokens which are reference tokens)</li> <li></li> </ul>"},{"location":"while-coding/IAM/jwt-notes/#structure","title":"Structure","text":"<ul> <li>has 3 parts <code>part1.part2.part3</code></li> <li><code>part1</code> is header</li> <li>this is base64 encoded</li> <li>Base64 encoding is just to make data easier to transport over the web. Without any special characters etc.</li> <li>header contains info like type (<code>typ</code>) of token and algorithm(<code>alg</code>) used for signature</li> <li><code>part2</code> is payload </li> <li>is the actual data that is base64 encoded. And it can be easily decoded to get actual data without any key etc</li> <li><code>part3</code> is signature</li> <li>signature = Algo(encoded header, encoded payload, secret key)</li> <li>So the signature is not just a simple hash of encoded header and encoded payload. It is a hash done with a secret key. Hence, if the header or the payload has changed or if you don't have the same secret key (or private-public key), they same signature can not be generated.</li> <li>Three parts of JWT are separated by periods</li> <li>Usage: </li> <li>Message integrity: JWT signature verification ensures that data in the header and payload has not been tempered with.</li> <li>Authentication: <ul> <li>You can ensure that the JWT was actually signed by you yourself. For example, JWT access token was indeed issued by itself because it can varify the signature using the same secret it has.</li> <li>You can ensure that JWT is coming from an trusted party. For example, a client can share JWKS(i.e public keys) with server during registration, then send JWT by signing it using its private key. When server receives JWT, it can verify signature using public keys and be sure that JWT was indeed sent by the intended client.</li> </ul> </li> <li>Use debugger at jwt.io to see what is in the JWT</li> </ul>"},{"location":"while-coding/IAM/jwt-notes/#notes","title":"Notes:","text":"<ul> <li>General note: tokens are typically signed to achieve integrity and sometimes also encrypted to achieve confidentiality</li> <li>JWT is not an authentication mechanism, it comes into picture after trust has been established (may be via authentication or in some other way)</li> <li>Relation between <code>pem</code> and <code>jwks</code>: https://community.auth0.com/t/jwk-vs-pem-what-is-the-difference/61927</li> <li>Good article: https://www.pingidentity.com/en/resources/blog/post/jwt-security-nobody-talks-about.html</li> </ul>"},{"location":"while-coding/IAM/jwt-notes/#creating-jwt-using-command-line","title":"Creating JWT using command-line","text":"<ul> <li> <p>Create a private key</p> <pre><code>openssl genrsa -out private-key.pem 2048\n</code></pre> </li> <li> <p>Extract public key from private key</p> <pre><code>openssl rsa -in private-key.pem -pubout -outform PEM -out public-key.pem\n</code></pre> <p>During the client registration or via client configuration settings, the public key generated above should be attached to the client on authorization server.</p> </li> <li> <p>Create header payload. For example,</p> <pre><code>{\n\"alg\": \"RS256\",\n\"typ\": \"JWT\"\n}\n</code></pre> <p>To create JWT we need header in base64 encoded format. Use commands below and to convert header in base64 encoded string:</p> <pre><code>echo -n 'header-json' | base64 | sed s/\\+/-/ | sed -E s/=+$//\n</code></pre> </li> <li> <p>Create your JWT payload. For example,</p> <pre><code>{\n\"jti\":\"myJWTId001\",\n\"sub\":\"38174623762\",\n\"iss\":\"38174623762\",\n\"aud\":\"http://localhost:4000/api/auth/token/direct/24523138205\",\n\"exp\":1536165540,\n\"iat\":1536132708\n}\n</code></pre> <p>To create JWT we need the payload in base64 encoded format. Use commands below and to convert the payload in base64  encoded string:</p> <pre><code>echo -n 'payload-json' | base64 | sed s/\\+/-/ | sed -E s/=+$//\n</code></pre> </li> <li> <p>Use the encoded header and payload to create the signature. The signature would be in form of an encoded string.</p> <pre><code>echo -n \"encoded-header.encoded-payload\" | openssl dgst -sha256 -binary -sign jwtRSA256-private.pem  | openssl enc -base64 | tr -d '\\n=' | tr -- '+/' '-_'\n</code></pre> </li> <li> <p>Put together encoded strings for header, payload and signature in format below to completely form JWT.</p> <pre><code>encoded-header.encoded-payload.encoded-signature\n</code></pre> </li> <li> <p>Use this JWT in request to the server. As mentioned earlier, the server must have public key registered as part of    the client registration process in order to verify the JWT in the request.</p> </li> </ul>"},{"location":"while-coding/IAM/jwt-notes/#jwt-jws-and-jwe","title":"JWT JWS and JWE","text":"<p>JWS and JWE are types of JWTs. All of them have different specifications: JWT, JWS, JWE. JWT specification defines basic structure of JWT. Meaning it should have a header, payload and third part should be signature. This specification also defines some of the keys in header and payload with their meanings, values etc. Then it leaves the room open for generating the third part using JWS or JWE. Whether it is JWS or JWE is decided by value of header elements like <code>typ</code> and <code>cty</code> and algo used. List of algo for each is here</p> <p>JWT can be of three types. </p> <ul> <li>Unsecured</li> <li>JWS</li> <li> <p>JWE</p> </li> <li> <p>Unsecured JWT. Structure here, there are two dots but third part is missing:</p> </li> </ul> <pre><code>h3k4h5345k34j.34k5j3k4jrlkafi.\n</code></pre> <ul> <li>JWS </li> <li> <p><code>JWS Compact Serialization</code>: Structure has two dots and all three parts, as specified here. The most widely used representation of JWT.</p> <p><pre><code>h3k4h5345k34j.34k5j3k4jrlkafi.k43jkj34jdfhw\n</code></pre>   - <code>JWS JSON Serialization</code>: Structure here is like a JSON. As specified here. And it looks like:</p> <p><pre><code>{\n  \"payload\":\"&lt;payload contents&gt;\",\n  \"signatures\":[\n   {\"protected\":\"&lt;integrity-protected header 1 contents&gt;\",\n    \"header\":&lt;non-integrity-protected header 1 contents&gt;,\n    \"signature\":\"&lt;signature 1 contents&gt;\"},\n   ...\n   {\"protected\":\"&lt;integrity-protected header N contents&gt;\",\n    \"header\":&lt;non-integrity-protected header N contents&gt;,\n    \"signature\":\"&lt;signature N contents&gt;\"}]\n}\n</code></pre>   - <code>Flattened JWS JSON Serialization</code>: Structure here is like a JSON. As specified here. And it looks like:</p> <pre><code>{\n  \"payload\":\"&lt;payload contents&gt;\",\n  \"protected\":\"&lt;integrity-protected header contents&gt;\",\n  \"header\":&lt;non-integrity-protected header contents&gt;,\n  \"signature\":\"&lt;signature contents&gt;\"\n }\n</code></pre> </li> <li> <p>JWE</p> </li> </ul> <p>TBD</p>"},{"location":"while-coding/IAM/zero-trust-framework/","title":"Zero Trust Framework","text":"<p>The Zero Trust Framework is a cybersecurity model that assumes no entity\u2014inside or outside a network\u2014should be trusted by default. Instead of relying on traditional perimeter security (where users and devices inside a network are inherently trusted), Zero Trust continuously verifies and enforces security at every level.</p>"},{"location":"while-coding/IAM/zero-trust-framework/#core-principles-of-zero-trust","title":"Core Principles of Zero Trust","text":"<ol> <li>Verify Explicitly \u2013 Always authenticate and authorize users, devices, and applications based on multiple factors (e.g., MFA, device health, location).</li> <li>Least Privilege Access \u2013 Grant only the minimum access necessary for users and systems to perform their tasks.</li> <li>Assume Breach \u2013 Operate as if a breach has already occurred, segment networks, and monitor all activity to detect threats.</li> <li>Micro-Segmentation \u2013 Divide the network into small, isolated zones to limit an attacker\u2019s lateral movement.</li> <li>Continuous Monitoring &amp; Logging \u2013 Regularly inspect and analyze network traffic, user behavior, and device activity.</li> <li>Device &amp; Endpoint Security \u2013 Ensure devices accessing the network are compliant and secure before granting access.</li> </ol>"},{"location":"while-coding/IAM/zero-trust-framework/#key-technologies-supporting-zero-trust","title":"Key Technologies Supporting Zero Trust","text":"<ul> <li>Identity &amp; Access Management (IAM) \u2013 Enforces strict authentication and authorization policies.</li> <li>Multi-Factor Authentication (MFA) \u2013 Requires more than just a password for access.</li> <li>Endpoint Detection &amp; Response (EDR) \u2013 Protects and monitors devices for potential threats.</li> <li>Network Segmentation &amp; Micro-Segmentation \u2013 Limits access between systems to reduce risk.</li> <li>Security Information &amp; Event Management (SIEM) \u2013 Centralizes logging and threat detection.</li> <li>Zero Trust Network Access (ZTNA) \u2013 Replaces traditional VPNs, granting access only to specific applications instead of entire networks.</li> </ul>"},{"location":"while-coding/IAM/zero-trust-framework/#benefits-of-zero-trust","title":"Benefits of Zero Trust","text":"<p>\u2705 Minimizes security risks by limiting trust assumptions. \u2705 Reduces the impact of breaches by restricting lateral movement. \u2705 Enhances visibility and control over network activity. \u2705 Supports modern, cloud-first IT environments.  </p> <p>Many organizations, including governments and enterprises, are adopting Zero Trust to secure remote work, cloud environments, and critical infrastructure.</p> <p>Let's take an example of an enterprise network before and after implementing Zero Trust.</p>"},{"location":"while-coding/IAM/zero-trust-framework/#scenario-a-corporate-network-with-traditional-security-non-zero-trust","title":"Scenario: A Corporate Network with Traditional Security (Non-Zero Trust)","text":""},{"location":"while-coding/IAM/zero-trust-framework/#setup","title":"Setup:","text":"<ul> <li>Employees work from both the office and remote locations.</li> <li>The company uses an on-premises Active Directory for authentication.</li> <li>A VPN is used for remote access.</li> <li>Internal applications are hosted on company servers.</li> <li>Employees can access the entire internal network once authenticated.</li> </ul>"},{"location":"while-coding/IAM/zero-trust-framework/#how-it-works-non-zero-trust-behavior","title":"How It Works (Non-Zero Trust Behavior):","text":"<ol> <li>User Authentication: Employees enter their username and password to connect to the company\u2019s VPN.</li> <li>Network Access Granted: Once connected, they have access to all resources on the network (email, internal file shares, HR systems, customer databases, etc.).</li> <li>Lateral Movement Possible: If an attacker steals an employee\u2019s credentials, they can access everything inside the network without further security checks.</li> <li>Minimal Segmentation: Employees from different departments can potentially access resources they don\u2019t need.</li> <li>Device Security Not Enforced: The VPN does not check if the device is secure before allowing access.</li> </ol>"},{"location":"while-coding/IAM/zero-trust-framework/#security-risks-in-non-zero-trust","title":"Security Risks in Non-Zero Trust:","text":"<p>\ud83d\udea8 Credential Theft: A hacker who gets an employee\u2019s VPN credentials gains full network access. \ud83d\udea8 Lateral Movement: Once inside, attackers can move between systems freely. \ud83d\udea8 No Device Validation: An infected or unpatched device can introduce malware into the network.  </p>"},{"location":"while-coding/IAM/zero-trust-framework/#same-network-with-zero-trust-implementation","title":"Same Network with Zero Trust Implementation","text":""},{"location":"while-coding/IAM/zero-trust-framework/#changes-made","title":"Changes Made:","text":"<ul> <li>VPN access is replaced with Zero Trust Network Access (ZTNA).</li> <li>Multi-Factor Authentication (MFA) is enforced for all logins.</li> <li>Least Privilege Access is applied (users only get access to the resources they need).</li> <li>Device Security Checks are required before granting access.</li> <li>Micro-Segmentation is applied (HR, Finance, and IT have separate access zones).</li> </ul>"},{"location":"while-coding/IAM/zero-trust-framework/#how-it-works-zero-trust-behavior","title":"How It Works (Zero Trust Behavior):","text":"<ol> <li>User Authentication: Employees must use MFA (e.g., password + biometric or security key).</li> <li>Context-Based Access: Access is granted based on:</li> <li>User identity (job role, department)</li> <li>Device security (Is the device patched? Does it have antivirus?)</li> <li>Location (Is the user logging in from an unusual country?)</li> <li>Application-Specific Access: Instead of giving network-wide access, employees get access to only the applications they need (e.g., HR employees can access payroll, but not IT systems).</li> <li>Continuous Monitoring: The system continuously checks for unusual activity (e.g., multiple failed login attempts, access from a suspicious location).</li> <li>Lateral Movement Prevention: If an attacker compromises one system, they cannot move laterally to other systems because each access request is re-verified.</li> </ol>"},{"location":"while-coding/IAM/zero-trust-framework/#security-benefits-in-zero-trust","title":"Security Benefits in Zero Trust:","text":"<p>\u2705 Reduced Attack Surface: Even if credentials are stolen, access is limited. \u2705 Blocked Lateral Movement: Attackers can\u2019t hop between systems freely. \u2705 Better Compliance: Sensitive data access is controlled and logged. \u2705 Stronger Device Security: Only secure, approved devices can access resources.  </p>"},{"location":"while-coding/IAM/zero-trust-framework/#conclusion","title":"Conclusion:","text":"<p>\ud83d\udd34 Non-Zero Trust: \"Once you're in, you have access to everything.\" \ud83d\udfe2 Zero Trust: \"Every access request must be verified\u2014who you are, what you're accessing, and whether your device is secure.\"  </p> <p>Would you like help designing a Zero Trust strategy for a specific environment? \ud83d\ude0a</p>"},{"location":"while-coding/ai/","title":"AI","text":""},{"location":"while-coding/ai/#learning-playbook","title":"Learning playbook","text":""},{"location":"while-coding/ai/#rag-and-ai-agents","title":"RAG and AI agents","text":"<p>From this LinkedIn post: https://www.linkedin.com/feed/update/urnactivity:7358814135742050304/</p> <ul> <li> <p>Level 1 \u2013 GenAI &amp; RAG Foundations : Learn the basics before going autonomous:</p> </li> <li> <p>Generative AI for Everyone (Andrew Ng)     \u21b3 https://lnkd.in/d2XCRaAw</p> </li> <li>LLMs \u2013 Level 1 (H2O.ai x Coursera)     \u21b3 https://lnkd.in/due32aSn</li> <li>Prompt Engineering (DeepLearning.AI x OpenAI)     \u21b3 https://lnkd.in/drfVMsme</li> <li>Preprocessing Unstructured Data     \u21b3 https://lnkd.in/dWDyqeyg</li> <li>Generative AI API Specialization     \u21b3 https://lnkd.in/dKiQD5EV</li> <li> <p>Intro to RAG     \u21b3 https://lnkd.in/ddmbeMy7</p> </li> <li> <p>Level 2 \u2013 AI Agent Specialization : Time to build systems that can think, decide, and act:</p> </li> <li> <p>AI Agents with RAG + LangChain (IBM)     \u21b3 https://lnkd.in/dxgD2jFN</p> </li> <li>LangChain for LLM Apps     \u21b3 https://lnkd.in/dCEw5_9M</li> <li>Build Agents From Scratch (Python)     \u21b3 https://lnkd.in/dss98f3C</li> <li>Agentic Design Patterns with AutoGen     \u21b3 https://lnkd.in/de9GBUqz</li> <li>Agent Memory (LLMs as OS)     \u21b3 https://lnkd.in/dmMt6mSj</li> <li>Intelligent Troubleshooting Agents     \u21b3 https://lnkd.in/dnUhYZ7Y</li> <li>Multi-Agent Systems with CrewAI     \u21b3 https://lnkd.in/dTudrD55</li> <li>Advanced RAG with LlamaIndex + TruEra     \u21b3 https://lnkd.in/dyMg8eV9</li> </ul>"},{"location":"while-coding/ai/#mcp","title":"MCP","text":"<p>MCP : Microsoft : MCP for beginners</p>"},{"location":"while-coding/ai/course-notes-udemy-ml-ds-ai/","title":"Machine Learning, Data Science &amp; AI Engineering with Python","text":"<p>Course link: https://www.udemy.com/course/data-science-and-machine-learning-with-python-hands-on/learn/lecture/15090142#overview</p>"},{"location":"while-coding/ai/course-notes-udemy-ml-ds-ai/#installations","title":"Installations","text":"<ul> <li>install anaconda</li> <li><code>conda activate base</code></li> <li></li> <li>install pydotplus : <code>conda install pydotplus</code></li> <li>install tensorflow-gpu. Tensorflow installation using the command <code>conda install tensorflow-gpu</code> fails if your environment is using the latest python 3.13. At this moment the latest supported python   is by tensoflow is <code>3.12</code>. So we neeed to downgrade the python to install tensorflow using <code>conda install python=3.12</code>. Then install tensorflow <code>conda install tensorflow-gpu</code></li> <li>download course material from: https://www.sundog-education.com/machine-learning/. Unzip the file in a directory (e.g <code>~/docs/learning/tech/certifications/ai/udemy-ml-ds-ai-course/MLCourse</code>). Open terminal and <code>cd</code> to that directory. Then type <code>jupyter notebook</code>. A browser should open with your notebooks. </li> </ul>"},{"location":"while-coding/ai/course-notes-udemy-ml-ds-ai/#statistics","title":"statistics","text":"<ul> <li>Mean: aka average. It doesn't give correct idea if your data has outliers.</li> <li>Median: sort the sample data and pick the one in the middle, that is your median. Outliers doesn't impact median. This is often a better measure if your data has outliers.</li> <li> <p>Mode: is the most frequetly occuring value in your data.</p> </li> <li> <p>Histogram: A histogram is a graphical representation of the distribution of numerical data, where the data is grouped into continuous intervals called bins. It consists of adjacent rectangular bars where each bar's height corresponds to the frequency (count) of data points within that bin. Unlike bar graphs, histograms have no space between bars because the bins represent continuous data ranges. The width of each bar represents the interval of values, and the area or height of the bars indicates how often data in those intervals occur, helping to visualize how data is spread, concentrated, or if there are any gaps or patterns in the dataset.</p> </li> </ul>"},{"location":"while-coding/ai/course-notes-udemy-ml-ds-ai/#regression","title":"Regression","text":"<ul> <li>regression: english meaning: a return to a previous or way of behaving.</li> <li>regression analysis: In statistical modeling, regression analysis is a statistical method for estimating the relationship between a dependent variable and one or more independent variables. How does weight of a person change relative to their height. </li> <li>linear regression: The most common form of regression analysis is linear regression, in which the purpose is to find the line that most closely fits the data according to a specific mathematical criterion. For example, the method of ordinary least squares(OLS) computes the unique line that minimizes the sum of squared differences between the data and that line. This line can then be extended to predict unseen data. Another way to perform linear regression is  <code>gradient descent</code>. This method is better for 3 dimensional or multi-dimentional data. </li> <li> <p>r-squared:</p> <p>First understand The r value, or correlation coefficient. It measures the strength and direction of a linear relationship between two variables, ranging from -1 to 1. An r value of 1 indicates a perfect positive correlation, while -1 indicates a perfect negative correlation, and 0 means no correlation exists.</p> <p>Now <code>r-squared</code> is a method of knowing how well the line is fitting the data. It has a value between 0 to 1.  1 means that line is right in the middle of the observations, meaning that each dot(observation) is at equal distance from the line on the both sides, hence it is the best fitting line that you have, i.e the line has fully minimised the squared differences from observations. 0 mean the line does not, at all, minimise the squared differences and is a worse fit. </p> <p>How r-squared helps: You can create a regression for your data using different techniques (eg. linear, logistic etc). R-squared helps you in choosing the correct regression technique. Higher r-squared means that the model has created a line that is correctely showing the trend. But r-squared is only one parameter in choosing the model, there are many more considerations based on what kind of data you have etc. See the table below.</p> </li> <li> <p>different regression techniques</p> </li> </ul> Regression Type Description Typical Use Case Linear Regression Models a straight-line relationship between one or more independent variables and a continuous dependent variable. Predicting house prices, sales trends, or temperature levels. Multiple Linear Regression Extension of linear regression using multiple predictors for a single continuous outcome. Estimating employee salaries from multiple features (experience, education, etc.). Logistic Regression Used when the dependent variable is categorical (binary or multinomial). Predicts probabilities between 0 and 1. Classifying spam vs. not-spam emails, churn prediction. Polynomial Regression Fits a non-linear (curved) relationship between variables using polynomial terms. Modeling growth curves or complex biological relationships. Ridge Regression A linear regression with L2 regularization, reducing coefficient magnitude to handle multicollinearity and overfitting. High-dimensional datasets with correlated features. Lasso Regression Uses L1 regularization to shrink some coefficients to zero, effectively performing feature selection. Sparse feature selection in big data problems <ul> <li>Multiple linear regression:   In normal regression, you are trying to predict the value of one dependent variable, based on another single influencing variable. Like predicting height based on age. Here age is the only influencing factor.  In multiple regression, you have multiple influencing variable instead of one. Like predicting car price based on brand, type(passenger or commercial), seating capacity etc.</li> <li>Multivariate regression: Unlike linear and multiple regression, where we are trying to predict the value of one signle dependent variable using one or more variables, in multivariate regression we are trying to predict multiple dependent variables. Like predicting price and time-to-sell of a car based on brand, type(passenger or commercial), seating capacity etc.</li> </ul>"},{"location":"while-coding/ai/course-notes-udemy-ml-ds-ai/#supervised-and-unsupervised-learning","title":"Supervised and unsupervised learning","text":"<ul> <li>Supervised:   We give the categories (classifications) to the algorithm, train it to classify data in certain buckets, and then let it classify the actual data. So basically, the categories are known and given to the algorithm. It just have to learn how to classify data between these categories.</li> <li>Unsupervised:   Here, the algorithm has to find out the categories by itself. There is no trainning. So, in this case, the algorithm looks at the patterns in the data and finds the relationships, categories etc and then classifies the data. This can be used to find unknown patterns and relationships in the data. These are also called latent variables.</li> </ul>"},{"location":"while-coding/ai/generative-ai/","title":"Generative AI for Everyone","text":"<p>Reference: https://www.coursera.org/learn/generative-ai-for-everyone/home/welcome</p> <p>downloaded Cource slides at: /home/dhaval/docs/learning/tech/learning material/ai/Generative-ai-for-everyone</p>"},{"location":"while-coding/ai/generative-ai/#important-terms","title":"important terms:","text":"<ul> <li>Knowledge cutoff: Most recent Time/date when model's training data was updated.</li> </ul>"},{"location":"while-coding/ai/generative-ai/#mental-notes","title":"mental notes:","text":"<ul> <li>Normal NLP vs LLM based gen ai project</li> <li>In normal NLP project,<ol> <li>you label the data</li> <li>and then train your neural network(model)</li> <li>and then you build your application that calls that model and passes a parameter</li> </ol> </li> <li> <p>In LLM based project, there can be two types</p> <ol> <li>you directly build an application (step-3 above) to call a pretrained ai model (like chatgpt, perplexity etc). Because of this, building LLM based application is very fast and easy. And that is because lot of people are creating such applications that are just wrappers on top of an third-party LLM.</li> <li>You can take an LLM, and improve it for your usecase using RAG, model fine-tuning, pretrain models. This takes some efforts but has more value</li> </ol> </li> <li> <p>What is a token:   Token doesn't always mean a single <code>word</code>. It is how LLM considers a word. For example, common words like <code>the example</code> may be considered to be a single token. While words like <code>programming</code> might be considered as two tokens (<code>program</code>+<code>ming</code>). So, on the average <code>1 token</code> = <code>3/4 of a word</code>. So for 300 words would roughly equal to 400 tokens.</p> </li> <li> <p>LLM charges: LLM models like chatGPT and others charge different rates for input tokens and output tokens. For example, price for input would be 0.0001$/1k tokens, while output is usually costlier like 0.002$/1k tokens. With this rate, it takes 0.08$ to create 40k tokens. 40k tokens is enough reading material for one adult for an hour. So, overall, using 3rd party LLMs is cheap.</p> </li> <li> <p>think of LLM as a reasoning engine in addition to knowing lot of things. This way of thinking will expand the usecases where LLMs can be used. Future uses of LLMs will be leveraging reasoning capabilities more than knowledge bank.</p> </li> <li>My note: So LLM = Reasoning engine + data store(RAG etc)</li> </ul> <p>Pretraining: training models on large data set to make it a general purpose model. This is expensive because it needs lot of data and effort. Only large tech companies do it. Models like chatgpt, deepseek etc</p> <p>RAG: is about improving the prompt with specific contextual data. This is used when adding a large set of context data to the prompt is not feasible or it is expensive. In this case, RAG will look at the large context and pick relevent context data and give it along with the prompt so that focus is narrowed down.</p> <p>fine-tuning: is used when you want to the model to generate responses using specific domain specific terms(legal, medical etc) and writing styles (shakespearian, british english etc). In such cases you have to take a generic pretrained model and fine tune it by providing a small set of your data to make it understand how to generate responses with specific terms and styles.</p> <p>Choosing pretrained model: -  1B param - good for sentiment analysis -  10B - Good for a chatbot -  100B - good for brainstorming -  You have to try different models and choose which works for you.</p> <ul> <li> <p>Closed source Vs open-weight models Vs Open source models:</p> </li> <li> <p>LLMs don't just predict the next word to give you the right answer. It has to understand your instructions(prompt) as well. And after understanding the prompt, it has to be trained to give answer in certain way. For example, if you ask for help from chatgpt, it starts the response by saying <code>sure, here are the steps</code>, so this part is not predicted from the internet. They have trained LLM to respond in this way. This is called <code>instruction tuning</code>. Also, LLMs learn from your rating of good or bad answer. This happens when you hit \ud83d\udc4d or \ud83d\udc4e on the answer you received. This is called RLHF (Reinforcement learning by Human feedback).</p> </li> <li> <p>Use of AI/LLM in a usecase or task:</p> </li> </ul> <p>It can either <code>augment</code> or <code>automate</code> a task.</p> <ul> <li>Augment: help human being do the task better</li> <li>Automate: Complete the task fully</li> </ul> <p>Companies should see what each job roles. What do they do. A job is made up of small-small tasks. So, break down a job into small small task. Evaluate which tasks can be automated and which can be augmented. Start with augmentation and move towards automation.</p> <p>Also, while looking at a role and evaluating possibility of using AI (augment/automate) for that role, we tend to look at the main task of that role only. But in reality, a person in that role may be doing many other surrounding tasks where AI can automate or augment. For example, when thinking about, can AI do a programmer's job, we tend to think that programmers do only coding. So the question that we start thinking is that <code>Can AI do coding</code>. But actually programmer do lot of other things like documentation, meetings, emailing, customer support etc. We should think about applying AI to any of these areas when thinking about AI for programmers.</p>"},{"location":"while-coding/ai/machine-learning/","title":"Machine Learning","text":"<p>https://www.deeplearning.ai/courses/machine-learning-specialization/</p>"},{"location":"while-coding/ai/prompt-engineering/","title":"Prompt Engineering","text":"<p>A prompt's form depends on the task that you are giving to a model. As you explore prompt engineering examples, you will review prompts containing some or all of the following elements:</p> <p>\u2022 Instructions: This is a task for the large language model to do. It provides a task description or instruction for how the model should perform.</p> <p>\u2022 Context: This is external information to guide the model.</p> <p>\u2022 Input data: This is the input for which you want a response.</p> <p>\u2022 Output indicator: This is the output type or format.</p> <p>Sample prompt:</p> <pre><code>Given a list of customer orders and available inventory, determine which orders can be fulfilled and which items have to be restocked.\n\nThis task is essential for inventory management and order fulfillment processes in ecommerce or retail businesses.\n\nOrders:\nOrder 1: Product A (5 units), Product B (3 units)\nOrder 2: Product C (2 units), Product B (2 units)\n\nInventory:\nProduct A: 8 units\nProduct B: 4 units\nProduct C: 1 unit\n\nFulfillment status:\n</code></pre> <p>The previous prompt includes all four elements of a prompt. You can break the prompt into the following elements:</p> <p>\u2022 Instructions: Given a list of customer orders and available inventory, determine which orders can be fulfilled and which items have to be restocked.</p> <p>\u2022 Context: This task is essential for inventory management and order fulfillment processes in ecommerce or retail businesses.</p> <p>\u2022 Input data:</p> <p>Orders:</p> <p>Order 1: Product A (5 units), Product B (3 units) Order 2: Product C (2 units), Product B (2 units)</p> <p>Inventory:</p> <p>Product A: 8 units Product B: 4 units Product C: 1 unit</p> <p>\u2022 Output indicator: Fulfillment status: </p>"},{"location":"while-coding/ai/prompt-engineering/#negative-prompting","title":"Negative prompting","text":"<p>Tell model what not to do. For instance, in a text generation model, negative prompts could be used to prevent the model from  producing hate speech, explicit content, or biased language.</p>"},{"location":"while-coding/ai/prompt-engineering/#model-parameters","title":"Model parameters","text":"<p>Temperature:</p> <p>This parameter controls the randomness or creativity of the model's output. A higher temperature makes the output more diverse and unpredictable, and a lower temperature makes it more focused and predictable. Temperature is set between 0 and 1. The following are examples of different temperature settings.</p> <ul> <li>Low temperature (for example, 0.2)   <ul> <li>Outputs are more conservative, repetitive, and focused on the most likely responses.</li> </ul> </li> <li>High temperature (for example, 1.0)<ul> <li>Outputs are more diverse, creative, and unpredictable, but might be less coherent or relevant.</li> </ul> </li> </ul> <p>TOP P:</p> <p>Top p is a setting that controls the diversity of the text by limiting the number of words that the model can choose from based on their probabilities. Top p is also set on a scale from 0 to 1. The following are examples of different top p settings.</p> <ul> <li>Low top p (for example, 0.250)    <ul> <li>With a low top p setting, like 0.250, the model will only consider words that make up the top 25 percent of the total probability distribution. This can help the output be more focused and coherent, because the model is limited to choosing from the most probable words given the context.</li> </ul> </li> <li>High top p (for example, 0.990)<ul> <li>With a high top p setting, like 0.990, the model will consider a broad range of possible words for the next word in the sequence, because it will include words that make up the top 99 percent of the total probability distribution. This can lead to more diverse and creative output, because the model has a wider pool of words to choose from.</li> </ul> </li> </ul> <p>Top K:</p> <p>Top k limits the number of words to the top k most probable words, regardless of their percent probabilities. For instance, if top k is set to 50, the model will only consider the 50 most likely words for the next word in the sequence, even if those 50 words only make up a small portion of the total probability distribution.</p> <ul> <li>Low top k (for example, 10)   <ul> <li>With a low setting, like 10, the model will only consider the 10 most probable words for the next word in the sequence. This can help the output be more focused and coherent, because the model is limited to choosing from the most probable words given the context.</li> </ul> </li> <li>High top k (for example, 500)<ul> <li>With a high top k setting, like 500, the model will consider the 500 most probable words for the next word in the sequence, regardless of their individual probabilities. This can lead to more diverse and creative output, because the model has a larger pool of potential words to choose from.</li> </ul> </li> </ul> <p>Length:</p> <p>The length inference parameter category refers to the settings that control the maximum length of the generated output and specify the stop sequences that signal the end of the generation process. To learn more, choose each of the following parameters.</p> <pre><code>- Maximum length\n    The maximum length setting determines the maximum number of tokens that the model can generate during the inference process. This parameter helps to prevent the model from generating excessive or infinite output, which could lead to resource exhaustion or undesirable behavior. The appropriate value for this setting depends on the specific task and the desired output length. For instance, in natural language generation tasks like text summarization or translation, the maximum length can be set based on the typical length of the target text. In open-ended generation tasks, such as creative writing or dialogue systems, a higher maximum length might be desirable to allow for more extended outputs.\n</code></pre> <p>How to give these parameters to chatgpt:</p> <p></p> <p>Adjusting these inference parameters can significantly impact the model's output, so you can fine-tune the level of creativity, diversity, and coherence to suit your specific needs.</p>"},{"location":"while-coding/ai/prompt-engineering/#good-bad-prompt-examples","title":"Good bad prompt examples:","text":"<ul> <li>Stay clear and consice:</li> </ul> <p>Prompts should be straightforward and avoid ambiguity. Clear prompts lead to more coherent responses.  Craft prompts with natural, flowing language and coherent sentence structure. Avoid isolated keywords and phrases.</p> <ul> <li> <p>bad prompt</p> <ul> <li>Compute the sum total of the subsequent sequence of numerals: 4, 8, 12, 16.</li> </ul> </li> <li> <p>Good prompt:</p> <ul> <li>What is the sum of these numbers: 4, 8, 12, 16?</li> </ul> </li> <li> <p>Include context if needed.</p> </li> </ul> <p>Provide any additional context that would help the model respond accurately.   For example, if you ask a model to analyze a business, include information about the type of business. What does the company do?   This type of detail in the input provides more relevant output. The context that you provide can be common   across multiple inputs or specific to each input.</p> <ul> <li> <p>Bad prompt</p> <ul> <li>Summarize this article: [insert article text]</li> </ul> </li> <li> <p>Good prompt</p> <ul> <li>Provide a summary of this article to be used in a blog post: [insert article text]</li> </ul> </li> <li> <p>Use directives for the appropriate response type.</p> </li> </ul> <p>If you want a particular output form, such as a summary, question, or poem, specify the response type directly.     You can also limit responses by length, format, included information, excluded information, and more.</p> <ul> <li> <p>Bad prompt</p> <ul> <li>What is the capital?</li> </ul> </li> <li> <p>Good prompt</p> <ul> <li>What is the capital of New York? Provide the answer in a full sentence.</li> </ul> </li> <li> <p>Consider the output in the prompt.</p> </li> </ul> <p>Mention the requested output at the end of the prompt to keep the model focused on appropriate content.</p> <ul> <li> <p>Bad prompt</p> <ul> <li>Calculate the area of a circle.</li> </ul> </li> <li> <p>Good prompt</p> <ul> <li>Calculate the area of a circle with a radius of 3 inches (7.5 cm). Round your answer to the nearest integer.</li> </ul> </li> <li> <p>Provide an example response.</p> <p>Use the expected output format as an example response in the prompt. Surround it in brackets to make it clear that it is an example.</p> </li> <li> <p>Bad prompt</p> <p>Determine the sentiment of this social media post: [insert post]</p> </li> <li> <p>Good prompt</p> <pre><code>Determine the sentiment of the following social media post using these examples:\n\npost: \"great pen\" =&gt; Positive\n\npost: \"I hate when my phone battery dies\" =&gt; Negative\n\n[insert social media post] =&gt;\n</code></pre> </li> <li> <p>Break up complex tasks.</p> </li> </ul> <p>Foundation models can get confused when asked to perform complex tasks. Break up complex tasks by using the following techniques:</p> <pre><code>- Divide the task into several subtasks. If you cannot get reliable results, try splitting the task into multiple prompts.\n- Ask the model if it understood your instruction. Provide clarification based on the model's response.\n- If you don\u2019t know how to break the task into subtasks, ask the model to think step by step. You will learn more about this type of prompt technique later on in this course. This method might not work for all models, but you can try to rephrase the instructions in a way that makes sense for the task. For example, you might request that the model divides the task into subtasks, approaches the problem systematically, or reasons through the problem one step at a time.\n</code></pre> <ul> <li> <p>Experiment and be creative.</p> <p>Try different prompts to optimize the model's responses. Determine which prompts achieve effective results and which prompts achieve inaccurate results. Adjust your prompts accordingly. Novel and thought-provoking prompts can lead to innovative outcomes.</p> </li> <li> <p>Use prompt templates.</p> </li> </ul> <p>Prompt templates are predefined structures or formats that can be used to provide consistent inputs to FMs. They help ensure that the prompts are phrased in a way that is easily understood by the model and can lead to more reliable and higher-quality outputs. Prompt templates often include instructions, context, examples, and placeholders for information relevant to the task at hand.</p> <p>Prompt templates can help streamline the process of interacting with models, making it easier to integrate them into various applications and workflows.</p>"},{"location":"while-coding/ai/prompt-engineering/#techniques","title":"Techniques","text":""},{"location":"while-coding/ai/prompt-engineering/#zero-shot-prompting","title":"Zero-shot prompting","text":"<p>Zero-shot prompting is a technique where a user presents a task to a generative model without providing any examples or explicit training for that specific task. In this approach, the user relies on the model's general knowledge and capabilities to understand and carry out the task without any prior exposure, or shots, of similar tasks. Remarkably, modern FMs have demonstrated impressive zero-shot performance, effectively tackling tasks thatthey were not explicitly trained for.</p> <p>Example:</p> <p>Tell me the sentiment of the following social media post and categorize it as positive, negative, or neutral:</p> <p>Huge shoutout to the amazing team at AnyCompany! Your top-notch customer service continues to blow me away. Proud to be a loyal customer!</p> <p>Note that this prompt did not provide any examples to the model. However, the model was still effective in deciphering the task.</p>"},{"location":"while-coding/ai/prompt-engineering/#few-shot-prompting","title":"Few-shot prompting","text":"<p>Few-shot prompting is a technique that involves providing a language model with contextual examples to guide its understanding and expected output for a specific task. In this approach, you supplement the prompt with sample inputs and their corresponding desired outputs, effectively giving the model a few shots or demonstrations to condition it for the requested task. Although few-shot prompting provides a model with multiple examples, you can also use single-shot or one-shot prompting by providing just one example.</p> <p>Example:</p> <pre><code>Tell me the sentiment of the following news headline and categorize it as positive, negative, or neutral. Here are some examples:\n\nInvestment firm fends off allegations of corruption\nAnswer: Negative\n\nLocal teacher awarded with national prize\nAnswer: Positive\n\n\nCommunity organization exceeds fundraising goal, to provide meals for thousands in need\n\nAnswer:\n</code></pre>"},{"location":"while-coding/ai/prompt-engineering/#chain-of-thought-cot-prompting","title":"Chain-of-thought (CoT) prompting","text":"<p>is a technique that divides intricate reasoning tasks into smaller, intermediary steps. This approach can be employed using either zero-shot or few-shot prompting techniques.  CoT prompts are tailored to specific problem types. To initiate the chain-of-thought reasoning process in a machine learning model, you can use the phrase \"Think step by step.\" It is recommended to use CoT prompting when the task requires multiple steps or a series of logical reasoning.</p> <p>Example:</p> <p>prompt:</p> <pre><code>Which service requires a larger deposit based on the following information?\n\nThe total cost of service A is $50,000, and it requires a 30 percent deposit.\n\nThe total cost of service B is $40,000, and it requires a 40 percent deposit.\n\nThink step by step.\n</code></pre> <p>Response:</p> <pre><code>The deposit for service A is 30 percent of $50,000, which is\n0.3 * 50,000 = $15,000\n\n\n\nThe deposit for service B is 40 percent of $40,000, which is\n0.4 * 40,000 = $16,000\n\n\n\nTherefore, based on the given information, service B requires a larger deposit.\n</code></pre> <p>==================== end of course ==================================================</p>"},{"location":"while-coding/ai/prompt-engineering/#helpful-words-to-be-used-in-a-prompts","title":"helpful words to be used in a prompts","text":"<ul> <li>actionable: \u201cGive me an actionable summary of this article for someone who needs to make decisions.\u201d</li> <li>concise: \u201cWrite a concise explanation of this product for a beginner.\u201d</li> <li>insightful: \u201cGive me an insightful review of this trend and what it means for consumers.\u201d</li> <li>simplified: \u201cSimplify this news article so a 12-year-old could understand it.\u201d</li> <li>bullet-pointed: \u201cSummarize this podcast episode in bullet points with timestamps.\u201d</li> <li>prioritized: \u201cList the top 3 takeaways from this report, prioritized by impact.\u201d</li> <li>stategic: \u201cGive me a strategic summary of this competitor\u2019s product launch.\u201d</li> <li>persuasive: \u201cWrite a persuasive pitch for this eco-friendly water bottle.\u201d</li> <li>comparative: \u201cCompare Claude and ChatGPT in a table showing strengths and weaknesses.\u201d</li> <li>contextual: Give me a contextual overview of this legislation and who it affects.\u201d</li> <li>visual: \u201cGive me a visual summary of this market research in table form.\u201d</li> </ul>"},{"location":"while-coding/ai/prompt-engineering/#3-word-rule","title":"3 word rule","text":"<p><code>Like a lawyer</code> <code>Like a journalist</code> <code>Like a 8 year old</code></p> <p>These three words can instantly shape the tone, voice and depth of the output.</p> <p>Tell chatgpt how the response should be writen. This sets tone, structure and depth etc and responses will be better.</p> <ul> <li>\u201cSummarize this article like a journalist\u201d</li> <li>\u201cExplain dark matter like a physics professor\u201d</li> <li>\u201cGive me career advice like a mentor\u201d</li> <li>\u201cTranslate this email like a professional diplomat\u201d</li> <li>\u201cWrite a poem like a Nashville songwriter\u201d</li> <li>\u201cDesign a pitch deck like a Silicon Valley founder\u201d</li> <li>\u201cReview this document like a detail-oriented lawyer\u201d</li> <li>\u201cBrainstorm ideas like a Gen Z influencer\u201d</li> <li>\u201cAsk me questions like a therapist would\u201d</li> <li>\u201cRewrite this paragraph like an editor at The Atlantic\u201d</li> <li>\u201cGive me feedback like a startup investor\u201d</li> <li>\u201cSummarize this book like a 10th grade English teacher\u201d</li> <li>\u201cCritique this image like an art historian\u201d</li> <li>\u201cPlan a vacation like a travel agent on a budget\u201d</li> <li>\u201cExplain this concept like I\u2019m five\u201d</li> <li>\u201cPitch this idea like a TED Talk speaker\u201d</li> </ul>"},{"location":"while-coding/ai/prompt-engineering/#prompt-dusting","title":"Prompt dusting","text":"<p>Use multiple chat bots (chatgpt, claude, perplexity etc) using the same prompt and combine the result </p> <p>https://www.tomsguide.com/ai/this-game-changing-ai-trick-is-the-secret-to-getting-the-best-chatbot-results</p>"},{"location":"while-coding/ai/prompt-engineering/#which-bot-is-better-at-what","title":"which bot is better at what","text":"<ul> <li>ChatGPT (GPT-4o): Excellent for writing, summarizing, organizing thoughts and tone matching. Great at step-by-step logic and structure.</li> <li>Claude 3.7 Sonnet: Amazing at nuance, emotional intelligence and digesting long documents. Feels like a gentle co-thinker.</li> <li>Gemini 2.0: Strong at pulling in Google Search info, perfect for travel planning, event discovery and integrating with your calendar or Gmail.</li> <li>Perplexity AI: My go-to for source-backed research, current news and citations.</li> <li>Groq 3: Blazing fast. Ideal for logic puzzles, short answers or coding.</li> <li>DeepSeek: Surprisingly sharp at multimodal reasoning, good with charts, graphs and solving math problems step-by-step.</li> </ul>"},{"location":"while-coding/ai/prompt-engineering/#start-with-a-verb","title":"start with a verb","text":"<ul> <li>Summarize</li> <li>Compare</li> <li>Rewrite</li> <li>List</li> <li>Explain</li> </ul> <p>This tells ChatGPT exactly what you want, which eliminates the guesswork (and potential for error).</p> <p>prompt: \"Can you help me compare the best summer side dishes for a backyard barbecue?</p> <p>Better Prompt: \"Compare easy side dishes for a backyard barbeque.\"</p>"},{"location":"while-coding/ai/rag-agentic-ai/","title":"Rag Agentic Ai","text":"<p>https://www.coursera.org/professional-certificates/ibm-rag-and-agentic-ai</p>"},{"location":"while-coding/ai/SDLC-tools/","title":"SDLC Tools with AI","text":""},{"location":"while-coding/ai/SDLC-tools/ai-tools-for-coding/","title":"AI Tools For Coding","text":""},{"location":"while-coding/ai/SDLC-tools/ai-tools-for-coding/#diagraming","title":"Diagraming","text":""},{"location":"while-coding/ai/SDLC-tools/ai-tools-for-coding/#-mermaid-plus-has-feature-draw-diagrams-with-help-aichatgpt-requires-paid-plan-there-is-a-7-day-free-trial-requiring-card-info","title":"- Mermaid Plus has feature draw diagrams with help Ai(chatgpt). Requires paid plan. There is a 7 day free trial requiring card info.","text":""},{"location":"while-coding/blog/janssen-contribution-windows-vscode/","title":"Contribute to Janssen Project","text":""},{"location":"while-coding/blog/janssen-contribution-windows-vscode/#windows-workspace-setup","title":"Windows workspace setup","text":""},{"location":"while-coding/blog/janssen-contribution-windows-vscode/#prerequisites","title":"Prerequisites","text":"<ul> <li>VSCode</li> </ul>"},{"location":"while-coding/blog/janssen-contribution-windows-vscode/#steps","title":"Steps","text":"<ol> <li>Install VS Code</li> <li>Setup GPG key</li> <li>https://gpg4win.org/download.html. Donate if you want else, click on $0 and download.</li> <li>open powershell</li> <li>gpg --full-generate-key</li> <li>gpg --list-secret-keys --keyid-format=long</li> <li>copy the key from the <code>sec</code> section and after the <code>/</code>. For example: <code>82TT34089E33256B</code></li> <li>gpg --armor --export 82TT34089E33256B</li> <li>copy entire output. including the <code>-- begin</code> and <code>end --</code>. </li> <li>go to github.com -&gt; settings -&gt; <code>ssh and gpg keys</code> -&gt; add new gpg key with any title and content you copied.</li> <li>git config --global user.signingkey 82TT34089E33256B</li> <li>git config --global commit.gpgsign true</li> <li>git config --global gpg.program \"C:\\Program Files (x86)\\gnupg\\bin\\gpg.exe\"</li> <li>Setup VS code</li> <li>Open settings <code>ctrl+,</code></li> <li>search for <code>gpg</code> and enable commit signing for both (user and workspace)</li> <li>search for <code>signoff</code> and enable the Git: always sign off for both (user and workspace)</li> <li>restart vs code</li> <li>clone a repo</li> <li>make the changes</li> <li>commit using vs code</li> <li>vs code will ask for gpg pass-phrase</li> <li>commit will be singed and also, dco will be added by vs code automatically</li> <li>push the commit</li> </ol>"},{"location":"while-coding/blog/janssen-contribution-windows-vscode/#useful-links","title":"useful links","text":"<ul> <li>https://dev.to/devmount/signed-git-commits-in-vs-code-36do</li> <li>https://docs.github.com/en/authentication/managing-commit-signature-verification/generating-a-new-gpg-key</li> </ul>"},{"location":"while-coding/certifications/","title":"Certifications","text":""},{"location":"while-coding/certifications/GitHub/","title":"GitHub Certifications","text":""},{"location":"while-coding/certifications/GitHub/github-fundamentals/","title":"GitHub Fundamentals","text":""},{"location":"while-coding/certifications/GitHub/github-fundamentals/#references","title":"References","text":""},{"location":"while-coding/certifications/GitHub/github-fundamentals/#add-a-change-to-last-commit-without-changing-the-commit-message","title":"Add a change to last commit without changing the commit message","text":"<p>For example you want to fix a typo that got into the last commit</p> <pre><code>git commit --amend --no-edit\n</code></pre>"},{"location":"while-coding/certifications/GitHub/github-fundamentals/#recover-a-file-after-deleting-it","title":"recover a file after deleting it","text":"<ul> <li>If you have just deleted using <code>rm</code></li> </ul> <pre><code>rm myfile.txt\ngit checkout -- myfile.txt\n</code></pre> <ul> <li>If you have deleted using <code>git rm</code>. In this case, <code>git rm</code> has instructed git   to not track the file anymore. Remember that <code>git rm</code> doesn't make a new commit)   but it just tells git not to track the file anymore.   At this point if you do <code>checkout</code> like before, it'll fail.   You have to first tell git to start tracking all files as it did in most recent   commit (HEAD). And then do <code>checkout</code> of the deleted file.</li> </ul> <pre><code>git rm myfile.txt\ngit checkout -- myfile.txt (this will fail)\ngit reset HEAD myfile.txt\ngit checkout -- myfile.txt (this time it'll be successful and get the file back)\n</code></pre>"},{"location":"while-coding/certifications/GitHub/github-fundamentals/#what-is-git","title":"What is Git","text":"<p>What is VCS and SCM?</p> <p>A version control system (VCS) is a program or set of programs that tracks changes to a collection of files.  - One goal of a VCS is to easily recall earlier versions of individual files or of the entire project. - Another goal is to allow several team members to work on a project, even on the same files, at the same time without affecting each other's work.</p> <p>Another name for a VCS is a software configuration management (SCM) system. The two terms often are used interchangeably\u2014in fact, Git's official documentation is located at git-scm.com. Technically, version control is just one of the practices involved in SCM.</p> <p>Distributed VCS Vs centralised?</p> <p>Git is distributed, which means that a project's complete history is stored both on the client and on the server. You can edit files without a network connection, check them in locally, and sync with the server when a connection becomes available. If a server goes down, you still have a local copy of the project.</p>"},{"location":"while-coding/certifications/GitHub/github-fundamentals/#terminologies","title":"Terminologies:","text":"<p>Working tree: The set of nested directories and files that contain the project that's being worked on.</p> <p>Repository (repo): Repo is a directory. The directory, located at the top level of a working tree, where Git keeps all the history and metadata for a project. Repositories are almost always referred to as repos. A bare repository is one that isn't part of a working tree; it's used for sharing or backup. A bare repo is usually a directory with a name that ends in .git\u2014for example, project.git.</p> <p>Hash: A number produced by a hash function that represents the contents of a file or another object as a fixed number of digits. Git uses hashes that are 160 bits long. One advantage to using hashes is that Git can tell whether a file has changed by hashing its contents and comparing the result to the previous hash. If the file time-and-date stamp is changed, but the file hash isn\u2019t changed, Git knows the file contents aren\u2019t changed.</p> <p>Object: A Git repo contains four types of objects, each uniquely identified by an SHA-1 hash. A blob object contains an ordinary file. A tree object represents a directory; it contains names, hashes, and permissions. A commit object represents a specific version of the working tree. A tag is a name attached to a commit.</p> <p>Commit: When used as a verb, commit means to make a commit object. This action takes its name from commits to a database. It means you are committing the changes you have made so that others can eventually see them, too.</p> <p>Branch: A branch is a named series of linked commits. The most recent commit on a branch is called the head. The default branch, which is created when you initialize a repository, is called main, often named master in Git. The head of the current branch is named HEAD(in caps). Branches are an incredibly useful feature of Git because they allow developers to work independently (or together) in branches and later merge their changes into the default branch.</p>"},{"location":"while-coding/certifications/GitHub/github-fundamentals/#features-provided-by-github-on-top-of-git","title":"Features provided by GitHub on top of Git","text":"<p>Key features provided by GitHub include:</p> <ul> <li>Issues</li> <li>Discussions</li> <li>Pull requests</li> <li>Notifications</li> <li>Labels</li> <li>Actions</li> <li>Forks</li> <li>Projects</li> </ul> <p>Remote: A remote is a named reference to another Git repository. When you create a repo, Git creates a remote named origin that is the default remote for push and pull operations.</p> <p>Commands, subcommands, and options: Git operations are performed by using commands like git push and git pull. git is the command, and push or pull is the subcommand. The subcommand specifies the operation you want Git to perform. Commands frequently are accompanied by options, which use hyphens (-) or double hyphens (--). For example, git reset --hard.</p>"},{"location":"while-coding/certifications/GitHub/github-fundamentals/#development-and-code-editing-options-from-githubcom","title":"Development and code editing options from GitHub.com","text":"<p>Github provides three different ways you can edit or develop code from the browser itself.  - Browsing and editing code from github.com site (good for basic browsing and editing a single file at a time) - Use github.dev light weight VS code editor to edit code and perform all git operations (Full fledged code browser, editor and can perform all git commands. But can't run, test or debug code) - Use codespaces, which provides full VS code running on an azure VM with access to shell.</p> <p>### github.dev - to start, navigate to a repo or a PR on github.com and then hit <code>dot</code> (.) - github.dev is a lightweight VS code editor that can be launched from the browser on your current repo. It is essentially meant to enable all code editing options and git operations. You can't test, run or debug programs there. Also you don't have access to terminal (which you have in codespaces). - github.dev doesn't have compute attached to it so you can't process your code. Just edit and git operations. - detailed differences between github.dev and codespaces are described here</p>"},{"location":"while-coding/certifications/GitHub/github-fundamentals/#codespaces","title":"Codespaces","text":"<ul> <li>codespaces is dedicated remote VM on Azure (with compute and storage) with preconfigured VS code (full version) and terminal access</li> <li>currently Individuals can use Codespaces for free each month for 60 hours, with pay-as-you-go pricing after that. Teams or Enterprises pay for Codespaces. A maximum monthly cap can also be set for extra pricing control.</li> <li>You can customize your project for GitHub Codespaces by committing configuration files to your repository (also known as configuration-as-code), which creates a repeatable codespace configuration for all users of your project. Each codespace you create is hosted by GitHub in a Docker container that runs on a virtual machine. You can choose the type of machine you want to use depending on the resources you need.</li> <li>It is not necessary to create a codespace from an existing repo/pr/commit. You can create a blank workspace from a template as well.</li> </ul>"},{"location":"while-coding/certifications/GitHub/github-fundamentals/#codespaces-lifecycle","title":"codespaces lifecycle","text":"<p>(create) ----- inactive for 30 mins ---&gt; (Stopped) --- stopped for 30 days --&gt; (deleted)</p> <ul> <li>You can create codespace</li> <li>From a GitHub template or any template repository on GitHub.com to start a new project.</li> <li>From a branch in your repository for new feature work.</li> <li>From an open pull request to explore work-in-progress.</li> <li>From a commit in a repository's history to investigate a bug at a specific point in time.</li> <li>If starting a new project, create a Codespace from a template and publish it to a repository on GitHub later.</li> <li>You can create more than one Codespace per repository or even per branch.</li> <li>When you create a GitHub Codespace, four processes occur:</li> <li>VM and storage are assigned to your Codespace.</li> <li>A container is created.</li> <li>A connection to the Codespace is made.</li> <li>A post-creation setup is made.</li> <li>When you connect to a Codespace through the web, AutoSave is automatically enabled to save changes after a specific amount of time has passed. When you connect to a Codespace through Visual Studio Code running on your desktop, you must enable AutoSave.</li> <li>list of your current code spaces: https://github.com/codespaces</li> <li>A Codespace requires an internet connection. If the connection to the internet is lost while working in a Codespace, you won't be able to access your Codespace. However, any uncommitted changes are saved. When you reestablish the internet connection, you can access the Codespace in the same state that it was left in when the connection was lost. If you have an unstable internet connection, you should frequently commit and push your changes.</li> <li>Only running Codespaces incur CPU charges. A stopped Codespace incurs only storage costs.</li> <li>codespaces personlisation: there is a list of things you can personalize here but didn't quite understand how to do it.</li> </ul>"},{"location":"while-coding/certifications/GitHub/github-fundamentals/#devcontainers","title":"devcontainers","text":"<p>By default, when you start a codespace, it launches a Azure VM and creates a docker container within the VM to host your dev environment. </p> <p>You can configure the development container(aka dev containers) for a repository so that any codespace created for that repository will give you a tailored development environment, complete with all the tools and runtimes you need to work on a specific project.</p> <p>A dev container file(.devcontainer/devcontainer.json) is a JSON file that lets you customize the default image that runs your codespace, VS code settings, run custom code, forward ports and much more!</p> <p>GitHub Codespaces offers two main ways of personalizing your codespace: Settings Sync with VS Code and dotfiles(this refers to files that start from <code>.</code> on any unix, linux system in general).</p>"},{"location":"while-coding/certifications/GitHub/github-fundamentals/#dotfiles","title":"dotfiles","text":"<p>Reference: https://docs.github.com/en/codespaces/setting-your-user-preferences/personalizing-github-codespaces-for-your-account#dotfiles</p> <p>When you create a new codespace, GitHub clones your selected dotfiles repository(in your GH user settings) to the codespace environment, and looks for one of the following files to set up the environment. <pre><code>install.sh\ninstall\nbootstrap.sh\nbootstrap\nscript/bootstrap\nsetup.sh\nsetup\nscript/setup\n</code></pre> If none of these files are found, then any files or folders in your selected dotfiles repository starting with . are symlinked to the codespace's ~ or $HOME directory.</p> <p>You need to have all the dotfiles in any one of your GH repositories and mention it under the <code>settings</code>-&gt;<code>codespaces</code>-&gt;<code>enable dotfiles</code></p>"},{"location":"while-coding/certifications/GitHub/github-fundamentals/#github-projects","title":"GitHub Projects","text":"<ul> <li>Projects can be at Org level(where there is a GH org), or at repo level. </li> </ul>"},{"location":"while-coding/certifications/GitHub/github-fundamentals/#compare-projects-vs-projectsclassic","title":"Compare <code>Projects</code> Vs <code>Projects(classic)</code>","text":"<p>Comprehensive lists of Project enhancements</p> <ul> <li>Tables and boards</li> <li>Plan and track work in a table or board view</li> <li>Rank, sort, and group within a table by any custom field</li> <li>Create draft issues with detailed descriptions and metadata</li> <li>Materialize any perspective with tokenized filtering and saved views</li> <li>Customize cards and group-by in Project boards</li> <li> <p>Real-time Project updates and user presence indicators</p> </li> <li> <p>Data</p> </li> <li>Define custom fields of type: text, number, date, iteration, and single select</li> <li>Configure iterations with flexible date ranges and breaks to represent your sprints, cycles, or quarterly roadmap</li> <li> <p>View linked pull requests and reviewers in both table and board views</p> </li> <li> <p>Insight</p> </li> <li>Create and configure custom bar, column, line, and stacked area charts</li> <li>Use aggregation functions like sum, count, average, min, and max to get the proper insight</li> <li> <p>Persist charts and share them with a URL to keep everyone in the know</p> </li> <li> <p>Automation</p> </li> <li>GraphQL ProjectsV2 API</li> <li>GitHub app Project scopes</li> <li>Webhooks events for Project item metadata updates</li> <li>GitHub Action to automate adding issues to Projects</li> </ul>"},{"location":"while-coding/certifications/GitHub/github-fundamentals/#access-control","title":"access control","text":"<ul> <li>Project visibility: You have the ability to control whether or not your Project is public or private. When your Project is public, everyone on the internet can view it. When your Project is private, only users granted at least read access can see your Project.<ul> <li>If the project is part of an org, then you can also define a <code>base role</code> which dictates what is a default role for a member of that org. So if the project is private, but the base role is <code>write</code>, then all the members of the org   would be able to edit the project items. But for people outside of the org, it'll be on invite.</li> </ul> </li> <li> <p>Who can manage access to your Project   Admins of organization-level Projects can manage access for the entire organization, for teams, for individual organization members, and for outside collaborators. Admins of user-level Projects can invite individual collaborators and manage their access.</p> </li> <li> <p>Organization level Project</p> </li> <li>No access: Only organization owners and users granted individual access can see the Project. Organization owners are also admins for the Project.</li> <li>Read: Everyone in the organization can see the Project. Organization owners are also admins for the Project.</li> <li>Write: Everyone in the organization can see and edit the Project. Organization owners are also admins for the Project.</li> <li>Admin: Everyone in the organization is an admin for the Project.</li> <li>Personal/User level Project</li> <li>Read: The individual can view the Project.</li> <li>Write: The individual can view and edit the Project.</li> <li>Admin: The individual can view, edit, and add new collaborators to the Project.</li> </ul>"},{"location":"while-coding/janssen/","title":"Janssen","text":""},{"location":"while-coding/janssen/agama-language-notes/","title":"Agama notes","text":""},{"location":"while-coding/janssen/agama-language-notes/#data-types","title":"Data types","text":"<ul> <li> <p>there is no strict type enforcement in Agama.</p> </li> <li> <p>Strings: are surrounded by double quotes. Examples: \"Agama\", \"blah\", \"\" (empty string)</p> </li> <li> <p>Strings: Backslash can be used to escape chars, like \"Hello\\nGluu\" (line feed), \"Hi\\u0040\" (unicode character)</p> </li> <li> <p>Strings: Including double quotes in strings requires unicode escaping, like \"\\u0022\". Using \"\\\"\" won't work</p> </li> <li> <p>Numbers are allowed, signed or unsigned</p> </li> <li>Boolean is <code>true</code> or <code>false</code> in lower case</li> <li>Null is represented by <code>null</code></li> <li>lists: They are finite sequences. Elements are separated by commas. Examples: [ 1, 2, 3 ], [ \"bah!\", \"humbug\" ], [ ] (empty list). Elements of a list do not have to be of the same type</li> <li>maps: Example: { brand: \"Ford\", color: null, model: 1963, overhaulsIn: [ 1979, 1999 ] }. </li> </ul>"},{"location":"while-coding/janssen/agama-language-notes/#variables","title":"Variables:","text":"<p>Variable names follow the pattern: a-zA-Z*</p> <p>camelCase naming is recommended</p> <p>Variables are not declared, just used freely. Variables are always global in a given flow</p> <p>They can be assigned a value using the equal sign. Example: colors = [ \"red\", \"blue\" ]</p> <p>They can be assigned several times in the same flow</p>"},{"location":"while-coding/janssen/agama-language-notes/#general-notes","title":"General notes","text":"<ul> <li>flow properties vs flow inputs: Flow properties are configuration values given to the flow. Flow inputs are inputs provided by caller flow (if there are any).</li> <li>flow properties can be accessed by a variable defined by <code>Configs</code> header. </li> <li>flow inputs are listed in the header of the flow using <code>Inputs</code></li> <li>Note the difference between properties and inputs. Properties are parameters that callers of the flow should not control or be interested in. On the other hand, inputs are parameters that callers supply explicitly to make the flow exhibit certain behaviors.</li> <li>Agama does not support the concept of subroutines/procedures; this is not needed because functional decomposition is carried out by calling subflows.</li> <li>Comparisons are limited to equality (is) or inequality (is not). For other forms of comparison you can resort foreign routines</li> <li>As expected and has higher priority than or when evaluating expressions. There is no way to group expressions to override the precedence: there are no parenthesis in Agama. Assigning the result of a boolean expression to a variable is not supported. These restrictions are important when writing conditionals</li> <li>Agama's Match ... to is a construct similar to C/Java switch</li> <li>Finish is used to terminate a flow's execution. A flow can finish successfully or failed</li> </ul>"},{"location":"while-coding/janssen/jans-cn-docker/","title":"Steps for installing jans using vmware and rancher","text":"<ul> <li>after installing VM using VMWare (4 core, 4.2gb mem, 80gb hdd, ubuntu 20.0.4)</li> <li>note down ip of your vm (<code>ip a</code> -&gt; ip against <code>inet</code>. e.g: 192.168.223.128)</li> <li>sudo apt install curl</li> <li>curl -fsSL https://get.docker.com -o get-docker.sh</li> <li>sudo sh get-docker.sh</li> <li>sudo docker run -d --restart=unless-stopped -p 80:80 -p 443:443 --privileged rancher/rancher:latest</li> <li>sudo docker logs 61fe18146714eac8a0200ca0a1057a96da4ed70702d4299caf9dc206f5a15768  2&gt;&amp;1 | grep \"Bootstrap Password:\"</li> <li>access <code>https://192.168.223.128</code></li> <li>for the first time, you just need to enter password. Use the bootstrap password that you got from step above</li> <li>It'll ask for resetting password. Reset it (open$5rancher)</li> <li>next you'll be taken to rancher dashboard where you'll see one active cluster</li> </ul>"},{"location":"while-coding/janssen/janssen-code-notes/","title":"Janssen code notes","text":""},{"location":"while-coding/janssen/janssen-code-notes/#code-involved-in-loading-configuration","title":"code involved in loading configuration","text":"<ul> <li><code>io.jans.as.common.service.common.ConfigurationService</code>:</li> <li>allows to add and update configuration in the database using <code>PersistenceEntryManager</code>. Also provides other methods.</li> <li>jans-orm : <code>FileConfiguration</code> is used to read configuration from property files</li> </ul>"},{"location":"while-coding/janssen/janssen-code-notes/#misc-notes","title":"Misc notes:","text":"<ul> <li>jans-auth-server <code>AppInitializer</code> class loads all the services required by jans-server, like persistence manager.</li> <li><code>AppInitializer</code> uses methods in <code>ApplicationFactory</code> to read properties stored in files and create objects like <code>PersistenceEntryManagerFactory</code> using <code>PersistanceFactoryService</code> which is injected in <code>ApplicationFactory</code></li> <li>To see which entity classes are mapped to which tables, search for <code>@ObjectClass</code> in jans-auth-server project. You'll find <code>@ObjectClass(tablename)</code>.</li> <li>there are many <code>model</code> packages in AS but only few (~23) are persistence related. Others (like <code>CodeVerifier</code> under <code>io.jans.as.model.authorize</code> package) are not related to persistance rather they are like POJOs.</li> <li><code>objectClass</code> is the name of the table. This is visible from <code>SqlConnectionProvider</code>.<code>getTableMappingByKey()</code>.</li> <li></li> </ul>"},{"location":"while-coding/janssen/janssen-code-notes/#properties-and-featureflags","title":"properties and featureflags","text":"<ul> <li>Classes that hold the properties of some of the modules are below:</li> <li>io.jans.as.model.configuration.AppConfiguration</li> <li>io.jans.as.model.common.FeatureFlagType</li> <li>io.jans.fido2.model.conf.Fido2Configuration</li> <li>io.jans.scim.model.conf.AppConfiguration</li> </ul>"},{"location":"while-coding/janssen/janssen-code-notes/#jans-config-api","title":"jans-config-api","text":""},{"location":"while-coding/janssen/janssen-code-notes/#code-flow-for-jans-config-apiapiv1jans-auth-serverconfig-endpoint","title":"code flow for <code>/jans-config-api/api/v1/jans-auth-server/config</code> endpoint","text":"<ul> <li>One thing to notice here is that config-api doesn't depend on jans-auth-server to fetch the configuration. Rather it directly reaches to persistence to get the properties</li> <li>but it uses the model from jans-auth-server (i.e <code>conf</code>) to hold these properties fetched from the db.</li> </ul>"},{"location":"while-coding/janssen/janssen-code-notes/#code-involved-in-client-authentication","title":"Code involved in client authentication","text":"<ul> <li><code>AuthenticationFilter</code> is the main class. It is a <code>@WebFilter</code> and filters every request coming at below mentioned endpoints    <pre><code>             \"/restv1/authorize\",\n             \"/restv1/token\",\n             \"/restv1/userinfo\",\n             \"/restv1/revoke\",\n             \"/restv1/revoke_session\",\n             \"/restv1/bc-authorize\",\n             \"/restv1/par\",\n             \"/restv1/device_authorization\",\n             \"/restv1/register\",\n             \"/restv1/ssa\"\n</code></pre></li> </ul> <p>This class is a servlet filter as it implements <code>jakarta.servlet.Filter</code> interface and overrides <code>doFilter</code> method</p> <p>## Sector identifier</p> <ul> <li>where is sector identifier uri gets validated? code</li> <li> <p>where does pairwise ids get generated? code</p> </li> <li> <p>it seems that some endpoints authenticate clients, but there are certain endpoints that authenticate user. See if condition at line. For these endpoints it'll invoke client auth, and for rest of the endpoints it'll invoke user auth.</p> </li> <li>actual method that compares clientId and secret with what is stored in backend is the <code>authenticate</code> method in <code>ClientService</code> class. here</li> </ul>"},{"location":"while-coding/janssen/janssen-code-notes/#code-for-redirect-uri","title":"code for redirect URI","text":""},{"location":"while-coding/janssen/janssen-code-notes/#-iojansasserverserviceredirectionuriservicevalidateredirectionuri-is-where-incoming-uri-from-various-requests-get-compared-with-what-is-registered-by-client","title":"- <code>io.jans.as.server.service.RedirectionUriService.validateRedirectionUri()</code> : is where incoming URI from various requests get compared with what is registered by client","text":""},{"location":"while-coding/janssen/janssen-code-notes/#how-web-pages-are-built","title":"how web pages are built","text":"<p>Web pages like <code>https://jans-opensuse/device-code</code> are xhtml pages. For example:  <pre><code>jans-auth-server/server/src/main/webapp/device_authorization.xhtml\n</code></pre> in the code base. These pages are placed in war file. In a deployed environment, you can find them under  <pre><code>/opt/jetty-11.0/temp/jetty-localhost-8081-jans-auth_war-_jans-auth-any-2256945074165495919/webapp/device_authorization.xhtml\n</code></pre> Texts in these pages come from properties files. For instance <pre><code>jans-auth-server/server/src/main/resources/jans-auth.properties\n</code></pre> Most of these xhtml pages use base xhtml templates. For example, the <code>device_authorization.xhtml</code> uses the <code>login-template.xhtml</code> as a template. In the code base, the templates can be found <pre><code>jans-auth-server/server/src/main/webapp/WEB-INF/incl/layout/login-template.xhtml\n</code></pre> and in deployment, templates are part of war file that is exploded under paths like <pre><code>/opt/jetty-11.0/temp/jetty-localhost-8081-jans-auth_war-_jans-auth-any-2256945074165495919/webapp/WEB-INF/incl/layout/login-template.xhtml\n/opt/jetty-11.0/temp/jetty-localhost-8081-jans-auth_war-_jans-auth-any-2256945074165495919/webapp/casa/login-template.xhtml\n</code></pre> Templates have the basic logo etc.</p> <p>Command to find out which template is used in which xhtml. Run the command at the root of your source code: <pre><code>dhaval@thinkpad:~/IdeaProjects/Janssen/jans$ grep -r -i --include *.xhtml \"template=\" .\n</code></pre></p> <p>Command to find out which xhtml pages are not using templates. It seems that these pages are used just for redirect and to call actions. Won't be visible to the end user. Like <code>logout.xhtml</code> <pre><code>egrep -r -Li --include *.xhtml \"template=\" .\n</code></pre></p> <p>How is logo on an xhtml page is fetched:</p> <p>Logo is served by a servlet <code>jans-auth-server/server/src/main/java/io/jans/as/server/servlet/LogoServlet.java</code>. This servlet is called from template files like <code>login-template.xhtml</code>, <code>login-extended-template.xhtml</code>. Various files, like <code>device_authorization.xhtml</code> use these template files and hence get the logo. </p>"},{"location":"while-coding/janssen/janssen-log-analysis-with-test-load/","title":"Log analysis","text":"<p>This log is generated when installing janssen with test data load.</p>"},{"location":"while-coding/janssen/janssen-log-analysis-with-test-load/#check-if-required-third-party-pacakges-are-installed-on-ubuntu","title":"Check if required third party pacakges are installed on Ubuntu","text":"<pre><code>11:33:47 06/21/21 Running: dpkg-query -W -f='${Status}' apache2 2&gt;/dev/null | grep -c \"ok installed\"\n11:33:47 06/21/21 1\n\n11:33:47 06/21/21 Package apache2 was installed\n11:33:47 06/21/21 Running: dpkg-query -W -f='${Status}' curl 2&gt;/dev/null | grep -c \"ok installed\"\n11:33:47 06/21/21 1\n\n11:33:47 06/21/21 Package curl was installed\n11:33:47 06/21/21 Running: dpkg-query -W -f='${Status}' wget 2&gt;/dev/null | grep -c \"ok installed\"\n11:33:47 06/21/21 1\n\n11:33:47 06/21/21 Package wget was installed\n11:33:47 06/21/21 Running: dpkg-query -W -f='${Status}' xz-utils 2&gt;/dev/null | grep -c \"ok installed\"\n11:33:47 06/21/21 1\n\n11:33:47 06/21/21 Package xz-utils was installed\n11:33:47 06/21/21 Running: dpkg-query -W -f='${Status}' unzip 2&gt;/dev/null | grep -c \"ok installed\"\n11:33:47 06/21/21 1\n\n11:33:47 06/21/21 Package unzip was installed\n11:33:47 06/21/21 Running: dpkg-query -W -f='${Status}' rsyslog 2&gt;/dev/null | grep -c \"ok installed\"\n11:33:47 06/21/21 1\n\n11:33:47 06/21/21 Package rsyslog was installed\n11:33:47 06/21/21 Running: dpkg-query -W -f='${Status}' python3-ldap3 2&gt;/dev/null | grep -c \"ok installed\"\n11:33:47 06/21/21 1\n\n11:33:47 06/21/21 Package python3-ldap3 was installed\n11:33:47 06/21/21 Running: dpkg-query -W -f='${Status}' net-tools 2&gt;/dev/null | grep -c \"ok installed\"\n11:33:47 06/21/21 1\n\n11:33:47 06/21/21 Package net-tools was installed\n11:33:47 06/21/21 Running: dpkg-query -W -f='${Status}' python3-requests 2&gt;/dev/null | grep -c \"ok installed\"\n11:33:47 06/21/21 1\n\n11:33:47 06/21/21 Package python3-requests was installed\n11:33:47 06/21/21 Running: dpkg-query -W -f='${Status}' python3-ruamel.yaml 2&gt;/dev/null | grep -c \"ok installed\"\n11:33:47 06/21/21 1\n\n11:33:47 06/21/21 Package python3-ruamel.yaml was installed\n11:33:47 06/21/21 Running: dpkg-query -W -f='${Status}' python3-certifi 2&gt;/dev/null | grep -c \"ok installed\"\n11:33:47 06/21/21 1\n\n11:33:47 06/21/21 Package python3-certifi was installed\n11:33:47 06/21/21 Running: dpkg-query -W -f='${Status}' python3-pymysql 2&gt;/dev/null | grep -c \"ok installed\"\n11:33:48 06/21/21 1\n\n11:33:48 06/21/21 Package python3-pymysql was installed\n11:33:48 06/21/21 Running: dpkg-query -W -f='${Status}' bzip2 2&gt;/dev/null | grep -c \"ok installed\"\n11:33:48 06/21/21 1\n\n11:33:48 06/21/21 Package bzip2 was installed\n11:33:48 06/21/21 Running: a2enmod ssl headers proxy proxy_http proxy_ajp\n11:33:48 06/21/21 Considering dependency setenvif for ssl:\nModule setenvif already enabled\nConsidering dependency mime for ssl:\nModule mime already enabled\nConsidering dependency socache_shmcb for ssl:\nModule socache_shmcb already enabled\nModule ssl already enabled\nModule headers already enabled\nModule proxy already enabled\nConsidering dependency proxy for proxy_http:\nModule proxy already enabled\nModule proxy_http already enabled\nConsidering dependency proxy for proxy_ajp:\nModule proxy already enabled\nModule proxy_ajp already enabled\n</code></pre> <p>11:33:48 06/21/21 Loading json file: /opt/jans/jans-setup/schema/opendj_types.json 11:33:48 06/21/21 Loading json file: /opt/jans/jans-setup/schema/jans_schema.json 11:33:49 06/21/21 Loading json file: /opt/jans/jans-setup/setup_app/data/jetty_app_configuration.json 11:33:49 06/21/21 Determining package for pattern: /opt/dist/jans/oxd-server*.tgz 11:33:49 06/21/21 Determining key generator path 11:33:49 06/21/21 Key generator path was determined as io.jans.as.client.util.KeyExporter 11:33:49 06/21/21 Running: apache2 -v | egrep '^Server version' 11:33:49 06/21/21 Server version: Apache/2.4.41 (Ubuntu)</p> <p>11:34:39 06/21/21 Checking properties 11:34:39 06/21/21 Running: apache2 -v | egrep '^Server version' 11:34:39 06/21/21 Server version: Apache/2.4.41 (Ubuntu)</p> <p>11:34:45 06/21/21 Calculating memory setting for applications 11:34:45 06/21/21 Rendering template /opt/jans/jans-setup/templates/system_profile_systemd 11:34:45 06/21/21 Reading file /opt/jans/jans-setup/templates/system_profile_systemd 11:34:45 06/21/21 Writing file /opt/jans/jans-setup/output/system_profile_systemd 11:34:45 06/21/21 Reading file /opt/jans/jans-setup/output/system_profile_systemd 11:34:45 06/21/21 Reading file /etc/profile 11:34:45 06/21/21 Running: /usr/sbin/groupadd jans 11:34:45 06/21/21 Running: /bin/mkdir -p /opt/jans/bin 11:34:45 06/21/21 Running: /bin/mkdir -p /opt/jans/system 11:34:45 06/21/21 Running: /bin/mkdir -p /opt/jans/python 11:34:45 06/21/21 Running: /bin/mkdir -p /etc/jans/conf 11:34:45 06/21/21 Running: /bin/mkdir -p /etc/certs 11:34:45 06/21/21 Running: /bin/chown -R root:jans /etc/certs 11:34:45 06/21/21 Running: /bin/chmod 551 /etc/certs 11:34:45 06/21/21 Running: /bin/chmod ga+w /tmp 11:34:45 06/21/21 Making salt 11:34:45 06/21/21 Writing file /etc/jans/conf/salt 11:34:45 06/21/21 Installing Jre 11:34:45 06/21/21 Installing server JRE amazon-corretto-11.0.8.10.1-linux-x64.tar.gz ... 11:34:45 06/21/21 Extracting amazon-corretto-11.0.8.10.1-linux-x64.tar.gz into /opt/ 11:34:45 06/21/21 Running: /usr/bin/tar -xzf /opt/dist/app/amazon-corretto-11.0.8.10.1-linux-x64.tar.gz -C /opt/ --no-xattrs --no-same-owner --no-same-permissions 11:34:48 06/21/21 Running: /bin/ln -sf /opt/amazon-corretto-11.0.8.10.1-linux-x64 /opt/jre 11:34:48 06/21/21 Running: /bin/chmod -R 755 /opt/amazon-corretto-11.0.8.10.1-linux-x64/bin/ 11:34:48 06/21/21 Running: /bin/chown -R root:root /opt/amazon-corretto-11.0.8.10.1-linux-x64 11:34:48 06/21/21 Running: /bin/chown -h root:root /opt/jre 11:34:48 06/21/21 Running: /bin/mkdir -p /opt/jre/jre 11:34:48 06/21/21 Running: /bin/ln -s /opt/jre/lib /opt/jre/jre/lib 11:34:48 06/21/21 Running: /usr/bin/sed -i /^#crypto.policy=unlimited/s/^#// /opt/jre/conf/security/java.security 11:34:48 06/21/21 Reading file /opt/jre/conf/security/java.security 11:34:48 06/21/21 Writing file /opt/jre/conf/security/java.security 11:34:48 06/21/21 Running: cp -f /opt/jre/conf/security/java.security /opt/jre/conf/security/java.security.jans-1.0.0-1~ 11:34:48 06/21/21 Installing Jetty 11:34:48 06/21/21 Running: /usr/sbin/useradd --system --user-group --shell /bin/bash --create-home --home-dir /home/jetty jetty 11:34:48 06/21/21 Running: /usr/sbin/usermod -a -G jans jetty 11:34:48 06/21/21 Running: /bin/mkdir -p /home/jetty/lib 11:34:48 06/21/21 Running: /bin/mkdir -p /opt/jetty-9.4/temp 11:34:48 06/21/21 Running: /bin/chown -R jetty:jetty /opt/jetty-9.4/temp 11:34:48 06/21/21 Extracting /opt/dist/app/jetty-distribution-9.4.31.v20200723.tar.gz into /opt/jetty 11:34:48 06/21/21 Running: tar -xzf /opt/dist/app/jetty-distribution-9.4.31.v20200723.tar.gz -C /opt/jetty-9.4 --no-xattrs --no-same-owner --no-same-permissions 11:34:49 06/21/21 Running: /bin/ln -sf /opt/jetty-9.4/jetty-distribution-9.4.31.v20200723 /opt/jetty 11:34:49 06/21/21 Running: /bin/chmod -R 755 /opt/jetty-9.4/jetty-distribution-9.4.31.v20200723/bin/ 11:34:49 06/21/21 Applying changes to jetty files... 11:34:49 06/21/21 Reading file /opt/jetty/etc/webdefault.xml 11:34:49 06/21/21 Writing file /opt/jetty/etc/webdefault.xml.bak 11:34:49 06/21/21 Created backup of jetty file /opt/jetty/etc/webdefault.xml.bak... 11:34:49 06/21/21 Writing file /opt/jetty/etc/webdefault.xml 11:34:49 06/21/21 Running: cp -f /opt/jetty/etc/webdefault.xml /opt/jetty/etc/webdefault.xml.jans-1.0.0-1~ 11:34:49 06/21/21 Wrote updated jetty file /opt/jetty/etc/webdefault.xml... 11:34:49 06/21/21 Reading file /opt/jetty/etc/jetty.xml 11:34:49 06/21/21 Writing file /opt/jetty/etc/jetty.xml.bak 11:34:49 06/21/21 Created backup of jetty file /opt/jetty/etc/jetty.xml.bak... 11:34:49 06/21/21 Writing file /opt/jetty/etc/jetty.xml 11:34:49 06/21/21 Running: cp -f /opt/jetty/etc/jetty.xml /opt/jetty/etc/jetty.xml.jans-1.0.0-1~ 11:34:49 06/21/21 Wrote updated jetty file /opt/jetty/etc/jetty.xml... 11:34:49 06/21/21 Running: /bin/chown -R jetty:jetty /opt/jetty-9.4/jetty-distribution-9.4.31.v20200723 11:34:49 06/21/21 Running: /bin/chown -h jetty:jetty /opt/jetty 11:34:49 06/21/21 Running: /bin/mkdir -p /opt/jans/jetty 11:34:49 06/21/21 Running: /bin/chown -R jetty:jetty /opt/jans/jetty 11:34:49 06/21/21 Running: /bin/mkdir -p /var/run/jetty 11:34:49 06/21/21 Running: /bin/chmod -R 775 /var/run/jetty 11:34:49 06/21/21 Running: /bin/chgrp -R jetty /var/run/jetty 11:34:49 06/21/21 Running: rm -rf /opt/jetty/bin/jetty.sh 11:34:49 06/21/21 Copying file /opt/jans/jans-setup/static/system/initd/jetty.sh to /opt/jetty/bin/jetty.sh 11:34:49 06/21/21 Copied /opt/jans/jans-setup/static/system/initd/jetty.sh to /opt/jetty/bin/jetty.sh 11:34:49 06/21/21 Running: /bin/chown -R jetty:jetty /opt/jetty/bin/jetty.sh 11:34:49 06/21/21 Running: /bin/chmod -R 755 /opt/jetty/bin/jetty.sh 11:34:49 06/21/21 Installing Jython 11:34:49 06/21/21 Running: rm -rf /opt*-2.7.2 11:34:49 06/21/21 Running: /opt/jre/bin/java -jar /opt/dist/app/jython-installer-2.7.2.jar -v -s -d /opt/jython-2.7.2 -t standard -e ensurepip 11:34:51 06/21/21 system properties dumped to /tmp/System18365246860318276648.properties reading jar info using the console installer Performing silent installation specification version: '11' excluding directory META-INF/ excluding directory extlibs/ excluding directory grammar/ excluding directory org/ excluding directory org/apache/ excluding directory org/apache/commons/ excluding directory org/apache/commons/cli/ excluding directory org/python/ excluding directory org/python/util/ excluding directory org/python/util/install/ excluding directory org/python/util/install/driver/ excluding directory src/ excluding directory src/com/ excluding directory src/com/xhaus/ excluding directory src/com/xhaus/modjy/ excluding directory src/com/ziclix/ excluding directory src/com/ziclix/python/ excluding directory src/com/ziclix/python/sql/ excluding directory src/com/ziclix/python/sql/connect/ excluding directory src/com/ziclix/python/sql/handler/ excluding directory src/com/ziclix/python/sql/pipe/ excluding directory src/com/ziclix/python/sql/pipe/csv/ excluding directory src/com/ziclix/python/sql/pipe/db/ excluding directory src/com/ziclix/python/sql/procedure/ excluding directory src/com/ziclix/python/sql/resource/ excluding directory src/com/ziclix/python/sql/util/ excluding directory src/org/ excluding directory src/org/python/ excluding directory src/org/python/antlr/ excluding directory src/org/python/antlr/adapter/ excluding directory src/org/python/antlr/ast/ excluding directory src/org/python/antlr/base/ excluding directory src/org/python/antlr/op/ excluding directory src/org/python/compiler/ excluding directory src/org/python/core/ excluding directory src/org/python/core/adapter/ excluding directory src/org/python/core/buffer/ excluding directory src/org/python/core/finalization/ excluding directory src/org/python/core/io/ excluding directory src/org/python/core/packagecache/ excluding directory src/org/python/core/stringlib/ excluding directory src/org/python/core/util/ excluding directory src/org/python/expose/ excluding directory src/org/python/expose/generate/ excluding directory src/org/python/indexer/ excluding directory src/org/python/indexer/ast/ excluding directory src/org/python/indexer/demos/ excluding directory src/org/python/indexer/types/ excluding directory src/org/python/jsr223/ excluding directory src/org/python/modules/ excluding directory src/org/python/modules/_collections/ excluding directory src/org/python/modules/_csv/ excluding directory src/org/python/modules/_functools/ excluding directory src/org/python/modules/_io/ excluding directory src/org/python/modules/_json/ excluding directory src/org/python/modules/_jythonlib/ excluding directory src/org/python/modules/_locale/ excluding directory src/org/python/modules/_threading/ excluding directory src/org/python/modules/_weakref/ excluding directory src/org/python/modules/bz2/ excluding directory src/org/python/modules/itertools/ excluding directory src/org/python/modules/jffi/ excluding directory src/org/python/modules/posix/ excluding directory src/org/python/modules/random/ excluding directory src/org/python/modules/sre/ excluding directory src/org/python/modules/thread/ excluding directory src/org/python/modules/time/ excluding directory src/org/python/modules/zipimport/ excluding directory src/org/python/util/ excluding directory src/shell/ excluding directory src/templates/  10 %  20 %  30 %  40 %  50 %  60 %  70 %  80 %  90 %  100 %  110 %  120 %  130 %  140 %  150 % Generating start scripts ...  100 % Congratulations! You successfully installed Jython 2.7.2 to directory /opt/jython-2.7.2.</p> <p>11:34:51 06/21/21 Running: /bin/ln -sf /opt/jython-2.7.2 /opt/jython 11:34:51 06/21/21 Running: /bin/chown -R root:root /opt/jython-2.7.2 11:34:51 06/21/21 Running: /bin/chown -h root:root /opt/jython 11:34:51 06/21/21 Copying script files 11:34:51 06/21/21 Copying file /opt/jans/jans-setup/static/scripts/logmanager.sh to /opt/jans/bin 11:34:51 06/21/21 Copied /opt/jans/jans-setup/static/scripts/logmanager.sh to /opt/jans/bin 11:34:51 06/21/21 Copying file /opt/jans/jans-setup/static/scripts/testBind.py to /opt/jans/bin 11:34:51 06/21/21 Copied /opt/jans/jans-setup/static/scripts/testBind.py to /opt/jans/bin 11:34:51 06/21/21 Rendering encode.py 11:34:51 06/21/21 Reading file /opt/jans/jans-setup/templates/encode.py 11:34:51 06/21/21 Writing file /opt/jans/bin/encode.py 11:34:51 06/21/21 Running: cp -f /opt/jans/jans-setup/static/scripts/super_gluu_license_renewer.py /etc/cron.daily/super_gluu_lisence_renewer 11:34:51 06/21/21 Running: /bin/chown root:root /etc/cron.daily/super_gluu_lisence_renewer 11:34:51 06/21/21 Running: /bin/chmod +x /etc/cron.daily/super_gluu_lisence_renewer 11:34:51 06/21/21 Running: cp -f /opt/jans/jans-setup/setup_app/utils/printVersion.py /opt/jans/bin 11:34:51 06/21/21 Running: /bin/ln -s printVersion.py show_version.py 11:34:51 06/21/21 Running: /bin/chmod 700 /opt/jans/bin/show_version.py 11:34:51 06/21/21 Running: /bin/chmod 700 /opt/jans/bin/encode.py 11:34:51 06/21/21 Running: /bin/chmod 700 /opt/jans/bin/logmanager.sh 11:34:51 06/21/21 Running: /bin/chmod 700 /opt/jans/bin/testBind.py 11:34:51 06/21/21 Running: /bin/chmod 700 /opt/jans/bin/printVersion.py 11:34:51 06/21/21 Encoding passwords 11:34:51 06/21/21 Preparing scripts 11:34:51 06/21/21 Loading file /opt/jans/jans-setup/static/extension/application_session/SampleScript.py 11:34:51 06/21/21 Reading file /opt/jans/jans-setup/static/extension/application_session/SampleScript.py 11:34:51 06/21/21 Loaded script SampleScript.py with type application_session into application_session_samplescript 11:34:51 06/21/21 Loading file /opt/jans/jans-setup/static/extension/scim/SampleScript.py 11:34:51 06/21/21 Reading file /opt/jans/jans-setup/static/extension/scim/SampleScript.py 11:34:51 06/21/21 Loaded script SampleScript.py with type scim into scim_samplescript 11:34:51 06/21/21 Loading file /opt/jans/jans-setup/static/extension/resource_owner_password_credentials/resource_owner_password_credentials.py 11:34:51 06/21/21 Reading file /opt/jans/jans-setup/static/extension/resource_owner_password_credentials/resource_owner_password_credentials.py 11:34:51 06/21/21 Loaded script resource_owner_password_credentials.py with type resource_owner_password_credentials into resource_owner_password_credentials_resource_owner_password_credentials 11:34:51 06/21/21 Loading file /opt/jans/jans-setup/static/extension/resource_owner_password_credentials/resource_owner_password_credentials_custom_params.py 11:34:51 06/21/21 Reading file /opt/jans/jans-setup/static/extension/resource_owner_password_credentials/resource_owner_password_credentials_custom_params.py 11:34:51 06/21/21 Loaded script resource_owner_password_credentials_custom_params.py with type resource_owner_password_credentials into resource_owner_password_credentials_resource_owner_password_credentials_custom_params 11:34:51 06/21/21 Loading file /opt/jans/jans-setup/static/extension/uma_claims_gathering/uma_claims_gathering.py 11:34:51 06/21/21 Reading file /opt/jans/jans-setup/static/extension/uma_claims_gathering/uma_claims_gathering.py 11:34:51 06/21/21 Loaded script uma_claims_gathering.py with type uma_claims_gathering into uma_claims_gathering_uma_claims_gathering 11:34:51 06/21/21 Loading file /opt/jans/jans-setup/static/extension/cache_refresh/SampleScript.py 11:34:51 06/21/21 Reading file /opt/jans/jans-setup/static/extension/cache_refresh/SampleScript.py 11:34:51 06/21/21 Loaded script SampleScript.py with type cache_refresh into cache_refresh_samplescript 11:34:51 06/21/21 Loading file /opt/jans/jans-setup/static/extension/ciba/end_user_notification.py 11:34:51 06/21/21 Reading file /opt/jans/jans-setup/static/extension/ciba/end_user_notification.py 11:34:51 06/21/21 Loaded script end_user_notification.py with type ciba into ciba_end_user_notification 11:34:51 06/21/21 Loading file /opt/jans/jans-setup/static/extension/update_token/sample_script.py 11:34:51 06/21/21 Reading file /opt/jans/jans-setup/static/extension/update_token/sample_script.py 11:34:51 06/21/21 Loaded script sample_script.py with type update_token into update_token_sample_script 11:34:51 06/21/21 Loading file /opt/jans/jans-setup/static/extension/spontaneous_scope/spontaneous_scope.py 11:34:51 06/21/21 Reading file /opt/jans/jans-setup/static/extension/spontaneous_scope/spontaneous_scope.py 11:34:51 06/21/21 Loaded script spontaneous_scope.py with type spontaneous_scope into spontaneous_scope_spontaneous_scope 11:34:51 06/21/21 Loading file /opt/jans/jans-setup/static/extension/update_user/SampleScript.py 11:34:51 06/21/21 Reading file /opt/jans/jans-setup/static/extension/update_user/SampleScript.py 11:34:51 06/21/21 Loaded script SampleScript.py with type update_user into update_user_samplescript 11:34:51 06/21/21 Loading file /opt/jans/jans-setup/static/extension/post_authn/post_authn.py 11:34:51 06/21/21 Reading file /opt/jans/jans-setup/static/extension/post_authn/post_authn.py 11:34:51 06/21/21 Loaded script post_authn.py with type post_authn into post_authn_post_authn 11:34:51 06/21/21 Loading file /opt/jans/jans-setup/static/extension/dynamic_scope/work_phone.py 11:34:51 06/21/21 Reading file /opt/jans/jans-setup/static/extension/dynamic_scope/work_phone.py 11:34:51 06/21/21 Loaded script work_phone.py with type dynamic_scope into dynamic_scope_work_phone 11:34:51 06/21/21 Loading file /opt/jans/jans-setup/static/extension/dynamic_scope/session_parameter.py 11:34:51 06/21/21 Reading file /opt/jans/jans-setup/static/extension/dynamic_scope/session_parameter.py 11:34:51 06/21/21 Loaded script session_parameter.py with type dynamic_scope into dynamic_scope_session_parameter 11:34:51 06/21/21 Loading file /opt/jans/jans-setup/static/extension/dynamic_scope/org_name.py 11:34:51 06/21/21 Reading file /opt/jans/jans-setup/static/extension/dynamic_scope/org_name.py 11:34:51 06/21/21 Loaded script org_name.py with type dynamic_scope into dynamic_scope_org_name 11:34:51 06/21/21 Loading file /opt/jans/jans-setup/static/extension/dynamic_scope/memberof_attribute.py 11:34:51 06/21/21 Reading file /opt/jans/jans-setup/static/extension/dynamic_scope/memberof_attribute.py 11:34:51 06/21/21 Loaded script memberof_attribute.py with type dynamic_scope into dynamic_scope_memberof_attribute 11:34:51 06/21/21 Loading file /opt/jans/jans-setup/static/extension/dynamic_scope/dynamic_permission.py 11:34:51 06/21/21 Reading file /opt/jans/jans-setup/static/extension/dynamic_scope/dynamic_permission.py 11:34:51 06/21/21 Loaded script dynamic_permission.py with type dynamic_scope into dynamic_scope_dynamic_permission 11:34:51 06/21/21 Loading file /opt/jans/jans-setup/static/extension/introspection/introspection_custom_params.py 11:34:51 06/21/21 Reading file /opt/jans/jans-setup/static/extension/introspection/introspection_custom_params.py 11:34:51 06/21/21 Loaded script introspection_custom_params.py with type introspection into introspection_introspection_custom_params 11:34:51 06/21/21 Loading file /opt/jans/jans-setup/static/extension/introspection/introspection.py 11:34:51 06/21/21 Reading file /opt/jans/jans-setup/static/extension/introspection/introspection.py 11:34:51 06/21/21 Loaded script introspection.py with type introspection into introspection_introspection 11:34:51 06/21/21 Loading file /opt/jans/jans-setup/static/extension/uma_rpt_policy/uma_rpt_policy.py 11:34:51 06/21/21 Reading file /opt/jans/jans-setup/static/extension/uma_rpt_policy/uma_rpt_policy.py 11:34:51 06/21/21 Loaded script uma_rpt_policy.py with type uma_rpt_policy into uma_rpt_policy_uma_rpt_policy 11:34:51 06/21/21 Loading file /opt/jans/jans-setup/static/extension/uma_rpt_policy/UmaClientAuthzRptPolicy.py 11:34:51 06/21/21 Reading file /opt/jans/jans-setup/static/extension/uma_rpt_policy/UmaClientAuthzRptPolicy.py 11:34:51 06/21/21 Loaded script UmaClientAuthzRptPolicy.py with type uma_rpt_policy into uma_rpt_policy_umaclientauthzrptpolicy 11:34:51 06/21/21 Loading file /opt/jans/jans-setup/static/extension/client_registration/SampleScript.py 11:34:51 06/21/21 Reading file /opt/jans/jans-setup/static/extension/client_registration/SampleScript.py 11:34:51 06/21/21 Loaded script SampleScript.py with type client_registration into client_registration_samplescript 11:34:51 06/21/21 Loading file /opt/jans/jans-setup/static/extension/client_registration/Casa.py 11:34:51 06/21/21 Reading file /opt/jans/jans-setup/static/extension/client_registration/Casa.py 11:34:51 06/21/21 Loaded script Casa.py with type client_registration into client_registration_casa 11:34:51 06/21/21 Loading file /opt/jans/jans-setup/static/extension/revoke_token/revoke_token.py 11:34:51 06/21/21 Reading file /opt/jans/jans-setup/static/extension/revoke_token/revoke_token.py 11:34:51 06/21/21 Loaded script revoke_token.py with type revoke_token into revoke_token_revoke_token 11:34:51 06/21/21 Loading file /opt/jans/jans-setup/static/extension/uma_rpt_claims/uma_rpt_claims.py 11:34:51 06/21/21 Reading file /opt/jans/jans-setup/static/extension/uma_rpt_claims/uma_rpt_claims.py 11:34:51 06/21/21 Loaded script uma_rpt_claims.py with type uma_rpt_claims into uma_rpt_claims_uma_rpt_claims 11:34:51 06/21/21 Loading file /opt/jans/jans-setup/static/extension/idp/SampleScript.py 11:34:51 06/21/21 Reading file /opt/jans/jans-setup/static/extension/idp/SampleScript.py 11:34:51 06/21/21 Loaded script SampleScript.py with type idp into idp_samplescript 11:34:51 06/21/21 Loading file /opt/jans/jans-setup/static/extension/user_registration/ConfirmRegistrationSampleScript.py 11:34:51 06/21/21 Reading file /opt/jans/jans-setup/static/extension/user_registration/ConfirmRegistrationSampleScript.py 11:34:51 06/21/21 Loaded script ConfirmRegistrationSampleScript.py with type user_registration into user_registration_confirmregistrationsamplescript 11:34:51 06/21/21 Loading file /opt/jans/jans-setup/static/extension/user_registration/SampleScript.py 11:34:51 06/21/21 Reading file /opt/jans/jans-setup/static/extension/user_registration/SampleScript.py 11:34:51 06/21/21 Loaded script SampleScript.py with type user_registration into user_registration_samplescript 11:34:51 06/21/21 Loading file /opt/jans/jans-setup/static/extension/consent_gathering/ConsentGatheringSample.py 11:34:51 06/21/21 Reading file /opt/jans/jans-setup/static/extension/consent_gathering/ConsentGatheringSample.py 11:34:51 06/21/21 Loaded script ConsentGatheringSample.py with type consent_gathering into consent_gathering_consentgatheringsample 11:34:51 06/21/21 Loading file /opt/jans/jans-setup/static/extension/persistence_extension/SampleScript.py 11:34:51 06/21/21 Reading file /opt/jans/jans-setup/static/extension/persistence_extension/SampleScript.py 11:34:51 06/21/21 Loaded script SampleScript.py with type persistence_extension into persistence_extension_samplescript 11:34:51 06/21/21 Loading file /opt/jans/jans-setup/static/extension/person_authentication/YubicloudExternalAuthenticator.py 11:34:51 06/21/21 Reading file /opt/jans/jans-setup/static/extension/person_authentication/YubicloudExternalAuthenticator.py 11:34:51 06/21/21 Loaded script YubicloudExternalAuthenticator.py with type person_authentication into person_authentication_yubicloudexternalauthenticator 11:34:51 06/21/21 Loading file /opt/jans/jans-setup/static/extension/person_authentication/SuperGluuExternalAuthenticator.py 11:34:51 06/21/21 Reading file /opt/jans/jans-setup/static/extension/person_authentication/SuperGluuExternalAuthenticator.py 11:34:51 06/21/21 Loaded script SuperGluuExternalAuthenticator.py with type person_authentication into person_authentication_supergluuexternalauthenticator 11:34:51 06/21/21 Loading file /opt/jans/jans-setup/static/extension/person_authentication/Fido2ExternalAuthenticator.py 11:34:51 06/21/21 Reading file /opt/jans/jans-setup/static/extension/person_authentication/Fido2ExternalAuthenticator.py 11:34:51 06/21/21 Loaded script Fido2ExternalAuthenticator.py with type person_authentication into person_authentication_fido2externalauthenticator 11:34:51 06/21/21 Loading file /opt/jans/jans-setup/static/extension/person_authentication/BasicLockAccountExternalAuthenticator.py 11:34:51 06/21/21 Reading file /opt/jans/jans-setup/static/extension/person_authentication/BasicLockAccountExternalAuthenticator.py 11:34:51 06/21/21 Loaded script BasicLockAccountExternalAuthenticator.py with type person_authentication into person_authentication_basiclockaccountexternalauthenticator 11:34:51 06/21/21 Loading file /opt/jans/jans-setup/static/extension/person_authentication/UafExternalAuthenticator.py 11:34:51 06/21/21 Reading file /opt/jans/jans-setup/static/extension/person_authentication/UafExternalAuthenticator.py 11:34:51 06/21/21 Loaded script UafExternalAuthenticator.py with type person_authentication into person_authentication_uafexternalauthenticator 11:34:51 06/21/21 Loading file /opt/jans/jans-setup/static/extension/person_authentication/UserCertExternalAuthenticator.py 11:34:51 06/21/21 Reading file /opt/jans/jans-setup/static/extension/person_authentication/UserCertExternalAuthenticator.py 11:34:51 06/21/21 Loaded script UserCertExternalAuthenticator.py with type person_authentication into person_authentication_usercertexternalauthenticator 11:34:51 06/21/21 Loading file /opt/jans/jans-setup/static/extension/person_authentication/Casa.py 11:34:51 06/21/21 Reading file /opt/jans/jans-setup/static/extension/person_authentication/Casa.py 11:34:51 06/21/21 Loaded script Casa.py with type person_authentication into person_authentication_casa 11:34:51 06/21/21 Loading file /opt/jans/jans-setup/static/extension/person_authentication/ThumbSignInExternalAuthenticator.py 11:34:51 06/21/21 Reading file /opt/jans/jans-setup/static/extension/person_authentication/ThumbSignInExternalAuthenticator.py 11:34:51 06/21/21 Loaded script ThumbSignInExternalAuthenticator.py with type person_authentication into person_authentication_thumbsigninexternalauthenticator 11:34:51 06/21/21 Loading file /opt/jans/jans-setup/static/extension/person_authentication/DuoExternalAuthenticator.py 11:34:51 06/21/21 Reading file /opt/jans/jans-setup/static/extension/person_authentication/DuoExternalAuthenticator.py 11:34:51 06/21/21 Loaded script DuoExternalAuthenticator.py with type person_authentication into person_authentication_duoexternalauthenticator 11:34:51 06/21/21 Loading file /opt/jans/jans-setup/static/extension/person_authentication/smpp2FA.py 11:34:51 06/21/21 Reading file /opt/jans/jans-setup/static/extension/person_authentication/smpp2FA.py 11:34:51 06/21/21 Loaded script smpp2FA.py with type person_authentication into person_authentication_smpp2fa 11:34:51 06/21/21 Loading file /opt/jans/jans-setup/static/extension/person_authentication/twilio2FA.py 11:34:51 06/21/21 Reading file /opt/jans/jans-setup/static/extension/person_authentication/twilio2FA.py 11:34:51 06/21/21 Loaded script twilio2FA.py with type person_authentication into person_authentication_twilio2fa 11:34:51 06/21/21 Loading file /opt/jans/jans-setup/static/extension/person_authentication/OtpExternalAuthenticator.py 11:34:51 06/21/21 Reading file /opt/jans/jans-setup/static/extension/person_authentication/OtpExternalAuthenticator.py 11:34:51 06/21/21 Loaded script OtpExternalAuthenticator.py with type person_authentication into person_authentication_otpexternalauthenticator 11:34:51 06/21/21 Loading file /opt/jans/jans-setup/static/extension/person_authentication/U2fExternalAuthenticator.py 11:34:51 06/21/21 Reading file /opt/jans/jans-setup/static/extension/person_authentication/U2fExternalAuthenticator.py 11:34:51 06/21/21 Loaded script U2fExternalAuthenticator.py with type person_authentication into person_authentication_u2fexternalauthenticator 11:34:51 06/21/21 Loading file /opt/jans/jans-setup/static/extension/person_authentication/BasicExternalAuthenticator.py 11:34:51 06/21/21 Reading file /opt/jans/jans-setup/static/extension/person_authentication/BasicExternalAuthenticator.py 11:34:51 06/21/21 Loaded script BasicExternalAuthenticator.py with type person_authentication into person_authentication_basicexternalauthenticator 11:34:51 06/21/21 Loading file /opt/jans/jans-setup/static/extension/end_session/end_session.py 11:34:51 06/21/21 Reading file /opt/jans/jans-setup/static/extension/end_session/end_session.py 11:34:51 06/21/21 Loaded script end_session.py with type end_session into end_session_end_session 11:34:51 06/21/21 Loading file /opt/jans/jans-setup/static/extension/id_generator/SampleScript.py 11:34:51 06/21/21 Reading file /opt/jans/jans-setup/static/extension/id_generator/SampleScript.py 11:34:51 06/21/21 Loaded script SampleScript.py with type id_generator into id_generator_samplescript 11:34:51 06/21/21 Rendering templates 11:34:51 06/21/21 Rendering template /opt/jans/jans-setup/templates/python.txt 11:34:51 06/21/21 Reading file /opt/jans/jans-setup/templates/python.txt 11:34:51 06/21/21 Writing file /opt/jans/jans-setup/output/python.txt 11:34:51 06/21/21 Rendering template /opt/jans/jans-setup/templates/jans-ldap.properties 11:34:51 06/21/21 Reading file /opt/jans/jans-setup/templates/jans-ldap.properties 11:34:51 06/21/21 Writing file /opt/jans/jans-setup/output/jans-ldap.properties 11:34:51 06/21/21 Rendering template /opt/jans/jans-setup/templates/opendj-setup.properties 11:34:51 06/21/21 Reading file /opt/jans/jans-setup/templates/opendj-setup.properties 11:34:51 06/21/21 Writing file /opt/jans/jans-setup/output/opendj-setup.properties 11:34:51 06/21/21 Rendering template /opt/jans/jans-setup/templates/hostname 11:34:51 06/21/21 Reading file /opt/jans/jans-setup/templates/hostname 11:34:51 06/21/21 Writing file /opt/jans/jans-setup/output/hostname 11:34:51 06/21/21 Rendering template /opt/jans/jans-setup/templates/base.ldif 11:34:51 06/21/21 Reading file /opt/jans/jans-setup/templates/base.ldif 11:34:51 06/21/21 Writing file /opt/jans/jans-setup/output/base.ldif 11:34:51 06/21/21 Rendering template /opt/jans/jans-setup/templates/attributes.ldif 11:34:51 06/21/21 Reading file /opt/jans/jans-setup/templates/attributes.ldif 11:34:51 06/21/21 Writing file /opt/jans/jans-setup/output/attributes.ldif 11:34:51 06/21/21 Rendering template /opt/jans/jans-setup/templates/scopes.ldif 11:34:51 06/21/21 Reading file /opt/jans/jans-setup/templates/scopes.ldif 11:34:51 06/21/21 Writing file /opt/jans/jans-setup/output/scopes.ldif 11:34:51 06/21/21 Rendering template /opt/jans/jans-setup/templates/network 11:34:51 06/21/21 Reading file /opt/jans/jans-setup/templates/network 11:34:51 06/21/21 Writing file /opt/jans/jans-setup/output/network 11:34:51 06/21/21 Rendering template /opt/jans/jans-setup/templates/jans.properties 11:34:51 06/21/21 Reading file /opt/jans/jans-setup/templates/jans.properties 11:34:51 06/21/21 Writing file /opt/jans/jans-setup/output/jans.properties 11:34:51 06/21/21 Rendering configuration templates 11:34:51 06/21/21 Rendering template /opt/jans/jans-setup/templates/configuration.ldif 11:34:51 06/21/21 Reading file /opt/jans/jans-setup/templates/configuration.ldif 11:34:51 06/21/21 Writing file /opt/jans/jans-setup/output/configuration.ldif 11:34:51 06/21/21 Copying hosts and hostname to final destination 11:34:51 06/21/21 Copying file /opt/jans/jans-setup/output/hostname to /etc/hostname 11:34:51 06/21/21 Copied /opt/jans/jans-setup/output/hostname to /etc/hostname 11:34:51 06/21/21 Running: /bin/chmod -f 644 /etc/hostname 11:34:51 06/21/21 Running: /bin/hostname test.dd.jans.io 11:34:51 06/21/21 Reading file /etc/hosts 11:34:51 06/21/21 Running: /bin/chmod -R 644 /etc/hosts 11:34:51 06/21/21 Setting ulimist 11:34:51 06/21/21 Running: cp -f /etc/security/limits.conf /etc/security/limits.conf.jans-1.0.0-13~ 11:34:51 06/21/21 Running: cp -f /etc/security/limits.conf /etc/security/limits.conf.jans-1.0.0-14~ 11:34:51 06/21/21 Running: cp -f /etc/security/limits.conf /etc/security/limits.conf.jans-1.0.0-15~ 11:34:51 06/21/21 Running: cp -f /etc/security/limits.conf /etc/security/limits.conf.jans-1.0.0-16~ 11:34:51 06/21/21 Running: cp -f /etc/security/limits.conf /etc/security/limits.conf.jans-1.0.0-17~ 11:34:51 06/21/21 Running: cp -f /etc/security/limits.conf /etc/security/limits.conf.jans-1.0.0-18~ 11:34:51 06/21/21 Copying rendered templates to final destination 11:34:51 06/21/21 Copying /opt/jans/jans-setup/output/python.txt to /opt/jans/python/libs/python.txt 11:34:51 06/21/21 Created destination folder /opt/jans/python/libs 11:34:51 06/21/21 Copying /opt/jans/jans-setup/output/jans-ldap.properties to /etc/jans/conf/jans-ldap.properties 11:34:51 06/21/21 Copying /opt/jans/jans-setup/output/jans.properties to /etc/jans/conf/jans.properties 11:34:51 06/21/21 Setting up init scripts 11:34:51 06/21/21 Running: /usr/sbin/update-rc.d apache2 defaults 11:34:51 06/21/21 Running: /usr/sbin/update-rc.d apache2 enable 11:34:52 06/21/21 Running: /usr/sbin/update-rc.d rsyslog defaults 11:34:52 06/21/21 Running: /usr/sbin/update-rc.d rsyslog enable 11:34:52 06/21/21 Installing OpenDJ 11:34:52 06/21/21 Running: /usr/sbin/useradd --system --user-group --shell /bin/bash --create-home --home-dir /opt/opendj ldap 11:34:52 06/21/21 Running: /usr/sbin/usermod -a -G jans ldap 11:34:52 06/21/21 Running: /usr/sbin/usermod -a -G adm ldap 11:34:52 06/21/21 Running OpenDJ Setup 11:34:52 06/21/21 Unzipping /opt/dist/app/opendj-server-legacy-4.4.10.zip in /opt/ 11:34:52 06/21/21 Running: /usr/bin/unzip -n -q /opt/dist/app/opendj-server-legacy-4.4.10.zip -d /opt/ 11:34:53 06/21/21 Running: /bin/chown -R ldap:ldap /opt/opendj 11:34:53 06/21/21 Running: /bin/chown ldap:ldap /opt/opendj/.pw 11:34:53 06/21/21 Running OpenDJ Setup 11:34:53 06/21/21 Running: /bin/chown ldap:ldap /opt/opendj/opendj-setup.properties 11:34:53 06/21/21 Running: /bin/su ldap -c /opt/opendj/setup --no-prompt --cli --propertiesFilePath /opt/opendj/opendj-setup.properties --acceptLicense 11:35:03 06/21/21  Configuring Directory Server ..... Done. Configuring Certificates ..... Done. Starting Directory Server ...... Done.</p> <p>To see basic server configuration status and configuration, you can launch /opt/opendj/bin/status</p> <p>11:35:03 06/21/21 Setting OpenDJ params: {'default.java-home': '/opt/jre', 'start-ds.java-args': '-server -Xms5337m -Xmx5337m'} 11:35:03 06/21/21 Reading file /opt/opendj/config/java.properties 11:35:03 06/21/21 Writing file /opt/opendj/config/java.properties 11:35:03 06/21/21 Running: cp -f /opt/opendj/config/java.properties /opt/opendj/config/java.properties.jans-1.0.0-1~ 11:35:03 06/21/21 Stopping opendj server 11:35:03 06/21/21 Running: /opt/opendj/bin/stop-ds 11:35:06 06/21/21 Stopping Server... [21/Jun/2021:11:35:04 +0000] category=PROTOCOL severity=NOTICE msgID=277 msg=Stopped listening for new connections on LDAP Connection Handler 0.0.0.0 port 1389 [21/Jun/2021:11:35:04 +0000] category=PROTOCOL severity=NOTICE msgID=277 msg=Stopped listening for new connections on Administration Connector 0.0.0.0 port 4444 [21/Jun/2021:11:35:04 +0000] category=PROTOCOL severity=NOTICE msgID=277 msg=Stopped listening for new connections on LDAPS Connection Handler 0.0.0.0 port 1636 [21/Jun/2021:11:35:06 +0000] category=BACKEND severity=NOTICE msgID=370 msg=The backend userRoot is now taken offline [21/Jun/2021:11:35:06 +0000] category=CORE severity=NOTICE msgID=203 msg=The Directory Server is now stopped</p> <p>11:35:06 06/21/21 Copying file /opt/jans/jans-setup/static/opendj/systemd/opendj.service to /etc/systemd/system 11:35:06 06/21/21 Copied /opt/jans/jans-setup/static/opendj/systemd/opendj.service to /etc/systemd/system 11:35:06 06/21/21 Running: /usr/bin/systemctl daemon-reload 11:35:06 06/21/21 Copying OpenDJ schema 11:35:06 06/21/21 Copying file /opt/jans/jans-setup/static/opendj/101-jans.ldif to /opt/opendj/config/schema 11:35:06 06/21/21 Copied /opt/jans/jans-setup/static/opendj/101-jans.ldif to /opt/opendj/config/schema 11:35:06 06/21/21 Copying file /opt/jans/jans-setup/static/opendj/96-eduperson.ldif to /opt/opendj/config/schema 11:35:06 06/21/21 Copied /opt/jans/jans-setup/static/opendj/96-eduperson.ldif to /opt/opendj/config/schema 11:35:06 06/21/21 Copying file /opt/jans/jans-setup/static/opendj/77-customAttributes.ldif to /opt/opendj/config/schema 11:35:06 06/21/21 Copied /opt/jans/jans-setup/static/opendj/77-customAttributes.ldif to /opt/opendj/config/schema 11:35:06 06/21/21 Running: /bin/chmod -R a+rX /opt/opendj 11:35:06 06/21/21 Running: /bin/chown -R ldap:ldap /opt/opendj 11:35:06 06/21/21 Re-starting OpenDj after schema update 11:35:06 06/21/21 Running: /usr/bin/systemctl stop opendj 11:35:06 06/21/21 Run: /usr/bin/systemctl stop opendj with result code: 0 11:35:06 06/21/21 Running: /usr/bin/systemctl start opendj 11:35:11 06/21/21 Run: /usr/bin/systemctl start opendj with result code: 0 11:35:11 06/21/21 Bind to database 11:35:11 06/21/21 Making LDAP Conncetion 11:35:11 06/21/21 Making LDAP Connection to host localhost:1636 with user cn=directory manager 11:35:12 06/21/21 Running: /bin/su ldap -c /opt/opendj/bin/dsconfig --trustAll --no-prompt --hostname localhost --port 4444 --bindDN \"cn=directory manager\" --bindPasswordFile /opt/opendj/.pw create-backend --backend-name metric --set base-dn:o=metric --type je --set enabled:true --set db-cache-percent:20 11:35:14 06/21/21 Running: /bin/su ldap -c /opt/opendj/bin/dsconfig --trustAll --no-prompt --hostname localhost --port 4444 --bindDN \"cn=directory manager\" --bindPasswordFile /opt/opendj/.pw create-backend --backend-name site --set base-dn:o=site --type je --set enabled:true --set db-cache-percent:20 11:35:17 06/21/21 Configuring OpenDJ 11:35:17 06/21/21 Changing OpenDJ Configuration for ds-cfg-backend-id=userRoot,cn=Backends,cn=config 11:35:17 06/21/21 Changing OpenDJ Configuration for cn=config 11:35:17 06/21/21 Changing OpenDJ Configuration for cn=config 11:35:17 06/21/21 Changing OpenDJ Configuration for cn=Default Password Policy,cn=Password Policies,cn=config 11:35:17 06/21/21 Changing OpenDJ Configuration for cn=Default Password Policy,cn=Password Policies,cn=config 11:35:17 06/21/21 Changing OpenDJ Configuration for cn=File-Based Audit Logger,cn=Loggers,cn=config 11:35:17 06/21/21 Changing OpenDJ Configuration for cn=LDAP Connection Handler,cn=Connection Handlers,cn=config 11:35:17 06/21/21 Changing OpenDJ Configuration for cn=JMX Connection Handler,cn=Connection Handlers,cn=config 11:35:17 06/21/21 Changing OpenDJ Configuration for cn=Access Control Handler,cn=config 11:35:17 06/21/21 Changing OpenDJ Configuration for cn=LDAPS Connection Handler,cn=Connection Handlers,cn=config 11:35:17 06/21/21 Changing OpenDJ Configuration for cn=Administration Connector,cn=config 11:35:17 06/21/21 Creating OpenDJ uniqueness for mail 11:35:17 06/21/21 Creating OpenDJ uniqueness for uid 11:35:17 06/21/21 Getting OpenDJ certificate 11:35:17 06/21/21 Importing OpenDJ certificate to truststore 11:35:17 06/21/21 Running: /opt/jre/bin/keytool -importcert -noprompt -alias server-cert -file /etc/certs/opendj.crt -keystore /etc/certs/opendj.pkcs12 -storetype PKCS12 -storepass 6kgZi1VUPrJV 11:35:17 06/21/21 Import OpenDJ certificate 11:35:17 06/21/21 Running: /opt/jre/bin/keytool -import -trustcacerts -alias test.dd.jans.io_opendj -file /etc/certs/opendj.crt -keystore /opt/jre/jre/lib/security/cacerts -storepass changeit -noprompt 11:35:18 06/21/21 Creating OpenDJ Indexes 11:35:18 06/21/21 Creating Index ds-cfg-attribute=displayName,cn=Index,ds-cfg-backend-id=userRoot,cn=Backends,cn=config 11:35:18 06/21/21 Creating Index ds-cfg-attribute=description,cn=Index,ds-cfg-backend-id=userRoot,cn=Backends,cn=config 11:35:18 06/21/21 Creating Index ds-cfg-attribute=owner,cn=Index,ds-cfg-backend-id=userRoot,cn=Backends,cn=config 11:35:18 06/21/21 Creating Index ds-cfg-attribute=inum,cn=Index,ds-cfg-backend-id=userRoot,cn=Backends,cn=config 11:35:18 06/21/21 Creating Index ds-cfg-attribute=inum,cn=Index,ds-cfg-backend-id=site,cn=Backends,cn=config 11:35:18 06/21/21 Creating Index ds-cfg-attribute=uniqueIdentifier,cn=Index,ds-cfg-backend-id=userRoot,cn=Backends,cn=config 11:35:18 06/21/21 Creating Index ds-cfg-attribute=uuid,cn=Index,ds-cfg-backend-id=userRoot,cn=Backends,cn=config 11:35:18 06/21/21 Creating Index ds-cfg-attribute=jansId,cn=Index,ds-cfg-backend-id=userRoot,cn=Backends,cn=config 11:35:18 06/21/21 Creating Index ds-cfg-attribute=clnId,cn=Index,ds-cfg-backend-id=userRoot,cn=Backends,cn=config 11:35:18 06/21/21 Creating Index ds-cfg-attribute=jansClntSecretExpAt,cn=Index,ds-cfg-backend-id=userRoot,cn=Backends,cn=config 11:35:18 06/21/21 Creating Index ds-cfg-attribute=grtId,cn=Index,ds-cfg-backend-id=userRoot,cn=Backends,cn=config 11:35:18 06/21/21 Creating Index ds-cfg-attribute=authzCode,cn=Index,ds-cfg-backend-id=userRoot,cn=Backends,cn=config 11:35:18 06/21/21 Creating Index ds-cfg-attribute=tknCde,cn=Index,ds-cfg-backend-id=userRoot,cn=Backends,cn=config 11:35:18 06/21/21 Creating Index ds-cfg-attribute=jansSectorIdentifier,cn=Index,ds-cfg-backend-id=userRoot,cn=Backends,cn=config 11:35:18 06/21/21 Creating Index ds-cfg-attribute=jansStatus,cn=Index,ds-cfg-backend-id=userRoot,cn=Backends,cn=config 11:35:18 06/21/21 Creating Index ds-cfg-attribute=jansStatus,cn=Index,ds-cfg-backend-id=site,cn=Backends,cn=config 11:35:18 06/21/21 Creating Index ds-cfg-attribute=jansState,cn=Index,ds-cfg-backend-id=userRoot,cn=Backends,cn=config 11:35:18 06/21/21 Creating Index ds-cfg-attribute=jansScrTyp,cn=Index,ds-cfg-backend-id=userRoot,cn=Backends,cn=config 11:35:18 06/21/21 Creating Index ds-cfg-attribute=jansScrTyp,cn=Index,ds-cfg-backend-id=site,cn=Backends,cn=config 11:35:18 06/21/21 Creating Index ds-cfg-attribute=exp,cn=Index,ds-cfg-backend-id=userRoot,cn=Backends,cn=config 11:35:18 06/21/21 Creating Index ds-cfg-attribute=jansLastAccessTime,cn=Index,ds-cfg-backend-id=userRoot,cn=Backends,cn=config 11:35:18 06/21/21 Creating Index ds-cfg-attribute=jansApp,cn=Index,ds-cfg-backend-id=userRoot,cn=Backends,cn=config 11:35:18 06/21/21 Creating Index ds-cfg-attribute=jansReqId,cn=Index,ds-cfg-backend-id=userRoot,cn=Backends,cn=config 11:35:18 06/21/21 Creating Index ds-cfg-attribute=creationDate,cn=Index,ds-cfg-backend-id=userRoot,cn=Backends,cn=config 11:35:18 06/21/21 Creating Index ds-cfg-attribute=jansStartDate,cn=Index,ds-cfg-backend-id=userRoot,cn=Backends,cn=config 11:35:18 06/21/21 Creating Index ds-cfg-attribute=jansEndDate,cn=Index,ds-cfg-backend-id=userRoot,cn=Backends,cn=config 11:35:18 06/21/21 Creating Index ds-cfg-attribute=jansAppTyp,cn=Index,ds-cfg-backend-id=userRoot,cn=Backends,cn=config 11:35:18 06/21/21 Creating Index ds-cfg-attribute=jansMetricTyp,cn=Index,ds-cfg-backend-id=userRoot,cn=Backends,cn=config 11:35:18 06/21/21 Creating Index ds-cfg-attribute=jansDeviceHashCode,cn=Index,ds-cfg-backend-id=userRoot,cn=Backends,cn=config 11:35:18 06/21/21 Creating Index ds-cfg-attribute=jansDeviceKeyHandle,cn=Index,ds-cfg-backend-id=userRoot,cn=Backends,cn=config 11:35:18 06/21/21 Creating Index ds-cfg-attribute=ssnId,cn=Index,ds-cfg-backend-id=userRoot,cn=Backends,cn=config 11:35:18 06/21/21 Creating Index ds-cfg-attribute=sid,cn=Index,ds-cfg-backend-id=userRoot,cn=Backends,cn=config 11:35:18 06/21/21 Creating Index ds-cfg-attribute=jansExtUid,cn=Index,ds-cfg-backend-id=userRoot,cn=Backends,cn=config 11:35:18 06/21/21 Creating Index ds-cfg-attribute=jansTicket,cn=Index,ds-cfg-backend-id=userRoot,cn=Backends,cn=config 11:35:18 06/21/21 Creating Index ds-cfg-attribute=jansCodeChallenge,cn=Index,ds-cfg-backend-id=userRoot,cn=Backends,cn=config 11:35:18 06/21/21 Creating Index ds-cfg-attribute=chlng,cn=Index,ds-cfg-backend-id=userRoot,cn=Backends,cn=config 11:35:18 06/21/21 Creating Index ds-cfg-attribute=jansCodeChallengeHash,cn=Index,ds-cfg-backend-id=userRoot,cn=Backends,cn=config 11:35:18 06/21/21 Creating Index ds-cfg-attribute=jansPublicKeyId,cn=Index,ds-cfg-backend-id=userRoot,cn=Backends,cn=config 11:35:18 06/21/21 Creating Index ds-cfg-attribute=jansAttrs,cn=Index,ds-cfg-backend-id=userRoot,cn=Backends,cn=config 11:35:18 06/21/21 Creating Index ds-cfg-attribute=jansConfCode,cn=Index,ds-cfg-backend-id=userRoot,cn=Backends,cn=config 11:35:18 06/21/21 Creating Index ds-cfg-attribute=jansResourceSetId,cn=Index,ds-cfg-backend-id=userRoot,cn=Backends,cn=config 11:35:18 06/21/21 Creating Index ds-cfg-attribute=jansUmaScope,cn=Index,ds-cfg-backend-id=userRoot,cn=Backends,cn=config 11:35:18 06/21/21 Creating Index ds-cfg-attribute=jansUsrId,cn=Index,ds-cfg-backend-id=userRoot,cn=Backends,cn=config 11:35:18 06/21/21 Creating Index ds-cfg-attribute=del,cn=Index,ds-cfg-backend-id=userRoot,cn=Backends,cn=config 11:35:18 06/21/21 Creating Index ds-cfg-attribute=jansExtId,cn=Index,ds-cfg-backend-id=userRoot,cn=Backends,cn=config 11:35:18 06/21/21 Creating Index ds-cfg-attribute=jansUsrDN,cn=Index,ds-cfg-backend-id=userRoot,cn=Backends,cn=config 11:35:18 06/21/21 Importing ldif file(s): /opt/jans/jans-setup/output/base.ldif, /opt/jans/jans-setup/output/attributes.ldif, /opt/jans/jans-setup/output/scopes.ldif, /opt/jans/jans-setup/output/configuration.ldif, /opt/jans/jans-setup/static/metric/o_metric.ldif, /opt/jans/jans-setup/static/cache-refresh/o_site.ldif  11:35:18 06/21/21 Importing entries from /opt/jans/jans-setup/output/base.ldif 11:35:18 06/21/21 Querying LDAP for dn o=jans 11:35:18 06/21/21 Adding LDAP dn:o=jans entry:{'description': ['Welcome to oxTrust!'], 'displayName': ['gluu org'], 'jansOrgShortName': ['gluu org'], 'jansThemeColor': ['166309'], 'o': ['jans'], 'objectClass': ['top', 'jansOrganization']} 11:35:18 06/21/21 Querying LDAP for dn ou=people,o=jans 11:35:18 06/21/21 Adding LDAP dn:ou=people,o=jans entry:{'objectClass': ['top', 'organizationalunit'], 'ou': ['people']} 11:35:18 06/21/21 Querying LDAP for dn ou=groups,o=jans 11:35:18 06/21/21 Adding LDAP dn:ou=groups,o=jans entry:{'objectClass': ['top', 'organizationalunit'], 'ou': ['groups']} 11:35:18 06/21/21 Querying LDAP for dn ou=attributes,o=jans 11:35:18 06/21/21 Adding LDAP dn:ou=attributes,o=jans entry:{'objectClass': ['top', 'organizationalUnit'], 'ou': ['attributes']} 11:35:18 06/21/21 Querying LDAP for dn ou=scopes,o=jans 11:35:18 06/21/21 Adding LDAP dn:ou=scopes,o=jans entry:{'objectClass': ['top', 'organizationalUnit'], 'ou': ['scopes']} 11:35:18 06/21/21 Querying LDAP for dn ou=clients,o=jans 11:35:18 06/21/21 Adding LDAP dn:ou=clients,o=jans entry:{'objectClass': ['top', 'organizationalUnit'], 'ou': ['clients']} 11:35:18 06/21/21 Querying LDAP for dn ou=stat,o=jans 11:35:18 06/21/21 Adding LDAP dn:ou=stat,o=jans entry:{'objectClass': ['top', 'organizationalUnit'], 'ou': ['stat']} 11:35:18 06/21/21 Querying LDAP for dn ou=sessions,o=jans 11:35:18 06/21/21 Adding LDAP dn:ou=sessions,o=jans entry:{'objectClass': ['top', 'organizationalUnit'], 'ou': ['sessions']} 11:35:18 06/21/21 Querying LDAP for dn ou=tokens,o=jans 11:35:18 06/21/21 Adding LDAP dn:ou=tokens,o=jans entry:{'objectClass': ['top', 'organizationalUnit'], 'ou': ['tokens']} 11:35:18 06/21/21 Querying LDAP for dn ou=authorizations,o=jans 11:35:18 06/21/21 Adding LDAP dn:ou=authorizations,o=jans entry:{'objectClass': ['top', 'organizationalUnit'], 'ou': ['authorizations']} 11:35:18 06/21/21 Querying LDAP for dn ou=scripts,o=jans 11:35:18 06/21/21 Adding LDAP dn:ou=scripts,o=jans entry:{'objectClass': ['top', 'organizationalUnit'], 'ou': ['scripts']} 11:35:18 06/21/21 Querying LDAP for dn ou=resetPasswordRequests,o=jans 11:35:18 06/21/21 Adding LDAP dn:ou=resetPasswordRequests,o=jans entry:{'objectClass': ['top', 'organizationalUnit'], 'ou': ['resetPasswordRequests']} 11:35:18 06/21/21 Querying LDAP for dn ou=uma,o=jans 11:35:18 06/21/21 Adding LDAP dn:ou=uma,o=jans entry:{'objectClass': ['top', 'organizationalUnit'], 'ou': ['uma']} 11:35:18 06/21/21 Querying LDAP for dn ou=resources,ou=uma,o=jans 11:35:18 06/21/21 Adding LDAP dn:ou=resources,ou=uma,o=jans entry:{'objectClass': ['top', 'organizationalUnit'], 'ou': ['resources']} 11:35:18 06/21/21 Querying LDAP for dn ou=pct,ou=uma,o=jans 11:35:18 06/21/21 Adding LDAP dn:ou=pct,ou=uma,o=jans entry:{'objectClass': ['top', 'organizationalUnit'], 'ou': ['pct']} 11:35:18 06/21/21 Querying LDAP for dn ou=push,o=jans 11:35:18 06/21/21 Adding LDAP dn:ou=push,o=jans entry:{'objectClass': ['top', 'organizationalUnit'], 'ou': ['push']} 11:35:18 06/21/21 Querying LDAP for dn ou=application,ou=push,o=jans 11:35:18 06/21/21 Adding LDAP dn:ou=application,ou=push,o=jans entry:{'objectClass': ['top', 'organizationalUnit'], 'ou': ['application']} 11:35:18 06/21/21 Querying LDAP for dn ou=device,ou=push,o=jans 11:35:18 06/21/21 Adding LDAP dn:ou=device,ou=push,o=jans entry:{'objectClass': ['top', 'organizationalUnit'], 'ou': ['device']} 11:35:18 06/21/21 Querying LDAP for dn ou=u2f,o=jans 11:35:18 06/21/21 Adding LDAP dn:ou=u2f,o=jans entry:{'objectClass': ['top', 'organizationalUnit'], 'ou': ['u2f']} 11:35:18 06/21/21 Querying LDAP for dn ou=registration_requests,ou=u2f,o=jans 11:35:18 06/21/21 Adding LDAP dn:ou=registration_requests,ou=u2f,o=jans entry:{'objectClass': ['top', 'organizationalUnit'], 'ou': ['registration_requests']} 11:35:18 06/21/21 Querying LDAP for dn ou=authentication_requests,ou=u2f,o=jans 11:35:18 06/21/21 Adding LDAP dn:ou=authentication_requests,ou=u2f,o=jans entry:{'objectClass': ['top', 'organizationalUnit'], 'ou': ['authentication_requests']} 11:35:18 06/21/21 Querying LDAP for dn ou=registered_devices,ou=u2f,o=jans 11:35:18 06/21/21 Adding LDAP dn:ou=registered_devices,ou=u2f,o=jans entry:{'objectClass': ['top', 'organizationalUnit'], 'ou': ['registered_devices']} 11:35:18 06/21/21 Querying LDAP for dn ou=metric,o=jans 11:35:18 06/21/21 Adding LDAP dn:ou=metric,o=jans entry:{'objectClass': ['top', 'organizationalunit'], 'ou': ['metric']} 11:35:18 06/21/21 Querying LDAP for dn ou=sector_identifiers,o=jans 11:35:18 06/21/21 Adding LDAP dn:ou=sector_identifiers,o=jans entry:{'objectClass': ['top', 'organizationalunit'], 'ou': ['sector_identifiers']} 11:35:18 06/21/21 Querying LDAP for dn ou=ciba,o=jans 11:35:18 06/21/21 Adding LDAP dn:ou=ciba,o=jans entry:{'objectClass': ['top', 'organizationalunit'], 'ou': ['ciba']} 11:35:18 06/21/21 Querying LDAP for dn ou=trustRelationships,o=jans 11:35:18 06/21/21 Adding LDAP dn:ou=trustRelationships,o=jans entry:{'objectClass': ['top', 'organizationalUnit'], 'ou': ['trustRelationships']} 11:35:18 06/21/21 Importing entries from /opt/jans/jans-setup/output/attributes.ldif 11:35:18 06/21/21 Querying LDAP for dn inum=29DA,ou=attributes,o=jans 11:35:18 06/21/21 Adding LDAP dn:inum=29DA,ou=attributes,o=jans entry:{'description': ['XRI i-number, persistent non-reassignable identifier'], 'displayName': ['Inum'], 'inum': ['29DA'], 'jansAttrEditTyp': ['admin'], 'jansAttrName': ['inum'], 'jansAttrOrigin': ['jansPerson'], 'jansAttrTyp': ['string'], 'jansAttrViewTyp': ['user', 'admin'], 'jansClaimName': ['inum'], 'jansSAML1URI': ['urn:mace:dir:attribute-def:inum'], 'jansSAML2URI': ['urn:oid:1.3.6.1.4.1.48710.1.3.117'], 'jansStatus': ['active'], 'objectClass': ['top', 'jansAttr'], 'urn': ['urn:jans:dir:attribute-def:inum']} 11:35:18 06/21/21 Querying LDAP for dn inum=B4B0,ou=attributes,o=jans 11:35:18 06/21/21 Adding LDAP dn:inum=B4B0,ou=attributes,o=jans entry:{'description': ['Given name(s) or first name(s) of the End-User.Note that in some cultures, people can have multiple given names;all can be present, with the names being separated by space characters.'], 'displayName': ['First Name'], 'inum': ['B4B0'], 'jansAttrEditTyp': ['user', 'admin'], 'jansAttrName': ['givenName'], 'jansAttrOrigin': ['jansPerson'], 'jansAttrTyp': ['string'], 'jansAttrViewTyp': ['user', 'admin'], 'jansClaimName': ['given_name'], 'jansSAML1URI': ['urn:mace:dir:attribute-def:givenName'], 'jansSAML2URI': ['urn:oid:2.5.4.42'], 'jansStatus': ['active'], 'objectClass': ['top', 'jansAttr'], 'urn': ['urn:mace:dir:attribute-def:givenName']} 11:35:18 06/21/21 Querying LDAP for dn inum=42E0,ou=attributes,o=jans 11:35:18 06/21/21 Adding LDAP dn:inum=42E0,ou=attributes,o=jans entry:{'description': ['A domain issued and managed identifier for the person.Subject - Identifier for the End-User at the Issuer.'], 'displayName': ['Username'], 'inum': ['42E0'], 'jansAttrEditTyp': ['admin'], 'jansAttrName': ['uid'], 'jansAttrOrigin': ['jansPerson'], 'jansAttrTyp': ['string'], 'jansAttrViewTyp': ['user', 'admin'], 'jansClaimName': ['user_name'], 'jansSAML1URI': ['urn:mace:dir:attribute-def:uid'], 'jansSAML2URI': ['urn:oid:0.9.2342.19200300.100.1.1'], 'jansStatus': ['active'], 'objectClass': ['top', 'jansAttr'], 'urn': ['urn:mace:dir:attribute-def:uid']} 11:35:18 06/21/21 Querying LDAP for dn inum=B52A,ou=attributes,o=jans 11:35:18 06/21/21 Adding LDAP dn:inum=B52A,ou=attributes,o=jans entry:{'description': ['A domain issued and managed identifier for the person.Subject - Identifier for the End-User at the Issuer.'], 'displayName': ['Preferred Username'], 'inum': ['B52A'], 'jansAttrEditTyp': ['admin'], 'jansAttrName': ['jansPrefUsrName'], 'jansAttrOrigin': ['jansPerson'], 'jansAttrTyp': ['string'], 'jansAttrViewTyp': ['user', 'admin'], 'jansClaimName': ['preferred_username'], 'jansSAML1URI': ['urn:mace:dir:attribute-def:preferredUsername'], 'jansSAML2URI': ['urn:oid:1.3.6.1.4.1.48710.1.3.320'], 'jansStatus': ['active'], 'objectClass': ['top', 'jansAttr'], 'urn': ['http://openid.net/specs/openid-connect-core-1_0.html/StandardClaims/preferred_username']} 11:35:18 06/21/21 Querying LDAP for dn inum=64A0,ou=attributes,o=jans 11:35:18 06/21/21 Adding LDAP dn:inum=64A0,ou=attributes,o=jans entry:{'description': [\"URL of the End-User's profile page. The contents of this Web page SHOULD be about the End-User.\"], 'displayName': ['Profile URL'], 'inum': ['64A0'], 'jansAttrEditTyp': ['user', 'admin'], 'jansAttrName': ['profile'], 'jansAttrOrigin': ['jansPerson'], 'jansAttrTyp': ['string'], 'jansAttrViewTyp': ['user', 'admin'], 'jansClaimName': ['profile'], 'jansSAML1URI': ['urn:mace:dir:attribute-def:profile'], 'jansSAML2URI': ['urn:oid:1.3.6.1.4.1.48710.1.3.321'], 'jansStatus': ['active'], 'objectClass': ['top', 'jansAttr'], 'urn': ['http://openid.net/specs/openid-connect-core-1_0.html/StandardClaims/profile']} 11:35:18 06/21/21 Querying LDAP for dn inum=3B47,ou=attributes,o=jans 11:35:18 06/21/21 Adding LDAP dn:inum=3B47,ou=attributes,o=jans entry:{'description': [\"URL of the End-User's Web page or blog.\"], 'displayName': ['Website URL'], 'inum': ['3B47'], 'jansAttrEditTyp': ['user', 'admin'], 'jansAttrName': ['website'], 'jansAttrOrigin': ['jansPerson'], 'jansAttrTyp': ['string'], 'jansAttrViewTyp': ['user', 'admin'], 'jansClaimName': ['website'], 'jansSAML1URI': ['urn:mace:dir:attribute-def:website'], 'jansSAML2URI': ['urn:oid:1.3.6.1.4.1.48710.1.3.323'], 'jansStatus': ['active'], 'objectClass': ['top', 'jansAttr'], 'urn': ['http://openid.net/specs/openid-connect-core-1_0.html/StandardClaims/website']} 11:35:18 06/21/21 Querying LDAP for dn inum=8F88,ou=attributes,o=jans 11:35:18 06/21/21 Adding LDAP dn:inum=8F88,ou=attributes,o=jans entry:{'description': [\"True if the End-User's e-mail address has been verified; otherwise false\"], 'displayName': ['Email Verified'], 'inum': ['8F88'], 'jansAttrEditTyp': ['admin'], 'jansAttrName': ['emailVerified'], 'jansAttrOrigin': ['jansPerson'], 'jansAttrTyp': ['boolean'], 'jansAttrViewTyp': ['user', 'admin'], 'jansClaimName': ['email_verified'], 'jansSAML1URI': ['urn:mace:dir:attribute-def:emailVerified'], 'jansSAML2URI': ['urn:oid:1.3.6.1.4.1.48710.1.3.324'], 'jansStatus': ['active'], 'objectClass': ['top', 'jansAttr'], 'urn': ['http://openid.net/specs/openid-connect-core-1_0.html/StandardClaims/email_verified']} 11:35:18 06/21/21 Querying LDAP for dn inum=B17A,ou=attributes,o=jans 11:35:18 06/21/21 Adding LDAP dn:inum=B17A,ou=attributes,o=jans entry:{'description': [\"True if the End-User's phone number has been verified; otherwise false\"], 'displayName': ['Phone Number Verified'], 'inum': ['B17A'], 'jansAttrEditTyp': ['admin'], 'jansAttrName': ['phoneNumberVerified'], 'jansAttrOrigin': ['jansPerson'], 'jansAttrTyp': ['boolean'], 'jansAttrViewTyp': ['user', 'admin'], 'jansClaimName': ['phone_number_verified'], 'jansSAML1URI': ['urn:mace:dir:attribute-def:phoneNumberVerified'], 'jansSAML2URI': ['urn:oid:1.3.6.1.4.1.48710.1.3.329'], 'jansStatus': ['active'], 'objectClass': ['top', 'jansAttr'], 'urn': ['http://openid.net/specs/openid-connect-core-1_0.html/StandardClaims/phone_number_verified']} 11:35:18 06/21/21 Querying LDAP for dn inum=C8D5,ou=attributes,o=jans 11:35:18 06/21/21 Adding LDAP dn:inum=C8D5,ou=attributes,o=jans entry:{'description': [\"End-User's preferred postal address. The value of the address member is aJSON [RFC4627] structure containing some or all of the members defined inOpenID Connect 1.0 Core Standard Section 5.1.1\"], 'displayName': ['OpenID Connect JSON formatted address'], 'inum': ['C8D5'], 'jansAttrEditTyp': ['admin'], 'jansAttrName': ['address'], 'jansAttrOrigin': ['jansPerson'], 'jansAttrTyp': ['string'], 'jansAttrViewTyp': ['user', 'admin'], 'jansClaimName': ['address'], 'jansSAML1URI': ['urn:mace:dir:attribute-def:address'], 'jansSAML2URI': ['urn:oid:1.3.6.1.4.1.48710.1.3.330'], 'jansStatus': ['active'], 'objectClass': ['top', 'jansAttr'], 'urn': ['http://openid.net/specs/openid-connect-core-1_0.html/StandardClaims/address']} 11:35:18 06/21/21 Querying LDAP for dn inum=BE64,ou=attributes,o=jans 11:35:18 06/21/21 Adding LDAP dn:inum=BE64,ou=attributes,o=jans entry:{'description': [\"Time the End-User's information was last updated. Its value isaJSON number representing the number of seconds from 1970-01-01T0:0:0Z as measured inUTC until the date/time.\"], 'displayName': ['Last Updated'], 'inum': ['BE64'], 'jansAttrEditTyp': ['admin'], 'jansAttrName': ['updatedAt'], 'jansAttrOrigin': ['jansPerson'], 'jansAttrTyp': ['generalizedTime'], 'jansAttrViewTyp': ['user', 'admin'], 'jansClaimName': ['updated_at'], 'jansSAML1URI': ['urn:mace:dir:attribute-def:updatedAt'], 'jansSAML2URI': ['urn:oid:1.3.6.1.4.1.48710.1.3.331'], 'jansStatus': ['active'], 'objectClass': ['top', 'jansAttr'], 'urn': ['http://openid.net/specs/openid-connect-core-1_0.html/StandardClaims/address']} 11:35:18 06/21/21 Querying LDAP for dn inum=3692,ou=attributes,o=jans 11:35:18 06/21/21 Adding LDAP dn:inum=3692,ou=attributes,o=jans entry:{'description': ['Gender of the person, either male or female'], 'displayName': ['Gender, male or female'], 'inum': ['3692'], 'jansAttrEditTyp': ['user', 'admin'], 'jansAttrName': ['gender'], 'jansAttrOrigin': ['jansPerson'], 'jansAttrTyp': ['string'], 'jansAttrViewTyp': ['user', 'admin'], 'jansClaimName': ['gender'], 'jansSAML1URI': ['urn:mace:dir:attribute-def:gender'], 'jansSAML2URI': ['urn:oid:1.3.6.1.4.1.48710.1.3.325'], 'jansStatus': ['active'], 'objectClass': ['top', 'jansAttr'], 'urn': ['http://openid.net/specs/openid-connect-core-1_0.html/StandardClaims/gender']} 11:35:18 06/21/21 Querying LDAP for dn inum=98FC,ou=attributes,o=jans 11:35:18 06/21/21 Adding LDAP dn:inum=98FC,ou=attributes,o=jans entry:{'description': [\"End-User's birthday, represented as an ISO 8601:2004 [ISO8601\u20112004] YYYY-MM-DD format.\"], 'displayName': ['Birthdate'], 'inum': ['98FC'], 'jansAttrEditTyp': ['user', 'admin'], 'jansAttrName': ['birthdate'], 'jansAttrOrigin': ['jansPerson'], 'jansAttrTyp': ['string'], 'jansAttrViewTyp': ['user', 'admin'], 'jansClaimName': ['birthdate'], 'jansSAML1URI': ['urn:mace:dir:attribute-def:birthdate'], 'jansSAML2URI': ['urn:oid:1.3.6.1.4.1.48710.1.3.326'], 'jansStatus': ['active'], 'objectClass': ['top', 'jansAttr'], 'urn': ['http://openid.net/specs/openid-connect-core-1_0.html/StandardClaims/birthdate']} 11:35:18 06/21/21 Querying LDAP for dn inum=D2E0,ou=attributes,o=jans 11:35:18 06/21/21 Adding LDAP dn:inum=D2E0,ou=attributes,o=jans entry:{'description': ['memberOf'], 'displayName': ['memberOf'], 'inum': ['D2E0'], 'jansAttrEditTyp': ['admin'], 'jansAttrName': ['memberOf'], 'jansAttrOrigin': ['jansPerson'], 'jansAttrTyp': ['string'], 'jansAttrViewTyp': ['admin'], 'jansClaimName': ['member_of'], 'jansMultivaluedAttr': ['true'], 'jansSAML1URI': ['urn:mace:dir:attribute-def:memberOf'], 'jansSAML2URI': ['urn:oid:1.3.6.1.4.1.48710.1.3.121'], 'jansStatus': ['active'], 'objectClass': ['top', 'jansAttr'], 'urn': ['urn:jans:dir:attribute-def:memberOf']} 11:35:18 06/21/21 Querying LDAP for dn inum=A901,ou=attributes,o=jans 11:35:18 06/21/21 Adding LDAP dn:inum=A901,ou=attributes,o=jans entry:{'description': [\"String from time zone database representing the End-User's time zone. For example,Europe/Paris or America/Los_Angeles.\"], 'displayName': ['Time zone info'], 'inum': ['A901'], 'jansAttrEditTyp': ['user', 'admin'], 'jansAttrName': ['zoneinfo'], 'jansAttrOrigin': ['jansPerson'], 'jansAttrTyp': ['string'], 'jansAttrViewTyp': ['user', 'admin'], 'jansClaimName': ['zoneinfo'], 'jansSAML1URI': ['urn:mace:dir:attribute-def:zoneinfo'], 'jansSAML2URI': ['urn:oid:1.3.6.1.4.1.48710.1.3.327'], 'jansStatus': ['active'], 'objectClass': ['top', 'jansAttr'], 'urn': ['http://openid.net/specs/openid-connect-core-1_0.html/StandardClaims/zoneinfo']} 11:35:18 06/21/21 Querying LDAP for dn inum=36D9,ou=attributes,o=jans 11:35:18 06/21/21 Adding LDAP dn:inum=36D9,ou=attributes,o=jans entry:{'description': [\"End-User's locale, represented as a BCP47 (RFC5646) language tag. This is typically anISO 639-1 Alpha-2 [ISO639\u20111] language code in lowercase and an ISO 3166-1 Alpha-2country code in uppercase, separated by a dash. For example, en-US or fr-CA. As a compatibility note,some implementations have used an underscore as the separator rather than a dash, for example, en_US;Relying Parties MAY choose to accept this locale syntax as well.\"], 'displayName': ['Locale'], 'inum': ['36D9'], 'jansAttrEditTyp': ['user', 'admin'], 'jansAttrName': ['locale'], 'jansAttrOrigin': ['jansPerson'], 'jansAttrTyp': ['string'], 'jansAttrViewTyp': ['user', 'admin'], 'jansClaimName': ['locale'], 'jansSAML1URI': ['urn:mace:dir:attribute-def:locale'], 'jansSAML2URI': ['urn:oid:1.3.6.1.4.1.48710.1.3.328'], 'jansStatus': ['active'], 'objectClass': ['top', 'jansAttr'], 'urn': ['http://openid.net/specs/openid-connect-core-1_0.html/StandardClaims/locale']} 11:35:18 06/21/21 Querying LDAP for dn inum=8A11,ou=attributes,o=jans 11:35:18 06/21/21 Adding LDAP dn:inum=8A11,ou=attributes,o=jans entry:{'description': ['Secret Question'], 'displayName': ['Secret Question'], 'inum': ['8A11'], 'jansAttrEditTyp': ['user', 'admin'], 'jansAttrName': ['secretQuestion'], 'jansAttrOrigin': ['jansPerson'], 'jansAttrTyp': ['string'], 'jansAttrViewTyp': ['user', 'admin'], 'jansSAML1URI': ['urn:mace:dir:attribute-def:secretQuestion'], 'jansSAML2URI': ['urn:oid:1.3.6.1.4.1.48710.1.3.306'], 'jansStatus': ['active'], 'objectClass': ['top', 'jansAttr'], 'urn': ['urn:jans:dir:attribute-def:secretQuestion']} 11:35:18 06/21/21 Querying LDAP for dn inum=C703,ou=attributes,o=jans 11:35:18 06/21/21 Adding LDAP dn:inum=C703,ou=attributes,o=jans entry:{'description': ['Secret Answer'], 'displayName': ['Secret Answer'], 'inum': ['C703'], 'jansAttrEditTyp': ['user', 'admin'], 'jansAttrName': ['secretAnswer'], 'jansAttrOrigin': ['jansPerson'], 'jansAttrTyp': ['string'], 'jansAttrViewTyp': ['user', 'admin'], 'jansSAML1URI': ['urn:mace:dir:attribute-def:secretAnswer'], 'jansSAML2URI': ['urn:oid:1.3.6.1.4.1.48710.1.3.305'], 'jansStatus': ['active'], 'objectClass': ['top', 'jansAttr'], 'urn': ['urn:jans:dir:attribute-def:secretAnswer']} 11:35:18 06/21/21 Querying LDAP for dn inum=6493,ou=attributes,o=jans 11:35:18 06/21/21 Adding LDAP dn:inum=6493,ou=attributes,o=jans entry:{'description': ['Preferred Language'], 'displayName': ['Preferred Language'], 'inum': ['6493'], 'jansAttrEditTyp': ['user', 'admin'], 'jansAttrName': ['preferredLanguage'], 'jansAttrOrigin': ['jansPerson'], 'jansAttrTyp': ['string'], 'jansAttrViewTyp': ['user', 'admin', 'whitePages'], 'jansSAML1URI': ['urn:mace:dir:attribute-def:preferredLanguage'], 'jansSAML2URI': ['urn:oid:2.16.840.1.113730.3.1.39'], 'jansStatus': ['active'], 'objectClass': ['top', 'jansAttr'], 'urn': ['urn:mace:dir:attribute-def:preferredLanguage']} 11:35:18 06/21/21 Querying LDAP for dn inum=CAE3,ou=attributes,o=jans 11:35:18 06/21/21 Adding LDAP dn:inum=CAE3,ou=attributes,o=jans entry:{'description': ['Primary Email Address'], 'displayName': ['Email'], 'inum': ['CAE3'], 'jansAttrEditTyp': ['user', 'admin'], 'jansAttrName': ['mail'], 'jansAttrOrigin': ['jansPerson'], 'jansAttrTyp': ['string'], 'jansAttrViewTyp': ['user', 'admin'], 'jansClaimName': ['email'], 'jansSAML1URI': ['urn:mace:dir:attribute-def:mail'], 'jansSAML2URI': ['urn:oid:0.9.2342.19200300.100.1.3'], 'jansStatus': ['active'], 'objectClass': ['top', 'jansAttr'], 'urn': ['urn:mace:dir:attribute-def:mail']} 11:35:18 06/21/21 Querying LDAP for dn inum=A0E8,ou=attributes,o=jans 11:35:18 06/21/21 Adding LDAP dn:inum=A0E8,ou=attributes,o=jans entry:{'description': ['Middle name(s) of the End-User. Note that in some cultures,people can have multiple middle names; all can be present, with the namesbeingseparated by space characters. Also note that in some cultures,middle names are not used.'], 'displayName': ['Middle Name'], 'inum': ['A0E8'], 'jansAttrEditTyp': ['user', 'admin'], 'jansAttrName': ['middleName'], 'jansAttrOrigin': ['jansPerson'], 'jansAttrTyp': ['string'], 'jansAttrViewTyp': ['user', 'admin'], 'jansClaimName': ['middle_name'], 'jansSAML1URI': ['urn:mace:dir:attribute-def:middleName'], 'jansSAML2URI': ['urn:oid:1.3.6.1.4.1.48710.1.3.318'], 'jansStatus': ['active'], 'objectClass': ['top', 'jansAttr'], 'urn': ['http://openid.net/specs/openid-connect-core-1_0.html/StandardClaims/middle_username']} 11:35:18 06/21/21 Querying LDAP for dn inum=5EC6,ou=attributes,o=jans 11:35:18 06/21/21 Adding LDAP dn:inum=5EC6,ou=attributes,o=jans entry:{'description': ['Casual name of the End-User that may or may not be the same asthe given_name.For instance, a nickname value of Mike might be returned alongside a given_name value of Michael.'], 'displayName': ['Nickname'], 'inum': ['5EC6'], 'jansAttrEditTyp': ['user', 'admin'], 'jansAttrName': ['nickname'], 'jansAttrOrigin': ['jansPerson'], 'jansAttrTyp': ['string'], 'jansAttrViewTyp': ['user', 'admin'], 'jansClaimName': ['nickname'], 'jansSAML1URI': ['urn:mace:dir:attribute-def:nickname'], 'jansSAML2URI': ['urn:oid:1.3.6.1.4.1.48710.1.3.319'], 'jansStatus': ['active'], 'objectClass': ['top', 'jansAttr'], 'urn': ['http://openid.net/specs/openid-connect-core-1_0.html/StandardClaims/nickname']} 11:35:18 06/21/21 Querying LDAP for dn inum=0C85,ou=attributes,o=jans 11:35:18 06/21/21 Adding LDAP dn:inum=0C85,ou=attributes,o=jans entry:{'description': ['Last Name', 'Surname(s) or last name(s) of the End-User. Note that in somecultures, people can have multiple family names or no family name; all canbepresent, with the names being separated by space characters.'], 'displayName': ['Last Name'], 'inum': ['0C85'], 'jansAttrEditTyp': ['user', 'admin'], 'jansAttrName': ['sn'], 'jansAttrOrigin': ['jansPerson'], 'jansAttrTyp': ['string'], 'jansAttrViewTyp': ['user', 'admin'], 'jansClaimName': ['family_name'], 'jansSAML1URI': ['urn:mace:dir:attribute-def:sn'], 'jansSAML2URI': ['urn:oid:2.5.4.4'], 'jansStatus': ['active'], 'objectClass': ['top', 'jansAttr'], 'urn': ['urn:mace:dir:attribute-def:sn']} 11:35:18 06/21/21 Querying LDAP for dn inum=BCA8,ou=attributes,o=jans 11:35:18 06/21/21 Adding LDAP dn:inum=BCA8,ou=attributes,o=jans entry:{'description': ['TransientId'], 'displayName': ['TransientId'], 'inum': ['BCA8'], 'jansAttrEditTyp': ['user', 'admin'], 'jansAttrName': ['transientId'], 'jansAttrOrigin': ['jansPerson'], 'jansAttrTyp': ['string'], 'jansAttrViewTyp': ['user', 'admin'], 'jansSAML1URI': ['urn:mace:dir:attribute-def:transientId'], 'jansSAML2URI': ['urn:oid:1.3.6.1.4.1.48710.1.3.312'], 'jansStatus': ['active'], 'objectClass': ['top', 'jansAttr'], 'urn': ['mace:shibboleth:1.0:nameIdentifier']} 11:35:18 06/21/21 Querying LDAP for dn inum=BCB8,ou=attributes,o=jans 11:35:18 06/21/21 Adding LDAP dn:inum=BCB8,ou=attributes,o=jans entry:{'description': ['PersistentId'], 'displayName': ['PersistentId'], 'inum': ['BCB8'], 'jansAttrEditTyp': ['user', 'admin'], 'jansAttrName': ['persistentId'], 'jansAttrOrigin': ['jansPerson'], 'jansAttrTyp': ['string'], 'jansAttrViewTyp': ['user', 'admin'], 'jansSAML1URI': ['urn:mace:dir:attribute-def:persistentId'], 'jansSAML2URI': ['urn:oid:1.3.6.1.4.1.48710.1.3.291'], 'jansStatus': ['active'], 'objectClass': ['top', 'jansAttr'], 'urn': ['mace:shibboleth:1.0:nameIdentifier']} 11:35:18 06/21/21 Querying LDAP for dn inum=BCE8,ou=attributes,o=jans 11:35:18 06/21/21 Adding LDAP dn:inum=BCE8,ou=attributes,o=jans entry:{'description': ['Country'], 'displayName': ['Country'], 'inum': ['BCE8'], 'jansAttrEditTyp': ['user', 'admin'], 'jansAttrName': ['c'], 'jansAttrOrigin': ['jansPerson'], 'jansAttrTyp': ['string'], 'jansAttrViewTyp': ['user', 'admin'], 'jansClaimName': ['country'], 'jansSAML1URI': ['urn:mace:dir:attribute-def:c'], 'jansSAML2URI': ['urn:oid:2.5.4.6'], 'jansStatus': ['active'], 'objectClass': ['top', 'jansAttr'], 'urn': ['urn:jans:dir:attribute-def:c']} 11:35:18 06/21/21 Querying LDAP for dn inum=2B29,ou=attributes,o=jans 11:35:18 06/21/21 Adding LDAP dn:inum=2B29,ou=attributes,o=jans entry:{'description': [\"End-User's full name in displayable formincluding all name parts, possibly including titles andsuffixes, ordered according to the End-User's locale and preferences.\"], 'displayName': ['Display Name'], 'inum': ['2B29'], 'jansAttrEditTyp': ['user', 'admin'], 'jansAttrName': ['displayName'], 'jansAttrOrigin': ['jansPerson'], 'jansAttrTyp': ['string'], 'jansAttrViewTyp': ['user', 'admin'], 'jansClaimName': ['name'], 'jansSAML1URI': ['urn:mace:dir:attribute-def:displayName'], 'jansSAML2URI': ['urn:oid:2.16.840.1.113730.3.1.241'], 'jansStatus': ['active'], 'objectClass': ['top', 'jansAttr'], 'urn': ['urn:mace:dir:attribute-def:displayName']} 11:35:18 06/21/21 Querying LDAP for dn inum=EC3A,ou=attributes,o=jans 11:35:18 06/21/21 Adding LDAP dn:inum=EC3A,ou=attributes,o=jans entry:{'description': [\"URL of the End-User's profile picture\"], 'displayName': ['Picture URL'], 'inum': ['EC3A'], 'jansAttrEditTyp': ['user', 'admin'], 'jansAttrName': ['picture'], 'jansAttrOrigin': ['jansPerson'], 'jansAttrTyp': ['string'], 'jansAttrViewTyp': ['user', 'admin'], 'jansClaimName': ['picture'], 'jansSAML1URI': ['urn:mace:dir:attribute-def:picture'], 'jansSAML2URI': ['urn:oid:1.3.6.1.4.1.48710.1.3.322'], 'jansStatus': ['active'], 'objectClass': ['top', 'jansAttr'], 'urn': ['http://openid.net/specs/openid-connect-core-1_0.html/StandardClaims/picture']} 11:35:18 06/21/21 Querying LDAP for dn inum=D03E,ou=attributes,o=jans 11:35:18 06/21/21 Adding LDAP dn:inum=D03E,ou=attributes,o=jans entry:{'description': ['Organization'], 'displayName': ['Organization'], 'inum': ['D03E'], 'jansAttrEditTyp': ['admin'], 'jansAttrName': ['o'], 'jansAttrOrigin': ['jansPerson'], 'jansAttrTyp': ['string'], 'jansAttrViewTyp': ['admin'], 'jansClaimName': ['o'], 'jansSAML1URI': ['urn:mace:dir:attribute-def:o'], 'jansSAML2URI': ['urn:oid:2.5.4.10'], 'jansStatus': ['active'], 'objectClass': ['top', 'jansAttr'], 'urn': ['urn:mace:dir:attribute-def:o']} 11:35:18 06/21/21 Querying LDAP for dn inum=AAEE,ou=attributes,o=jans 11:35:18 06/21/21 Adding LDAP dn:inum=AAEE,ou=attributes,o=jans entry:{'description': ['User secret string'], 'displayName': ['Password'], 'inum': ['AAEE'], 'jansAttrEditTyp': ['user', 'admin'], 'jansAttrName': ['userPassword'], 'jansAttrOrigin': ['jansPerson'], 'jansAttrTyp': ['string'], 'jansAttrViewTyp': ['user', 'admin'], 'jansSAML1URI': ['urn:mace:dir:attribute-def:userPassword'], 'jansSAML2URI': ['urn:oid:2.5.4.35'], 'jansStatus': ['active'], 'objectClass': ['top', 'jansAttr'], 'urn': ['urn:jans:dir:attribute-def:userPassword']} 11:35:18 06/21/21 Querying LDAP for dn inum=C001,ou=attributes,o=jans 11:35:18 06/21/21 Adding LDAP dn:inum=C001,ou=attributes,o=jans entry:{'description': ['Organizational Title'], 'displayName': ['Title'], 'inum': ['C001'], 'jansAttrEditTyp': ['admin'], 'jansAttrName': ['title'], 'jansAttrOrigin': ['jansCustomPerson'], 'jansAttrTyp': ['string'], 'jansAttrViewTyp': ['user', 'admin'], 'jansSAML1URI': ['urn:mace:dir:attribute-def:title'], 'jansSAML2URI': ['urn:oid:2.5.4.12'], 'jansStatus': ['inactive'], 'objectClass': ['top', 'jansAttr'], 'urn': ['urn:mace:dir:attribute-def:title']} 11:35:18 06/21/21 Querying LDAP for dn inum=4502,ou=attributes,o=jans 11:35:18 06/21/21 Adding LDAP dn:inum=4502,ou=attributes,o=jans entry:{'description': ['Vehicle License Plate Number'], 'displayName': ['License Plate'], 'inum': ['4502'], 'jansAttrEditTyp': ['user', 'admin'], 'jansAttrName': ['carLicense'], 'jansAttrOrigin': ['jansCustomPerson'], 'jansAttrTyp': ['string'], 'jansAttrViewTyp': ['user', 'admin'], 'jansSAML1URI': ['urn:mace:dir:attribute-def:carLicense'], 'jansSAML2URI': ['urn:oid:2.16.840.1.113730.3.1.1'], 'jansStatus': ['inactive'], 'objectClass': ['top', 'jansAttr'], 'urn': ['urn:mace:dir:attribute-def:carLicense']} 11:35:18 06/21/21 Querying LDAP for dn inum=BD22,ou=attributes,o=jans 11:35:18 06/21/21 Adding LDAP dn:inum=BD22,ou=attributes,o=jans entry:{'description': ['Fax Telephone Number'], 'displayName': ['Fax Number'], 'inum': ['BD22'], 'jansAttrEditTyp': ['user', 'admin'], 'jansAttrName': ['facsimileTelephoneNumber'], 'jansAttrOrigin': ['jansCustomPerson'], 'jansAttrTyp': ['string'], 'jansAttrViewTyp': ['user', 'admin'], 'jansSAML1URI': ['urn:mace:dir:attribute-def:facsimileTelephoneNumber'], 'jansSAML2URI': ['urn:oid:2.5.4.23'], 'jansStatus': ['inactive'], 'objectClass': ['top', 'jansAttr'], 'urn': ['urn:mace:dir:attribute-def:facsimileTelephoneNumber']} 11:35:18 06/21/21 Querying LDAP for dn inum=08E2,ou=attributes,o=jans 11:35:18 06/21/21 Adding LDAP dn:inum=08E2,ou=attributes,o=jans entry:{'description': ['Organizational Department'], 'displayName': ['Department'], 'inum': ['08E2'], 'jansAttrEditTyp': ['admin'], 'jansAttrName': ['departmentNumber'], 'jansAttrOrigin': ['jansCustomPerson'], 'jansAttrTyp': ['string'], 'jansAttrViewTyp': ['user', 'admin'], 'jansSAML1URI': ['urn:mace:dir:attribute-def:departmentNumber'], 'jansSAML2URI': ['urn:oid:2.16.840.1.113730.3.1.2'], 'jansStatus': ['inactive'], 'objectClass': ['top', 'jansAttr'], 'urn': ['urn:mace:dir:attribute-def:departmentNumber']} 11:35:18 06/21/21 Querying LDAP for dn inum=3D44,ou=attributes,o=jans 11:35:18 06/21/21 Adding LDAP dn:inum=3D44,ou=attributes,o=jans entry:{'description': ['Employee Type'], 'displayName': ['Employee Type'], 'inum': ['3D44'], 'jansAttrEditTyp': ['admin'], 'jansAttrName': ['employeeType'], 'jansAttrOrigin': ['jansCustomPerson'], 'jansAttrTyp': ['string'], 'jansAttrViewTyp': ['admin'], 'jansSAML1URI': ['urn:mace:dir:attribute-def:employeeType'], 'jansSAML2URI': ['urn:oid:2.16.840.1.113730.3.1.4'], 'jansStatus': ['inactive'], 'objectClass': ['top', 'jansAttr'], 'urn': ['urn:mace:dir:attribute-def:employeeType']} 11:35:18 06/21/21 Querying LDAP for dn inum=D054,ou=attributes,o=jans 11:35:18 06/21/21 Adding LDAP dn:inum=D054,ou=attributes,o=jans entry:{'description': ['Name search keywords'], 'displayName': ['Name search keywords'], 'inum': ['D054'], 'jansAttrEditTyp': ['user', 'admin'], 'jansAttrName': ['cn'], 'jansAttrOrigin': ['jansCustomPerson'], 'jansAttrTyp': ['string'], 'jansAttrViewTyp': ['user', 'admin'], 'jansSAML1URI': ['urn:mace:dir:attribute-def:cn'], 'jansSAML2URI': ['urn:oid:2.5.4.3'], 'jansStatus': ['inactive'], 'objectClass': ['top', 'jansAttr'], 'urn': ['urn:mace:dir:attribute-def:cn']} 11:35:18 06/21/21 Querying LDAP for dn inum=6DA6,ou=attributes,o=jans 11:35:18 06/21/21 Adding LDAP dn:inum=6DA6,ou=attributes,o=jans entry:{'description': ['Mobile Telephone Number'], 'displayName': ['Mobile Telephone Number'], 'inum': ['6DA6'], 'jansAttrEditTyp': ['user', 'admin'], 'jansAttrName': ['mobile'], 'jansAttrOrigin': ['jansCustomPerson'], 'jansAttrTyp': ['string'], 'jansAttrViewTyp': ['user', 'admin'], 'jansClaimName': ['phone_mobile_number'], 'jansSAML1URI': ['urn:mace:dir:attribute-def:mobile'], 'jansSAML2URI': ['urn:oid:0.9.2342.19200300.100.1.41'], 'jansStatus': ['inactive'], 'objectClass': ['top', 'jansAttr'], 'urn': ['urn:mace:dir:attribute-def:mobile']} 11:35:18 06/21/21 Querying LDAP for dn inum=0C18,ou=attributes,o=jans 11:35:18 06/21/21 Adding LDAP dn:inum=0C18,ou=attributes,o=jans entry:{'description': ['Home Telephone Number'], 'displayName': ['Home Telephone Number'], 'inum': ['0C18'], 'jansAttrEditTyp': ['user', 'admin'], 'jansAttrName': ['telephoneNumber'], 'jansAttrOrigin': ['jansCustomPerson'], 'jansAttrTyp': ['string'], 'jansAttrViewTyp': ['user', 'admin'], 'jansClaimName': ['phone_number'], 'jansSAML1URI': ['urn:mace:dir:attribute-def:telephoneNumber'], 'jansSAML2URI': ['urn:oid:2.5.4.20'], 'jansStatus': ['inactive'], 'objectClass': ['top', 'jansAttr'], 'urn': ['urn:mace:dir:attribute-def:phone_number']} 11:35:18 06/21/21 Querying LDAP for dn inum=E6B8,ou=attributes,o=jans 11:35:18 06/21/21 Adding LDAP dn:inum=E6B8,ou=attributes,o=jans entry:{'description': ['State or Province'], 'displayName': ['State or Province'], 'inum': ['E6B8'], 'jansAttrEditTyp': ['user', 'admin'], 'jansAttrName': ['st'], 'jansAttrOrigin': ['jansCustomPerson'], 'jansAttrTyp': ['string'], 'jansAttrViewTyp': ['user', 'admin'], 'jansClaimName': ['region'], 'jansSAML1URI': ['urn:mace:dir:attribute-def:st'], 'jansSAML2URI': ['urn:oid:2.5.4.8'], 'jansStatus': ['inactive'], 'objectClass': ['top', 'jansAttr'], 'urn': ['urn:mace:dir:attribute-def:st']} 11:35:18 06/21/21 Querying LDAP for dn inum=42D8,ou=attributes,o=jans 11:35:18 06/21/21 Adding LDAP dn:inum=42D8,ou=attributes,o=jans entry:{'description': ['Manager'], 'displayName': ['Manager'], 'inum': ['42D8'], 'jansAttrEditTyp': ['admin'], 'jansAttrName': ['manager'], 'jansAttrOrigin': ['jansCustomPerson'], 'jansAttrTyp': ['string'], 'jansAttrViewTyp': ['admin'], 'jansSAML1URI': ['urn:mace:dir:attribute-def:manager'], 'jansSAML2URI': ['urn:oid:0.9.2342.19200300.100.1.10'], 'jansStatus': ['inactive'], 'objectClass': ['top', 'jansAttr'], 'urn': ['urn:mace:dir:attribute-def:manager']} 11:35:18 06/21/21 Querying LDAP for dn inum=6609,ou=attributes,o=jans 11:35:18 06/21/21 Adding LDAP dn:inum=6609,ou=attributes,o=jans entry:{'description': ['Street'], 'displayName': ['Street'], 'inum': ['6609'], 'jansAttrEditTyp': ['user', 'admin'], 'jansAttrName': ['street'], 'jansAttrOrigin': ['jansCustomPerson'], 'jansAttrTyp': ['string'], 'jansAttrViewTyp': ['user', 'admin'], 'jansClaimName': ['street_address'], 'jansSAML1URI': ['urn:mace:dir:attribute-def:street'], 'jansSAML2URI': ['urn:oid:2.5.4.9'], 'jansStatus': ['inactive'], 'objectClass': ['top', 'jansAttr'], 'urn': ['urn:mace:dir:attribute-def:street']} 11:35:18 06/21/21 Querying LDAP for dn inum=E999,ou=attributes,o=jans 11:35:18 06/21/21 Adding LDAP dn:inum=E999,ou=attributes,o=jans entry:{'description': ['Postal Box'], 'displayName': ['PO Box'], 'inum': ['E999'], 'jansAttrEditTyp': ['user', 'admin'], 'jansAttrName': ['postOfficeBox'], 'jansAttrOrigin': ['jansCustomPerson'], 'jansAttrTyp': ['string'], 'jansAttrViewTyp': ['user', 'admin'], 'jansSAML1URI': ['urn:mace:dir:attribute-def:postOfficeBox'], 'jansSAML2URI': ['urn:oid:2.5.4.18'], 'jansStatus': ['inactive'], 'objectClass': ['top', 'jansAttr'], 'urn': ['urn:mace:dir:attribute-def:postOfficeBox']} 11:35:18 06/21/21 Querying LDAP for dn inum=D0C9,ou=attributes,o=jans 11:35:18 06/21/21 Adding LDAP dn:inum=D0C9,ou=attributes,o=jans entry:{'description': ['Employee Number'], 'displayName': ['Employee Number'], 'inum': ['D0C9'], 'jansAttrEditTyp': ['admin'], 'jansAttrName': ['employeeNumber'], 'jansAttrOrigin': ['jansCustomPerson'], 'jansAttrTyp': ['string'], 'jansAttrViewTyp': ['admin'], 'jansSAML1URI': ['urn:mace:dir:attribute-def:employeeNumber'], 'jansSAML2URI': ['urn:oid:2.16.840.1.113730.3.1.3'], 'jansStatus': ['inactive'], 'objectClass': ['top', 'jansAttr'], 'urn': ['urn:mace:dir:attribute-def:employeeNumber']} 11:35:18 06/21/21 Querying LDAP for dn inum=894A,ou=attributes,o=jans 11:35:18 06/21/21 Adding LDAP dn:inum=894A,ou=attributes,o=jans entry:{'description': ['Preferred Delivery Method'], 'displayName': ['Preferred Delivery Method'], 'inum': ['894A'], 'jansAttrEditTyp': ['admin'], 'jansAttrName': ['preferredDeliveryMethod'], 'jansAttrOrigin': ['jansCustomPerson'], 'jansAttrTyp': ['string'], 'jansAttrViewTyp': ['admin'], 'jansSAML1URI': ['urn:mace:dir:attribute-def:preferredDeliveryMethod'], 'jansSAML2URI': ['urn:oid:2.5.4.28'], 'jansStatus': ['inactive'], 'objectClass': ['top', 'jansAttr'], 'urn': ['urn:jans:dir:attribute-def:preferredDeliveryMethod']} 11:35:18 06/21/21 Querying LDAP for dn inum=D90B,ou=attributes,o=jans 11:35:18 06/21/21 Adding LDAP dn:inum=D90B,ou=attributes,o=jans entry:{'description': ['Room Number'], 'displayName': ['Room Number'], 'inum': ['D90B'], 'jansAttrEditTyp': ['user', 'admin'], 'jansAttrName': ['roomNumber'], 'jansAttrOrigin': ['jansCustomPerson'], 'jansAttrTyp': ['string'], 'jansAttrViewTyp': ['user', 'admin'], 'jansSAML1URI': ['urn:mace:dir:attribute-def:roomNumber'], 'jansSAML2URI': ['urn:oid:0.9.2342.19200300.100.1.6'], 'jansStatus': ['inactive'], 'objectClass': ['top', 'jansAttr'], 'urn': ['urn:mace:dir:attribute-def:roomNumber']} 11:35:18 06/21/21 Querying LDAP for dn inum=AC0B,ou=attributes,o=jans 11:35:18 06/21/21 Adding LDAP dn:inum=AC0B,ou=attributes,o=jans entry:{'description': ['Secretary'], 'displayName': ['Secretary'], 'inum': ['AC0B'], 'jansAttrEditTyp': ['admin'], 'jansAttrName': ['secretary'], 'jansAttrOrigin': ['jansCustomPerson'], 'jansAttrTyp': ['string'], 'jansAttrViewTyp': ['admin'], 'jansSAML1URI': ['urn:mace:dir:attribute-def:secretary'], 'jansSAML2URI': ['urn:oid:0.9.2342.19200300.100.1.21'], 'jansStatus': ['inactive'], 'objectClass': ['top', 'jansAttr'], 'urn': ['urn:jans:dir:attribute-def:secretary']} 11:35:18 06/21/21 Querying LDAP for dn inum=4649,ou=attributes,o=jans 11:35:18 06/21/21 Adding LDAP dn:inum=4649,ou=attributes,o=jans entry:{'description': ['User status to allow/disable user access'], 'displayName': ['User Status'], 'inum': ['4649'], 'jansAttrEditTyp': ['admin'], 'jansAttrName': ['jansStatus'], 'jansAttrOrigin': ['jansPerson'], 'jansAttrTyp': ['string'], 'jansAttrViewTyp': ['admin', 'user'], 'jansSAML1URI': ['urn:mace:dir:attribute-def:jansStatus'], 'jansSAML2URI': ['urn:oid:1.3.6.1.4.1.48710.1.3.97'], 'jansStatus': ['active'], 'objectClass': ['top', 'jansAttr'], 'urn': ['urn:jans:dir:attribute-def:status']} 11:35:18 06/21/21 Querying LDAP for dn inum=27DB,ou=attributes,o=jans 11:35:18 06/21/21 Adding LDAP dn:inum=27DB,ou=attributes,o=jans entry:{'description': ['Home Address'], 'displayName': ['Home Address'], 'inum': ['27DB'], 'jansAttrEditTyp': ['user', 'admin'], 'jansAttrName': ['homePostalAddress'], 'jansAttrOrigin': ['jansCustomPerson'], 'jansAttrTyp': ['string'], 'jansAttrViewTyp': ['user', 'admin'], 'jansClaimName': ['formatted'], 'jansSAML1URI': ['urn:mace:dir:attribute-def:homePostalAddress'], 'jansSAML2URI': ['urn:oid:0.9.2342.19200300.100.1.39'], 'jansStatus': ['inactive'], 'objectClass': ['top', 'jansAttr'], 'urn': ['urn:mace:dir:attribute-def:homePostalAddress']} 11:35:18 06/21/21 Querying LDAP for dn inum=6EEB,ou=attributes,o=jans 11:35:18 06/21/21 Adding LDAP dn:inum=6EEB,ou=attributes,o=jans entry:{'description': ['City'], 'displayName': ['City'], 'inum': ['6EEB'], 'jansAttrEditTyp': ['user', 'admin'], 'jansAttrName': ['l'], 'jansAttrOrigin': ['jansCustomPerson'], 'jansAttrTyp': ['string'], 'jansAttrViewTyp': ['user', 'admin'], 'jansClaimName': ['locality'], 'jansSAML1URI': ['urn:mace:dir:attribute-def:l'], 'jansSAML2URI': ['urn:oid:2.5.4.7'], 'jansStatus': ['inactive'], 'objectClass': ['top', 'jansAttr'], 'urn': ['urn:mace:dir:attribute-def:l']} 11:35:18 06/21/21 Querying LDAP for dn inum=2A3D,ou=attributes,o=jans 11:35:18 06/21/21 Adding LDAP dn:inum=2A3D,ou=attributes,o=jans entry:{'description': ['Postal or Zip Code'], 'displayName': ['Postal Code'], 'inum': ['2A3D'], 'jansAttrEditTyp': ['user', 'admin'], 'jansAttrName': ['postalCode'], 'jansAttrOrigin': ['jansCustomPerson'], 'jansAttrTyp': ['string'], 'jansAttrViewTyp': ['user', 'admin'], 'jansClaimName': ['postal_code'], 'jansSAML1URI': ['urn:mace:dir:attribute-def:postalCode'], 'jansSAML2URI': ['urn:oid:2.5.4.17'], 'jansStatus': ['inactive'], 'objectClass': ['top', 'jansAttr'], 'urn': ['urn:mace:dir:attribute-def:postalCode']} 11:35:18 06/21/21 Querying LDAP for dn inum=48EE,ou=attributes,o=jans 11:35:18 06/21/21 Adding LDAP dn:inum=48EE,ou=attributes,o=jans entry:{'description': ['Description'], 'displayName': ['Description'], 'inum': ['48EE'], 'jansAttrEditTyp': ['user', 'admin'], 'jansAttrName': ['description'], 'jansAttrOrigin': ['jansCustomPerson'], 'jansAttrTyp': ['string'], 'jansAttrViewTyp': ['user', 'admin'], 'jansSAML1URI': ['urn:mace:dir:attribute-def:description'], 'jansSAML2URI': ['urn:oid:2.5.4.13'], 'jansStatus': ['inactive'], 'objectClass': ['top', 'jansAttr'], 'urn': ['urn:mace:dir:attribute-def:description']} 11:35:18 06/21/21 Querying LDAP for dn inum=4E0C,ou=attributes,o=jans 11:35:18 06/21/21 Adding LDAP dn:inum=4E0C,ou=attributes,o=jans entry:{'description': [\"Specifies the person's relationship(s) to the institutionin broad categories such as student, faculty, staff, alum, etc.\"], 'displayName': ['eduPersonAffiliation'], 'inum': ['4E0C'], 'jansAttrEditTyp': ['admin'], 'jansAttrName': ['eduPersonAffiliation'], 'jansAttrOrigin': ['eduPerson'], 'jansAttrTyp': ['string'], 'jansAttrViewTyp': ['admin'], 'jansSAML1URI': ['urn:mace:dir:attribute-def:eduPersonAffiliation'], 'jansSAML2URI': ['urn:oid:1.3.6.1.4.1.5923.1.1.1.1'], 'jansStatus': ['inactive'], 'objectClass': ['top', 'jansAttr'], 'urn': ['oid:1.3.6.1.4.1.5923.1.1.1.1']} 11:35:18 06/21/21 Querying LDAP for dn inum=E7BC,ou=attributes,o=jans 11:35:18 06/21/21 Adding LDAP dn:inum=E7BC,ou=attributes,o=jans entry:{'description': [\"Person's nickname, or the informal name by which the End-User is accustomedto be hailed. A casual name that may or may not be the same asthe given_name. For instance,a nickname value of Mike might be returned alongside a given_name value of Michael.\"], 'displayName': ['eduPersonNickName'], 'inum': ['E7BC'], 'jansAttrEditTyp': ['admin'], 'jansAttrName': ['eduPersonNickName'], 'jansAttrOrigin': ['eduPerson'], 'jansAttrTyp': ['string'], 'jansAttrViewTyp': ['admin'], 'jansSAML1URI': ['urn:mace:dir:attribute-def:eduPersonNickName'], 'jansSAML2URI': ['urn:oid:1.3.6.1.4.1.5923.1.1.1.2'], 'jansStatus': ['inactive'], 'objectClass': ['top', 'jansAttr'], 'urn': ['oid:1.3.6.1.4.1.5923.1.1.1.2']} 11:35:18 06/21/21 Querying LDAP for dn inum=6366,ou=attributes,o=jans 11:35:18 06/21/21 Adding LDAP dn:inum=6366,ou=attributes,o=jans entry:{'description': ['The distinguished name (DN) of the directory entryrepresentingthe institution with which the person is associated.'], 'displayName': ['eduPersonOrgDN'], 'inum': ['6366'], 'jansAttrEditTyp': ['admin'], 'jansAttrName': ['eduPersonOrgDN'], 'jansAttrOrigin': ['eduPerson'], 'jansAttrTyp': ['string'], 'jansAttrViewTyp': ['admin'], 'jansSAML1URI': ['urn:mace:dir:attribute-def:eduPersonOrgDN'], 'jansSAML2URI': ['urn:oid:1.3.6.1.4.1.5923.1.1.1.3'], 'jansStatus': ['inactive'], 'objectClass': ['top', 'jansAttr'], 'urn': ['oid:1.3.6.1.4.1.5923.1.1.1.3']} 11:35:19 06/21/21 Querying LDAP for dn inum=ED0D,ou=attributes,o=jans 11:35:19 06/21/21 Adding LDAP dn:inum=ED0D,ou=attributes,o=jans entry:{'description': [\"The distinguished name(s) (DN) of the directory entriesrepresenting the person's Organizational Unit(s). May be multivalued,as for example, in the case of a faculty member with appointments inmultiple departmentsor a person who is a student in one departmentand an employee in another.\"], 'displayName': ['eduPersonOrgUnitDN'], 'inum': ['ED0D'], 'jansAttrEditTyp': ['admin'], 'jansAttrName': ['eduPersonOrgUnitDN'], 'jansAttrOrigin': ['eduPerson'], 'jansAttrTyp': ['string'], 'jansAttrViewTyp': ['admin'], 'jansSAML1URI': ['urn:mace:dir:attribute-def:eduPersonOrgUnitDN'], 'jansSAML2URI': ['urn:oid:1.3.6.1.4.1.5923.1.1.1.4'], 'jansStatus': ['inactive'], 'objectClass': ['top', 'jansAttr'], 'urn': ['oid:1.3.6.1.4.1.5923.1.1.1.4']} 11:35:19 06/21/21 Querying LDAP for dn inum=91E7,ou=attributes,o=jans 11:35:19 06/21/21 Adding LDAP dn:inum=91E7,ou=attributes,o=jans entry:{'description': [\"Specifies the person's primary relationship to theinstitution in broad categories such as student, faculty, staff,alum, etc. (See controlled vocabulary).\"], 'displayName': ['eduPersonPrimaryAffiliation'], 'inum': ['91E7'], 'jansAttrEditTyp': ['admin'], 'jansAttrName': ['eduPersonPrimaryAffiliation'], 'jansAttrOrigin': ['eduPerson'], 'jansAttrTyp': ['string'], 'jansAttrViewTyp': ['admin'], 'jansSAML1URI': ['urn:mace:dir:attribute-def:eduPersonPrimaryAffiliation'], 'jansSAML2URI': ['urn:oid:1.3.6.1.4.1.5923.1.1.1.5'], 'jansStatus': ['inactive'], 'objectClass': ['top', 'jansAttr'], 'urn': ['oid:1.3.6.1.4.1.5923.1.1.1.5']} 11:35:19 06/21/21 Querying LDAP for dn inum=096B,ou=attributes,o=jans 11:35:19 06/21/21 Adding LDAP dn:inum=096B,ou=attributes,o=jans entry:{'description': ['A scoped identifier for a person. It should berepresented in the form \"user@scope\" where \\'user\\' is aname-based identifier for the person and where \\'scope\\'defines a local security domain. Each value of \\'scope\\' definesa namespace within which the assigned identifiers MUST be unique.Given this rule, if two eduPersonPrincipalName (ePPN) values arethe same at a given point in time, they refer to the same person.'], 'displayName': ['eduPersonPrincipalName'], 'inum': ['096B'], 'jansAttrEditTyp': ['admin'], 'jansAttrName': ['eduPersonPrincipalName'], 'jansAttrOrigin': ['eduPerson'], 'jansAttrTyp': ['string'], 'jansAttrViewTyp': ['admin'], 'jansSAML1URI': ['urn:mace:dir:attribute-def:eduPersonPrincipalName'], 'jansSAML2URI': ['urn:oid:1.3.6.1.4.1.5923.1.1.1.6'], 'jansStatus': ['inactive'], 'objectClass': ['top', 'jansAttr'], 'urn': ['oid:1.3.6.1.4.1.5923.1.1.1.6']} 11:35:19 06/21/21 Querying LDAP for dn inum=BF03,ou=attributes,o=jans 11:35:19 06/21/21 Adding LDAP dn:inum=BF03,ou=attributes,o=jans entry:{'description': ['URI (either URN or URL) that indicates a set of rights to specific resources.'], 'displayName': ['eduPersonEntitlement'], 'inum': ['BF03'], 'jansAttrEditTyp': ['admin'], 'jansAttrName': ['eduPersonEntitlement'], 'jansAttrOrigin': ['eduPerson'], 'jansAttrTyp': ['string'], 'jansAttrViewTyp': ['admin'], 'jansSAML1URI': ['urn:mace:dir:attribute-def:eduPersonEntitlement'], 'jansSAML2URI': ['urn:oid:1.3.6.1.4.1.5923.1.1.1.7'], 'jansStatus': ['inactive'], 'objectClass': ['top', 'jansAttr'], 'urn': ['oid:1.3.6.1.4.1.5923.1.1.1.7']} 11:35:19 06/21/21 Querying LDAP for dn inum=0247,ou=attributes,o=jans 11:35:19 06/21/21 Adding LDAP dn:inum=0247,ou=attributes,o=jans entry:{'description': [\"The distinguished name (DN) of the directory entry representingthe person's primary Organizational Unit(s).\"], 'displayName': ['eduPersonPrimaryOrgUnitDN'], 'inum': ['0247'], 'jansAttrEditTyp': ['admin'], 'jansAttrName': ['eduPersonPrimaryOrgUnitDN'], 'jansAttrOrigin': ['eduPerson'], 'jansAttrTyp': ['string'], 'jansAttrViewTyp': ['admin'], 'jansSAML1URI': ['urn:mace:dir:attribute-def:eduPersonPrimaryOrgUnitDN'], 'jansSAML2URI': ['urn:oid:1.3.6.1.4.1.5923.1.1.1.8'], 'jansStatus': ['inactive'], 'objectClass': ['top', 'jansAttr'], 'urn': ['oid:1.3.6.1.4.1.5923.1.1.1.8']} 11:35:19 06/21/21 Querying LDAP for dn inum=002A,ou=attributes,o=jans 11:35:19 06/21/21 Adding LDAP dn:inum=002A,ou=attributes,o=jans entry:{'description': ['Specifies the person\\'s affiliation within a particular security domainin broad categories such as student, faculty, staff, alum, etc. Thevalues consistof a left and right component separated by an \"@\" sign. The left component is one ofthe values from the eduPersonAffiliation controlledvocabulary.This right-hand side syntaxof eduPersonScopedAffiliation intentionally matches that used for the right-hand sidevalues for eduPersonPrincipalName since both identify a security domain. Multiple \"@\" signsare not recommended, but in any case, the first occurrence of the \"@\" sign starting from theleft is to be taken as the delimiter between components. Thus, user identifier is to the left,security domain to the right of the first \"@\". This parsing rule conforms to the POSIX \"greedy\"disambiguation method in regular expression processing.'], 'displayName': ['eduPersonScopedAffiliation'], 'inum': ['002A'], 'jansAttrEditTyp': ['admin'], 'jansAttrName': ['eduPersonScopedAffiliation'], 'jansAttrOrigin': ['eduPerson'], 'jansAttrTyp': ['string'], 'jansAttrViewTyp': ['admin'], 'jansSAML1URI': ['urn:mace:dir:attribute-def:eduPersonScopedAffiliation'], 'jansSAML2URI': ['urn:oid:1.3.6.1.4.1.5923.1.1.1.9'], 'jansStatus': ['inactive'], 'objectClass': ['top', 'jansAttr'], 'urn': ['oid:1.3.6.1.4.1.5923.1.1.1.9']} 11:35:19 06/21/21 Querying LDAP for dn inum=8FF3,ou=attributes,o=jans 11:35:19 06/21/21 Adding LDAP dn:inum=8FF3,ou=attributes,o=jans entry:{'description': ['A persistent, non-reassigned, opaque identifier for a principal.'], 'displayName': ['eduPersonTargetedID'], 'inum': ['8FF3'], 'jansAttrEditTyp': ['admin'], 'jansAttrName': ['eduPersonTargetedID'], 'jansAttrOrigin': ['eduPerson'], 'jansAttrTyp': ['string'], 'jansAttrViewTyp': ['admin'], 'jansSAML1URI': ['urn:mace:dir:attribute-def:eduPersonTargetedID'], 'jansSAML2URI': ['urn:oid:1.3.6.1.4.1.5923.1.1.1.10'], 'jansStatus': ['inactive'], 'objectClass': ['top', 'jansAttr'], 'urn': ['oid:1.3.6.1.4.1.5923.1.1.1.10']} 11:35:19 06/21/21 Querying LDAP for dn inum=4B0F,ou=attributes,o=jans 11:35:19 06/21/21 Adding LDAP dn:inum=4B0F,ou=attributes,o=jans entry:{'description': ['Set of URIs that assert compliance with specific standardsfor identity assurance.'], 'displayName': ['eduPersonAssurance'], 'inum': ['4B0F'], 'jansAttrEditTyp': ['admin'], 'jansAttrName': ['eduPersonAssurance'], 'jansAttrOrigin': ['eduPerson'], 'jansAttrTyp': ['string'], 'jansAttrViewTyp': ['admin'], 'jansSAML1URI': ['urn:mace:dir:attribute-def:eduPersonAssurance'], 'jansSAML2URI': ['urn:oid:1.3.6.1.4.1.5923.1.1.1.11'], 'jansStatus': ['inactive'], 'objectClass': ['top', 'jansAttr'], 'urn': ['oid:1.3.6.1.4.1.5923.1.1.1.11']} 11:35:19 06/21/21 Querying LDAP for dn inum=4A0A,ou=attributes,o=jans 11:35:19 06/21/21 Adding LDAP dn:inum=4A0A,ou=attributes,o=jans entry:{'description': ['Person principal name prior'], 'displayName': ['eduPersonPrincipalNamePrior'], 'inum': ['4A0A'], 'jansAttrEditTyp': ['admin'], 'jansAttrName': ['eduPersonPrincipalNamePrior'], 'jansAttrOrigin': ['eduPerson'], 'jansAttrTyp': ['string'], 'jansAttrViewTyp': ['admin'], 'jansSAML1URI': ['urn:mace:dir:attribute-def:eduPersonPrincipalNamePrior'], 'jansSAML2URI': ['urn:oid:1.3.6.1.4.1.5923.1.1.1.12'], 'jansStatus': ['inactive'], 'objectClass': ['top', 'jansAttr'], 'urn': ['oid:1.3.6.1.4.1.5923.1.1.1.12']} 11:35:19 06/21/21 Querying LDAP for dn inum=4A0B,ou=attributes,o=jans 11:35:19 06/21/21 Adding LDAP dn:inum=4A0B,ou=attributes,o=jans entry:{'description': ['Person unique Id'], 'displayName': ['eduPersonUniqueId'], 'inum': ['4A0B'], 'jansAttrEditTyp': ['admin'], 'jansAttrName': ['eduPersonUniqueId'], 'jansAttrOrigin': ['eduPerson'], 'jansAttrTyp': ['string'], 'jansAttrViewTyp': ['admin'], 'jansSAML1URI': ['urn:mace:dir:attribute-def:eduPersonUniqueId'], 'jansSAML2URI': ['urn:oid:1.3.6.1.4.1.5923.1.1.1.13'], 'jansStatus': ['inactive'], 'objectClass': ['top', 'jansAttr'], 'urn': ['oid:1.3.6.1.4.1.5923.1.1.1.13']} 11:35:19 06/21/21 Querying LDAP for dn inum=4A0C,ou=attributes,o=jans 11:35:19 06/21/21 Adding LDAP dn:inum=4A0C,ou=attributes,o=jans entry:{'description': ['ORCID researcher identifiers belonging to the principal'], 'displayName': ['eduPersonOrcid'], 'inum': ['4A0C'], 'jansAttrEditTyp': ['admin'], 'jansAttrName': ['eduPersonOrcid'], 'jansAttrOrigin': ['eduPerson'], 'jansAttrTyp': ['string'], 'jansAttrViewTyp': ['admin'], 'jansSAML1URI': ['urn:mace:dir:attribute-def:eduPersonOrcid'], 'jansSAML2URI': ['urn:oid:1.3.6.1.4.1.5923.1.1.1.16'], 'jansStatus': ['inactive'], 'objectClass': ['top', 'jansAttr'], 'urn': ['oid:1.3.6.1.4.1.5923.1.1.1.16']} 11:35:19 06/21/21 Querying LDAP for dn inum=5039,ou=attributes,o=jans 11:35:19 06/21/21 Adding LDAP dn:inum=5039,ou=attributes,o=jans entry:{'description': ['jansEnrollmentCode', 'Enrollment code, non-reassignable code'], 'displayName': ['Enrollment code'], 'inum': ['5039'], 'jansAttrEditTyp': ['admin'], 'jansAttrName': ['jansEnrollmentCode'], 'jansAttrOrigin': ['jansPerson'], 'jansAttrTyp': ['string'], 'jansAttrViewTyp': ['admin'], 'jansSAML1URI': ['urn:mace:dir:attribute-def:jansEnrollmentCode'], 'jansSAML2URI': ['urn:oid:1.3.6.1.4.1.48710.1.3.239'], 'jansScimCustomAttr': ['true'], 'jansStatus': ['active'], 'objectClass': ['top', 'jansAttr'], 'urn': ['urn:jans:dir:attribute-def:jansEnrollmentCode']} 11:35:19 06/21/21 Querying LDAP for dn inum=42E1,ou=attributes,o=jans 11:35:19 06/21/21 Adding LDAP dn:inum=42E1,ou=attributes,o=jans entry:{'description': ['IMAP Data'], 'displayName': ['IMAP Data'], 'inum': ['42E1'], 'jansAttrEditTyp': ['admin', 'user'], 'jansAttrName': ['jansIMAPData'], 'jansAttrOrigin': ['jansPerson'], 'jansAttrTyp': ['json'], 'jansAttrViewTyp': ['admin', 'user'], 'jansClaimName': ['imap_data'], 'jansSAML1URI': ['urn:mace:dir:attribute-def:jansIMAPData'], 'jansSAML2URI': ['urn:oid:1.3.6.1.4.1.48710.1.3.355'], 'jansStatus': ['active'], 'objectClass': ['top', 'jansAttr'], 'urn': ['urn:mace:dir:attribute-def:jansIMAPData']} 11:35:19 06/21/21 Querying LDAP for dn inum=6049,ou=attributes,o=jans 11:35:19 06/21/21 Adding LDAP dn:inum=6049,ou=attributes,o=jans entry:{'description': ['jansPermission', 'User permission or role'], 'displayName': ['User Permission'], 'inum': ['6049'], 'jansAttrEditTyp': ['admin'], 'jansAttrName': ['role'], 'jansAttrOrigin': ['jansPerson'], 'jansAttrTyp': ['string'], 'jansAttrViewTyp': ['admin'], 'jansClaimName': ['user_permission'], 'jansMultivaluedAttr': ['true'], 'jansSAML1URI': ['urn:mace:dir:attribute-def:role'], 'jansSAML2URI': ['urn:oid:1.3.6.1.4.1.48710.1.3.299'], 'jansStatus': ['active'], 'objectClass': ['top', 'jansAttr'], 'urn': ['urn:jans:dir:attribute-def:role']} 11:35:19 06/21/21 Querying LDAP for dn inum=CACA,ou=attributes,o=jans 11:35:19 06/21/21 Adding LDAP dn:inum=CACA,ou=attributes,o=jans entry:{'description': ['User certificate'], 'displayName': ['User certificate'], 'inum': ['CACA'], 'jansAttrEditTyp': ['admin', 'user'], 'jansAttrName': ['userCertificate'], 'jansAttrOrigin': ['jansPerson'], 'jansAttrTyp': ['certificate'], 'jansAttrViewTyp': ['admin', 'user'], 'jansSAML1URI': ['urn:mace:dir:attribute-def:userCertificate'], 'jansSAML2URI': ['urn:oid:2.5.4.36'], 'jansStatus': ['active'], 'jansValidation': ['{\"minLength\":null,\"maxLength\":2048,\"regexp\":\"\"}'], 'objectClass': ['top', 'jansAttr'], 'urn': ['urn:mace:dir:attribute-def:userCertificate']} 11:35:19 06/21/21 Querying LDAP for dn inum=11AA,ou=attributes,o=jans 11:35:19 06/21/21 Adding LDAP dn:inum=11AA,ou=attributes,o=jans entry:{'description': ['CIBA Device Registration Token'], 'displayName': ['CIBA Device Registration Token'], 'inum': ['11AA'], 'jansAttrEditTyp': ['admin', 'user'], 'jansAttrName': ['jansBackchannelDeviceRegistrationTkn'], 'jansAttrOrigin': ['jansPerson'], 'jansAttrTyp': ['string'], 'jansAttrViewTyp': ['admin', 'user'], 'jansStatus': ['active'], 'objectClass': ['top', 'jansAttr'], 'urn': ['urn:mace:dir:attribute-def:jansBackchannelDeviceRegistrationTkn']} 11:35:19 06/21/21 Querying LDAP for dn inum=11AB,ou=attributes,o=jans 11:35:19 06/21/21 Adding LDAP dn:inum=11AB,ou=attributes,o=jans entry:{'description': ['CIBA User code'], 'displayName': ['CIBA User code'], 'inum': ['11AB'], 'jansAttrEditTyp': ['admin', 'user'], 'jansAttrName': ['jansBackchannelUsrCode'], 'jansAttrOrigin': ['jansPerson'], 'jansAttrTyp': ['string'], 'jansAttrViewTyp': ['admin', 'user'], 'jansStatus': ['active'], 'objectClass': ['top', 'jansAttr'], 'urn': ['urn:mace:dir:attribute-def:jansBackchannelUsrCode']} 11:35:19 06/21/21 Importing entries from /opt/jans/jans-setup/output/scopes.ldif 11:35:19 06/21/21 Querying LDAP for dn inum=F0C4,ou=scopes,o=jans 11:35:19 06/21/21 Adding LDAP dn:inum=F0C4,ou=scopes,o=jans entry:{'description': ['Authenticate using OpenID Connect.'], 'displayName': ['authenticate_openid_connect'], 'inum': ['F0C4'], 'jansAttrs': ['{\"spontaneousClientId\":\"\",\"spontaneousClientScopes\":[],\"showInConfigurationEndpoint\":true}'], 'jansDefScope': ['true'], 'jansId': ['openid'], 'jansScopeTyp': ['openid'], 'objectClass': ['top', 'jansScope']} 11:35:19 06/21/21 Querying LDAP for dn inum=43F1,ou=scopes,o=jans 11:35:19 06/21/21 Adding LDAP dn:inum=43F1,ou=scopes,o=jans entry:{'description': ['View your basic profile info.'], 'displayName': ['view_profile'], 'inum': ['43F1'], 'jansAttrs': ['{\"spontaneousClientId\":\"\",\"spontaneousClientScopes\":[],\"showInConfigurationEndpoint\":true}'], 'jansClaim': ['inum=2B29,ou=attributes,o=jans', 'inum=0C85,ou=attributes,o=jans', 'inum=B4B0,ou=attributes,o=jans', 'inum=A0E8,ou=attributes,o=jans', 'inum=5EC6,ou=attributes,o=jans', 'inum=B52A,ou=attributes,o=jans', 'inum=64A0,ou=attributes,o=jans', 'inum=EC3A,ou=attributes,o=jans', 'inum=3B47,ou=attributes,o=jans', 'inum=3692,ou=attributes,o=jans', 'inum=98FC,ou=attributes,o=jans', 'inum=A901,ou=attributes,o=jans', 'inum=36D9,ou=attributes,o=jans', 'inum=BE64,ou=attributes,o=jans', 'inum=6493,ou=attributes,o=jans'], 'jansDefScope': ['false'], 'jansId': ['profile'], 'jansScopeTyp': ['openid'], 'objectClass': ['top', 'jansScope']} 11:35:19 06/21/21 Querying LDAP for dn inum=764C,ou=scopes,o=jans 11:35:19 06/21/21 Adding LDAP dn:inum=764C,ou=scopes,o=jans entry:{'description': ['View your email address.'], 'displayName': ['view_email_address'], 'inum': ['764C'], 'jansAttrs': ['{\"spontaneousClientId\":\"\",\"spontaneousClientScopes\":[],\"showInConfigurationEndpoint\":true}'], 'jansClaim': ['inum=8F88,ou=attributes,o=jans', 'inum=CAE3,ou=attributes,o=jans'], 'jansDefScope': ['false'], 'jansId': ['email'], 'jansScopeTyp': ['openid'], 'objectClass': ['top', 'jansScope']} 11:35:19 06/21/21 Querying LDAP for dn inum=C17A,ou=scopes,o=jans 11:35:19 06/21/21 Adding LDAP dn:inum=C17A,ou=scopes,o=jans entry:{'description': ['View your address.'], 'displayName': ['view_address'], 'inum': ['C17A'], 'jansAttrs': ['{\"spontaneousClientId\":\"\",\"spontaneousClientScopes\":[],\"showInConfigurationEndpoint\":true}'], 'jansClaim': ['inum=27DB,ou=attributes,o=jans', 'inum=2A3D,ou=attributes,o=jans', 'inum=6609,ou=attributes,o=jans', 'inum=6EEB,ou=attributes,o=jans', 'inum=BCE8,ou=attributes,o=jans', 'inum=D90B,ou=attributes,o=jans', 'inum=E6B8,ou=attributes,o=jans', 'inum=E999,ou=attributes,o=jans'], 'jansDefScope': ['false'], 'jansGrpClaims': ['true'], 'jansId': ['address'], 'jansScopeTyp': ['openid'], 'objectClass': ['top', 'jansScope']} 11:35:19 06/21/21 Querying LDAP for dn inum=D491,ou=scopes,o=jans 11:35:19 06/21/21 Adding LDAP dn:inum=D491,ou=scopes,o=jans entry:{'description': ['View your phone number.'], 'displayName': ['view_phone_number'], 'inum': ['D491'], 'jansAttrs': ['{\"spontaneousClientId\":\"\",\"spontaneousClientScopes\":[],\"showInConfigurationEndpoint\":true}'], 'jansClaim': ['inum=B17A,ou=attributes,o=jans', 'inum=0C18,ou=attributes,o=jans'], 'jansDefScope': ['false'], 'jansId': ['phone'], 'jansScopeTyp': ['openid'], 'objectClass': ['top', 'jansScope']} 11:35:19 06/21/21 Querying LDAP for dn inum=341A,ou=scopes,o=jans 11:35:19 06/21/21 Adding LDAP dn:inum=341A,ou=scopes,o=jans entry:{'description': ['View the client info.'], 'displayName': ['view_client'], 'inum': ['341A'], 'jansAttrs': ['{\"spontaneousClientId\":\"\",\"spontaneousClientScopes\":[],\"showInConfigurationEndpoint\":true}'], 'jansClaim': ['inum=2B29,ou=attributes,o=jans', 'inum=29DA,ou=attributes,o=jans'], 'jansDefScope': ['false'], 'jansId': ['clientinfo'], 'jansScopeTyp': ['openid'], 'objectClass': ['top', 'jansScope']} 11:35:19 06/21/21 Querying LDAP for dn inum=10B2,ou=scopes,o=jans 11:35:19 06/21/21 Adding LDAP dn:inum=10B2,ou=scopes,o=jans entry:{'description': ['View your local username in the Janssen Server.'], 'displayName': ['view_username'], 'inum': ['10B2'], 'jansAttrs': ['{\"spontaneousClientId\":\"\",\"spontaneousClientScopes\":[],\"showInConfigurationEndpoint\":true}'], 'jansClaim': ['inum=42E0,ou=attributes,o=jans'], 'jansDefScope': ['false'], 'jansId': ['user_name'], 'jansScopeTyp': ['openid'], 'objectClass': ['top', 'jansScope']} 11:35:19 06/21/21 Querying LDAP for dn inum=6D99,ou=scopes,o=jans 11:35:19 06/21/21 Adding LDAP dn:inum=6D99,ou=scopes,o=jans entry:{'description': ['Obtain UMA PAT.'], 'displayName': ['UMA Protection'], 'inum': ['6D99'], 'jansAttrs': ['{\"spontaneousClientId\":\"\",\"spontaneousClientScopes\":[],\"showInConfigurationEndpoint\":true}'], 'jansDefScope': ['true'], 'jansId': ['uma_protection'], 'jansScopeTyp': ['openid'], 'objectClass': ['top', 'jansScope']} 11:35:19 06/21/21 Querying LDAP for dn inum=6D90,ou=scopes,o=jans 11:35:19 06/21/21 Adding LDAP dn:inum=6D90,ou=scopes,o=jans entry:{'description': ['oxd scope which is required to call oxd API'], 'displayName': ['oxd'], 'inum': ['6D90'], 'jansAttrs': ['{\"spontaneousClientId\":\"\",\"spontaneousClientScopes\":[],\"showInConfigurationEndpoint\":true}'], 'jansDefScope': ['true'], 'jansId': ['oxd'], 'jansScopeTyp': ['openid'], 'objectClass': ['top', 'jansScope']} 11:35:19 06/21/21 Querying LDAP for dn inum=7D90,ou=scopes,o=jans 11:35:19 06/21/21 Adding LDAP dn:inum=7D90,ou=scopes,o=jans entry:{'description': ['revoke_session scope which is required to be able call /revoke_session endpoint'], 'displayName': ['revoke_session'], 'inum': ['7D90'], 'jansAttrs': ['{\"spontaneousClientId\":\"\",\"spontaneousClientScopes\":[],\"showInConfigurationEndpoint\":true}'], 'jansDefScope': ['false'], 'jansId': ['revoke_session'], 'jansScopeTyp': ['openid'], 'objectClass': ['top', 'jansScope']} 11:35:19 06/21/21 Querying LDAP for dn inum=8A01,ou=scopes,o=jans 11:35:19 06/21/21 Adding LDAP dn:inum=8A01,ou=scopes,o=jans entry:{'description': ['View your mobile phone number.'], 'displayName': ['view_mobile_phone_number'], 'inum': ['8A01'], 'jansAttrs': ['{\"spontaneousClientId\":\"\",\"spontaneousClientScopes\":[],\"showInConfigurationEndpoint\":true}'], 'jansClaim': ['inum=6DA6,ou=attributes,o=jans'], 'jansDefScope': ['false'], 'jansId': ['mobile_phone'], 'jansScopeTyp': ['openid'], 'objectClass': ['top', 'jansScope']} 11:35:19 06/21/21 Querying LDAP for dn inum=C4F5,ou=scopes,o=jans 11:35:19 06/21/21 Adding LDAP dn:inum=C4F5,ou=scopes,o=jans entry:{'description': ['View your user permission and roles.'], 'displayName': ['view_user_permissions_roles'], 'inum': ['C4F5'], 'jansAttrs': ['{\"spontaneousClientId\":\"\",\"spontaneousClientScopes\":[],\"showInConfigurationEndpoint\":true}'], 'jansDefScope': ['true'], 'jansId': ['permission'], 'jansScopeTyp': ['dynamic'], 'jansScrDn': ['inum=CB5B-3211,ou=scripts,o=jans'], 'objectClass': ['top', 'jansScope']} 11:35:19 06/21/21 Querying LDAP for dn inum=C4F6,ou=scopes,o=jans 11:35:19 06/21/21 Adding LDAP dn:inum=C4F6,ou=scopes,o=jans entry:{'description': ['This scope value requests that an OAuth 2.0 Refresh Token be issued.'], 'displayName': ['refresh_token'], 'inum': ['C4F6'], 'jansAttrs': ['{\"spontaneousClientId\":\"\",\"spontaneousClientScopes\":[],\"showInConfigurationEndpoint\":true}'], 'jansDefScope': ['true'], 'jansId': ['offline_access'], 'jansScopeTyp': ['openid'], 'objectClass': ['top', 'jansScope']} 11:35:19 06/21/21 Importing entries from /opt/jans/jans-setup/output/configuration.ldif 11:35:19 06/21/21 Querying LDAP for dn ou=configuration,o=jans 11:35:19 06/21/21 Adding LDAP dn:ou=configuration,o=jans entry:{'jansCacheConf': ['{\"cacheProviderType\": \"NATIVE_PERSISTENCE\", \"memcachedConfiguration\": {\"servers\":\"localhost:11211\", \"maxOperationQueueLength\":100000, \"bufferSize\":32768, \"defaultPutExpiration\":60, \"connectionFactoryType\": \"DEFAULT\"}, \"inMemoryConfiguration\": {\"defaultPutExpiration\":60}, \"nativePersistenceConfiguration\": {\"defaultPutExpiration\":60, \"defaultCleanupBatchSize\": 10000}, \"redisConfiguration\":{\"servers\":\"localhost:6379\", \"defaultPutExpiration\": 60}}'], 'jansDocStoreConf': ['{\"documentStoreType\":\"LOCAL\",\"localConfiguration\":{\"baseLocation\":\"/\"},\"jcaConfiguration\":{\"serverUrl\":\"http://localhost:8080/rmi\",\"workspaceName\":\"default\",\"connectionTimeout\":15,\"userId\":\"admin\",\"password\":\"\"},\"webDavConfiguration\":null}'], 'jansDbAuth': ['{\"type\": \"auth\", \"name\": null, \"level\": 0, \"priority\": 1, \"enabled\": false, \"version\": 0, \"config\": {\"configId\": \"auth_ldap_server\",           \"servers\": [\"localhost:1636\"],           \"maxConnections\": 1000,           \"bindDN\": \"cn=directory manager\",           \"bindPassword\": \"4Z9yYHSlcU8rIEnizSz5lA==\",           \"useSSL\": \"true\",           \"baseDNs\": [\"ou=people,o=jans\"],           \"primaryKey\": \"uid\",           \"localPrimaryKey\": \"uid\",           \"useAnonymousBind\": false,           \"enabled\": false} }'], 'jansOrgProfileMgt': ['false'], 'jansScimEnabled': ['false'], 'objectClass': ['top', 'jansAppConf'], 'ou': ['configuration']} 11:35:19 06/21/21 Importing entries from /opt/jans/jans-setup/static/metric/o_metric.ldif 11:35:19 06/21/21 Querying LDAP for dn o=metric 11:35:19 06/21/21 Adding LDAP dn:o=metric entry:{'objectClass': ['top', 'organization'], 'o': ['site']} 11:35:19 06/21/21 Querying LDAP for dn ou=statistic,o=metric 11:35:19 06/21/21 Adding LDAP dn:ou=statistic,o=metric entry:{'objectClass': ['top', 'organizationalUnit'], 'ou': ['statistic']} 11:35:19 06/21/21 Importing entries from /opt/jans/jans-setup/static/cache-refresh/o_site.ldif 11:35:19 06/21/21 Querying LDAP for dn o=site 11:35:19 06/21/21 Adding LDAP dn:o=site entry:{'objectClass': ['top', 'organization'], 'o': ['site']} 11:35:19 06/21/21 Querying LDAP for dn ou=cache-refresh,o=site 11:35:19 06/21/21 Adding LDAP dn:ou=cache-refresh,o=site entry:{'objectClass': ['top', 'organizationalUnit'], 'ou': ['people']} 11:35:19 06/21/21 Running: /usr/bin/systemctl enable opendj 11:35:19 06/21/21 Run: /usr/bin/systemctl enable opendj with result code: 0 11:35:19 06/21/21 Configuring apache2 11:35:19 06/21/21 Running: /usr/bin/systemctl stop apache2 11:35:19 06/21/21 Run: /usr/bin/systemctl stop apache2 with result code: 0 11:35:19 06/21/21 Rendering template /opt/jans/jans-setup/templates/apache/httpd.conf 11:35:19 06/21/21 Reading file /opt/jans/jans-setup/templates/apache/httpd.conf 11:35:19 06/21/21 Writing file /opt/jans/jans-setup/output/apache/httpd.conf 11:35:19 06/21/21 Rendering template /opt/jans/jans-setup/templates/apache/https_jans.conf 11:35:19 06/21/21 Reading file /opt/jans/jans-setup/templates/apache/https_jans.conf 11:35:19 06/21/21 Writing file /opt/jans/jans-setup/output/apache/https_jans.conf 11:35:19 06/21/21 Rendering template /opt/jans/jans-setup/templates/apache/httpd_2.4.conf 11:35:19 06/21/21 Reading file /opt/jans/jans-setup/templates/apache/httpd_2.4.conf 11:35:19 06/21/21 Writing file /opt/jans/jans-setup/output/apache/httpd_2.4.conf 11:35:19 06/21/21 Rendering template /opt/jans/jans-setup/templates/apache/https_jans.conf 11:35:19 06/21/21 Reading file /opt/jans/jans-setup/templates/apache/https_jans.conf 11:35:19 06/21/21 Writing file /opt/jans/jans-setup/output/apache/https_jans.conf 11:35:19 06/21/21 Copying file /opt/jans/jans-setup/output/apache/https_jans.conf to /etc/apache2/sites-available/https_jans.conf 11:35:19 06/21/21 Copied /opt/jans/jans-setup/output/apache/https_jans.conf to /etc/apache2/sites-available/https_jans.conf 11:35:19 06/21/21 Running: /bin/ln -s /etc/apache2/sites-available/https_jans.conf /etc/apache2/sites-enabled/https_jans.conf 11:35:19 06/21/21 Writing file /var/www/html/index.html 11:35:19 06/21/21 Writing file /etc/apache2/mods-available/alias.conf 11:35:19 06/21/21 Copying file /opt/jans/jans-setup/templates/apache/error_pages/custom_404.html to /var/www/html 11:35:19 06/21/21 Copied /opt/jans/jans-setup/templates/apache/error_pages/custom_404.html to /var/www/html 11:35:19 06/21/21 Copying file /opt/jans/jans-setup/templates/apache/error_pages/custom_502.html to /var/www/html 11:35:19 06/21/21 Copied /opt/jans/jans-setup/templates/apache/error_pages/custom_502.html to /var/www/html 11:35:19 06/21/21 Copying file /opt/jans/jans-setup/templates/apache/error_pages/custom_503.html to /var/www/html 11:35:19 06/21/21 Copied /opt/jans/jans-setup/templates/apache/error_pages/custom_503.html to /var/www/html 11:35:19 06/21/21 Copying file /opt/jans/jans-setup/templates/apache/error_pages/custom_504.html to /var/www/html 11:35:19 06/21/21 Copied /opt/jans/jans-setup/templates/apache/error_pages/custom_504.html to /var/www/html 11:35:19 06/21/21 Copying file /opt/jans/jans-setup/templates/apache/error_pages/custom_500.html to /var/www/html 11:35:19 06/21/21 Copied /opt/jans/jans-setup/templates/apache/error_pages/custom_500.html to /var/www/html 11:35:19 06/21/21 Running: /usr/sbin/a2dismod /etc/apache2/mods-enabled/authn_file.load 11:35:19 06/21/21 Running: /usr/sbin/a2dismod /etc/apache2/mods-enabled/negotiation.load 11:35:19 06/21/21 Running: /usr/sbin/a2dismod /etc/apache2/mods-enabled/dir.load 11:35:19 06/21/21 Running: /usr/sbin/a2dismod /etc/apache2/mods-enabled/status.conf 11:35:19 06/21/21 Running: /usr/sbin/a2dismod /etc/apache2/mods-enabled/status.load 11:35:19 06/21/21 Running: /usr/sbin/a2dismod /etc/apache2/mods-enabled/dir.conf 11:35:19 06/21/21 Running: /usr/sbin/a2dismod /etc/apache2/mods-enabled/autoindex.conf 11:35:19 06/21/21 Running: /usr/sbin/a2dismod /etc/apache2/mods-enabled/autoindex.load 11:35:19 06/21/21 Running: /usr/sbin/a2dismod /etc/apache2/mods-enabled/filter.load 11:35:19 06/21/21 Running: /usr/sbin/a2dismod /etc/apache2/mods-enabled/deflate.load 11:35:19 06/21/21 Running: /usr/sbin/a2dismod /etc/apache2/mods-enabled/deflate.conf 11:35:19 06/21/21 Running: /usr/sbin/a2dismod /etc/apache2/mods-enabled/authz_user.load 11:35:19 06/21/21 Running: /usr/sbin/a2dismod /etc/apache2/mods-enabled/auth_basic.load 11:35:19 06/21/21 Running: /usr/sbin/a2dismod /etc/apache2/mods-enabled/negotiation.conf 11:35:19 06/21/21 Running: /usr/sbin/a2enmod env 11:35:19 06/21/21 Module env already enabled</p> <p>11:35:19 06/21/21 Running: /usr/sbin/a2enmod proxy_http 11:35:19 06/21/21 Considering dependency proxy for proxy_http: Module proxy already enabled Module proxy_http already enabled</p> <p>11:35:19 06/21/21 Running: /usr/sbin/a2enmod access_compat 11:35:20 06/21/21 Considering dependency authn_core for access_compat: Module authn_core already enabled Module access_compat already enabled</p> <p>11:35:20 06/21/21 Running: /usr/sbin/a2enmod alias 11:35:20 06/21/21 Module alias already enabled</p> <p>11:35:20 06/21/21 Running: /usr/sbin/a2enmod authn_core 11:35:20 06/21/21 Module authn_core already enabled</p> <p>11:35:20 06/21/21 Running: /usr/sbin/a2enmod authz_core 11:35:20 06/21/21 Module authz_core already enabled</p> <p>11:35:20 06/21/21 Running: /usr/sbin/a2enmod authz_host 11:35:20 06/21/21 Considering dependency authz_core for authz_host: Module authz_core already enabled Module authz_host already enabled</p> <p>11:35:20 06/21/21 Running: /usr/sbin/a2enmod headers 11:35:20 06/21/21 Module headers already enabled</p> <p>11:35:20 06/21/21 Running: /usr/sbin/a2enmod mime 11:35:20 06/21/21 Module mime already enabled</p> <p>11:35:20 06/21/21 Running: /usr/sbin/a2enmod mpm_event 11:35:20 06/21/21 Considering conflict mpm_worker for mpm_event: Considering conflict mpm_prefork for mpm_event: Module mpm_event already enabled</p> <p>11:35:20 06/21/21 Running: /usr/sbin/a2enmod proxy 11:35:20 06/21/21 Module proxy already enabled</p> <p>11:35:20 06/21/21 Running: /usr/sbin/a2enmod proxy_ajp 11:35:20 06/21/21 Considering dependency proxy for proxy_ajp: Module proxy already enabled Module proxy_ajp already enabled</p> <p>11:35:20 06/21/21 Running: /usr/sbin/a2enmod security2 11:35:20 06/21/21 Running: /usr/sbin/a2enmod reqtimeout 11:35:20 06/21/21 Module reqtimeout already enabled</p> <p>11:35:20 06/21/21 Running: /usr/sbin/a2enmod setenvif 11:35:20 06/21/21 Module setenvif already enabled</p> <p>11:35:20 06/21/21 Running: /usr/sbin/a2enmod socache_shmcb 11:35:20 06/21/21 Module socache_shmcb already enabled</p> <p>11:35:20 06/21/21 Running: /usr/sbin/a2enmod ssl 11:35:20 06/21/21 Considering dependency setenvif for ssl: Module setenvif already enabled Considering dependency mime for ssl: Module mime already enabled Considering dependency socache_shmcb for ssl: Module socache_shmcb already enabled Module ssl already enabled</p> <p>11:35:20 06/21/21 Running: /usr/sbin/a2enmod unique_id 11:35:20 06/21/21 Module unique_id already enabled</p> <p>11:35:20 06/21/21 Generating Certificate for httpd 11:35:20 06/21/21 Running: /usr/bin/openssl genrsa -des3 -out /etc/certs/httpd.key.orig -passout pass:Ep4maz39jt18 2048 11:35:20 06/21/21 Running: /usr/bin/openssl rsa -in /etc/certs/httpd.key.orig -passin pass:Ep4maz39jt18 -out /etc/certs/httpd.key 11:35:20 06/21/21 Running: /usr/bin/openssl req -new -key /etc/certs/httpd.key -out /etc/certs/httpd.csr -subj /C=in/ST=gj/L=ah/O=gluu org/CN=test.dd.jans.io/emailAddress=dhaval@gluu.org 11:35:20 06/21/21 Running: /usr/bin/openssl x509 -req -days 365 -in /etc/certs/httpd.csr -signkey /etc/certs/httpd.key -out /etc/certs/httpd.crt 11:35:20 06/21/21 Running: /bin/chown jetty:jetty /etc/certs/httpd.key.orig 11:35:20 06/21/21 Running: /bin/chmod 700 /etc/certs/httpd.key.orig 11:35:20 06/21/21 Running: /bin/chown jetty:jetty /etc/certs/httpd.key 11:35:20 06/21/21 Running: /bin/chmod 700 /etc/certs/httpd.key 11:35:20 06/21/21 Running: /opt/jre/bin/keytool -import -trustcacerts -alias test.dd.jans.io_httpd -file /etc/certs/httpd.crt -keystore /opt/jre/jre/lib/security/cacerts -storepass changeit -noprompt 11:35:21 06/21/21 Running: /usr/bin/systemctl enable apache2 11:35:21 06/21/21 Run: /usr/bin/systemctl enable apache2 with result code: 0 11:35:21 06/21/21 Running: /usr/bin/systemctl start apache2 11:35:21 06/21/21 Run: /usr/bin/systemctl start apache2 with result code: 0 11:35:21 06/21/21 Installing Jans-Auth 11:35:21 06/21/21 Bind to database 11:35:21 06/21/21 Copying file /opt/jans/jans-setup/static/system/systemd/jans-auth.service to /etc/systemd/system 11:35:21 06/21/21 Copied /opt/jans/jans-setup/static/system/systemd/jans-auth.service to /etc/systemd/system 11:35:21 06/21/21 Copying auth.war into jetty webapps folder... 11:35:21 06/21/21 Installing jetty service jans-auth... 11:35:21 06/21/21 Preparing jans-auth service base folders 11:35:21 06/21/21 Running: /bin/mkdir -p /opt/jans/jetty/jans-auth 11:35:21 06/21/21 Running: /bin/mkdir -p /opt/jans/jetty/jans-auth/custom 11:35:21 06/21/21 Running: /bin/mkdir -p /opt/jans/jetty/jans-auth/custom/pages 11:35:21 06/21/21 Running: /bin/mkdir -p /opt/jans/jetty/jans-auth/custom/i18n 11:35:21 06/21/21 Running: /bin/mkdir -p /opt/jans/jetty/jans-auth/custom/static 11:35:21 06/21/21 Running: /bin/mkdir -p /opt/jans/jetty/jans-auth/custom/libs 11:35:21 06/21/21 Preparing jans-auth service base configuration 11:35:21 06/21/21 Running: /opt/jre/bin/java -jar /opt/jetty/start.jar jetty.home=/opt/jetty jetty.base=/opt/jans/jetty/jans-auth --add-to-start=server,deploy,annotations,resources,http,http-forwarded,threadpool,console-capture,jsp,websocket 11:35:22 06/21/21 Running: /bin/chown -R jetty:jetty /opt/jans/jetty/jans-auth 11:35:22 06/21/21 Rendering template /opt/jans/jans-setup/templates/jetty/jans-auth 11:35:22 06/21/21 Reading file /opt/jans/jans-setup/templates/jetty/jans-auth 11:35:22 06/21/21 Writing file /opt/jans/jans-setup/output/jetty/jans-auth 11:35:22 06/21/21 Copying file /opt/jans/jans-setup/output/jetty/jans-auth to /etc/default 11:35:22 06/21/21 Copied /opt/jans/jans-setup/output/jetty/jans-auth to /etc/default 11:35:22 06/21/21 Running: /bin/chown root:root /etc/default/jans-auth 11:35:22 06/21/21 Rendering template /opt/jans/jans-setup/templates/jetty/jans-auth_web_resources.xml 11:35:22 06/21/21 Reading file /opt/jans/jans-setup/templates/jetty/jans-auth_web_resources.xml 11:35:22 06/21/21 Writing file /opt/jans/jans-setup/output/jetty/jans-auth_web_resources.xml 11:35:22 06/21/21 Copying file /opt/jans/jans-setup/output/jetty/jans-auth_web_resources.xml to /opt/jans/jetty/jans-auth/webapps 11:35:22 06/21/21 Copied /opt/jans/jans-setup/output/jetty/jans-auth_web_resources.xml to /opt/jans/jetty/jans-auth/webapps 11:35:22 06/21/21 Rendering template /opt/jans/jans-setup/templates/jetty/jans-auth.xml 11:35:22 06/21/21 Reading file /opt/jans/jans-setup/templates/jetty/jans-auth.xml 11:35:22 06/21/21 Writing file /opt/jans/jans-setup/output/jetty/jans-auth.xml 11:35:22 06/21/21 Copying file /opt/jans/jans-setup/output/jetty/jans-auth.xml to /opt/jans/jetty/jans-auth/webapps 11:35:22 06/21/21 Copied /opt/jans/jans-setup/output/jetty/jans-auth.xml to /opt/jans/jetty/jans-auth/webapps 11:35:22 06/21/21 Running: /bin/chmod +x /opt/dist/scripts/jans-auth 11:35:22 06/21/21 Creating 'jetty.conf' tmpfiles daemon file 11:35:22 06/21/21 Copying file /opt/jans/jans-setup/templates/jetty.conf.tmpfiles.d to /usr/lib/tmpfiles.d/jetty.conf 11:35:22 06/21/21 Copied /opt/jans/jans-setup/templates/jetty.conf.tmpfiles.d to /usr/lib/tmpfiles.d/jetty.conf 11:35:22 06/21/21 Running: /bin/chown root:root /usr/lib/tmpfiles.d/jetty.conf 11:35:22 06/21/21 Running: /bin/chmod 644 /usr/lib/tmpfiles.d/jetty.conf 11:35:22 06/21/21 Copying file /opt/jetty/bin/jetty.sh to /opt/dist/app/jans-auth 11:35:22 06/21/21 Copied /opt/jetty/bin/jetty.sh to /opt/dist/app/jans-auth 11:35:22 06/21/21 Seeting jetty parameter jetty.httpConfig.sendServerVersion=false for service jans-auth 11:35:22 06/21/21 Reading file /opt/jans/jetty/jans-auth/start.ini 11:35:22 06/21/21 Writing file /opt/jans/jetty/jans-auth/start.ini 11:35:22 06/21/21 Running: cp -f /opt/jans/jetty/jans-auth/start.ini /opt/jans/jetty/jans-auth/start.ini.jans-1.0.0-1~ 11:35:22 06/21/21 Copying file /opt/dist/jans/jans-auth.war to /opt/jans/jetty/jans-auth/webapps 11:35:22 06/21/21 Copied /opt/dist/jans/jans-auth.war to /opt/jans/jetty/jans-auth/webapps 11:35:22 06/21/21 Running: /usr/bin/systemctl enable jans-auth 11:35:22 06/21/21 Run: /usr/bin/systemctl enable jans-auth with result code: 0 11:35:22 06/21/21 Copying file /opt/jans/jans-setup/static/auth/lib/duo_web.py to /opt/jans/python/libs 11:35:22 06/21/21 Copied /opt/jans/jans-setup/static/auth/lib/duo_web.py to /opt/jans/python/libs 11:35:22 06/21/21 Copying file /opt/jans/jans-setup/static/auth/conf/duo_creds.json to /etc/certs 11:35:22 06/21/21 Copied /opt/jans/jans-setup/static/auth/conf/duo_creds.json to /etc/certs 11:35:22 06/21/21 Copying file /opt/jans/jans-setup/static/auth/conf/gplus_client_secrets.json to /etc/certs 11:35:22 06/21/21 Copied /opt/jans/jans-setup/static/auth/conf/gplus_client_secrets.json to /etc/certs 11:35:22 06/21/21 Copying file /opt/jans/jans-setup/static/auth/conf/super_gluu_creds.json to /etc/certs 11:35:22 06/21/21 Copied /opt/jans/jans-setup/static/auth/conf/super_gluu_creds.json to /etc/certs 11:35:22 06/21/21 Copying file /opt/jans/jans-setup/static/auth/conf/vericloud_jans_creds.json to /etc/certs 11:35:22 06/21/21 Copied /opt/jans/jans-setup/static/auth/conf/vericloud_jans_creds.json to /etc/certs 11:35:22 06/21/21 Copying file /opt/jans/jans-setup/static/auth/conf/cert_creds.json to /etc/certs 11:35:22 06/21/21 Copied /opt/jans/jans-setup/static/auth/conf/cert_creds.json to /etc/certs 11:35:22 06/21/21 Copying file /opt/jans/jans-setup/static/auth/conf/otp_configuration.json to /etc/certs 11:35:22 06/21/21 Copied /opt/jans/jans-setup/static/auth/conf/otp_configuration.json to /etc/certs 11:35:22 06/21/21 Checking ID for client oxauth_client_id 11:35:22 06/21/21 Searching database for dn ou=clients,o=jans with filter (&amp;(inum=1001.*)(objectClass=jansClnt)) 11:35:22 06/21/21 Client ID for oxauth_client_id was created as 1001.0eda93d4-65d9-456f-888a-92e28f2f12f5 11:35:22 06/21/21 Generating OAuth openid keys 11:35:22 06/21/21 Generating oxAuth OpenID Connect keys 11:35:22 06/21/21 Creating empty JKS keystore 11:35:22 06/21/21 Running: /opt/jre/bin/keytool -genkey -alias dummy -keystore /etc/certs/jans-auth-keys.jks -storepass Gblv8hQoN7U7 -keypass Gblv8hQoN7U7 -dname \"CN=Jans Auth CA Certificates\" 11:35:23 06/21/21 Running: /opt/jre/bin/keytool -delete -alias dummy -keystore /etc/certs/jans-auth-keys.jks -storepass Gblv8hQoN7U7 -keypass Gblv8hQoN7U7 -dname \"CN=Jans Auth CA Certificates\" 11:35:23 06/21/21 Running: /opt/jre/bin/java -Dlog4j.defaultInitOverride=true -cp /opt/dist/jans/jans-auth-client-jar-with-dependencies.jar io.jans.as.client.util.KeyGenerator -keystore /etc/certs/jans-auth-keys.jks -keypasswd Gblv8hQoN7U7 -sig_keys RS256 RS384 RS512 ES256 ES384 ES512 PS256 PS384 PS512 -enc_keys RSA1_5 RSA-OAEP -dnname \"CN=Jans Auth CA Certificates\" -expiration 2 11:35:28 06/21/21 {   \"keys\" : [ {     \"kty\" : \"RSA\",     \"e\" : \"AQAB\",     \"use\" : \"sig\",     \"crv\" : \"\",     \"kid\" : \"be6f1798-c4ee-4666-96d1-94c8b63d9976_sig_rs256\",     \"x5c\" : [ \"MIIDCTCCAfGgAwIBAgIgUGqfwqOT+uiN2J6N1GL9+tO+V4MgIEn0VGPiE0biHZ4wDQYJKoZIhvcNAQELBQAwJDEiMCAGA1UEAwwZSmFucyBBdXRoIENBIENlcnRpZmljYXRlczAeFw0yMTA2MjExMTM1MTRaFw0yMTA2MjMxMTM1MjRaMCQxIjAgBgNVBAMMGUphbnMgQXV0aCBDQSBDZXJ0aWZpY2F0ZXMwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCL3+X2cSGB2HDgR7SM1jB0V43N5Op4KiWgmPXjsnTOFG6iO0l23oc8i1OVBZoauEw8MJMYYDU5iqlr76qHLExfT8n0VdknrdVBOHvoBOvW7p8JsxrZV+Ps9B3zoIdmzTEjDi77CUCfU6lFFmYP/j6nDryic6ea82jjCtk/qJaYfsa8Zy8737tlUuIOrEvzpqqe/MZKVjBi3PN6ea8cxYHksUKYMD5msyx/ALYwOyEUC8oeZBSENmoARrAgDEN5bmstV6V12bHSRkmQIdW5o6PV9Jj3mgpGDY2jZvzlHvvhkK0UolneRVAko1y9VEXa3eHsD/RhEc8Bce4QVPOeXVxRAgMBAAGjJzAlMCMGA1UdJQQcMBoGCCsGAQUFBwMBBggrBgEFBQcDAgYEVR0lADANBgkqhkiG9w0BAQsFAAOCAQEAK5/EorowkxDYUSm0l46WsI9qsG9S2mkcyWSQNuA2QxRVhSYquAFGLo4fwaTK2HFSTwVFc7rLSPyG6o2QQAmLIod0ri5I3KosfUYnX3N11XqGklCdd3H2W8MUSo1g9bzvvTiC8MjT540OW7Szb/r8j6+Z1Cwqpu1xSIDtK0DGU15XOlhNc+UDm6kCc0+43UmHluOc5N4ccpExG9AMaIs9C6n+341z0WYL6Ft7Dv/q6ZIARI2+GqGtTOIpR9tsnfxQjxaJ3VVkcL5t9i644kJ3sZv22Y/m2Qa/qGqiX2OaBvMV58ttoPOb3OHDDaP4zYiuC8r2zUhHJJj8IZzNFkDfdw==\" ],     \"exp\" : 1624448124602,     \"alg\" : \"RS256\",     \"n\" : \"i9_l9nEhgdhw4Ee0jNYwdFeNzeTqeColoJj147J0zhRuojtJdt6HPItTlQWaGrhMPDCTGGA1OYqpa--qhyxMX0_J9FXZJ63VQTh76ATr1u6fCbMa2Vfj7PQd86CHZs0xIw4u-wlAn1OpRRZmD_4-pw68onOnmvNo4wrZP6iWmH7GvGcvO9-7ZVLiDqxL86aqnvzGSlYwYtzzenmvHMWB5LFCmDA-ZrMsfwC2MDshFAvKHmQUhDZqAEawIAxDeW5rLVelddmx0kZJkCHVuaOj1fSY95oKRg2No2b85R774ZCtFKJZ3kVQJKNcvVRF2t3h7A_0YRHPAXHuEFTznl1cUQ\"   }, {     \"kty\" : \"RSA\",     \"e\" : \"AQAB\",     \"use\" : \"sig\",     \"crv\" : \"\",     \"kid\" : \"d3446f8c-631c-4faa-9201-b88e1cf8b3e8_sig_rs384\",     \"x5c\" : [ \"MIIDCTCCAfGgAwIBAgIgS3eTNbw9BjuOg9Qmi4X/vGLhA//kktUO2rWJFZdLnOcwDQYJKoZIhvcNAQEMBQAwJDEiMCAGA1UEAwwZSmFucyBBdXRoIENBIENlcnRpZmljYXRlczAeFw0yMTA2MjExMTM1MTVaFw0yMTA2MjMxMTM1MjRaMCQxIjAgBgNVBAMMGUphbnMgQXV0aCBDQSBDZXJ0aWZpY2F0ZXMwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCzMA5CLIscpiwUZXDSC3rtYrtfON2D5OdSHJvF7HaCDbGw7Emw9nRBM7558SkSo0uVDIVML0ykXuouzfyvwLBRHVhBNpaT2RSGLSlPALdHmT3Vz7O2blVPWBsp6RMLLnhvK60vRGJ98kWbtptbRP9gK7ARPVLzyMqAocPcX15LgXzAihDdmiK3ysSm6N98gwom0oUr1BnKGLmZ4N3MYnV7gE3HN032dgcOfqtuJy8FztfgYONmtQrhP91EUYrIFQhuOM+ltQwrX3klt4CbuPjWp9RJJ+hMwPF6gYne7YaSraXQxAmBHj8vT01XPMjnbpd0me32C5odVuNTbc2/jbQ1AgMBAAGjJzAlMCMGA1UdJQQcMBoGCCsGAQUFBwMBBggrBgEFBQcDAgYEVR0lADANBgkqhkiG9w0BAQwFAAOCAQEAZPRSLj6WMKIdzjTLS476q2wfWmag7E//M/JbzB0rd4ZFow4MARYsf7v4v4awl9waddqp1K/VnAfiUpnqa3udfiyMgKoPcwRtT7wxrP8KUwSM6EgLf5xnp3i0+E/UVyTPGTr5fN3IXw2NCM/a/AEcM4WjTAP9GP4MDhPljs7ljAeCNiGS/ylUzGLsu6bHVAd4TEWx4askhPZFdh18eaBLw/QvPOPaAFprIvTP/7rDLR3Yv/IQgNi3altZOKqA8kUURBJ8QwI2vWmv0kJNyNSMrpRkKz9kGulR7481oigocmlsBOH15BxP8xEJxHEPdwSmnj06dz6avgwlHUkdHZ+kCQ==\" ],     \"exp\" : 1624448124602,     \"alg\" : \"RS384\",     \"n\" : \"szAOQiyLHKYsFGVw0gt67WK7Xzjdg-TnUhybxex2gg2xsOxJsPZ0QTO-efEpEqNLlQyFTC9MpF7qLs38r8CwUR1YQTaWk9kUhi0pTwC3R5k91c-ztm5VT1gbKekTCy54byutL0RiffJFm7abW0T_YCuwET1S88jKgKHD3F9eS4F8wIoQ3Zoit8rEpujffIMKJtKFK9QZyhi5meDdzGJ1e4BNxzdN9nYHDn6rbicvBc7X4GDjZrUK4T_dRFGKyBUIbjjPpbUMK195JbeAm7j41qfUSSfoTMDxeoGJ3u2Gkq2l0MQJgR4_L09NVzzI526XdJnt9guaHVbjU23Nv420NQ\"   }, {     \"kty\" : \"RSA\",     \"e\" : \"AQAB\",     \"use\" : \"sig\",     \"crv\" : \"\",     \"kid\" : \"347d188f-373d-45f4-a01f-f2340d8542c0_sig_rs512\",     \"x5c\" : [ \"MIIDCjCCAfKgAwIBAgIhAI1d0gC+QMhGqOm3XL6qHqTTT+d/rFhqgTfXTtTwXrg4MA0GCSqGSIb3DQEBDQUAMCQxIjAgBgNVBAMMGUphbnMgQXV0aCBDQSBDZXJ0aWZpY2F0ZXMwHhcNMjEwNjIxMTEzNTE2WhcNMjEwNjIzMTEzNTI0WjAkMSIwIAYDVQQDDBlKYW5zIEF1dGggQ0EgQ2VydGlmaWNhdGVzMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAzKpmC4KzNYhmM4ul++hp7rRLPGN/oUjBV76iu5DM+MD5IL5A5LteuFK6U9WbFxjCQKlTLt53G4xFjoYIQlt1FXmal+tlgVB9SvrNQkNptRzyN2ikboSO7ajJfytavHleZTnepygCoQU1ymYXhOsj8wg65dCB29fu/cOKU4KNmyeGPqGX6+sz33Qi47ge4WMuM2UkIBjG9v0UwW7gTsIGDUjViXM1x6QeQVPNfvmJayYZxKodOyVCd+jsFhRDp9xiN1uQqhWbhNQZfu+sPHScdWEOXMmITu0YD7yD2c4oUGB3/hIh4nFqrTBtGg8h5f5a65y471W8K5rTOqyjjaKRPwIDAQABoycwJTAjBgNVHSUEHDAaBggrBgEFBQcDAQYIKwYBBQUHAwIGBFUdJQAwDQYJKoZIhvcNAQENBQADggEBAEOF37tzSk74eIqYx42+1VPIcj1q7dfJ7N66eSWPBLfcDMm8RSb57zL6yqH7DHD5OT+TUf6bvjxnT/+V7nf3wqmEXmngCDlvEZ/17vMv4AzHggSPbR4DQlLAjWOpS4PEeJbxKg2/4if7Q6VluuhahQQNPHzh3nBbJ8s90AHxi4C31G01t4hcXa7jEsy5pYcPnDx1P/ogxMDtuLk+FNcVqm9AUU27h63M/h5lcE952tX1BcoBroQx/dGsWMa517yoRJEkbHEQABaCOXTaSXlvDPqwZo39f6X6FGmiMx15QV+WVLbJ0MVAvRr6FbxetzphprxkpE7mcOOOx6RsuGmxtQQ=\" ],     \"exp\" : 1624448124602,     \"alg\" : \"RS512\",     \"n\" : \"zKpmC4KzNYhmM4ul--hp7rRLPGN_oUjBV76iu5DM-MD5IL5A5LteuFK6U9WbFxjCQKlTLt53G4xFjoYIQlt1FXmal-tlgVB9SvrNQkNptRzyN2ikboSO7ajJfytavHleZTnepygCoQU1ymYXhOsj8wg65dCB29fu_cOKU4KNmyeGPqGX6-sz33Qi47ge4WMuM2UkIBjG9v0UwW7gTsIGDUjViXM1x6QeQVPNfvmJayYZxKodOyVCd-jsFhRDp9xiN1uQqhWbhNQZfu-sPHScdWEOXMmITu0YD7yD2c4oUGB3_hIh4nFqrTBtGg8h5f5a65y471W8K5rTOqyjjaKRPw\"   }, {     \"kty\" : \"EC\",     \"use\" : \"sig\",     \"crv\" : \"P-256\",     \"kid\" : \"e9f259dd-0020-424a-8653-36186e84b938_sig_es256\",     \"x5c\" : [ \"MIIBfTCCASOgAwIBAgIgApEkB3oY3Zw5hcPOJj40rjxMxujNVB8Mkz/7MSyyIz4wCgYIKoZIzj0EAwIwJDEiMCAGA1UEAwwZSmFucyBBdXRoIENBIENlcnRpZmljYXRlczAeFw0yMTA2MjExMTM1MTZaFw0yMTA2MjMxMTM1MjRaMCQxIjAgBgNVBAMMGUphbnMgQXV0aCBDQSBDZXJ0aWZpY2F0ZXMwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNCAARgL6oKEKf5NCAIWtvOegvhS4XAdxuKLLGosACMWV6tFb+Vjp5R7XSjks2/8rTJUEXkefT+Nem4AO5uUANDGFIPoycwJTAjBgNVHSUEHDAaBggrBgEFBQcDAQYIKwYBBQUHAwIGBFUdJQAwCgYIKoZIzj0EAwIDSAAwRQIhAITLXgBgx0VZuZvFHpfIcAPdwWcxX7MZRvqyYZ/qxEjkAiAD+s6KKx5aDUf4qC5/yLRClABLRhTsF2DcBcom1rr2AA==\" ],     \"x\" : \"YC-qChCn-TQgCFrbznoL4UuFwHcbiiyxqLAAjFlerRU\",     \"y\" : \"AL-Vjp5R7XSjks2_8rTJUEXkefT-Nem4AO5uUANDGFIP\",     \"exp\" : 1624448124602,     \"alg\" : \"ES256\"   }, {     \"kty\" : \"EC\",     \"use\" : \"sig\",     \"crv\" : \"P-384\",     \"kid\" : \"425ea5da-d3ba-4d79-a3a8-3b848c598163_sig_es384\",     \"x5c\" : [ \"MIIBujCCAUCgAwIBAgIgDU/Ae1sy6CLuTsKjwx7eBFF43lf94+1FIW7ScbQkq14wCgYIKoZIzj0EAwMwJDEiMCAGA1UEAwwZSmFucyBBdXRoIENBIENlcnRpZmljYXRlczAeFw0yMTA2MjExMTM1MTZaFw0yMTA2MjMxMTM1MjRaMCQxIjAgBgNVBAMMGUphbnMgQXV0aCBDQSBDZXJ0aWZpY2F0ZXMwdjAQBgcqhkjOPQIBBgUrgQQAIgNiAATdN4T4EUDHruouBmc8E1BXdSu2t4LXnph+zF62Sv/MPF5mnYXljQWkyzp7OQntqpvaIceQBLWxYQq83rX69LwJ2DhzrIORHtBTElAGyMWaWiUHmua0jhuQpdlpqFlcS5+jJzAlMCMGA1UdJQQcMBoGCCsGAQUFBwMBBggrBgEFBQcDAgYEVR0lADAKBggqhkjOPQQDAwNoADBlAjACjwTsOOQjBqRNYSLFX9lPf12/gssSY0xsxJhxcm4EeN07qTzVW8uMu7+yUzNSbq0CMQCJtva13VryEsZ2eKyp26YTQ5fLbikhtWBOL4UNPq+5ZsW5GtxLjfnG4221vdpM6Xc=\" ],     \"x\" : \"AN03hPgRQMeu6i4GZzwTUFd1K7a3gteemH7MXrZK_8w8XmadheWNBaTLOns5Ce2qmw\",     \"y\" : \"ANohx5AEtbFhCrzetfr0vAnYOHOsg5Ee0FMSUAbIxZpaJQea5rSOG5Cl2WmoWVxLnw\",     \"exp\" : 1624448124602,     \"alg\" : \"ES384\"   }, {     \"kty\" : \"EC\",     \"use\" : \"sig\",     \"crv\" : \"P-521\",     \"kid\" : \"c468ea93-393b-4846-a8e2-e48f173a5db4_sig_es512\",     \"x5c\" : [ \"MIICBTCCAWegAwIBAgIhAMpGwf4XI7l3Sy8p648/Xy3oAt4wo3cHRA3hJCRzHdVSMAoGCCqGSM49BAMEMCQxIjAgBgNVBAMMGUphbnMgQXV0aCBDQSBDZXJ0aWZpY2F0ZXMwHhcNMjEwNjIxMTEzNTE2WhcNMjEwNjIzMTEzNTI0WjAkMSIwIAYDVQQDDBlKYW5zIEF1dGggQ0EgQ2VydGlmaWNhdGVzMIGbMBAGByqGSM49AgEGBSuBBAAjA4GGAAQBll7Ra+QqAce/sIhU2kJP9Bbn8bMo6JYy1f7qjXlmb89ODrcOneTUmE7iDBa+oIfMYm7CNH2K4cfJNXm2mPFRQi8AwLEPAdgv6VTXcqD1EU21YP/rSSacsv1d/X6jg/Ee5tlsm5sRE+2E7WHk22yQgORT2ORLwuZbGBqBBbMObUIyMBKjJzAlMCMGA1UdJQQcMBoGCCsGAQUFBwMBBggrBgEFBQcDAgYEVR0lADAKBggqhkjOPQQDBAOBiwAwgYcCQgDm8r/D1kSDog8sua8qDb/wAi5/f+dTJ7H4EMwdc+9JLiVkg5zakj+/D3xjS9h2TyYpiEb0qzZ5Gqbu/Vih3JICeQJBYoUAvqLCIJDOgjfbjW5UzCLed356ffd4Qjmk1D5RparwybuRX3E58mdAmAPHBQq3zTcNPVB4HgxIPT97eMrA+Wg=\" ],     \"x\" : \"AZZe0WvkKgHHv7CIVNpCT_QW5_GzKOiWMtX-6o15Zm_PTg63Dp3k1JhO4gwWvqCHzGJuwjR9iuHHyTV5tpjxUUIv\",     \"y\" : \"AMCxDwHYL-lU13Kg9RFNtWD_60kmnLL9Xf1-o4PxHubZbJubERPthO1h5NtskIDkU9jkS8LmWxgagQWzDm1CMjAS\",     \"exp\" : 1624448124602,     \"alg\" : \"ES512\"   }, {     \"kty\" : \"RSA\",     \"e\" : \"AQAB\",     \"use\" : \"sig\",     \"crv\" : \"\",     \"kid\" : \"dfa48be5-3fa2-44ba-83ca-a528dbf7eee1_sig_ps256\",     \"x5c\" : [ \"MIIDcTCCAiWgAwIBAgIgDgMVuuoR7STMKXG5yWwJSS4yGMQ0bclXJL7glNI4MxswQQYJKoZIhvcNAQEKMDSgDzANBglghkgBZQMEAgEFAKEcMBoGCSqGSIb3DQEBCDANBglghkgBZQMEAgEFAKIDAgEgMCQxIjAgBgNVBAMMGUphbnMgQXV0aCBDQSBDZXJ0aWZpY2F0ZXMwHhcNMjEwNjIxMTEzNTE3WhcNMjEwNjIzMTEzNTI0WjAkMSIwIAYDVQQDDBlKYW5zIEF1dGggQ0EgQ2VydGlmaWNhdGVzMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAtXkp4jVfR48RtW7CEo9b9pYXHjeMsCvgPPSlmEOvk7kqtu3wBf3haTkty1qABncvW358RuZILKIHpS969kTbnYwAIbWR3NzUK49GOM+w8nUmq7a6N3vP/AofmLowlAj2oxzwIn4sZHFVDqGKXg3C+eUuGTHK0p5llbnJIpiERr+6DwjjljGSTBtYNz334bf5+VYB9i8yNzTEkW2+4xyOvjmtfP9RwWllEMWon1RXkRlUCcVzgKOhohnl2vmK4BJUWJ/mKAprQgqlIOe/jOCs1UYnIn049Q7JNdseptiFCE+aunWEUzJPTTd+b70lzG8LnGO2vYAHhmou945JcCGTZQIDAQABoycwJTAjBgNVHSUEHDAaBggrBgEFBQcDAQYIKwYBBQUHAwIGBFUdJQAwQQYJKoZIhvcNAQEKMDSgDzANBglghkgBZQMEAgEFAKEcMBoGCSqGSIb3DQEBCDANBglghkgBZQMEAgEFAKIDAgEgA4IBAQAiDo2kyZP3TQ+y1iWBbVSEV/Dk4zbdLvMcj5S5XH2TBv1mtUtfeYXTHijUva5OlnEoPHO2Z071tpK2uFkhDnNCOskjZrMEGwAe2v/O6pwCjcF2KDA21CD3/6tMEuBQtL0pfs4VEGGg7lakWx4hg12l39KBh0JEEZwUZ9iSnIbDzOVF213pmRi9Ro0T+RbfnZ9Ct/5ho24Cd3I8dpg5rtBzE9TMAO/DbLX36dd1tQCSSawbbXGKeJ2ETSIMf3fPQxRsS8dKF6GXI6RNmJ4vekgw9FLRGtevonlLrzrxa1kfvF5dcOQqoQISNKaTP9JZFCP6via/m0g95XIIZL01C0Zy\" ],     \"exp\" : 1624448124602,     \"alg\" : \"PS256\",     \"n\" : \"tXkp4jVfR48RtW7CEo9b9pYXHjeMsCvgPPSlmEOvk7kqtu3wBf3haTkty1qABncvW358RuZILKIHpS969kTbnYwAIbWR3NzUK49GOM-w8nUmq7a6N3vP_AofmLowlAj2oxzwIn4sZHFVDqGKXg3C-eUuGTHK0p5llbnJIpiERr-6DwjjljGSTBtYNz334bf5-VYB9i8yNzTEkW2-4xyOvjmtfP9RwWllEMWon1RXkRlUCcVzgKOhohnl2vmK4BJUWJ_mKAprQgqlIOe_jOCs1UYnIn049Q7JNdseptiFCE-aunWEUzJPTTd-b70lzG8LnGO2vYAHhmou945JcCGTZQ\"   }, {     \"kty\" : \"RSA\",     \"e\" : \"AQAB\",     \"use\" : \"sig\",     \"crv\" : \"\",     \"kid\" : \"2cab0f42-13c0-4d04-9570-3856245b7845_sig_ps384\",     \"x5c\" : [ \"MIIDcTCCAiWgAwIBAgIgRU1KLGepGaIrJrFuUmkooBc3Sv9yRSKfHLxqiT82pZ0wQQYJKoZIhvcNAQEKMDSgDzANBglghkgBZQMEAgIFAKEcMBoGCSqGSIb3DQEBCDANBglghkgBZQMEAgIFAKIDAgEwMCQxIjAgBgNVBAMMGUphbnMgQXV0aCBDQSBDZXJ0aWZpY2F0ZXMwHhcNMjEwNjIxMTEzNTE3WhcNMjEwNjIzMTEzNTI0WjAkMSIwIAYDVQQDDBlKYW5zIEF1dGggQ0EgQ2VydGlmaWNhdGVzMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAwoDWlAtmUJ5bRnW7rV6+8s36fB2Yyppm7JLI9pQ/32pfMtE0D367R+SpGBgLrWnJng2Z/lzMcrvzqtlapLuCzff1WarDl5y40m7kSZ9VEpIiyPgkerprshBuB8c1Lebx46afeJNkiKiNbullWzJi+Oru+fdNII1N95ktjP2h47pv5U4KHgvW7cKItGEOcKqBw0x+9aMUvMixwjb6FiuuuKevDOL1Notnh+ILTnnUqXpSslK+85IoeEzlUM1pcm5CH3R/1DZVUXLwesi1poiQp2o4G01OdfkVE4EpWfI83v7T3yHjsjbO6PqcHlerKxjbeT49sZ4HwQvV068goPIRTwIDAQABoycwJTAjBgNVHSUEHDAaBggrBgEFBQcDAQYIKwYBBQUHAwIGBFUdJQAwQQYJKoZIhvcNAQEKMDSgDzANBglghkgBZQMEAgIFAKEcMBoGCSqGSIb3DQEBCDANBglghkgBZQMEAgIFAKIDAgEwA4IBAQAuhqAeTjZ8CIWLMxuBj2pXw20mS4XpI1Am4ByBcdsLbvW5tlHi692pooGWIRFJqTwpDwFPtNM0rf6P4cFRBmzjdJpskas+H91Rd3hswSMvzNb1WBZWpjYFwJTfHRof8+slQRQa+yk8KpYGUuZ7d5aFRczWkojAaPnm8Xf5I2vlNCN/+5Ghlowp+xWr35W1VgQgljZcrXQY//dGClI93vy3kMHYBWHEBUX14vIpE+PNUKyJZgcfbwgfcwpgX4YImSxCEdshVhJlYKP+CbxQiC4WOW9LaIjj4EiMh41vrKEGKeO7Mmoj7RmTvKwzZNyaA4KxFjyYTZPX3dLtUwQ5s08b\" ],     \"exp\" : 1624448124602,     \"alg\" : \"PS384\",     \"n\" : \"woDWlAtmUJ5bRnW7rV6-8s36fB2Yyppm7JLI9pQ_32pfMtE0D367R-SpGBgLrWnJng2Z_lzMcrvzqtlapLuCzff1WarDl5y40m7kSZ9VEpIiyPgkerprshBuB8c1Lebx46afeJNkiKiNbullWzJi-Oru-fdNII1N95ktjP2h47pv5U4KHgvW7cKItGEOcKqBw0x-9aMUvMixwjb6FiuuuKevDOL1Notnh-ILTnnUqXpSslK-85IoeEzlUM1pcm5CH3R_1DZVUXLwesi1poiQp2o4G01OdfkVE4EpWfI83v7T3yHjsjbO6PqcHlerKxjbeT49sZ4HwQvV068goPIRTw\"   }, {     \"kty\" : \"RSA\",     \"e\" : \"AQAB\",     \"use\" : \"sig\",     \"crv\" : \"\",     \"kid\" : \"b58649e2-3b4c-489a-96da-bf6a40413133_sig_ps512\",     \"x5c\" : [ \"MIIDcTCCAiWgAwIBAgIgLSP1zTFOnL24KN7yogmcMB/KRferymSvPrbhgjp1xsowQQYJKoZIhvcNAQEKMDSgDzANBglghkgBZQMEAgMFAKEcMBoGCSqGSIb3DQEBCDANBglghkgBZQMEAgMFAKIDAgFAMCQxIjAgBgNVBAMMGUphbnMgQXV0aCBDQSBDZXJ0aWZpY2F0ZXMwHhcNMjEwNjIxMTEzNTE4WhcNMjEwNjIzMTEzNTI0WjAkMSIwIAYDVQQDDBlKYW5zIEF1dGggQ0EgQ2VydGlmaWNhdGVzMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAvel84rjWHiW/pE27/KFB0U61g5YqyfNp7WPTh0YCPb/fHl1+A0BHKeGmtewJMwwcqVIYuLLr1b+rcykbkOEf4/sPpQcuoX7DCcFP5LhxH7cERH7JyV2JVgCDTN+LIxe9R15uMyFkCmE2zdnvqaLRic/Pv7Ke2Thv+ydMDk7YI6AsnpelXIzKjeQs8Cq8SWde0y9hHSFeY0RRy2dF4qcsu45B5XDIXe6TBjSIQmidtMPrpCEiNGN8sjUNzLbMi8ou/v6SiyABosKxITV5fT3KscYofX6eRGvYlwVYA2naqKv49cCNTt2gmbcfporBX8we6DMJ9YbGBjmoo/skfcxvuwIDAQABoycwJTAjBgNVHSUEHDAaBggrBgEFBQcDAQYIKwYBBQUHAwIGBFUdJQAwQQYJKoZIhvcNAQEKMDSgDzANBglghkgBZQMEAgMFAKEcMBoGCSqGSIb3DQEBCDANBglghkgBZQMEAgMFAKIDAgFAA4IBAQAk/y0IBh1TjSRXl9WWtAPEhKgKvGOFH5gw65yshk9F8EP+tEG+6UN+/3YJJxkYvun3Ln8BPBY+R8In4rL1WtJ1D3D/yYBi064z2bPqyOcjDuqaPAibfPi9KfRFnAHnEORxuJ+GL1ROG13SxmZR0Sonl+cLiuKVPuO5S40YSFumNmzzBtHfOZKSewwaoMp8tFcQrpCryNhc0obxKFyRUBdtJRb2uxWqY32BrkFOX8q9ZCNW1CEnLXj4wOZ1vOAzBTEnd9FvJP3VtEB/BZHxHESbifXMoHZBJ+8/d7rnylstHcU355eH4b+Wu9grcNkADIgaLRtWlzKAJYmauBwS1maq\" ],     \"exp\" : 1624448124602,     \"alg\" : \"PS512\",     \"n\" : \"vel84rjWHiW_pE27_KFB0U61g5YqyfNp7WPTh0YCPb_fHl1-A0BHKeGmtewJMwwcqVIYuLLr1b-rcykbkOEf4_sPpQcuoX7DCcFP5LhxH7cERH7JyV2JVgCDTN-LIxe9R15uMyFkCmE2zdnvqaLRic_Pv7Ke2Thv-ydMDk7YI6AsnpelXIzKjeQs8Cq8SWde0y9hHSFeY0RRy2dF4qcsu45B5XDIXe6TBjSIQmidtMPrpCEiNGN8sjUNzLbMi8ou_v6SiyABosKxITV5fT3KscYofX6eRGvYlwVYA2naqKv49cCNTt2gmbcfporBX8we6DMJ9YbGBjmoo_skfcxvuw\"   }, {     \"kty\" : \"RSA\",     \"e\" : \"AQAB\",     \"use\" : \"enc\",     \"crv\" : \"\",     \"kid\" : \"c1f2deb0-f069-47fb-b908-1376f1465316_enc_rsa1_5\",     \"x5c\" : [ \"MIIDCjCCAfKgAwIBAgIhAOUJKq/Zc6rVTVB//Fa3Rb0br3H9wKvre8TFFNf3b7GxMA0GCSqGSIb3DQEBCwUAMCQxIjAgBgNVBAMMGUphbnMgQXV0aCBDQSBDZXJ0aWZpY2F0ZXMwHhcNMjEwNjIxMTEzNTE4WhcNMjEwNjIzMTEzNTI0WjAkMSIwIAYDVQQDDBlKYW5zIEF1dGggQ0EgQ2VydGlmaWNhdGVzMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAz5aYNLRwNlmnp1ssv541Wc3Ma602Op/BvXFUcqARDccQC1pz0AHy0kUnqEPiZRr664QB0UgLWpxkf4OdZ6teOCz/v9aCKWPA079grPxbJEux5gRQ37KVGgmmBEAgPI5HnUHQvBNVRnI2B79QvTFpLlMr5oPSdZPVIz56+TcyzKlNzD25uqwOYnVMJyLozL80dJrRBcwYR0E4Ab+W01bFg1RPm3i7UBHLfVVWyMBIkM+xrW0aR46gDFZw/prQF/HOY/NqRHG1uHmuDkQXpDOSMaS5T6lytkFZod8cKH0fyxTQjon9pS4nanSQwVpNZuMEMLuUvXbJvnZg4wLyRblMNwIDAQABoycwJTAjBgNVHSUEHDAaBggrBgEFBQcDAQYIKwYBBQUHAwIGBFUdJQAwDQYJKoZIhvcNAQELBQADggEBAA7JVgfplAKshPvYZd++kE+NxUSiiN/gK7VsEDv6CA9fQ4tmGrOykdcuWiLt3JBGlz72KFmVmW0TPh32EynoVr98U+haD6o4IXt/itrxibF6Joa38fwEWwsAYVe55owq2Brfel7uj2nq1AbQI//tfzI+VCgqBytWyT+9WvYQhVwew0O/o6gv9Qo4IJ1+apHuc9/w8EEEZvUz+5yAq0im9vzeTnf0U4LIXPes10qzvlJuInE7QfZkmUWGQoyNqssfNpObMyc/mPAuynCuXWWCTFxtxt7mSgcLBTzMdB0hcwKwmqmROvZE3eOdQbY610xETgwroLyR6rHQTigOECGY+ns=\" ],     \"exp\" : 1624448124602,     \"alg\" : \"RSA1_5\",     \"n\" : \"z5aYNLRwNlmnp1ssv541Wc3Ma602Op_BvXFUcqARDccQC1pz0AHy0kUnqEPiZRr664QB0UgLWpxkf4OdZ6teOCz_v9aCKWPA079grPxbJEux5gRQ37KVGgmmBEAgPI5HnUHQvBNVRnI2B79QvTFpLlMr5oPSdZPVIz56-TcyzKlNzD25uqwOYnVMJyLozL80dJrRBcwYR0E4Ab-W01bFg1RPm3i7UBHLfVVWyMBIkM-xrW0aR46gDFZw_prQF_HOY_NqRHG1uHmuDkQXpDOSMaS5T6lytkFZod8cKH0fyxTQjon9pS4nanSQwVpNZuMEMLuUvXbJvnZg4wLyRblMNw\"   }, {     \"kty\" : \"RSA\",     \"e\" : \"AQAB\",     \"use\" : \"enc\",     \"crv\" : \"\",     \"kid\" : \"af20de92-1e39-4680-b56e-c383d69ec900_enc_rsa-oaep\",     \"x5c\" : [ \"MIIDCjCCAfKgAwIBAgIhAJ1X7MPmJS3kHq0T6r+SZefM6qyUz7lxg/oYZqE72tSIMA0GCSqGSIb3DQEBCwUAMCQxIjAgBgNVBAMMGUphbnMgQXV0aCBDQSBDZXJ0aWZpY2F0ZXMwHhcNMjEwNjIxMTEzNTE4WhcNMjEwNjIzMTEzNTI0WjAkMSIwIAYDVQQDDBlKYW5zIEF1dGggQ0EgQ2VydGlmaWNhdGVzMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAu2qkEacXwFCYnUu9BZF0vGExpOcFJt4Z3bQzRfO/MVuo927nfBRNXWjXxZYV91RaH0CRpKMMgr80K7MmbcUDj0utXbhPd5au7mL0+v1ops0qkK58GgnIkB+ibNWMBJIQCWfKUp5BIe1C7zc+hgsbYln+ewwDDQ+WASrSUJ0P+2wz9uLUEUzjFtcXS8YSvNHPui4QZ2lKik7wRZZeKnnYil2578acaBdrOIeFEVZv1/J2wfXdGfZ/BBAXt+DN3mJkxkLYIvfMNnUxtEDAqrjx8imnphLGVaQZG+ZVIQcf4de0f4QR0mnoLlFk1N9Y+RSnD6iBAjeZS2dpMEFRV0d3EQIDAQABoycwJTAjBgNVHSUEHDAaBggrBgEFBQcDAQYIKwYBBQUHAwIGBFUdJQAwDQYJKoZIhvcNAQELBQADggEBALpI3vQOMjRGC7Xeo3hwwRUXfR346LGEWtfMXEkrQWo7DIebM6IDhuSCkQ3EezDwar6mkIoW2lToEAbRMZnC6zBGg8fIWKzqjuNL/0vE3lS3+E1f8aFt6IIcpou4irk+jjnterTGA9FhFKmHQk2QzhBjQc2CkBNib4h3qVaxTmYiZSXBpSXWk2+p+AYKxOGF5h4DCGyOyykDH9FBC1dnKcbn0nP6KBBzd3L8Wx7LWoBbWE8nqBTF2/XvekEz+mMRERHMYKFyDcDhC1gbEUELGgbi6O9AcwADeheK5ySUPE15q5RzRSBagfeFoEJ2goBrRxRAFwq1lSGkkPvnLRiuaYQ=\" ],     \"exp\" : 1624448124602,     \"alg\" : \"RSA-OAEP\",     \"n\" : \"u2qkEacXwFCYnUu9BZF0vGExpOcFJt4Z3bQzRfO_MVuo927nfBRNXWjXxZYV91RaH0CRpKMMgr80K7MmbcUDj0utXbhPd5au7mL0-v1ops0qkK58GgnIkB-ibNWMBJIQCWfKUp5BIe1C7zc-hgsbYln-ewwDDQ-WASrSUJ0P-2wz9uLUEUzjFtcXS8YSvNHPui4QZ2lKik7wRZZeKnnYil2578acaBdrOIeFEVZv1_J2wfXdGfZ_BBAXt-DN3mJkxkLYIvfMNnUxtEDAqrjx8imnphLGVaQZG-ZVIQcf4de0f4QR0mnoLlFk1N9Y-RSnD6iBAjeZS2dpMEFRV0d3EQ\"   } ] }</p> <p>11:35:28 06/21/21 Writing oxAuth OpenID Connect keys 11:35:28 06/21/21 Writing file /opt/jans/jans-setup/output/jans-auth/jans-auth-keys.json 11:35:28 06/21/21 Running: /bin/mkdir -p /opt/jans/jans-setup/output/jans-auth 11:35:28 06/21/21 Running: /bin/chown jetty:jetty /opt/jans/jans-setup/output/jans-auth/jans-auth-keys.json 11:35:28 06/21/21 Running: /bin/chmod 600 /opt/jans/jans-setup/output/jans-auth/jans-auth-keys.json 11:35:28 06/21/21 Wrote oxAuth OpenID Connect key to /opt/jans/jans-setup/output/jans-auth/jans-auth-keys.json 11:35:28 06/21/21 Rendering template /opt/jans/jans-setup/templates/jans-auth/jans-auth-config.json 11:35:28 06/21/21 Reading file /opt/jans/jans-setup/templates/jans-auth/jans-auth-config.json 11:35:28 06/21/21 Writing file /opt/jans/jans-setup/output/jans-auth/jans-auth-config.json 11:35:28 06/21/21 Rendering template /opt/jans/jans-setup/templates/jans-auth/people.ldif 11:35:28 06/21/21 Reading file /opt/jans/jans-setup/templates/jans-auth/people.ldif 11:35:28 06/21/21 Writing file /opt/jans/jans-setup/output/jans-auth/people.ldif 11:35:28 06/21/21 Rendering template /opt/jans/jans-setup/templates/jans-auth/groups.ldif 11:35:28 06/21/21 Reading file /opt/jans/jans-setup/templates/jans-auth/groups.ldif 11:35:28 06/21/21 Writing file /opt/jans/jans-setup/output/jans-auth/groups.ldif 11:35:28 06/21/21 Loading file /opt/jans/jans-setup/output/jans-auth/jans-auth-config.json 11:35:28 06/21/21 Reading file /opt/jans/jans-setup/output/jans-auth/jans-auth-config.json 11:35:28 06/21/21 Loading file /opt/jans/jans-setup/templates/jans-auth/jans-auth-static-conf.json 11:35:28 06/21/21 Reading file /opt/jans/jans-setup/templates/jans-auth/jans-auth-static-conf.json 11:35:28 06/21/21 Loading file /opt/jans/jans-setup/templates/jans-auth/jans-auth-errors.json 11:35:28 06/21/21 Reading file /opt/jans/jans-setup/templates/jans-auth/jans-auth-errors.json 11:35:28 06/21/21 Loading file /opt/jans/jans-setup/output/jans-auth/jans-auth-keys.json 11:35:28 06/21/21 Reading file /opt/jans/jans-setup/output/jans-auth/jans-auth-keys.json 11:35:28 06/21/21 Rendering template /opt/jans/jans-setup/templates/scripts.ldif 11:35:28 06/21/21 Reading file /opt/jans/jans-setup/templates/scripts.ldif 11:35:28 06/21/21 Writing file /opt/jans/jans-setup/output/scripts.ldif 11:35:28 06/21/21 Rendering template /opt/jans/jans-setup/templates/jans-auth/configuration.ldif 11:35:28 06/21/21 Reading file /opt/jans/jans-setup/templates/jans-auth/configuration.ldif 11:35:28 06/21/21 Writing file /opt/jans/jans-setup/output/jans-auth/configuration.ldif 11:35:28 06/21/21 Rendering template /opt/jans/jans-setup/templates/jans-auth/clients.ldif 11:35:28 06/21/21 Reading file /opt/jans/jans-setup/templates/jans-auth/clients.ldif 11:35:28 06/21/21 Writing file /opt/jans/jans-setup/output/jans-auth/clients.ldif 11:35:28 06/21/21 Importing ldif file(s): /opt/jans/jans-setup/output/jans-auth/configuration.ldif, /opt/jans/jans-setup/output/jans-auth/clients.ldif, /opt/jans/jans-setup/output/scripts.ldif, /opt/jans/jans-setup/output/jans-auth/people.ldif, /opt/jans/jans-setup/output/jans-auth/groups.ldif  11:35:28 06/21/21 Importing entries from /opt/jans/jans-setup/output/jans-auth/configuration.ldif 11:35:28 06/21/21 Querying LDAP for dn ou=jans-auth,ou=configuration,o=jans 11:35:28 06/21/21 Adding LDAP dn:ou=jans-auth,ou=configuration,o=jans entry:{'jansConfDyn': ['{\\n    \"issuer\":\"https://test.dd.jans.io\",\\n    \"baseEndpoint\":\"https://test.dd.jans.io/jans-auth/restv1\",\\n    \"authorizationEndpoint\":\"https://test.dd.jans.io/jans-auth/restv1/authorize\",\\n    \"tokenEndpoint\":\"https://test.dd.jans.io/jans-auth/restv1/token\",\\n    \"tokenRevocationEndpoint\": \"https://test.dd.jans.io/jans-auth/restv1/revoke\",\\n    \"userInfoEndpoint\":\"https://test.dd.jans.io/jans-auth/restv1/userinfo\",\\n    \"clientInfoEndpoint\":\"https://test.dd.jans.io/jans-auth/restv1/clientinfo\",\\n    \"checkSessionIFrame\":\"https://test.dd.jans.io/jans-auth/opiframe.htm\",\\n    \"endSessionEndpoint\":\"https://test.dd.jans.io/jans-auth/restv1/end_session\",\\n    \"jwksUri\":\"https://test.dd.jans.io/jans-auth/restv1/jwks\",\\n    \"registrationEndpoint\":\"https://test.dd.jans.io/jans-auth/restv1/register\",\\n    \"openIdDiscoveryEndpoint\":\"https://test.dd.jans.io/.well-known/webfinger\",\\n    \"openIdConfigurationEndpoint\":\"https://test.dd.jans.io/.well-known/openid-configuration\",\\n    \"idGenerationEndpoint\":\"https://test.dd.jans.io/jans-auth/restv1/id\",\\n    \"introspectionEndpoint\":\"https://test.dd.jans.io/jans-auth/restv1/introspection\",\\n    \"umaConfigurationEndpoint\":\"https://test.dd.jans.io/jans-auth/restv1/uma2-configuration\",\\n    \"sectorIdentifierEndpoint\":\"https://test.dd.jans.io/jans-auth/sectoridentifier\",\\n    \"oxElevenGenerateKeyEndpoint\":\"https://test.dd.jans.io/oxeleven/rest/oxeleven/generateKey\",\\n    \"oxElevenSignEndpoint\":\"https://test.dd.jans.io/oxeleven/rest/oxeleven/sign\",\\n    \"oxElevenVerifySignatureEndpoint\":\"https://test.dd.jans.io/oxeleven/rest/oxeleven/verifySignature\",\\n    \"oxElevenDeleteKeyEndpoint\":\"https://test.dd.jans.io/oxeleven/rest/oxeleven/deleteKey\",\\n    \"oxElevenJwksEndpoint\":\"https://test.dd.jans.io/oxeleven/rest/oxeleven/jwks\",\\n    \"backchannelAuthenticationEndpoint\":\"https://test.dd.jans.io/jans-auth/restv1/bc-authorize\",\\n    \"backchannelDeviceRegistrationEndpoint\":\"https://test.dd.jans.io/jans-auth/restv1/bc-deviceRegistration\",\\n    \"deviceAuthzEndpoint\":\"https://test.dd.jans.io/jans-auth/restv1/device_authorization\",\\n    \"openidSubAttribute\":\"inum\",\\n    \"responseTypesSupported\":[\\n        [\"code\"],\\n        [\"code\", \"id_token\"],\\n        [\"token\"],\\n        [\"token\", \"id_token\"],\\n        [\"code\", \"token\"],\\n        [\"code\", \"token\", \"id_token\"],\\n        [\"id_token\"]\\n    ],\\n    \"responseModesSupported\":[\\n        \"query\",\\n        \"fragment\",\\n        \"form_post\"\\n    ],\\n    \"grantTypesSupported\":[\\n        \"authorization_code\",\\n        \"implicit\",\\n        \"password\",\\n        \"client_credentials\",\\n        \"refresh_token\",\\n        \"urn:ietf:params:oauth:grant-type:uma-ticket\",\\n        \"urn:ietf:params:oauth:grant-type:device_code\"\\n    ],\\n    \"subjectTypesSupported\":[\\n        \"public\",\\n        \"pairwise\"\\n    ],\\n    \"defaultSubjectType\": \"pairwise\",\\n    \"userInfoSigningAlgValuesSupported\":[\\n        \"HS256\",\\n        \"HS384\",\\n        \"HS512\",\\n        \"RS256\",\\n        \"RS384\",\\n        \"RS512\",\\n        \"ES256\",\\n        \"ES384\",\\n        \"ES512\"\\n    ],\\n    \"userInfoEncryptionAlgValuesSupported\":[\\n        \"RSA1_5\",\\n        \"RSA-OAEP\",\\n        \"A128KW\",\\n        \"A256KW\"\\n    ],\\n    \"userInfoEncryptionEncValuesSupported\":[\\n        \"A128CBC+HS256\",\\n        \"A256CBC+HS512\",\\n        \"A128GCM\",\\n        \"A256GCM\"\\n    ],\\n    \"idTokenSigningAlgValuesSupported\":[\\n        \"none\",\\n        \"HS256\",\\n        \"HS384\",\\n        \"HS512\",\\n        \"RS256\",\\n        \"RS384\",\\n        \"RS512\",\\n        \"ES256\",\\n        \"ES384\",\\n        \"ES512\"\\n    ],\\n    \"idTokenEncryptionAlgValuesSupported\":[\\n        \"RSA1_5\",\\n        \"RSA-OAEP\",\\n        \"A128KW\",\\n        \"A256KW\"\\n    ],\\n    \"idTokenEncryptionEncValuesSupported\":[\\n        \"A128CBC+HS256\",\\n        \"A256CBC+HS512\",\\n        \"A128GCM\",\\n        \"A256GCM\"\\n    ],\\n    \"requestObjectSigningAlgValuesSupported\":[\\n        \"none\",\\n        \"HS256\",\\n        \"HS384\",\\n        \"HS512\",\\n        \"RS256\",\\n        \"RS384\",\\n        \"RS512\",\\n        \"ES256\",\\n        \"ES384\",\\n        \"ES512\"\\n    ],\\n    \"jwksAlgorithmsSupported\":[\\n        \"RS256\",\\n        \"RS384\",\\n        \"RS512\",\\n        \"ES256\",\\n        \"ES384\",\\n        \"ES512\",\\n        \"PS256\",\\n        \"PS384\",\\n        \"PS512\",\\n        \"RSA1_5\",\\n        \"RSA-OAEP\"\\n    ],\\n    \"requestObjectEncryptionAlgValuesSupported\":[\\n        \"RSA1_5\",\\n        \"RSA-OAEP\",\\n        \"A128KW\",\\n        \"A256KW\"\\n    ],\\n    \"requestObjectEncryptionEncValuesSupported\":[\\n        \"A128CBC+HS256\",\\n        \"A256CBC+HS512\",\\n        \"A128GCM\",\\n        \"A256GCM\"\\n    ],\\n    \"tokenEndpointAuthMethodsSupported\":[\\n        \"client_secret_basic\",\\n        \"client_secret_post\",\\n        \"client_secret_jwt\",\\n        \"private_key_jwt\",\\n        \"tls_client_auth\",\\n        \"self_signed_tls_client_auth\"\\n    ],\\n    \"tokenEndpointAuthSigningAlgValuesSupported\":[\\n        \"HS256\",\\n        \"HS384\",\\n        \"HS512\",\\n        \"RS256\",\\n        \"RS384\",\\n        \"RS512\",\\n        \"ES256\",\\n        \"ES384\",\\n        \"ES512\"\\n    ],\\n    \"dynamicRegistrationCustomAttributes\":[\\n    ],\\n    \"displayValuesSupported\":[\\n        \"page\",\\n        \"popup\"\\n    ],\\n    \"claimTypesSupported\":[\\n        \"normal\"\\n    ],\\n    \"serviceDocumentation\":\"http://jans.org/docs\",\\n    \"claimsLocalesSupported\":[\\n        \"en\"\\n    ],\\n    \"idTokenTokenBindingCnfValuesSupported\":[\\n        \"tbh\"\\n    ],\\n    \"uiLocalesSupported\":[\\n        \"en\",\\n        \"bg\",\\n        \"de\",\\n        \"es\",\\n        \"fr\",\\n        \"it\",\\n        \"ru\",\\n        \"tr\"\\n    ],\\n    \"dynamicGrantTypeDefault\":[\\n        \"authorization_code\",\\n        \"implicit\",\\n        \"client_credentials\",\\n        \"refresh_token\",\\n        \"urn:ietf:params:oauth:grant-type:uma-ticket\",\\n        \"urn:ietf:params:oauth:grant-type:device_code\"\\n    ],\\n    \"claimsParameterSupported\":false,\\n    \"requestParameterSupported\":true,\\n    \"requestUriParameterSupported\":true,\\n    \"requireRequestUriRegistration\":false,\\n    \"allowPostLogoutRedirectWithoutValidation\":false,\\n    \"introspectionAccessTokenMustHaveUmaProtectionScope\":false,\\n    \"requestUriHashVerificationEnabled\": false,\\n    \"idTokenFilterClaimsBasedOnAccessToken\": false,\\n    \"opPolicyUri\":\"http://www.jans.io/doku.php?id=jans:policy\",\\n    \"opTosUri\":\"http://www.jans.io/doku.php?id=jans:tos\",\\n    \"authorizationCodeLifetime\":60,\\n    \"refreshTokenLifetime\":14400,\\n    \"idTokenLifetime\":3600,\\n    \"spontaneousScopeLifetime\":86400,\\n    \"accessTokenLifetime\":300,\\n    \"umaResourceLifetime\":2592000,\\n    \"sessionAsJwt\":false,\\n    \"umaRptLifetime\": 3600,\\n    \"umaTicketLifetime\": 3600,\\n    \"umaPctLifetime\": 2592000,\\n    \"umaAddScopesAutomatically\":true,\\n    \"umaValidateClaimToken\":false,\\n    \"umaGrantAccessIfNoPolicies\":false,\\n    \"umaRestrictResourceToAssociatedClient\":false,\\n    \"umaKeepClientDuringResourceSetRegistration\":true,\\n    \"umaRptAsJwt\":false,\\n    \"cleanServiceInterval\":60,\\n    \"cleanServiceBatchChunkSize\": 10000,\\n    \"keyRegenerationEnabled\":true,\\n    \"keyRegenerationInterval\":48,\\n    \"defaultSignatureAlgorithm\":\"RS256\",\\n    \"oxOpenIdConnectVersion\":\"openidconnect-1.0\",\\n    \"oxId\":\"https://test.dd.jans.io/oxid/service/jans/inum\",\\n    \"dynamicRegistrationExpirationTime\":-1,\\n    \"dynamicRegistrationPersistClientAuthorizations\":true,\\n    \"trustedClientEnabled\":true,\\n    \"skipAuthorizationForOpenIdScopeAndPairwiseId\": false,\\n    \"dynamicRegistrationScopesParamEnabled\":true,\\n    \"dynamicRegistrationCustomObjectClass\":\"\",\\n    \"personCustomObjectClassList\":[\\n        \"jansCustomPerson\",\\n        \"jansPerson\"\\n    ],\\n    \"persistIdTokenInLdap\":false,\\n    \"persistRefreshTokenInLdap\":true,\\n    \"authenticationFiltersEnabled\":false,\\n    \"invalidateSessionCookiesAfterAuthorizationFlow\":false,\\n    \"clientAuthenticationFiltersEnabled\":false,\\n    \"clientRegDefaultToCodeFlowWithRefresh\": true,\\n    \"authenticationFilters\":[\\n        {\\n            \"filter\":\"(&amp;(mail={0})(inum={1}))\",\\n            \"bind\":false,\\n            \"bindPasswordAttribute\":\"\",\\n            \"baseDn\":\"ou=people,o=jans\"\\n        },\\n        {\\n            \"filter\":\"uid={0}\",\\n            \"bind\":true,\\n            \"bindPasswordAttribute\":\"pwd\",\\n            \"baseDn\":\"ou=people,o=jans\"\\n        }\\n    ],\\n    \"clientAuthenticationFilters\":[\\n        {\\n            \"filter\":\"myCustomAttr1={0}\",\\n            \"bind\":\"\",\\n            \"bindPasswordAttribute\":\"\",\\n            \"baseDn\":\"ou=clients,o=jans\"\\n        }\\n    ],\\n    \"sessionIdUnusedLifetime\":86400,\\n    \"sessionIdUnauthenticatedUnusedLifetime\":120,\\n    \"sessionIdEnabled\":true,\\n    \"changeSessionIdOnAuthentication\":true,\\n    \"returnClientSecretOnRead\": true,\\n    \"sessionIdPersistOnPromptNone\":true,\\n    \"sessionIdLifetime\": 86400,\\n    \"configurationUpdateInterval\":3600,\\n    \"cssLocation\":\"\",\\n    \"jsLocation\":\"\",\\n    \"imgLocation\":\"\",\\n    \"metricReporterInterval\":300,\\n    \"metricReporterKeepDataDays\":15,\\n    \"metricReporterEnabled\": false,\\n    \"pairwiseIdType\":\"algorithmic\",\\n    \"pairwiseCalculationKey\":\"snus1sMDV9f4wll7dGi34bk46Cl\",\\n    \"pairwiseCalculationSalt\": \"C4hXDPMyGKslRSdYIathR\",\\n    \"shareSubjectIdBetweenClientsWithSameSectorId\": true,\\n    \"webKeysStorage\": \"keystore\",\\n    \"dnName\": \"CN=Jans Auth CA Certificates\",\\n    \"keyStoreFile\": \"/etc/certs/jans-auth-keys.jks\",\\n    \"keyStoreSecret\": \"Gblv8hQoN7U7\",\\n    \"endSessionWithAccessToken\":false,\\n    \"clientWhiteList\": [\"\"],\\n    \"clientBlackList\": [\".attacker.com/\"],\\n    \"legacyIdTokenClaims\": false,\\n    \"customHeadersWithAuthorizationResponse\": true,\\n    \"frontChannelLogoutSessionSupported\":true,\\n    \"updateUserLastLogonTime\": false,\\n    \"updateClientAccessTime\":false,\\n    \"enableClientGrantTypeUpdate\": true,\\n    \"corsConfigurationFilters\": [\\n        {\\n            \"filterName\": \"CorsFilter\",\\n            \"corsAllowedOrigins\": \"\",\\n            \"corsAllowedMethods\": \"GET,POST,HEAD,OPTIONS\",\\n            \"corsAllowedHeaders\": \"Origin,Authorization,Accept,X-Requested-With,Content-Type,Access-Control-Request-Method,Access-Control-Request-Headers\",\\n            \"corsExposedHeaders\": \"\",\\n            \"corsSupportCredentials\": true,\\n            \"corsLoggingEnabled\": false,\\n            \"corsPreflightMaxAge\": 1800,\\n            \"corsRequestDecorate\": true,\\n            \"corsEnabled\": true\\n        }\\n    ],\\n    \"logClientIdOnClientAuthentication\": true,\\n    \"logClientNameOnClientAuthentication\": false,\\n    \"httpLoggingEnabled\": false,\\n    \"httpLoggingExludePaths\": [],\\n    \"externalLoggerConfiguration\": \"\",\\n    \"authorizationRequestCustomAllowedParameters\" : [\\n        \"customParam1\",\\n        \"customParam2\",\\n        \"customParam3\"\\n    ],\\n    \"legacyDynamicRegistrationScopeParam\": false,\\n    \"openidScopeBackwardCompatibility\": false,\\n    \"disableU2fEndpoint\":false,\\n    \"authenticationProtectionConfiguration\": {\\n        \"attemptExpiration\": 15,\\n        \"maximumAllowedAttemptsWithoutDelay\": 4,\\n        \"delayTime\": 2,\\n        \"bruteForceProtectionEnabled\": false\\n    },\\n    \"loggingLevel\": \"INFO\",\\n    \"loggingLayout\": \"text\",\\n    \"errorHandlingMethod\":\"internal\",\\n    \"useLocalCache\":true,\\n    \"backchannelTokenDeliveryModesSupported\": [\\n        \"poll\",\\n        \"ping\",\\n        \"push\"\\n     ],\\n    \"backchannelAuthenticationRequestSigningAlgValuesSupported\": [],\\n    \"backchannelClientId\": \"\",\\n    \"backchannelRedirectUri\": \"https://test.dd.jans.io/jans-auth/ciba/home.htm\",\\n    \"backchannelUserCodeParameterSupported\": false,\\n    \"backchannelBindingMessagePattern\": \"^[a-zA-Z0-9]{4,8}$\",\\n    \"backchannelAuthenticationResponseExpiresIn\": 3600,\\n    \"backchannelAuthenticationResponseInterval\": 2,\\n    \"backchannelRequestsProcessorJobIntervalSec\": 5,\\n    \"backchannelRequestsProcessorJobChunkSize\": 100,\\n    \"cibaGrantLifeExtraTimeSec\": 180,\\n    \"cibaMaxExpirationTimeAllowedSec\": 1800,\\n    \"backchannelLoginHintClaims\": [\"inum\", \"uid\", \"mail\"],\\n    \"cibaEnabled\": false,\\n    \"cibaEndUserNotificationConfig\": {\\n        \"apiKey\": \"\",\\n        \"authDomain\": \"\",\\n        \"databaseURL\": \"\",\\n        \"projectId\": \"\",\\n        \"storageBucket\": \"\",\\n        \"messagingSenderId\": \"\",\\n        \"appId\": \"\",\\n        \"notificationUrl\": \"\",\\n        \"notificationKey\": \"\",\\n        \"publicVapidKey\": \"\"\\n    },\\n    \"deviceAuthzRequestExpiresIn\": 1800,\\n    \"deviceAuthzTokenPollInterval\": 5,\\n    \"deviceAuthzResponseTypeToProcessAuthz\": \"code\"\\n}\\n'], 'jansConfErrors': ['{\\n    \"authorize\":[\\n        {\\n            \"id\":\"invalid_request\",\\n            \"description\":\"The request is missing a required parameter, includes an unsupported parameter or parameter value, or is otherwise malformed.\",\\n            \"uri\":null\\n        },\\n        {\\n            \"id\": \"disabled_client\",\\n            \"description\": \"The client is disabled and can\\'t request an access token using this method.\",\\n            \"uri\": null\\n        },\\n        {\\n            \"id\":\"unauthorized_client\",\\n            \"description\":\"The client is not authorized to request an access token using this method.\",\\n            \"uri\":null\\n        },\\n        {\\n            \"id\":\"access_denied\",\\n            \"description\":\"The resource owner or authorization server denied the request.\",\\n            \"uri\":null\\n        },\\n        {\\n            \"id\":\"retry\",\\n            \"description\":\"The authorization server requires RP to send authorization request again.\",\\n            \"uri\":null\\n        },\\n        {\\n            \"id\":\"unsupported_response_type\",\\n            \"description\":\"The authorization server does not support obtaining an access token using this method.\",\\n            \"uri\":null\\n        },\\n        {\\n            \"id\":\"invalid_scope\",\\n            \"description\":\"The requested scope is invalid, unknown, or malformed.\",\\n            \"uri\":null\\n        },\\n        {\\n            \"id\":\"server_error\",\\n            \"description\":\"The authorization server encountered an unexpected condition which prevented it from fulfilling the request.\",\\n            \"uri\":null\\n        },\\n        {\\n            \"id\":\"temporarily_unavailable\",\\n            \"description\":\"The authorization server is currently unable to handle the request due to a temporary overloading or maintenance of the server.\",\\n            \"uri\":null\\n        },\\n        {\\n            \"id\":\"invalid_request_redirect_uri\",\\n            \"description\":\"The redirect_uri in the Authorization Request does not match any of the Client\\'s pre-registered redirect_uris.\",\\n            \"uri\":null\\n        },\\n        {\\n            \"id\":\"login_required\",\\n            \"description\":\"The Authorization Server requires End-User authentication. This error MAY be returned when the prompt parameter in the Authorization Request is set to none to request that the Authorization Server should not display any user interfaces to the End-User, but the Authorization Request cannot be completed without displaying a user interface for user authentication.\",\\n            \"uri\":null\\n        },\\n        {\\n            \"id\":\"session_selection_required\",\\n            \"description\":\"The End-User is required to select a session at the Authorization Server. The End-User MAY be authenticated at the Authorization Server with different associated accounts, but the End-User did not select a session. This error MAY be returned when the prompt parameter in the Authorization Request is set to none to request that the Authorization Server should not display any user interfaces to the End-User, but the Authorization Request cannot be completed without displaying a user interface to prompt for a session to use.\",\\n            \"uri\":null\\n        },\\n        {\\n            \"id\":\"consent_required\",\\n            \"description\":\"The Authorization Server requires End-User consent. This error MAY be returned when the prompt parameter in the Authorization Request is set to none to request that the Authorization Server should not display any user interfaces to the End-User, but the Authorization Request cannot be completed without displaying a user interface for End-User consent.\",\\n            \"uri\":null\\n        },\\n        {\\n            \"id\":\"user_mismatched\",\\n            \"description\":\"The current logged in End-User at the Authorization Server does not match the requested user. This error MAY be returned when the prompt parameter in the Authorization Request is set to none to request that the Authorization Server should not display any user interfaces to the End-User, but the Authorization Request cannot be completed without displaying a user interface to prompt for the correct End-User authentication.\",\\n            \"uri\":null\\n        },\\n        {\\n            \"id\":\"invalid_request_uri\",\\n            \"description\":\"The request_uri in the Authorization Request returns an error or invalid data.\",\\n            \"uri\":null\\n        },\\n        {\\n            \"id\":\"invalid_openid_request_object\",\\n            \"description\":\"The request parameter contains an invalid OpenID Request Object.\",\\n            \"uri\":null\\n        },\\n        {\\n            \"id\":\"invalid_request_object\",\\n            \"description\":\"The request parameter contains an invalid Request Object.\",\\n            \"uri\":null\\n        },\\n        {\\n            \"id\":\"authentication_session_invalid\",\\n            \"description\":\"The authorization server can\\'t handle user authentication due to session expiration\",\\n            \"uri\":null\\n        },\\n        {\\n            \"id\":\"invalid_authentication_method\",\\n            \"description\":\"The authorization server can\\'t handle user authentication due to error caused by ACR\",\\n            \"uri\":null\\n        }\\n    ],\\n    \"clientInfo\":[\\n        {\\n            \"id\":\"invalid_request\",\\n            \"description\":\"The request is missing a required parameter, includes an unsupported parameter or parameter value, repeats the same parameter, uses more than one method for including an access token, or is otherwise malformed.\",\\n            \"uri\":null\\n        },\\n        {\\n            \"id\":\"invalid_token\",\\n            \"description\":\"The access token provided is expired, revoked, malformed, or invalid for other reasons. Try to request a new access token and retry the protected resource.\",\\n            \"uri\":null\\n        }\\n    ],\\n    \"endSession\":[\\n        {\\n            \"id\":\"invalid_request\",\\n            \"description\":\"The request is missing a required parameter, includes an unsupported parameter or parameter value, repeats a parameter, or is otherwise malformed.\",\\n            \"uri\":null\\n        },\\n        {\\n            \"id\": \"invalid_grant_and_session\",\\n            \"description\": \"The provided id token (or access token) or session state are invalid or were issued to another client.\",\\n            \"uri\": null\\n        },\\n        {\\n            \"id\": \"session_not_passed\",\\n            \"description\": \"The provided session state is empty.\",\\n            \"uri\": null\\n        },\\n        {\\n            \"id\": \"post_logout_uri_not_passed\",\\n            \"description\": \"The provided post logout uri is empty.\",\\n            \"uri\": null\\n        },\\n        {\\n            \"id\": \"post_logout_uri_not_associated_with_client\",\\n            \"description\": \"The provided post logout uri is not associated with client.\",\\n            \"uri\": null\\n        },\\n        {\\n            \"id\":\"invalid_grant\",\\n            \"description\":\"The provided access token is invalid, or was issued to another client.\",\\n            \"uri\":null\\n        },\\n        {\\n            \"id\":\"invalid_logout_uri\",\\n            \"description\":\"The provided logout_uri is invalid.\",\\n            \"uri\":null\\n        }\\n    ],\\n    \"register\":[\\n        {\\n            \"id\":\"invalid_request\",\\n            \"description\":\"The request is missing a required parameter, includes an unsupported parameter or parameter value, or is otherwise malformed.\",\\n            \"uri\":null\\n        },\\n        {\\n            \"id\":\"invalid_redirect_uri\",\\n            \"description\":\"Value of one or more redirect_uris is invalid.\",\\n            \"uri\":null\\n        },\\n        {\\n            \"id\":\"invalid_claims_redirect_uri\",\\n            \"description\":\"Value of one or more claims_redirect_uris is invalid.\",\\n            \"uri\":null\\n        },\\n        {\\n            \"id\":\"invalid_client_metadata\",\\n            \"description\":\"The value of one of the Client Metadata fields is invalid and the server has rejected this request. Note that an Authorization Server MAY choose to substitute a valid value for any requested parameter of a Client\\'s Metadata.\",\\n            \"uri\":null\\n        },\\n        {\\n            \"id\":\"invalid_token\",\\n            \"description\":\"The access token provided is expired, revoked, malformed, or invalid for other reasons.\",\\n            \"uri\":null\\n        },\\n        {\\n            \"id\": \"invalid_software_statement\",\\n            \"description\":\"The software_statement is malformed or invalid.\",\\n            \"uri\":null\\n        },\\n        {\\n            \"id\":\"access_denied\",\\n            \"description\":\"The authorization server denied the request.\",\\n            \"uri\":null\\n        }\\n    ],\\n    \"token\":[\\n        {\\n            \"id\":\"invalid_request\",\\n            \"description\":\"The request is missing a required parameter, includes an unsupported parameter or parameter value, repeats a parameter, includes multiple credentials, utilizes more than one mechanism for authenticating the client, or is otherwise malformed.\",\\n            \"uri\":null\\n        },\\n        {\\n            \"id\": \"disabled_client\",\\n            \"description\": \"The client is disabled and can\\'t request an access token using this method.\",\\n            \"uri\": null\\n        },\\n        {\\n            \"id\":\"invalid_client\",\\n            \"description\":\"Client authentication failed (e.g. unknown client, no client authentication included, or unsupported authentication method). The authorization server MAY return an HTTP 401 (Unauthorized) status code to indicate which HTTP authentication schemes are supported. If the client attempted to authenticate via the Authorization request header field, the authorization server MUST respond with an HTTP 401 (Unauthorized) status code, and include the WWW-Authenticate response header field matching the authentication scheme used by the client.\",\\n            \"uri\":null\\n        },\\n        {\\n            \"id\":\"invalid_grant\",\\n            \"description\":\"The provided authorization grant is invalid, expired, revoked, does not match the redirection URI used in the authorization request, or was issued to another client.\",\\n            \"uri\":null\\n        },\\n        {\\n            \"id\":\"unauthorized_client\",\\n            \"description\":\"The authenticated client is not authorized to use this authorization grant type.\",\\n            \"uri\":null\\n        },\\n        {\\n            \"id\":\"unsupported_grant_type\",\\n            \"description\":\"The authorization grant type is not supported by the authorization server.\",\\n            \"uri\":null\\n        },\\n        {\\n            \"id\":\"invalid_scope\",\\n            \"description\":\"The requested scope is invalid, unknown, malformed, or exceeds the scope granted by the resource owner.\",\\n            \"uri\":null\\n        }\\n    ],\\n    \"revoke\":[\\n        {\\n            \"id\":\"unsupported_token_type\",\\n            \"description\":\"The authorization server does not support the revocation of the presented token type. That is, the client tried to revoke an access token on a server not supporting this feature.\",\\n            \"uri\":null\\n        },\\n        {\\n            \"id\":\"invalid_request\",\\n            \"description\":\"The request is missing a required parameter, includes an unsupported parameter or parameter value, repeats a parameter, includes multiple credentials, utilizes more than one mechanism for authenticating the client, or is otherwise malformed.\",\\n            \"uri\":null\\n        },\\n        {\\n            \"id\":\"invalid_client\",\\n            \"description\":\"Client authentication failed (e.g. unknown client, no client authentication included, or unsupported authentication method). The authorization server MAY return an HTTP 401 (Unauthorized) status code to indicate which HTTP authentication schemes are supported. If the client attempted to authenticate via the Authorization request header field, the authorization server MUST respond with an HTTP 401 (Unauthorized) status code, and include the WWW-Authenticate response header field matching the authentication scheme used by the client.\",\\n            \"uri\":null\\n        }\\n    ],\\n    \"uma\":[\\n        {\\n            \"id\":\"invalid_request\",\\n            \"description\":\"The request is missing a required parameter, includes an unsupported parameter or parameter value, or is otherwise malformed.\",\\n            \"uri\": null\\n        },\\n        {\\n            \"id\": \"disabled_client\",\\n            \"description\": \"The client is disabled and can\\'t request an access token using this method.\",\\n            \"uri\":null\\n        },\\n        {\\n            \"id\":\"client_not_in_trust_relationship\",\\n            \"description\":\"The client is not in any trust relationship however federation is enabled for server.\",\\n            \"uri\":null\\n        },\\n        {\\n            \"id\":\"unauthorized_client\",\\n            \"description\":\"The client is not authorized to request an access token using this method.\",\\n            \"uri\":null\\n        },\\n        {\\n            \"id\":\"invalid_session\",\\n            \"description\":\"The provided session is invalid.\",\\n            \"uri\":null\\n        },\\n        {\\n            \"id\":\"access_denied\",\\n            \"description\":\"The resource owner or AM server denied the request.\",\\n            \"uri\":null\\n        },\\n        {\\n            \"id\":\"unsupported_response_type\",\\n            \"description\":\"The AM server does not support an access using this method.\",\\n            \"uri\":null\\n        },\\n        {\\n            \"id\":\"invalid_client_scope\",\\n            \"description\":\"The requested scope is invalid, unknown, or malformed.\",\\n            \"uri\":null\\n        },\\n        {\\n            \"id\":\"server_error\",\\n            \"description\":\"The AM server encountered an unexpected condition which prevented it from fulfilling the request.\",\\n            \"uri\":null\\n        },\\n        {\\n            \"id\":\"temporarily_unavailable\",\\n            \"description\":\"The AM server is currently unable to handle the request due to a temporary overloading or maintenance of the server.\",\\n            \"uri\":null\\n        },\\n        {\\n            \"id\":\"precondition_failed\",\\n            \"description\":\"The resource set that was requested to be deleted or updated at the AM did not match the If-Match value present in the request.\",\\n            \"uri\":null\\n        },\\n        {\\n            \"id\":\"not_found\",\\n            \"description\":\"The resource set requested from the AM cannot be found.\",\\n            \"uri\":null\\n        },\\n        {\\n            \"id\":\"unsupported_method_type\",\\n            \"description\":\"The host request used an unsupported HTTP method.\",\\n            \"uri\":null\\n        },\\n        {\\n            \"id\":\"invalid_token\",\\n            \"description\":\"The access token expired.\",\\n            \"uri\":null\\n        },\\n        {\\n            \"id\":\"invalid_resource_id\",\\n            \"description\":\"The provided resource id was not found at the AS.\",\\n            \"uri\":null\\n        },\\n        {\\n            \"id\":\"forbidden_by_policy\",\\n            \"description\":\"Forbidden by policy (policy returned false).\",\\n            \"uri\":null\\n        },\\n        {\\n            \"id\":\"invalid_permission_request\",\\n            \"description\":\"The provided permission request is not valid.\",\\n            \"uri\":null\\n        },\\n        {\\n            \"id\":\"invalid_claims_gathering_script_name\",\\n            \"description\":\"The claims-gathering script name is not provided or otherwise failed to load script with this name(s).\",\\n            \"uri\":null\\n        },\\n        {\\n            \"id\":\"invalid_ticket\",\\n            \"description\":\"The provided ticket was not found at the AS.\",\\n            \"uri\":null\\n        },\\n        {\\n            \"id\":\"invalid_client_id\",\\n            \"description\":\"The provided client_id is not valid.\",\\n            \"uri\":null\\n        },\\n        {\\n            \"id\":\"invalid_claims_redirect_uri\",\\n            \"description\":\"The provided claims_redirect_uri is not valid.\",\\n            \"uri\":null\\n        },\\n        {\\n            \"id\":\"invalid_claim_token_format\",\\n            \"description\":\"The claim token format is blank or otherwise not supported (supported format is http://openid.net/specs/openid-connect-core-1_0.html#IDToken).\",\\n            \"uri\":null\\n        },\\n        {\\n            \"id\":\"invalid_claim_token\",\\n            \"description\":\"The claim token is not valid or unsupported. (If format is http://openid.net/specs/openid-connect-core-1_0.html#IDToken then claim token has to be ID Token).\",\\n            \"uri\":null\\n        },\\n        {\\n            \"id\":\"invalid_pct\",\\n            \"description\":\"PCT is invalid (revoked, expired or does not exist anymore on AS)\",\\n            \"uri\":null\\n        },\\n        {\\n            \"id\":\"invalid_rpt\",\\n            \"description\":\"RPT is invalid (revoked, expired or does not exist anymore on AS)\",\\n            \"uri\":null\\n        },\\n        {\\n            \"id\":\"invalid_grant_type\",\\n            \"description\":\"The provided grant_type valid does not equal to urn:ietf:params:oauth:grant-type:uma-ticket value which is required by UMA 2.\",\\n            \"uri\":null\\n        },\\n        {\\n            \"id\":\"invalid_scope\",\\n            \"description\":\"The requested scope is invalid, unknown, malformed, or exceeds the scope granted by the resource owner.\",\\n            \"uri\":null\\n        },\\n        {\\n            \"id\":\"invalid_requester_ticket\",\\n            \"description\":\"The provided ticket was not found at the AM.\",\\n            \"uri\":null\\n        },\\n        {\\n            \"id\":\"expired_requester_ticket\",\\n            \"description\":\"The provided ticket has expired.\",\\n            \"uri\":null\\n        },\\n        {\\n            \"id\":\"not_authorized_permission\",\\n            \"description\":\"The requester is definitively not authorized for this permission according to user policy.\",\\n            \"uri\":null\\n        },\\n        {\\n            \"id\":\"need_claims\",\\n            \"description\":\"The AM is unable to determine whether the requester is authorized for this permission without gathering claims from the requesting party.\",\\n            \"uri\":null\\n        }\\n    ],\\n    \"userInfo\":[\\n        {\\n            \"id\":\"invalid_request\",\\n            \"description\":\"The request is missing a required parameter, includes an unsupported parameter or parameter value, repeats the same parameter, uses more than one method for including an access token, or is otherwise malformed.\",\\n            \"uri\":null\\n        },\\n        {\\n            \"id\":\"invalid_token\",\\n            \"description\":\"The access token provided is expired, revoked, malformed, or invalid for other reasons. Try to request a new access token and retry the protected resource.\",\\n            \"uri\":null\\n        },\\n        {\\n            \"id\":\"insufficient_scope\",\\n            \"description\":\"The request requires higher privileges than provided by the access token.\",\\n            \"uri\":null\\n        }\\n    ],\\n    \"validateToken\":[\\n        {\\n            \"id\":\"invalid_request\",\\n            \"description\":\"The request is missing a required parameter, includes an unsupported parameter or parameter value, repeats a parameter, includes multiple credentials, utilizes more than one mechanism for authenticating the client, or is otherwise malformed.\",\\n            \"uri\":null\\n        },\\n        {\\n            \"id\":\"invalid_grant\",\\n            \"description\":\"The provided access token is invalid, or was issued to another client.\",\\n            \"uri\":null\\n        }\\n    ],\\n    \"fido\":[\\n        {\\n            \"id\":\"server_error\",\\n            \"description\":\"The authorization server encountered an unexpected condition which prevented it from fulfilling the request.\",\\n            \"uri\":null\\n        },\\n        {\\n            \"id\":\"invalid_request\",\\n            \"description\":\"The request is missing a required parameter, includes an unsupported parameter or parameter value, repeats the same parameter, has invalid signature, or is otherwise malformed.\",\\n            \"uri\":null\\n        },\\n        {\\n            \"id\":\"no_eligable_devices\",\\n            \"description\":\"There are no devices registered.\",\\n            \"uri\":null\\n        },\\n        {\\n            \"id\":\"device_compromised\",\\n            \"description\":\"All devices were compromised.\",\\n            \"uri\":null\\n        },\\n        {\\n            \"id\":\"session_expired\",\\n            \"description\":\"The authentication or registration session was expired.\",\\n            \"uri\":null\\n        },\\n        {\\n            \"id\":\"registration_not_allowed\",\\n            \"description\":\"The user has registered device already.\",\\n            \"uri\":null\\n        }\\n    ],\\n    \"backchannelAuthentication\":[\\n        {\\n            \"id\": \"invalid_request\",\\n            \"description\": \"The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, contains more than one of the hints, or is otherwise malformed.\",\\n            \"uri\": null\\n        },\\n        {\\n            \"id\": \"invalid_scope\",\\n            \"description\": \"The requested scope is invalid, unknown, or malformed.\",\\n            \"uri\": null\\n        },\\n        {\\n            \"id\": \"expired_login_hint_token\",\\n            \"description\": \"The login_hint_token provided in the authentication request is not valid because it has expired.\",\\n            \"uri\": null\\n        },\\n        {\\n            \"id\": \"unknown_user_id\",\\n            \"description\": \"The OpenID Provider is not able to identify which end-user the Client wishes to be authenticated by means of the hint provided in the request (login_hint_token, id_token_hint or login_hint).\",\\n            \"uri\": null\\n        },\\n        {\\n            \"id\": \"unauthorized_client\",\\n            \"description\": \"The Client is not authorized to use this authentication flow.\",\\n            \"uri\": null\\n        },\\n        {\\n            \"id\": \"missing_user_code\",\\n            \"description\": \"User code is required but was missing from the request.\",\\n            \"uri\": null\\n        },\\n        {\\n            \"id\": \"invalid_user_code\",\\n            \"description\": \"User code was invalid.\",\\n            \"uri\": null\\n        },\\n        {\\n            \"id\": \"invalid_binding_message\",\\n            \"description\": \"The binding message is invalid or unacceptable for use in the context of the given request.\",\\n            \"uri\": null\\n        },\\n        {\\n            \"id\": \"invalid_client\",\\n            \"description\": \"Client authentication failed (e.g., invalid client credentials, unknown client, no client authentication included, or unsupported authentication method).\",\\n            \"uri\": null\\n        },\\n        {\\n            \"id\": \"unauthorized_end_user_device\",\\n            \"description\": \"The end-user has not registered a device to receive push notifications.\",\\n            \"uri\": null\\n        },\\n        {\\n            \"id\": \"access_denied\",\\n            \"description\": \"The resource owner or OpenID Provider denied the CIBA (Client Initiated Backchannel Authentication) request.\",\\n            \"uri\": null\\n        }\\n    ],\\n    \"backchannelDeviceRegistration\":[\\n        {\\n            \"id\": \"invalid_request\",\\n            \"description\": \"The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed.\",\\n            \"uri\": null\\n        },\\n        {\\n            \"id\": \"unknown_user_id\",\\n            \"description\": \"The OpenID Provider is not able to identify the end-user.\",\\n            \"uri\": null\\n        },\\n        {\\n            \"id\": \"unauthorized_client\",\\n            \"description\": \"The Client is not authorized to use this authentication flow.\",\\n            \"uri\": null\\n        },\\n        {\\n            \"id\": \"access_denied\",\\n            \"description\": \"The resource owner or OpenID Provider denied the request.\",\\n            \"uri\": null\\n        }\\n    ]\\n}\\n'], 'jansConfStatic': ['{\\n    \"baseDn\":{\\n        \"configuration\":\"ou=configuration,o=jans\",\\n        \"people\":\"ou=people,o=jans\",\\n        \"groups\":\"ou=groups,o=jans\",\\n        \"clients\":\"ou=clients,o=jans\",\\n        \"sessions\":\"ou=sessions,o=jans\",\\n        \"stat\":\"ou=stat,o=jans\",\\n        \"tokens\":\"ou=tokens,o=jans\",\\n        \"authorizations\": \"ou=authorizations,o=jans\",\\n        \"scopes\":\"ou=scopes,o=jans\",\\n        \"attributes\":\"ou=attributes,o=jans\",\\n        \"scripts\": \"ou=scripts,o=jans\",\\n        \"umaBase\":\"ou=uma,o=jans\",\\n        \"umaPolicy\":\"ou=policies,ou=uma,o=jans\",\\n        \"u2fBase\":\"ou=u2f,o=jans\",\\n        \"metric\":\"ou=statistic,o=metric\",\\n        \"sectorIdentifiers\": \"ou=sector_identifiers,o=jans\",\\n        \"ciba\": \"ou=ciba,o=jans\"\\n    }\\n}\\n'], 'jansConfWebKeys': ['{\\n  \"keys\" : [ {\\n    \"kty\" : \"RSA\",\\n    \"e\" : \"AQAB\",\\n    \"use\" : \"sig\",\\n    \"crv\" : \"\",\\n    \"kid\" : \"be6f1798-c4ee-4666-96d1-94c8b63d9976_sig_rs256\",\\n    \"x5c\" : [ \"MIIDCTCCAfGgAwIBAgIgUGqfwqOT+uiN2J6N1GL9+tO+V4MgIEn0VGPiE0biHZ4wDQYJKoZIhvcNAQELBQAwJDEiMCAGA1UEAwwZSmFucyBBdXRoIENBIENlcnRpZmljYXRlczAeFw0yMTA2MjExMTM1MTRaFw0yMTA2MjMxMTM1MjRaMCQxIjAgBgNVBAMMGUphbnMgQXV0aCBDQSBDZXJ0aWZpY2F0ZXMwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCL3+X2cSGB2HDgR7SM1jB0V43N5Op4KiWgmPXjsnTOFG6iO0l23oc8i1OVBZoauEw8MJMYYDU5iqlr76qHLExfT8n0VdknrdVBOHvoBOvW7p8JsxrZV+Ps9B3zoIdmzTEjDi77CUCfU6lFFmYP/j6nDryic6ea82jjCtk/qJaYfsa8Zy8737tlUuIOrEvzpqqe/MZKVjBi3PN6ea8cxYHksUKYMD5msyx/ALYwOyEUC8oeZBSENmoARrAgDEN5bmstV6V12bHSRkmQIdW5o6PV9Jj3mgpGDY2jZvzlHvvhkK0UolneRVAko1y9VEXa3eHsD/RhEc8Bce4QVPOeXVxRAgMBAAGjJzAlMCMGA1UdJQQcMBoGCCsGAQUFBwMBBggrBgEFBQcDAgYEVR0lADANBgkqhkiG9w0BAQsFAAOCAQEAK5/EorowkxDYUSm0l46WsI9qsG9S2mkcyWSQNuA2QxRVhSYquAFGLo4fwaTK2HFSTwVFc7rLSPyG6o2QQAmLIod0ri5I3KosfUYnX3N11XqGklCdd3H2W8MUSo1g9bzvvTiC8MjT540OW7Szb/r8j6+Z1Cwqpu1xSIDtK0DGU15XOlhNc+UDm6kCc0+43UmHluOc5N4ccpExG9AMaIs9C6n+341z0WYL6Ft7Dv/q6ZIARI2+GqGtTOIpR9tsnfxQjxaJ3VVkcL5t9i644kJ3sZv22Y/m2Qa/qGqiX2OaBvMV58ttoPOb3OHDDaP4zYiuC8r2zUhHJJj8IZzNFkDfdw==\" ],\\n    \"exp\" : 1624448124602,\\n    \"alg\" : \"RS256\",\\n    \"n\" : \"i9_l9nEhgdhw4Ee0jNYwdFeNzeTqeColoJj147J0zhRuojtJdt6HPItTlQWaGrhMPDCTGGA1OYqpa--qhyxMX0_J9FXZJ63VQTh76ATr1u6fCbMa2Vfj7PQd86CHZs0xIw4u-wlAn1OpRRZmD_4-pw68onOnmvNo4wrZP6iWmH7GvGcvO9-7ZVLiDqxL86aqnvzGSlYwYtzzenmvHMWB5LFCmDA-ZrMsfwC2MDshFAvKHmQUhDZqAEawIAxDeW5rLVelddmx0kZJkCHVuaOj1fSY95oKRg2No2b85R774ZCtFKJZ3kVQJKNcvVRF2t3h7A_0YRHPAXHuEFTznl1cUQ\"\\n  }, {\\n    \"kty\" : \"RSA\",\\n    \"e\" : \"AQAB\",\\n    \"use\" : \"sig\",\\n    \"crv\" : \"\",\\n    \"kid\" : \"d3446f8c-631c-4faa-9201-b88e1cf8b3e8_sig_rs384\",\\n    \"x5c\" : [ \"MIIDCTCCAfGgAwIBAgIgS3eTNbw9BjuOg9Qmi4X/vGLhA//kktUO2rWJFZdLnOcwDQYJKoZIhvcNAQEMBQAwJDEiMCAGA1UEAwwZSmFucyBBdXRoIENBIENlcnRpZmljYXRlczAeFw0yMTA2MjExMTM1MTVaFw0yMTA2MjMxMTM1MjRaMCQxIjAgBgNVBAMMGUphbnMgQXV0aCBDQSBDZXJ0aWZpY2F0ZXMwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCzMA5CLIscpiwUZXDSC3rtYrtfON2D5OdSHJvF7HaCDbGw7Emw9nRBM7558SkSo0uVDIVML0ykXuouzfyvwLBRHVhBNpaT2RSGLSlPALdHmT3Vz7O2blVPWBsp6RMLLnhvK60vRGJ98kWbtptbRP9gK7ARPVLzyMqAocPcX15LgXzAihDdmiK3ysSm6N98gwom0oUr1BnKGLmZ4N3MYnV7gE3HN032dgcOfqtuJy8FztfgYONmtQrhP91EUYrIFQhuOM+ltQwrX3klt4CbuPjWp9RJJ+hMwPF6gYne7YaSraXQxAmBHj8vT01XPMjnbpd0me32C5odVuNTbc2/jbQ1AgMBAAGjJzAlMCMGA1UdJQQcMBoGCCsGAQUFBwMBBggrBgEFBQcDAgYEVR0lADANBgkqhkiG9w0BAQwFAAOCAQEAZPRSLj6WMKIdzjTLS476q2wfWmag7E//M/JbzB0rd4ZFow4MARYsf7v4v4awl9waddqp1K/VnAfiUpnqa3udfiyMgKoPcwRtT7wxrP8KUwSM6EgLf5xnp3i0+E/UVyTPGTr5fN3IXw2NCM/a/AEcM4WjTAP9GP4MDhPljs7ljAeCNiGS/ylUzGLsu6bHVAd4TEWx4askhPZFdh18eaBLw/QvPOPaAFprIvTP/7rDLR3Yv/IQgNi3altZOKqA8kUURBJ8QwI2vWmv0kJNyNSMrpRkKz9kGulR7481oigocmlsBOH15BxP8xEJxHEPdwSmnj06dz6avgwlHUkdHZ+kCQ==\" ],\\n    \"exp\" : 1624448124602,\\n    \"alg\" : \"RS384\",\\n    \"n\" : \"szAOQiyLHKYsFGVw0gt67WK7Xzjdg-TnUhybxex2gg2xsOxJsPZ0QTO-efEpEqNLlQyFTC9MpF7qLs38r8CwUR1YQTaWk9kUhi0pTwC3R5k91c-ztm5VT1gbKekTCy54byutL0RiffJFm7abW0T_YCuwET1S88jKgKHD3F9eS4F8wIoQ3Zoit8rEpujffIMKJtKFK9QZyhi5meDdzGJ1e4BNxzdN9nYHDn6rbicvBc7X4GDjZrUK4T_dRFGKyBUIbjjPpbUMK195JbeAm7j41qfUSSfoTMDxeoGJ3u2Gkq2l0MQJgR4_L09NVzzI526XdJnt9guaHVbjU23Nv420NQ\"\\n  }, {\\n    \"kty\" : \"RSA\",\\n    \"e\" : \"AQAB\",\\n    \"use\" : \"sig\",\\n    \"crv\" : \"\",\\n    \"kid\" : \"347d188f-373d-45f4-a01f-f2340d8542c0_sig_rs512\",\\n    \"x5c\" : [ \"MIIDCjCCAfKgAwIBAgIhAI1d0gC+QMhGqOm3XL6qHqTTT+d/rFhqgTfXTtTwXrg4MA0GCSqGSIb3DQEBDQUAMCQxIjAgBgNVBAMMGUphbnMgQXV0aCBDQSBDZXJ0aWZpY2F0ZXMwHhcNMjEwNjIxMTEzNTE2WhcNMjEwNjIzMTEzNTI0WjAkMSIwIAYDVQQDDBlKYW5zIEF1dGggQ0EgQ2VydGlmaWNhdGVzMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAzKpmC4KzNYhmM4ul++hp7rRLPGN/oUjBV76iu5DM+MD5IL5A5LteuFK6U9WbFxjCQKlTLt53G4xFjoYIQlt1FXmal+tlgVB9SvrNQkNptRzyN2ikboSO7ajJfytavHleZTnepygCoQU1ymYXhOsj8wg65dCB29fu/cOKU4KNmyeGPqGX6+sz33Qi47ge4WMuM2UkIBjG9v0UwW7gTsIGDUjViXM1x6QeQVPNfvmJayYZxKodOyVCd+jsFhRDp9xiN1uQqhWbhNQZfu+sPHScdWEOXMmITu0YD7yD2c4oUGB3/hIh4nFqrTBtGg8h5f5a65y471W8K5rTOqyjjaKRPwIDAQABoycwJTAjBgNVHSUEHDAaBggrBgEFBQcDAQYIKwYBBQUHAwIGBFUdJQAwDQYJKoZIhvcNAQENBQADggEBAEOF37tzSk74eIqYx42+1VPIcj1q7dfJ7N66eSWPBLfcDMm8RSb57zL6yqH7DHD5OT+TUf6bvjxnT/+V7nf3wqmEXmngCDlvEZ/17vMv4AzHggSPbR4DQlLAjWOpS4PEeJbxKg2/4if7Q6VluuhahQQNPHzh3nBbJ8s90AHxi4C31G01t4hcXa7jEsy5pYcPnDx1P/ogxMDtuLk+FNcVqm9AUU27h63M/h5lcE952tX1BcoBroQx/dGsWMa517yoRJEkbHEQABaCOXTaSXlvDPqwZo39f6X6FGmiMx15QV+WVLbJ0MVAvRr6FbxetzphprxkpE7mcOOOx6RsuGmxtQQ=\" ],\\n    \"exp\" : 1624448124602,\\n    \"alg\" : \"RS512\",\\n    \"n\" : \"zKpmC4KzNYhmM4ul--hp7rRLPGN_oUjBV76iu5DM-MD5IL5A5LteuFK6U9WbFxjCQKlTLt53G4xFjoYIQlt1FXmal-tlgVB9SvrNQkNptRzyN2ikboSO7ajJfytavHleZTnepygCoQU1ymYXhOsj8wg65dCB29fu_cOKU4KNmyeGPqGX6-sz33Qi47ge4WMuM2UkIBjG9v0UwW7gTsIGDUjViXM1x6QeQVPNfvmJayYZxKodOyVCd-jsFhRDp9xiN1uQqhWbhNQZfu-sPHScdWEOXMmITu0YD7yD2c4oUGB3_hIh4nFqrTBtGg8h5f5a65y471W8K5rTOqyjjaKRPw\"\\n  }, {\\n    \"kty\" : \"EC\",\\n    \"use\" : \"sig\",\\n    \"crv\" : \"P-256\",\\n    \"kid\" : \"e9f259dd-0020-424a-8653-36186e84b938_sig_es256\",\\n    \"x5c\" : [ \"MIIBfTCCASOgAwIBAgIgApEkB3oY3Zw5hcPOJj40rjxMxujNVB8Mkz/7MSyyIz4wCgYIKoZIzj0EAwIwJDEiMCAGA1UEAwwZSmFucyBBdXRoIENBIENlcnRpZmljYXRlczAeFw0yMTA2MjExMTM1MTZaFw0yMTA2MjMxMTM1MjRaMCQxIjAgBgNVBAMMGUphbnMgQXV0aCBDQSBDZXJ0aWZpY2F0ZXMwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNCAARgL6oKEKf5NCAIWtvOegvhS4XAdxuKLLGosACMWV6tFb+Vjp5R7XSjks2/8rTJUEXkefT+Nem4AO5uUANDGFIPoycwJTAjBgNVHSUEHDAaBggrBgEFBQcDAQYIKwYBBQUHAwIGBFUdJQAwCgYIKoZIzj0EAwIDSAAwRQIhAITLXgBgx0VZuZvFHpfIcAPdwWcxX7MZRvqyYZ/qxEjkAiAD+s6KKx5aDUf4qC5/yLRClABLRhTsF2DcBcom1rr2AA==\" ],\\n    \"x\" : \"YC-qChCn-TQgCFrbznoL4UuFwHcbiiyxqLAAjFlerRU\",\\n    \"y\" : \"AL-Vjp5R7XSjks2_8rTJUEXkefT-Nem4AO5uUANDGFIP\",\\n    \"exp\" : 1624448124602,\\n    \"alg\" : \"ES256\"\\n  }, {\\n    \"kty\" : \"EC\",\\n    \"use\" : \"sig\",\\n    \"crv\" : \"P-384\",\\n    \"kid\" : \"425ea5da-d3ba-4d79-a3a8-3b848c598163_sig_es384\",\\n    \"x5c\" : [ \"MIIBujCCAUCgAwIBAgIgDU/Ae1sy6CLuTsKjwx7eBFF43lf94+1FIW7ScbQkq14wCgYIKoZIzj0EAwMwJDEiMCAGA1UEAwwZSmFucyBBdXRoIENBIENlcnRpZmljYXRlczAeFw0yMTA2MjExMTM1MTZaFw0yMTA2MjMxMTM1MjRaMCQxIjAgBgNVBAMMGUphbnMgQXV0aCBDQSBDZXJ0aWZpY2F0ZXMwdjAQBgcqhkjOPQIBBgUrgQQAIgNiAATdN4T4EUDHruouBmc8E1BXdSu2t4LXnph+zF62Sv/MPF5mnYXljQWkyzp7OQntqpvaIceQBLWxYQq83rX69LwJ2DhzrIORHtBTElAGyMWaWiUHmua0jhuQpdlpqFlcS5+jJzAlMCMGA1UdJQQcMBoGCCsGAQUFBwMBBggrBgEFBQcDAgYEVR0lADAKBggqhkjOPQQDAwNoADBlAjACjwTsOOQjBqRNYSLFX9lPf12/gssSY0xsxJhxcm4EeN07qTzVW8uMu7+yUzNSbq0CMQCJtva13VryEsZ2eKyp26YTQ5fLbikhtWBOL4UNPq+5ZsW5GtxLjfnG4221vdpM6Xc=\" ],\\n    \"x\" : \"AN03hPgRQMeu6i4GZzwTUFd1K7a3gteemH7MXrZK_8w8XmadheWNBaTLOns5Ce2qmw\",\\n    \"y\" : \"ANohx5AEtbFhCrzetfr0vAnYOHOsg5Ee0FMSUAbIxZpaJQea5rSOG5Cl2WmoWVxLnw\",\\n    \"exp\" : 1624448124602,\\n    \"alg\" : \"ES384\"\\n  }, {\\n    \"kty\" : \"EC\",\\n    \"use\" : \"sig\",\\n    \"crv\" : \"P-521\",\\n    \"kid\" : \"c468ea93-393b-4846-a8e2-e48f173a5db4_sig_es512\",\\n    \"x5c\" : [ \"MIICBTCCAWegAwIBAgIhAMpGwf4XI7l3Sy8p648/Xy3oAt4wo3cHRA3hJCRzHdVSMAoGCCqGSM49BAMEMCQxIjAgBgNVBAMMGUphbnMgQXV0aCBDQSBDZXJ0aWZpY2F0ZXMwHhcNMjEwNjIxMTEzNTE2WhcNMjEwNjIzMTEzNTI0WjAkMSIwIAYDVQQDDBlKYW5zIEF1dGggQ0EgQ2VydGlmaWNhdGVzMIGbMBAGByqGSM49AgEGBSuBBAAjA4GGAAQBll7Ra+QqAce/sIhU2kJP9Bbn8bMo6JYy1f7qjXlmb89ODrcOneTUmE7iDBa+oIfMYm7CNH2K4cfJNXm2mPFRQi8AwLEPAdgv6VTXcqD1EU21YP/rSSacsv1d/X6jg/Ee5tlsm5sRE+2E7WHk22yQgORT2ORLwuZbGBqBBbMObUIyMBKjJzAlMCMGA1UdJQQcMBoGCCsGAQUFBwMBBggrBgEFBQcDAgYEVR0lADAKBggqhkjOPQQDBAOBiwAwgYcCQgDm8r/D1kSDog8sua8qDb/wAi5/f+dTJ7H4EMwdc+9JLiVkg5zakj+/D3xjS9h2TyYpiEb0qzZ5Gqbu/Vih3JICeQJBYoUAvqLCIJDOgjfbjW5UzCLed356ffd4Qjmk1D5RparwybuRX3E58mdAmAPHBQq3zTcNPVB4HgxIPT97eMrA+Wg=\" ],\\n    \"x\" : \"AZZe0WvkKgHHv7CIVNpCT_QW5_GzKOiWMtX-6o15Zm_PTg63Dp3k1JhO4gwWvqCHzGJuwjR9iuHHyTV5tpjxUUIv\",\\n    \"y\" : \"AMCxDwHYL-lU13Kg9RFNtWD_60kmnLL9Xf1-o4PxHubZbJubERPthO1h5NtskIDkU9jkS8LmWxgagQWzDm1CMjAS\",\\n    \"exp\" : 1624448124602,\\n    \"alg\" : \"ES512\"\\n  }, {\\n    \"kty\" : \"RSA\",\\n    \"e\" : \"AQAB\",\\n    \"use\" : \"sig\",\\n    \"crv\" : \"\",\\n    \"kid\" : \"dfa48be5-3fa2-44ba-83ca-a528dbf7eee1_sig_ps256\",\\n    \"x5c\" : [ \"MIIDcTCCAiWgAwIBAgIgDgMVuuoR7STMKXG5yWwJSS4yGMQ0bclXJL7glNI4MxswQQYJKoZIhvcNAQEKMDSgDzANBglghkgBZQMEAgEFAKEcMBoGCSqGSIb3DQEBCDANBglghkgBZQMEAgEFAKIDAgEgMCQxIjAgBgNVBAMMGUphbnMgQXV0aCBDQSBDZXJ0aWZpY2F0ZXMwHhcNMjEwNjIxMTEzNTE3WhcNMjEwNjIzMTEzNTI0WjAkMSIwIAYDVQQDDBlKYW5zIEF1dGggQ0EgQ2VydGlmaWNhdGVzMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAtXkp4jVfR48RtW7CEo9b9pYXHjeMsCvgPPSlmEOvk7kqtu3wBf3haTkty1qABncvW358RuZILKIHpS969kTbnYwAIbWR3NzUK49GOM+w8nUmq7a6N3vP/AofmLowlAj2oxzwIn4sZHFVDqGKXg3C+eUuGTHK0p5llbnJIpiERr+6DwjjljGSTBtYNz334bf5+VYB9i8yNzTEkW2+4xyOvjmtfP9RwWllEMWon1RXkRlUCcVzgKOhohnl2vmK4BJUWJ/mKAprQgqlIOe/jOCs1UYnIn049Q7JNdseptiFCE+aunWEUzJPTTd+b70lzG8LnGO2vYAHhmou945JcCGTZQIDAQABoycwJTAjBgNVHSUEHDAaBggrBgEFBQcDAQYIKwYBBQUHAwIGBFUdJQAwQQYJKoZIhvcNAQEKMDSgDzANBglghkgBZQMEAgEFAKEcMBoGCSqGSIb3DQEBCDANBglghkgBZQMEAgEFAKIDAgEgA4IBAQAiDo2kyZP3TQ+y1iWBbVSEV/Dk4zbdLvMcj5S5XH2TBv1mtUtfeYXTHijUva5OlnEoPHO2Z071tpK2uFkhDnNCOskjZrMEGwAe2v/O6pwCjcF2KDA21CD3/6tMEuBQtL0pfs4VEGGg7lakWx4hg12l39KBh0JEEZwUZ9iSnIbDzOVF213pmRi9Ro0T+RbfnZ9Ct/5ho24Cd3I8dpg5rtBzE9TMAO/DbLX36dd1tQCSSawbbXGKeJ2ETSIMf3fPQxRsS8dKF6GXI6RNmJ4vekgw9FLRGtevonlLrzrxa1kfvF5dcOQqoQISNKaTP9JZFCP6via/m0g95XIIZL01C0Zy\" ],\\n    \"exp\" : 1624448124602,\\n    \"alg\" : \"PS256\",\\n    \"n\" : \"tXkp4jVfR48RtW7CEo9b9pYXHjeMsCvgPPSlmEOvk7kqtu3wBf3haTkty1qABncvW358RuZILKIHpS969kTbnYwAIbWR3NzUK49GOM-w8nUmq7a6N3vP_AofmLowlAj2oxzwIn4sZHFVDqGKXg3C-eUuGTHK0p5llbnJIpiERr-6DwjjljGSTBtYNz334bf5-VYB9i8yNzTEkW2-4xyOvjmtfP9RwWllEMWon1RXkRlUCcVzgKOhohnl2vmK4BJUWJ_mKAprQgqlIOe_jOCs1UYnIn049Q7JNdseptiFCE-aunWEUzJPTTd-b70lzG8LnGO2vYAHhmou945JcCGTZQ\"\\n  }, {\\n    \"kty\" : \"RSA\",\\n    \"e\" : \"AQAB\",\\n    \"use\" : \"sig\",\\n    \"crv\" : \"\",\\n    \"kid\" : \"2cab0f42-13c0-4d04-9570-3856245b7845_sig_ps384\",\\n    \"x5c\" : [ \"MIIDcTCCAiWgAwIBAgIgRU1KLGepGaIrJrFuUmkooBc3Sv9yRSKfHLxqiT82pZ0wQQYJKoZIhvcNAQEKMDSgDzANBglghkgBZQMEAgIFAKEcMBoGCSqGSIb3DQEBCDANBglghkgBZQMEAgIFAKIDAgEwMCQxIjAgBgNVBAMMGUphbnMgQXV0aCBDQSBDZXJ0aWZpY2F0ZXMwHhcNMjEwNjIxMTEzNTE3WhcNMjEwNjIzMTEzNTI0WjAkMSIwIAYDVQQDDBlKYW5zIEF1dGggQ0EgQ2VydGlmaWNhdGVzMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAwoDWlAtmUJ5bRnW7rV6+8s36fB2Yyppm7JLI9pQ/32pfMtE0D367R+SpGBgLrWnJng2Z/lzMcrvzqtlapLuCzff1WarDl5y40m7kSZ9VEpIiyPgkerprshBuB8c1Lebx46afeJNkiKiNbullWzJi+Oru+fdNII1N95ktjP2h47pv5U4KHgvW7cKItGEOcKqBw0x+9aMUvMixwjb6FiuuuKevDOL1Notnh+ILTnnUqXpSslK+85IoeEzlUM1pcm5CH3R/1DZVUXLwesi1poiQp2o4G01OdfkVE4EpWfI83v7T3yHjsjbO6PqcHlerKxjbeT49sZ4HwQvV068goPIRTwIDAQABoycwJTAjBgNVHSUEHDAaBggrBgEFBQcDAQYIKwYBBQUHAwIGBFUdJQAwQQYJKoZIhvcNAQEKMDSgDzANBglghkgBZQMEAgIFAKEcMBoGCSqGSIb3DQEBCDANBglghkgBZQMEAgIFAKIDAgEwA4IBAQAuhqAeTjZ8CIWLMxuBj2pXw20mS4XpI1Am4ByBcdsLbvW5tlHi692pooGWIRFJqTwpDwFPtNM0rf6P4cFRBmzjdJpskas+H91Rd3hswSMvzNb1WBZWpjYFwJTfHRof8+slQRQa+yk8KpYGUuZ7d5aFRczWkojAaPnm8Xf5I2vlNCN/+5Ghlowp+xWr35W1VgQgljZcrXQY//dGClI93vy3kMHYBWHEBUX14vIpE+PNUKyJZgcfbwgfcwpgX4YImSxCEdshVhJlYKP+CbxQiC4WOW9LaIjj4EiMh41vrKEGKeO7Mmoj7RmTvKwzZNyaA4KxFjyYTZPX3dLtUwQ5s08b\" ],\\n    \"exp\" : 1624448124602,\\n    \"alg\" : \"PS384\",\\n    \"n\" : \"woDWlAtmUJ5bRnW7rV6-8s36fB2Yyppm7JLI9pQ_32pfMtE0D367R-SpGBgLrWnJng2Z_lzMcrvzqtlapLuCzff1WarDl5y40m7kSZ9VEpIiyPgkerprshBuB8c1Lebx46afeJNkiKiNbullWzJi-Oru-fdNII1N95ktjP2h47pv5U4KHgvW7cKItGEOcKqBw0x-9aMUvMixwjb6FiuuuKevDOL1Notnh-ILTnnUqXpSslK-85IoeEzlUM1pcm5CH3R_1DZVUXLwesi1poiQp2o4G01OdfkVE4EpWfI83v7T3yHjsjbO6PqcHlerKxjbeT49sZ4HwQvV068goPIRTw\"\\n  }, {\\n    \"kty\" : \"RSA\",\\n    \"e\" : \"AQAB\",\\n    \"use\" : \"sig\",\\n    \"crv\" : \"\",\\n    \"kid\" : \"b58649e2-3b4c-489a-96da-bf6a40413133_sig_ps512\",\\n    \"x5c\" : [ \"MIIDcTCCAiWgAwIBAgIgLSP1zTFOnL24KN7yogmcMB/KRferymSvPrbhgjp1xsowQQYJKoZIhvcNAQEKMDSgDzANBglghkgBZQMEAgMFAKEcMBoGCSqGSIb3DQEBCDANBglghkgBZQMEAgMFAKIDAgFAMCQxIjAgBgNVBAMMGUphbnMgQXV0aCBDQSBDZXJ0aWZpY2F0ZXMwHhcNMjEwNjIxMTEzNTE4WhcNMjEwNjIzMTEzNTI0WjAkMSIwIAYDVQQDDBlKYW5zIEF1dGggQ0EgQ2VydGlmaWNhdGVzMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAvel84rjWHiW/pE27/KFB0U61g5YqyfNp7WPTh0YCPb/fHl1+A0BHKeGmtewJMwwcqVIYuLLr1b+rcykbkOEf4/sPpQcuoX7DCcFP5LhxH7cERH7JyV2JVgCDTN+LIxe9R15uMyFkCmE2zdnvqaLRic/Pv7Ke2Thv+ydMDk7YI6AsnpelXIzKjeQs8Cq8SWde0y9hHSFeY0RRy2dF4qcsu45B5XDIXe6TBjSIQmidtMPrpCEiNGN8sjUNzLbMi8ou/v6SiyABosKxITV5fT3KscYofX6eRGvYlwVYA2naqKv49cCNTt2gmbcfporBX8we6DMJ9YbGBjmoo/skfcxvuwIDAQABoycwJTAjBgNVHSUEHDAaBggrBgEFBQcDAQYIKwYBBQUHAwIGBFUdJQAwQQYJKoZIhvcNAQEKMDSgDzANBglghkgBZQMEAgMFAKEcMBoGCSqGSIb3DQEBCDANBglghkgBZQMEAgMFAKIDAgFAA4IBAQAk/y0IBh1TjSRXl9WWtAPEhKgKvGOFH5gw65yshk9F8EP+tEG+6UN+/3YJJxkYvun3Ln8BPBY+R8In4rL1WtJ1D3D/yYBi064z2bPqyOcjDuqaPAibfPi9KfRFnAHnEORxuJ+GL1ROG13SxmZR0Sonl+cLiuKVPuO5S40YSFumNmzzBtHfOZKSewwaoMp8tFcQrpCryNhc0obxKFyRUBdtJRb2uxWqY32BrkFOX8q9ZCNW1CEnLXj4wOZ1vOAzBTEnd9FvJP3VtEB/BZHxHESbifXMoHZBJ+8/d7rnylstHcU355eH4b+Wu9grcNkADIgaLRtWlzKAJYmauBwS1maq\" ],\\n    \"exp\" : 1624448124602,\\n    \"alg\" : \"PS512\",\\n    \"n\" : \"vel84rjWHiW_pE27_KFB0U61g5YqyfNp7WPTh0YCPb_fHl1-A0BHKeGmtewJMwwcqVIYuLLr1b-rcykbkOEf4_sPpQcuoX7DCcFP5LhxH7cERH7JyV2JVgCDTN-LIxe9R15uMyFkCmE2zdnvqaLRic_Pv7Ke2Thv-ydMDk7YI6AsnpelXIzKjeQs8Cq8SWde0y9hHSFeY0RRy2dF4qcsu45B5XDIXe6TBjSIQmidtMPrpCEiNGN8sjUNzLbMi8ou_v6SiyABosKxITV5fT3KscYofX6eRGvYlwVYA2naqKv49cCNTt2gmbcfporBX8we6DMJ9YbGBjmoo_skfcxvuw\"\\n  }, {\\n    \"kty\" : \"RSA\",\\n    \"e\" : \"AQAB\",\\n    \"use\" : \"enc\",\\n    \"crv\" : \"\",\\n    \"kid\" : \"c1f2deb0-f069-47fb-b908-1376f1465316_enc_rsa1_5\",\\n    \"x5c\" : [ \"MIIDCjCCAfKgAwIBAgIhAOUJKq/Zc6rVTVB//Fa3Rb0br3H9wKvre8TFFNf3b7GxMA0GCSqGSIb3DQEBCwUAMCQxIjAgBgNVBAMMGUphbnMgQXV0aCBDQSBDZXJ0aWZpY2F0ZXMwHhcNMjEwNjIxMTEzNTE4WhcNMjEwNjIzMTEzNTI0WjAkMSIwIAYDVQQDDBlKYW5zIEF1dGggQ0EgQ2VydGlmaWNhdGVzMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAz5aYNLRwNlmnp1ssv541Wc3Ma602Op/BvXFUcqARDccQC1pz0AHy0kUnqEPiZRr664QB0UgLWpxkf4OdZ6teOCz/v9aCKWPA079grPxbJEux5gRQ37KVGgmmBEAgPI5HnUHQvBNVRnI2B79QvTFpLlMr5oPSdZPVIz56+TcyzKlNzD25uqwOYnVMJyLozL80dJrRBcwYR0E4Ab+W01bFg1RPm3i7UBHLfVVWyMBIkM+xrW0aR46gDFZw/prQF/HOY/NqRHG1uHmuDkQXpDOSMaS5T6lytkFZod8cKH0fyxTQjon9pS4nanSQwVpNZuMEMLuUvXbJvnZg4wLyRblMNwIDAQABoycwJTAjBgNVHSUEHDAaBggrBgEFBQcDAQYIKwYBBQUHAwIGBFUdJQAwDQYJKoZIhvcNAQELBQADggEBAA7JVgfplAKshPvYZd++kE+NxUSiiN/gK7VsEDv6CA9fQ4tmGrOykdcuWiLt3JBGlz72KFmVmW0TPh32EynoVr98U+haD6o4IXt/itrxibF6Joa38fwEWwsAYVe55owq2Brfel7uj2nq1AbQI//tfzI+VCgqBytWyT+9WvYQhVwew0O/o6gv9Qo4IJ1+apHuc9/w8EEEZvUz+5yAq0im9vzeTnf0U4LIXPes10qzvlJuInE7QfZkmUWGQoyNqssfNpObMyc/mPAuynCuXWWCTFxtxt7mSgcLBTzMdB0hcwKwmqmROvZE3eOdQbY610xETgwroLyR6rHQTigOECGY+ns=\" ],\\n    \"exp\" : 1624448124602,\\n    \"alg\" : \"RSA1_5\",\\n    \"n\" : \"z5aYNLRwNlmnp1ssv541Wc3Ma602Op_BvXFUcqARDccQC1pz0AHy0kUnqEPiZRr664QB0UgLWpxkf4OdZ6teOCz_v9aCKWPA079grPxbJEux5gRQ37KVGgmmBEAgPI5HnUHQvBNVRnI2B79QvTFpLlMr5oPSdZPVIz56-TcyzKlNzD25uqwOYnVMJyLozL80dJrRBcwYR0E4Ab-W01bFg1RPm3i7UBHLfVVWyMBIkM-xrW0aR46gDFZw_prQF_HOY_NqRHG1uHmuDkQXpDOSMaS5T6lytkFZod8cKH0fyxTQjon9pS4nanSQwVpNZuMEMLuUvXbJvnZg4wLyRblMNw\"\\n  }, {\\n    \"kty\" : \"RSA\",\\n    \"e\" : \"AQAB\",\\n    \"use\" : \"enc\",\\n    \"crv\" : \"\",\\n    \"kid\" : \"af20de92-1e39-4680-b56e-c383d69ec900_enc_rsa-oaep\",\\n    \"x5c\" : [ \"MIIDCjCCAfKgAwIBAgIhAJ1X7MPmJS3kHq0T6r+SZefM6qyUz7lxg/oYZqE72tSIMA0GCSqGSIb3DQEBCwUAMCQxIjAgBgNVBAMMGUphbnMgQXV0aCBDQSBDZXJ0aWZpY2F0ZXMwHhcNMjEwNjIxMTEzNTE4WhcNMjEwNjIzMTEzNTI0WjAkMSIwIAYDVQQDDBlKYW5zIEF1dGggQ0EgQ2VydGlmaWNhdGVzMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAu2qkEacXwFCYnUu9BZF0vGExpOcFJt4Z3bQzRfO/MVuo927nfBRNXWjXxZYV91RaH0CRpKMMgr80K7MmbcUDj0utXbhPd5au7mL0+v1ops0qkK58GgnIkB+ibNWMBJIQCWfKUp5BIe1C7zc+hgsbYln+ewwDDQ+WASrSUJ0P+2wz9uLUEUzjFtcXS8YSvNHPui4QZ2lKik7wRZZeKnnYil2578acaBdrOIeFEVZv1/J2wfXdGfZ/BBAXt+DN3mJkxkLYIvfMNnUxtEDAqrjx8imnphLGVaQZG+ZVIQcf4de0f4QR0mnoLlFk1N9Y+RSnD6iBAjeZS2dpMEFRV0d3EQIDAQABoycwJTAjBgNVHSUEHDAaBggrBgEFBQcDAQYIKwYBBQUHAwIGBFUdJQAwDQYJKoZIhvcNAQELBQADggEBALpI3vQOMjRGC7Xeo3hwwRUXfR346LGEWtfMXEkrQWo7DIebM6IDhuSCkQ3EezDwar6mkIoW2lToEAbRMZnC6zBGg8fIWKzqjuNL/0vE3lS3+E1f8aFt6IIcpou4irk+jjnterTGA9FhFKmHQk2QzhBjQc2CkBNib4h3qVaxTmYiZSXBpSXWk2+p+AYKxOGF5h4DCGyOyykDH9FBC1dnKcbn0nP6KBBzd3L8Wx7LWoBbWE8nqBTF2/XvekEz+mMRERHMYKFyDcDhC1gbEUELGgbi6O9AcwADeheK5ySUPE15q5RzRSBagfeFoEJ2goBrRxRAFwq1lSGkkPvnLRiuaYQ=\" ],\\n    \"exp\" : 1624448124602,\\n    \"alg\" : \"RSA-OAEP\",\\n    \"n\" : \"u2qkEacXwFCYnUu9BZF0vGExpOcFJt4Z3bQzRfO_MVuo927nfBRNXWjXxZYV91RaH0CRpKMMgr80K7MmbcUDj0utXbhPd5au7mL0-v1ops0qkK58GgnIkB-ibNWMBJIQCWfKUp5BIe1C7zc-hgsbYln-ewwDDQ-WASrSUJ0P-2wz9uLUEUzjFtcXS8YSvNHPui4QZ2lKik7wRZZeKnnYil2578acaBdrOIeFEVZv1_J2wfXdGfZ_BBAXt-DN3mJkxkLYIvfMNnUxtEDAqrjx8imnphLGVaQZG-ZVIQcf4de0f4QR0mnoLlFk1N9Y-RSnD6iBAjeZS2dpMEFRV0d3EQ\"\\n  } ]\\n}'], 'jansRevision': ['1'], 'objectClass': ['top', 'jansAppConf'], 'ou': ['jans-auth']} 11:35:29 06/21/21 Importing entries from /opt/jans/jans-setup/output/jans-auth/clients.ldif 11:35:29 06/21/21 Querying LDAP for dn inum=1001.0eda93d4-65d9-456f-888a-92e28f2f12f5,ou=clients,o=jans 11:35:29 06/21/21 Adding LDAP dn:inum=1001.0eda93d4-65d9-456f-888a-92e28f2f12f5,ou=clients,o=jans entry:{'displayName': ['oxTrust Admin GUI'], 'inum': ['1001.0eda93d4-65d9-456f-888a-92e28f2f12f5'], 'jansAppTyp': ['web'], 'jansClaimRedirectURI': ['https://test.dd.jans.io/jans-auth/restv1/uma/gather_claims'], 'jansClntSecret': ['DK4tHNiOnJiJfiziPs5KAg=='], 'jansGrantTyp': ['authorization_code', 'implicit', 'refresh_token'], 'jansIdTknSignedRespAlg': ['HS256'], 'jansLogoutSessRequired': ['true'], 'jansLogoutURI': ['https://test.dd.jans.io/identity/ssologout.htm'], 'jansPersistClntAuthzs': ['false'], 'jansPostLogoutRedirectURI': ['https://test.dd.jans.io/identity/finishlogout.htm'], 'jansRedirectURI': ['https://test.dd.jans.io/identity/scim/auth', 'https://test.dd.jans.io/identity/authcode.htm', 'https://test.dd.jans.io/jans-auth/restv1/uma/gather_claims?authentication=true'], 'jansRespTyp': ['code'], 'jansScope': ['inum=F0C4,ou=scopes,o=jans', 'inum=10B2,ou=scopes,o=jans', 'inum=764C,ou=scopes,o=jans'], 'jansSubjectTyp': ['public'], 'jansTknEndpointAuthMethod': ['client_secret_basic'], 'jansTrustedClnt': ['true'], 'objectClass': ['top', 'jansClnt']} 11:35:29 06/21/21 Importing entries from /opt/jans/jans-setup/output/scripts.ldif 11:35:29 06/21/21 Querying LDAP for dn inum=2124-0CF1,ou=scripts,o=jans 11:35:29 06/21/21 Adding LDAP dn:inum=2124-0CF1,ou=scripts,o=jans entry:{'description': ['Cert authentication module'], 'displayName': ['cert'], 'inum': ['2124-0CF1'], 'jansConfProperty': ['{\"value1\":\"chain_cert_file_path\",\"value2\":\"/etc/certs/chain_cert.pem\",\"description\":\"\"}', '{\"value1\":\"credentials_file\",\"value2\":\"/etc/certs/cert_creds.json\",\"description\":\"\"}', '{\"value1\":\"map_user_cert\",\"value2\":\"true\",\"description\":\"\"}', '{\"value1\":\"use_generic_validator\",\"value2\":\"true\",\"description\":\"\"}', '{\"value1\":\"use_path_validator\",\"value2\":\"true\",\"description\":\"\"}', '{\"value1\":\"use_ocsp_validator\",\"value2\":\"false\",\"description\":\"\"}', '{\"value1\":\"use_crl_validator\",\"value2\":\"false\",\"description\":\"\"}', '{\"value1\":\"crl_max_response_size\",\"value2\":\"10485760\",\"description\":\"\"}'], 'jansLevel': ['30'], 'jansModuleProperty': ['{\"value1\":\"location_type\",\"value2\":\"ldap\",\"description\":\"\"}', '{\"value1\":\"usage_type\",\"value2\":\"interactive\",\"description\":\"\"}'], 'jansRevision': ['1'], 'jansScr': ['#\\n# oxAuth is available under the MIT License (2008). See http://opensource.org/licenses/MIT for full text.\\n# Copyright (c) 2016, Janssen\\n#\\n# Author: Yuriy Movchan\\n#\\n\\nfrom io.jans.service.cdi.util import CdiUtil\\nfrom io.jans.model.custom.script.type.auth import PersonAuthenticationType\\nfrom javax.faces.context import FacesContext\\nfrom io.jans.as.server.security import Identity\\nfrom io.jans.as.server.service import AuthenticationService\\nfrom io.jans.as.server.service import UserService\\nfrom io.jans.util import StringHelper\\nfrom io.jans.as.util import ServerUtil\\nfrom io.jans.as.service.common import EncryptionService\\nfrom java.util import Arrays\\nfrom io.jans.as.cert.fingerprint import FingerprintHelper\\nfrom io.jans.as.cert.validation import GenericCertificateVerifier, PathCertificateVerifier, OCSPCertificateVerifier, CRLCertificateVerifier\\nfrom io.jans.as.cert.validation.model import ValidationStatus\\nfrom io.jans.as.util import CertUtil\\nfrom io.jans.as.model.util import CertUtils\\nfrom io.jans.as.service.net import HttpService\\nfrom org.apache.http.params import CoreConnectionPNames\\n\\nimport sys\\nimport base64\\nimport urllib\\n\\nimport java\\nimport json\\n\\nclass PersonAuthentication(PersonAuthenticationType):\\n    def init(self, currentTimeMillis):\\n        self.currentTimeMillis = currentTimeMillis\\n\\n    def init(self, customScript, configurationAttributes):\\n        print \"Cert. Initialization\"\\n\\n        if not (configurationAttributes.containsKey(\"chain_cert_file_path\")):\\n            print \"Cert. Initialization. Property chain_cert_file_path is mandatory\"\\n            return False\\n\\n        if not (configurationAttributes.containsKey(\"map_user_cert\")):\\n            print \"Cert. Initialization. Property map_user_cert is mandatory\"\\n            return False\\n\\n        chain_cert_file_path = configurationAttributes.get(\"chain_cert_file_path\").getValue2()\\n\\n        self.chain_certs = CertUtil.loadX509CertificateFromFile(chain_cert_file_path)\\n        if self.chain_certs == None:\\n            print \"Cert. Initialization. Failed to load chain certificates from \\'%s\\'\" % chain_cert_file_path\\n            return False\\n\\n        print \"Cert. Initialization. Loaded \\'%d\\' chain certificates\" % self.chain_certs.size()\\n        \\n        crl_max_response_size = 5 * 1024 * 1024  # 10Mb\\n        if configurationAttributes.containsKey(\"crl_max_response_size\"):\\n            crl_max_response_size = StringHelper.toInteger(configurationAttributes.get(\"crl_max_response_size\").getValue2(), crl_max_response_size)\\n            print \"Cert. Initialization. CRL max response size is \\'%d\\'\" % crl_max_response_size\\n\\n        # Define array to order methods correctly\\n        self.validator_types = [ \\'generic\\', \\'path\\', \\'ocsp\\', \\'crl\\']\\n        self.validators = { \\'generic\\' : [GenericCertificateVerifier(), False],\\n                            \\'path\\' : [PathCertificateVerifier(False), False],\\n                            \\'ocsp\\' : [OCSPCertificateVerifier(), False],\\n                            \\'crl\\' : [CRLCertificateVerifier(crl_max_response_size), False] }\\n\\n        for type in self.validator_types:\\n            validator_param_name = \"use_%s_validator\" % type\\n            if configurationAttributes.containsKey(validator_param_name):\\n                validator_status = StringHelper.toBoolean(configurationAttributes.get(validator_param_name).getValue2(), False)\\n                self.validators[type][1] = validator_status\\n\\n            print \"Cert. Initialization. Validation method \\'%s\\' status: \\'%s\\'\" % (type, self.validators[type][1])\\n\\n        self.map_user_cert = StringHelper.toBoolean(configurationAttributes.get(\"map_user_cert\").getValue2(), False)\\n        print \"Cert. Initialization. map_user_cert: \\'%s\\'\" % self.map_user_cert\\n\\n        self.enabled_recaptcha = self.initRecaptcha(configurationAttributes)\\n        print \"Cert. Initialization. enabled_recaptcha: \\'%s\\'\" % self.enabled_recaptcha\\n\\n        print \"Cert. Initialized successfully\"\\n\\n        return True   \\n\\n    def destroy(self, configurationAttributes):\\n        print \"Cert. Destroy\"\\n\\n        for type in self.validator_types:\\n            self.validators[type][0].destroy()\\n\\n        print \"Cert. Destroyed successfully\"\\n\\n        return True\\n\\n    def getApiVersion(self):\\n        return 11\\n\\n    def getAuthenticationMethodClaims(self, requestParameters):\\n        return None\\n\\n    def isValidAuthenticationMethod(self, usageType, configurationAttributes):\\n        return True\\n\\n    def getAlternativeAuthenticationMethod(self, usageType, configurationAttributes):\\n        return None\\n\\n    def authenticate(self, configurationAttributes, requestParameters, step):\\n        identity = CdiUtil.bean(Identity)\\n        credentials = identity.getCredentials()\\n\\n        user_name = credentials.getUsername()\\n\\n        userService = CdiUtil.bean(UserService)\\n        authenticationService = CdiUtil.bean(AuthenticationService)\\n\\n        if step == 1:\\n            print \"Cert. Authenticate for step 1\"\\n            login_button = ServerUtil.getFirstValue(requestParameters, \"loginForm:loginButton\")\\n            if StringHelper.isEmpty(login_button):\\n                print \"Cert. Authenticate for step 1. Form were submitted incorrectly\"\\n                return False\\n            if self.enabled_recaptcha:\\n                print \"Cert. Authenticate for step 1. Validating recaptcha response\"\\n                recaptcha_response = ServerUtil.getFirstValue(requestParameters, \"g-recaptcha-response\")\\n\\n                recaptcha_result = self.validateRecaptcha(recaptcha_response)\\n                print \"Cert. Authenticate for step 1. recaptcha_result: \\'%s\\'\" % recaptcha_result\\n                \\n                return recaptcha_result\\n\\n            return True\\n        elif step == 2:\\n            print \"Cert. Authenticate for step 2\"\\n\\n            # Validate if user selected certificate\\n            cert_x509 = self.getSessionAttribute(\"cert_x509\")\\n            if cert_x509 == None:\\n                print \"Cert. Authenticate for step 2. User not selected any certs\"\\n                identity.setWorkingParameter(\"cert_selected\", False)\\n                    \\n                # Return True to inform user how to reset workflow\\n                return True\\n            else:\\n                identity.setWorkingParameter(\"cert_selected\", True)\\n                x509Certificate = self.certFromString(cert_x509)\\n\\n            subjectX500Principal = x509Certificate.getSubjectX500Principal()\\n            print \"Cert. Authenticate for step 2. User selected certificate with DN \\'%s\\'\" % subjectX500Principal\\n            \\n            # Validate certificates which user selected\\n            valid = self.validateCertificate(x509Certificate)\\n            if not valid:\\n                print \"Cert. Authenticate for step 2. Certificate DN \\'%s\\' is not valid\" % subjectX500Principal\\n                identity.setWorkingParameter(\"cert_valid\", False)\\n                \\n                # Return True to inform user how to reset workflow\\n                return True\\n\\n            identity.setWorkingParameter(\"cert_valid\", True)\\n            \\n            # Calculate certificate fingerprint\\n            x509CertificateFingerprint = self.calculateCertificateFingerprint(x509Certificate)\\n            identity.setWorkingParameter(\"cert_x509_fingerprint\", x509CertificateFingerprint)\\n            print \"Cert. Authenticate for step 2. Fingerprint is \\'%s\\' of certificate with DN \\'%s\\'\" % (x509CertificateFingerprint, subjectX500Principal)\\n            \\n            # Attempt to find user by certificate fingerprint\\n            cert_user_external_uid = \"cert:%s\" % x509CertificateFingerprint\\n            print \"Cert. Authenticate for step 2. Attempting to find user by oxExternalUid attribute value %s\" % cert_user_external_uid\\n\\n            find_user_by_external_uid = userService.getUserByAttribute(\"oxExternalUid\", cert_user_external_uid)\\n            if find_user_by_external_uid == None:\\n                print \"Cert. Authenticate for step 2. Failed to find user\"\\n                \\n                if self.map_user_cert:\\n                    print \"Cert. Authenticate for step 2. Storing cert_user_external_uid for step 3\"\\n                    identity.setWorkingParameter(\"cert_user_external_uid\", cert_user_external_uid)\\n                    return True\\n                else:\\n                    print \"Cert. Authenticate for step 2. Mapping cert to user account is not allowed\"\\n                    identity.setWorkingParameter(\"cert_count_login_steps\", 2)\\n                    return False\\n\\n            foundUserName = find_user_by_external_uid.getUserId()\\n            print \"Cert. Authenticate for step 2. foundUserName: \" + foundUserName\\n\\n            logged_in = False\\n            userService = CdiUtil.bean(UserService)\\n            logged_in = authenticationService.authenticate(foundUserName)\\n        \\n            print \"Cert. Authenticate for step 2. Setting count steps to 2\"\\n            identity.setWorkingParameter(\"cert_count_login_steps\", 2)\\n\\n            return logged_in\\n        elif step == 3:\\n            print \"Cert. Authenticate for step 3\"\\n\\n            cert_user_external_uid = self.getSessionAttribute(\"cert_user_external_uid\")\\n            if cert_user_external_uid == None:\\n                print \"Cert. Authenticate for step 3. cert_user_external_uid is empty\"\\n                return False\\n\\n            user_password = credentials.getPassword()\\n\\n            logged_in = False\\n            if (StringHelper.isNotEmptyString(user_name) and StringHelper.isNotEmptyString(user_password)):\\n                logged_in = authenticationService.authenticate(user_name, user_password)\\n\\n            if (not logged_in):\\n                return False\\n\\n            # Double check just to make sure. We did checking in previous step\\n            # Check if there is user which has cert_user_external_uid\\n            # Avoid mapping user cert to more than one IDP account\\n            find_user_by_external_uid = userService.getUserByAttribute(\"oxExternalUid\", cert_user_external_uid)\\n            if find_user_by_external_uid == None:\\n                # Add cert_user_external_uid to user\\'s external GUID list\\n                find_user_by_external_uid = userService.addUserAttribute(user_name, \"oxExternalUid\", cert_user_external_uid)\\n                if find_user_by_external_uid == None:\\n                    print \"Cert. Authenticate for step 3. Failed to update current user\"\\n                    return False\\n\\n                return True\\n        \\n            return True\\n        else:\\n            return False\\n\\n    def prepareForStep(self, configurationAttributes, requestParameters, step):\\n        print \"Cert. Prepare for step %d\" % step\\n        identity = CdiUtil.bean(Identity)\\n        \\n        if step == 1:\\n            if self.enabled_recaptcha:\\n                identity.setWorkingParameter(\"recaptcha_site_key\", self.recaptcha_creds[\\'site_key\\'])\\n        elif step == 2:\\n            # Store certificate in session\\n            facesContext = CdiUtil.bean(FacesContext)\\n            externalContext = facesContext.getExternalContext()\\n            request = externalContext.getRequest()\\n\\n            # Try to get certificate from header X-ClientCert\\n            clientCertificate = externalContext.getRequestHeaderMap().get(\"X-ClientCert\")\\n            if clientCertificate != None:\\n                x509Certificate = self.certFromPemString(clientCertificate)\\n                identity.setWorkingParameter(\"cert_x509\",  self.certToString(x509Certificate))\\n                print \"Cert. Prepare for step 2. Storing user certificate obtained from \\'X-ClientCert\\' header\"\\n                return True\\n\\n            # Try to get certificate from attribute javax.servlet.request.X509Certificate\\n            x509Certificates = request.getAttribute(\\'javax.servlet.request.X509Certificate\\')\\n            if (x509Certificates != None) and (len(x509Certificates) &gt; 0):\\n                identity.setWorkingParameter(\"cert_x509\", self.certToString(x509Certificates[0]))\\n                print \"Cert. Prepare for step 2. Storing user certificate obtained from \\'javax.servlet.request.X509Certificate\\' attribute\"\\n                return True\\n\\n        if step &lt; 4:\\n            return True\\n        else:\\n            return False\\n\\n    def getExtraParametersForStep(self, configurationAttributes, step):\\n        return Arrays.asList(\"cert_selected\", \"cert_valid\", \"cert_x509\", \"cert_x509_fingerprint\", \"cert_count_login_steps\", \"cert_user_external_uid\")\\n\\n    def getCountAuthenticationSteps(self, configurationAttributes):\\n        cert_count_login_steps = self.getSessionAttribute(\"cert_count_login_steps\")\\n        if cert_count_login_steps != None:\\n            return cert_count_login_steps\\n        else:\\n            return 3\\n\\n    def getPageForStep(self, configurationAttributes, step):\\n        if step == 1:\\n            return \"/auth/cert/login.xhtml\"\\n        if step == 2:\\n            return \"/auth/cert/cert-login.xhtml\"\\n        elif step == 3:\\n            cert_selected = self.getSessionAttribute(\"cert_selected\")\\n            if True != cert_selected:\\n                return \"/auth/cert/cert-not-selected.xhtml\"\\n\\n            cert_valid = self.getSessionAttribute(\"cert_valid\")\\n            if True != cert_valid:\\n                return \"/auth/cert/cert-invalid.xhtml\"\\n            \\n            return \"/login.xhtml\"\\n\\n        return \"\"\\n\\n    def logout(self, configurationAttributes, requestParameters):\\n        return True\\n\\n    def processBasicAuthentication(self, credentials):\\n        userService = CdiUtil.bean(UserService)\\n        authenticationService = CdiUtil.bean(AuthenticationService)\\n\\n        user_name = credentials.getUsername()\\n        user_password = credentials.getPassword()\\n\\n        logged_in = False\\n        if (StringHelper.isNotEmptyString(user_name) and StringHelper.isNotEmptyString(user_password)):\\n            logged_in = authenticationService.authenticate(user_name, user_password)\\n\\n        if (not logged_in):\\n            return None\\n\\n        find_user_by_uid = authenticationService.getAuthenticatedUser()\\n        if (find_user_by_uid == None):\\n            print \"Cert. Process basic authentication. Failed to find user \\'%s\\'\" % user_name\\n            return None\\n        \\n        return find_user_by_uid\\n\\n    def getSessionAttribute(self, attribute_name):\\n        identity = CdiUtil.bean(Identity)\\n\\n        # Try to get attribute value from Seam event context\\n        if identity.isSetWorkingParameter(attribute_name):\\n            return identity.getWorkingParameter(attribute_name)\\n        \\n        # Try to get attribute from persistent session\\n        session_id = identity.getSessionId()\\n        if session_id == None:\\n            return None\\n\\n        session_attributes = session_id.getSessionAttributes()\\n        if session_attributes == None:\\n            return None\\n\\n        if session_attributes.containsKey(attribute_name):\\n            return session_attributes.get(attribute_name)\\n\\n        return None\\n\\n    def calculateCertificateFingerprint(self, x509Certificate):\\n        print \"Cert. Calculate fingerprint for certificate DN \\'%s\\'\" % x509Certificate.getSubjectX500Principal()\\n        \\n        publicKey = x509Certificate.getPublicKey()\\n        \\n        # Use oxAuth implementation\\n        fingerprint = FingerprintHelper.getPublicKeySshFingerprint(publicKey)\\n        \\n        return fingerprint      \\n\\n    def validateCertificate(self, x509Certificate):\\n        subjectX500Principal = x509Certificate.getSubjectX500Principal()\\n\\n        print \"Cert. Validating certificate with DN \\'%s\\'\" % subjectX500Principal\\n        \\n        validation_date = java.util.Date()\\n\\n        for type in self.validator_types:\\n            if self.validators[type][1]:\\n                result = self.validators[type][0].validate(x509Certificate, self.chain_certs, validation_date)\\n                print \"Cert. Validate certificate: \\'%s\\'. Validation method \\'%s\\' result: \\'%s\\'\" % (subjectX500Principal, type, result)\\n                \\n                if (result.getValidity() != ValidationStatus.CertificateValidity.VALID):\\n                    print \"Cert. Certificate: \\'%s\\' is invalid\" % subjectX500Principal\\n                    return False\\n        \\n        return True\\n\\n    def certToString(self, x509Certificate):\\n        if x509Certificate == None:\\n            return None\\n        return base64.b64encode(x509Certificate.getEncoded())\\n\\n    def certFromString(self, x509CertificateEncoded):\\n        x509CertificateDecoded = base64.b64decode(x509CertificateEncoded)\\n        return CertUtils.x509CertificateFromBytes(x509CertificateDecoded)\\n\\n    def certFromPemString(self, pemCertificate):\\n        x509CertificateEncoded = pemCertificate.replace(\"-----BEGIN CERTIFICATE-----\", \"\").replace(\"-----END CERTIFICATE-----\", \"\").strip()\\n        return self.certFromString(x509CertificateEncoded)\\n\\n    def initRecaptcha(self, configurationAttributes):\\n        print \"Cert. Initialize recaptcha\"\\n        if not configurationAttributes.containsKey(\"credentials_file\"):\\n            return False\\n\\n        cert_creds_file = configurationAttributes.get(\"credentials_file\").getValue2()\\n\\n        # Load credentials from file\\n        f = open(cert_creds_file, \\'r\\')\\n        try:\\n            creds = json.loads(f.read())\\n        except:\\n            print \"Cert. Initialize recaptcha. Failed to load credentials from file: %s\" % cert_creds_file\\n            return False\\n        finally:\\n            f.close()\\n        \\n        try:\\n            recaptcha_creds = creds[\"recaptcha\"]\\n        except:\\n            print \"Cert. Initialize recaptcha. Invalid credentials file \\'%s\\' format:\" % cert_creds_file\\n            return False\\n        \\n        self.recaptcha_creds = None\\n        if recaptcha_creds[\"enabled\"]:\\n            print \"Cert. Initialize recaptcha. Recaptcha is enabled\"\\n\\n            encryptionService = CdiUtil.bean(EncryptionService)\\n\\n            site_key = recaptcha_creds[\"site_key\"]\\n            secret_key = recaptcha_creds[\"secret_key\"]\\n\\n            try:\\n                site_key = encryptionService.decrypt(site_key)\\n            except:\\n                # Ignore exception. Value is not encrypted\\n                print \"Cert. Initialize recaptcha. Assuming that \\'site_key\\' in not encrypted\"\\n\\n            try:\\n                secret_key = encryptionService.decrypt(secret_key)\\n            except:\\n                # Ignore exception. Value is not encrypted\\n                print \"Cert. Initialize recaptcha. Assuming that \\'secret_key\\' in not encrypted\"\\n\\n            \\n            self.recaptcha_creds = { \\'site_key\\' : site_key, \"secret_key\" : secret_key }\\n            print \"Cert. Initialize recaptcha. Recaptcha is configured correctly\"\\n\\n            return True\\n        else:\\n            print \"Cert. Initialize recaptcha. Recaptcha is disabled\"\\n\\n        return False\\n\\n    def validateRecaptcha(self, recaptcha_response):\\n        print \"Cert. Validate recaptcha response\"\\n\\n        facesContext = CdiUtil.bean(FacesContext)\\n        request = facesContext.getExternalContext().getRequest()\\n\\n        remoteip = ServerUtil.getIpAddress(request)\\n        print \"Cert. Validate recaptcha response. remoteip: \\'%s\\'\" % remoteip\\n\\n        httpService = CdiUtil.bean(HttpService)\\n\\n        http_client = httpService.getHttpsClient()\\n        http_client_params = http_client.getParams()\\n        http_client_params.setIntParameter(CoreConnectionPNames.CONNECTION_TIMEOUT, 15 * 1000)\\n        \\n        recaptcha_validation_url = \"https://www.google.com/recaptcha/api/siteverify\"\\n        recaptcha_validation_request = urllib.urlencode({ \"secret\" : self.recaptcha_creds[\\'secret_key\\'], \"response\" : recaptcha_response, \"remoteip\" : remoteip })\\n        recaptcha_validation_headers = { \"Content-type\" : \"application/x-www-form-urlencoded\", \"Accept\" : \"application/json\" }\\n\\n        try:\\n            http_service_response = httpService.executePost(http_client, recaptcha_validation_url, None, recaptcha_validation_headers, recaptcha_validation_request)\\n            http_response = http_service_response.getHttpResponse()\\n        except:\\n            print \"Cert. Validate recaptcha response. Exception: \", sys.exc_info()[1]\\n            return False\\n\\n        try:\\n            if not httpService.isResponseStastusCodeOk(http_response):\\n                print \"Cert. Validate recaptcha response. Get invalid response from validation server: \", str(http_response.getStatusLine().getStatusCode())\\n                httpService.consume(http_response)\\n                return False\\n    \\n            response_bytes = httpService.getResponseContent(http_response)\\n            response_string = httpService.convertEntityToString(response_bytes)\\n            httpService.consume(http_response)\\n        finally:\\n            http_service_response.closeConnection()\\n\\n        if response_string == None:\\n            print \"Cert. Validate recaptcha response. Get empty response from validation server\"\\n            return False\\n        \\n        response = json.loads(response_string)\\n        \\n        return response[\"success\"]\\n\\n    def getNextStep(self, configurationAttributes, requestParameters, step):\\n        return -1\\n\\n    def getLogoutExternalUrl(self, configurationAttributes, requestParameters):\\n        print \"Get external logout URL call\"\\n        return None'], 'jansScrTyp': ['person_authentication'], 'objectClass': ['top', 'jansCustomScr'], 'jansEnabled': ['false'], 'jansProgLng': ['python']} 11:35:29 06/21/21 Querying LDAP for dn inum=CB5B-3211,ou=scripts,o=jans 11:35:29 06/21/21 Adding LDAP dn:inum=CB5B-3211,ou=scripts,o=jans entry:{'description': ['Permission Dynamic Scope script'], 'displayName': ['dynamic_permission'], 'inum': ['CB5B-3211'], 'jansLevel': ['100'], 'jansModuleProperty': ['{\"value1\":\"location_type\",\"value2\":\"ldap\",\"description\":\"\"}'], 'jansRevision': ['1'], 'jansScr': ['# oxAuth is available under the MIT License (2008). See http://opensource.org/licenses/MIT for full text.\\r\\n# Copyright (c) 2016, Janssen\\r\\n#\\r\\n# Author: Yuriy Movchan\\r\\n#\\r\\n\\r\\nfrom io.jans.model.custom.script.type.scope import DynamicScopeType\\r\\nfrom io.jans.service.cdi.util import CdiUtil\\r\\nfrom io.jans.as.server.service import UserService\\r\\nfrom io.jans.util import StringHelper, ArrayHelper\\r\\nfrom java.util import Arrays, ArrayList\\r\\n\\r\\nimport java\\r\\n\\r\\nclass DynamicScope(DynamicScopeType):\\r\\n    def init(self, currentTimeMillis):\\r\\n        self.currentTimeMillis = currentTimeMillis\\r\\n\\r\\n    def init(self, customScript, configurationAttributes):\\r\\n        print \"Permission dynamic scope. Initialization\"\\r\\n\\r\\n        print \"Permission dynamic scope. Initialized successfully\"\\r\\n\\r\\n        return True   \\r\\n\\r\\n    def destroy(self, configurationAttributes):\\r\\n        print \"Permission dynamic scope. Destroy\"\\r\\n        print \"Permission dynamic scope. Destroyed successfully\"\\r\\n        return True   \\r\\n\\r\\n    # Update Json Web token before signing/encrypring it\\r\\n    #   dynamicScopeContext is io.jans.as.service.external.context.DynamicScopeExternalContext\\r\\n    #   configurationAttributes is java.util.Map\\r\\n    def update(self, dynamicScopeContext, configurationAttributes):\\r\\n        print \"Permission dynamic scope scope. Update method\"\\r\\n\\r\\n        authorizationGrant = dynamicScopeContext.getAuthorizationGrant()\\r\\n        user = dynamicScopeContext.getUser()\\r\\n        jsonWebResponse = dynamicScopeContext.getJsonWebResponse()\\r\\n        claims = jsonWebResponse.getClaims()\\r\\n\\r\\n        userService = CdiUtil.bean(UserService)\\r\\n        roles = userService.getCustomAttribute(user, \"role\")\\r\\n        if roles != None:\\r\\n            claims.setClaim(\"role\", roles.getValues())\\r\\n\\r\\n        return True\\r\\n\\r\\n    def getSupportedClaims(self, configurationAttributes):\\r\\n        return Arrays.asList(\"role\")\\r\\n\\r\\n    def getApiVersion(self):\\r\\n        return 11\\r\\n'], 'jansScrTyp': ['dynamic_scope'], 'objectClass': ['top', 'jansCustomScr'], 'jansEnabled': ['true'], 'jansProgLng': ['python']} 11:35:29 06/21/21 Querying LDAP for dn inum=031C-4A65,ou=scripts,o=jans 11:35:29 06/21/21 Adding LDAP dn:inum=031C-4A65,ou=scripts,o=jans entry:{'description': ['Sample Id Generator script'], 'displayName': ['id_generator'], 'inum': ['031C-4A65'], 'jansLevel': ['100'], 'jansModuleProperty': ['{\"value1\":\"location_type\",\"value2\":\"ldap\",\"description\":\"\"}'], 'jansRevision': ['1'], 'jansScr': ['# oxAuth is available under the MIT License (2008). See http://opensource.org/licenses/MIT for full text.\\n# Copyright (c) 2016, Janssen\\n#\\n# Author: Yuriy Movchan\\n#\\n\\nfrom io.jans.model.custom.script.type.id import IdGeneratorType\\nfrom io.jans.util import StringHelper, ArrayHelper\\nfrom java.util import Arrays, ArrayList\\n\\nimport java\\n\\nclass IdGenerator(IdGeneratorType):\\n    def init(self, currentTimeMillis):\\n        self.currentTimeMillis = currentTimeMillis\\n\\n    def init(self, customScript, configurationAttributes):\\n        print \"Id generator. Initialization\"\\n        print \"Id generator. Initialized successfully\"\\n\\n        return True   \\n\\n    def destroy(self, configurationAttributes):\\n        print \"Id generator. Destroy\"\\n        print \"Id generator. Destroyed successfully\"\\n        return True   \\n\\n    def getApiVersion(self):\\n        return 11\\n\\n    # Id generator init method\\n    #   appId is application Id\\n    #   idType is Id Type\\n    #   idPrefix is Id Prefix\\n    #   user is io.jans.oxtrust.model.JanssenCustomPerson\\n    #   configurationAttributes is java.util.Map\\n    def generateId(self, appId, idType, idPrefix, configurationAttributes):\\n        print \"Id generator. Generate Id\"\\n        print \"Id generator. Generate Id. AppId: \\'\", appId, \"\\', IdType: \\'\", idType, \"\\', IdPrefix: \\'\", idPrefix, \"\\'\"\\n\\n        # Return None or empty string to trigger default Id generation method\\n        return None\\n'], 'jansScrTyp': ['id_generator'], 'objectClass': ['top', 'jansCustomScr'], 'jansEnabled': ['false'], 'jansProgLng': ['python']} 11:35:29 06/21/21 Querying LDAP for dn inum=031C-5621,ou=scripts,o=jans 11:35:29 06/21/21 Adding LDAP dn:inum=031C-5621,ou=scripts,o=jans entry:{'description': ['Sample Dynamic Scope script for org_name'], 'displayName': ['org_name'], 'inum': ['031C-5621'], 'jansLevel': ['100'], 'jansModuleProperty': ['{\"value1\":\"location_type\",\"value2\":\"ldap\",\"description\":\"\"}'], 'jansRevision': ['1'], 'jansScr': ['# oxAuth is available under the MIT License (2008). See http://opensource.org/licenses/MIT for full text.\\r\\n# Copyright (c) 2016, Janssen\\r\\n#\\r\\n# Author: Yuriy Movchan\\r\\n#\\r\\n\\r\\nfrom io.jans.model.custom.script.type.scope import DynamicScopeType\\r\\nfrom io.jans.as.server.service import UserService\\r\\nfrom io.jans.util import StringHelper, ArrayHelper\\r\\nfrom java.util import Arrays, ArrayList\\r\\n\\r\\nimport java\\r\\n\\r\\nclass DynamicScope(DynamicScopeType):\\r\\n    def init(self, currentTimeMillis):\\r\\n        self.currentTimeMillis = currentTimeMillis\\r\\n\\r\\n    def init(self, customScript, configurationAttributes):\\r\\n        print \"Dynamic scope. Initialization\"\\r\\n\\r\\n        print \"Dynamic scope. Initialized successfully\"\\r\\n\\r\\n        return True   \\r\\n\\r\\n    def destroy(self, configurationAttributes):\\r\\n        print \"Dynamic scope. Destroy\"\\r\\n        print \"Dynamic scope. Destroyed successfully\"\\r\\n        return True   \\r\\n\\r\\n    # Update Json Web token before signing/encrypring it\\r\\n    #   dynamicScopeContext is io.jans.as.service.external.context.DynamicScopeExternalContext\\r\\n    #   configurationAttributes is java.util.Map\\r\\n    def update(self, dynamicScopeContext, configurationAttributes):\\r\\n        print \"Dynamic scope. Update method\"\\r\\n\\r\\n        dynamicScopes = dynamicScopeContext.getDynamicScopes()\\r\\n        authorizationGrant = dynamicScopeContext.getAuthorizationGrant()\\r\\n        user = dynamicScopeContext.getUser()\\r\\n        jsonWebResponse = dynamicScopeContext.getJsonWebResponse()\\r\\n        claims = jsonWebResponse.getClaims()\\r\\n\\r\\n        # Add organization name if there is scope = org_name\\r\\n        claims.setClaim(\"org_name\", \"Janssen, Inc.\")\\r\\n\\r\\n        return True\\r\\n\\r\\n    def getSupportedClaims(self, configurationAttributes):\\r\\n        return Arrays.asList(\"org_name\")\\r\\n\\r\\n    def getApiVersion(self):\\r\\n        return 11\\r\\n'], 'jansScrTyp': ['dynamic_scope'], 'objectClass': ['top', 'jansCustomScr'], 'jansEnabled': ['false'], 'jansProgLng': ['python']} 11:35:29 06/21/21 Querying LDAP for dn inum=031C-5622,ou=scripts,o=jans 11:35:29 06/21/21 Adding LDAP dn:inum=031C-5622,ou=scripts,o=jans entry:{'description': ['Sample Dynamic Scope script for work_phone'], 'displayName': ['work_phone'], 'inum': ['031C-5622'], 'jansLevel': ['100'], 'jansModuleProperty': ['{\"value1\":\"location_type\",\"value2\":\"ldap\",\"description\":\"\"}'], 'jansRevision': ['1'], 'jansScr': ['# oxAuth is available under the MIT License (2008). See http://opensource.org/licenses/MIT for full text.\\r\\n# Copyright (c) 2016, Janssen\\r\\n#\\r\\n# Author: Yuriy Movchan\\r\\n#\\r\\n\\r\\nfrom io.jans.model.custom.script.type.scope import DynamicScopeType\\r\\nfrom io.jans.service.cdi.util import CdiUtil\\r\\nfrom io.jans.as.server.service import UserService\\r\\nfrom io.jans.util import StringHelper, ArrayHelper\\r\\nfrom java.util import Arrays, ArrayList\\r\\n\\r\\nimport java\\r\\n\\r\\nclass DynamicScope(DynamicScopeType):\\r\\n    def init(self, currentTimeMillis):\\r\\n        self.currentTimeMillis = currentTimeMillis\\r\\n\\r\\n    def init(self, customScript, configurationAttributes):\\r\\n        print \"Dynamic scope. Initialization\"\\r\\n\\r\\n        print \"Dynamic scope. Initialized successfully\"\\r\\n\\r\\n        return True   \\r\\n\\r\\n    def destroy(self, configurationAttributes):\\r\\n        print \"Dynamic scope. Destroy\"\\r\\n        print \"Dynamic scope. Destroyed successfully\"\\r\\n        return True   \\r\\n\\r\\n    # Update Json Web token before signing/encrypring it\\r\\n    #   dynamicScopeContext is io.jans.as.service.external.context.DynamicScopeExternalContext\\r\\n    #   configurationAttributes is java.util.Map\\r\\n    def update(self, dynamicScopeContext, configurationAttributes):\\r\\n        print \"Dynamic scope. Update method\"\\r\\n\\r\\n        dynamicScopes = dynamicScopeContext.getDynamicScopes()\\r\\n        authorizationGrant = dynamicScopeContext.getAuthorizationGrant()\\r\\n        user = dynamicScopeContext.getUser()\\r\\n        jsonWebResponse = dynamicScopeContext.getJsonWebResponse()\\r\\n        claims = jsonWebResponse.getClaims()\\r\\n\\r\\n        # Add work phone if there is scope = work_phone\\r\\n        userService = CdiUtil.bean(UserService)\\r\\n        workPhone = userService.getCustomAttribute(user, \"telephoneNumber\")\\r\\n        if workPhone != None:\\r\\n            claims.setClaim(\"work_phone\", workPhone.getValues())\\r\\n\\r\\n        return True\\r\\n\\r\\n    def getSupportedClaims(self, configurationAttributes):\\r\\n        return Arrays.asList(\"work_phone\")\\r\\n\\r\\n    def getApiVersion(self):\\r\\n        return 11\\r\\n'], 'jansScrTyp': ['dynamic_scope'], 'objectClass': ['top', 'jansCustomScr'], 'jansEnabled': ['false'], 'jansProgLng': ['python']} 11:35:29 06/21/21 Querying LDAP for dn inum=13D3-E7AD,ou=scripts,o=jans 11:35:29 06/21/21 Adding LDAP dn:inum=13D3-E7AD,ou=scripts,o=jans entry:{'description': ['Sample Cache Refresh script'], 'displayName': ['cache_refresh'], 'inum': ['13D3-E7AD'], 'jansLevel': ['100'], 'jansModuleProperty': ['{\"value1\":\"location_type\",\"value2\":\"ldap\",\"description\":\"\"}'], 'jansRevision': ['1'], 'jansScr': ['# oxAuth is available under the MIT License (2008). See http://opensource.org/licenses/MIT for full text.\\n# Copyright (c) 2016, Janssen\\n#\\n# Author: Yuriy Movchan\\n#\\n\\nfrom io.jans.model.custom.script.type.user import CacheRefreshType\\nfrom io.jans.util import StringHelper, ArrayHelper\\nfrom java.util import Arrays, ArrayList\\nfrom io.jans.oxtrust.model import JanssenCustomAttribute\\nfrom io.jans.model.custom.script.model.bind import BindCredentials\\n\\nimport java\\n\\nclass CacheRefresh(CacheRefreshType):\\n    def init(self, currentTimeMillis):\\n        self.currentTimeMillis = currentTimeMillis\\n\\n    def init(self, customScript, configurationAttributes):\\n        print \"Cache refresh. Initialization\"\\n        print \"Cache refresh. Initialized successfully\"\\n\\n        return True   \\n\\n    def destroy(self, configurationAttributes):\\n        print \"Cache refresh. Destroy\"\\n        print \"Cache refresh. Destroyed successfully\"\\n        return True\\n\\n    # Check if this instance conform starting conditions \\n    #   configurationAttributes is java.util.Map\\n    #   return True/False\\n    def isStartProcess(self, configurationAttributes):\\n        print \"Cache refresh. Is start process method\"\\n\\n        return False\\n    \\n    # Get bind credentials required to access source server \\n    #   configId is the source server\\n    #   configurationAttributes is java.util.Map\\n    #   return None (use password from configuration) or io.jans.model.custom.script.model.bind.BindCredentials\\n    def getBindCredentials(self, configId, configurationAttributes):\\n        print \"Cache refresh. GetBindCredentials method\"\\n#        if configId == \"source\":\\n#            return BindCredentials(\"cn=Directory Manager\", \"password\")\\n\\n        return None\\n\\n    # Update user entry before persist it\\n    #   user is io.jans.oxtrust.model.JanssenCustomPerson\\n    #   configurationAttributes is java.util.Map\\n    def updateUser(self, user, configurationAttributes):\\n        print \"Cache refresh. UpdateUser method\"\\n\\n        attributes = user.getCustomAttributes()\\n\\n        # Add new attribute preferredLanguage\\n        attrPrefferedLanguage = JanssenCustomAttribute(\"preferredLanguage\", \"en-us\")\\n        attributes.add(attrPrefferedLanguage)\\n\\n        # Add new attribute userPassword\\n        attrUserPassword = JanssenCustomAttribute(\"userPassword\", \"test\")\\n        attributes.add(attrUserPassword)\\n\\n        # Update givenName attribute\\n        for attribute in attributes:\\n            attrName = attribute.getName()\\n            if ((\"givenname\" == StringHelper.toLowerCase(attrName)) and StringHelper.isNotEmpty(attribute.getValue())):\\n                attribute.setValue(StringHelper.removeMultipleSpaces(attribute.getValue()) + \" (updated)\")\\n\\n        return True\\n\\n    def getApiVersion(self):\\n        return 11\\n'], 'jansScrTyp': ['cache_refresh'], 'objectClass': ['top', 'jansCustomScr'], 'jansEnabled': ['false'], 'jansProgLng': ['python']} 11:35:29 06/21/21 Querying LDAP for dn inum=24FD-B96E,ou=scripts,o=jans 11:35:29 06/21/21 Adding LDAP dn:inum=24FD-B96E,ou=scripts,o=jans entry:{'description': ['OTP Validation of passwords using Yubicloud authentication module'], 'displayName': ['yubicloud'], 'inum': ['24FD-B96E'], 'jansConfProperty': ['{\"value1\":\"yubicloud_uri\",\"value2\":\"api.yubico.com\",\"description\":\"\"}', '{\"value1\":\"yubicloud_api_key\",\"value2\":\"\",\"description\":\"\"}', '{\"value1\":\"yubicloud_id\",\"value2\":\"\",\"description\":\"\"}'], 'jansLevel': ['40'], 'jansModuleProperty': ['{\"value1\":\"usage_type\",\"value2\":\"interactive\",\"description\":\"\"}', '{\"value1\":\"location_type\",\"value2\":\"ldap\",\"description\":\"\"}'], 'jansRevision': ['1'], 'jansScr': ['# oxAuth is available under the MIT License (2008). See http://opensource.org/licenses/MIT for full text.\\n# Copyright (c) 2016, Janssen\\n#\\n# Author: Yuriy Movchan, Arunmozhi\\n#\\n\\nfrom io.jans.service.cdi.util import CdiUtil\\nfrom io.jans.as.server.security import Identity\\nfrom io.jans.model.custom.script.type.auth import PersonAuthenticationType\\nfrom io.jans.as.service import UserService\\nfrom io.jans.util import StringHelper\\n\\nimport java\\n\\nimport urllib2\\nimport urllib\\nimport uuid\\n\\n\\nclass PersonAuthentication(PersonAuthenticationType):\\n    def init(self, currentTimeMillis):\\n        self.currentTimeMillis = currentTimeMillis\\n\\n    def init(self, customScript, configurationAttributes):\\n        print \"Yubicloud. Initialization\"\\n\\n        self.api_server = configurationAttributes.get(\"yubicloud_uri\").getValue2()\\n        self.api_key = configurationAttributes.get(\"yubicloud_api_key\").getValue2()\\n        self.client_id = configurationAttributes.get(\"yubicloud_id\").getValue2()\\n\\n        return True\\n\\n    def destroy(self, configurationAttributes):\\n        print \"Yubicloud. Destroyed successfully\"\\n        return True\\n\\n    def getApiVersion(self):\\n        return 11\\n        \\n    def getAuthenticationMethodClaims(self, requestParameters):\\n        return None\\n        \\n    def isValidAuthenticationMethod(self, usageType, configurationAttributes):\\n        return True\\n\\n    def getAlternativeAuthenticationMethod(self, usageType, configurationAttributes):\\n        return None\\n\\n    def authenticate(self, configurationAttributes, requestParameters, step):\\n        if (step == 1):\\n            print \"Yubicloud. Authenticate for step 1\"\\n\\n            identity = CdiUtil.bean(Identity)\\n            credentials = identity.getCredentials()\\n\\n            username = credentials.getUsername()\\n            otp = credentials.getPassword()\\n\\n            # Validate otp length\\n            if len(otp) &lt; 32 or len(otp) &gt; 48:\\n                print \"Yubicloud. Invalid OTP length\"\\n                return False\\n\\n            user_service = CdiUtil.bean(UserService)\\n            user = user_service.getUser(username)\\n\\n            public_key = user.getAttribute(\\'yubikeyId\\')\\n\\n            # Match the user with the yubikey\\n            if public_key not in otp:\\n                print \"Yubicloud. Public Key not matching OTP\"\\n                return False\\n\\n            data = \"\"\\n            try:\\n                nonce = str(uuid.uuid4()).replace(\"-\", \"\")\\n                params = urllib.urlencode({\"id\": self.client_id, \"otp\": otp, \"nonce\": nonce})\\n                url = \"https://\" + self.api_server + \"/wsapi/2.0/verify/?\" + params\\n                f = urllib2.urlopen(url)\\n                data = f.read()\\n            except Exception as e:\\n                print \"Yubicloud. Exception \", e\\n\\n            if \\'status=OK\\' in data:\\n                user_service.authenticate(username)\\n                print \"Yubicloud. Authentication Successful\"\\n                return True\\n\\n            print \"Yubicloud. End of Step 1. Returning False.\"\\n            return False\\n        else:\\n            return False\\n\\n    def prepareForStep(self, configurationAttributes, requestParameters, step):\\n        if (step == 1):\\n            print \"Yubicloud. Prepare for Step 1\"\\n            return True\\n        else:\\n            return False\\n\\n    def getExtraParametersForStep(self, configurationAttributes, step):\\n        return None\\n\\n    def getCountAuthenticationSteps(self, configurationAttributes):\\n        return 1\\n\\n    def getPageForStep(self, configurationAttributes, step):\\n        return \"\"\\n\\n    def getNextStep(self, configurationAttributes, requestParameters, step):\\n        return -1\\n\\n    def getLogoutExternalUrl(self, configurationAttributes, requestParameters):\\n        print \"Get external logout URL call\"\\n        return None\\n\\n    def logout(self, configurationAttributes, requestParameters):\\n        return True\\n'], 'jansScrTyp': ['person_authentication'], 'objectClass': ['top', 'jansCustomScr'], 'jansEnabled': ['false'], 'jansProgLng': ['python']} 11:35:29 06/21/21 Querying LDAP for dn inum=2DAF-F995,ou=scripts,o=jans 11:35:29 06/21/21 Adding LDAP dn:inum=2DAF-F995,ou=scripts,o=jans entry:{'description': ['Sample UMA RPT Policy'], 'displayName': ['uma_rpt_policy'], 'inum': ['2DAF-F995'], 'jansConfProperty': ['{\"value1\":\"allowed_clients\",\"value2\":\"\",\"description\":\"\"}'], 'jansLevel': ['100'], 'jansModuleProperty': ['{\"value1\":\"location_type\",\"value2\":\"ldap\",\"description\":\"\"}'], 'jansRevision': ['1'], 'jansScr': ['# oxAuth is available under the MIT License (2008). See http://opensource.org/licenses/MIT for full text.\\r\\n# Copyright (c) 2017, Janssen\\r\\n#\\r\\n# Author: Yuriy Zabrovarnyy\\r\\n#\\r\\n# Call sequence\\r\\n# 1. First is call constructor of the Script init\\r\\n# 2. Next init() method\\r\\n# 3. Next getRequiredClaims() - method returns required claims, so UMA engine checks whether\\r\\n#    in request RP provided all claims that are required. Pay attention that there can be\\r\\n#    multiple scripts bound to the scopes, means that UMA engine will build set of required claims\\r\\n#    from all scripts. If not all claims are provided need_info error is sent to RP.\\r\\n#    During need_info construction getClaimsGatheringScriptName() method is called\\r\\n# 4. authorize() method is called if all required claims are provided.\\r\\n# 5. destroy()\\r\\n\\r\\nfrom io.jans.model.custom.script.type.uma import UmaRptPolicyType\\r\\nfrom io.jans.model.uma import ClaimDefinitionBuilder\\r\\nfrom java.lang import String\\r\\n\\r\\nclass UmaRptPolicy(UmaRptPolicyType):\\r\\n    def init(self, currentTimeMillis):\\r\\n        self.currentTimeMillis = currentTimeMillis\\r\\n\\r\\n    def init(self, customScript, configurationAttributes):\\r\\n        print \"RPT Policy. Initializing ...\"\\r\\n        print \"RPT Policy. Initialized successfully\"\\r\\n\\r\\n        return True\\r\\n\\r\\n    def destroy(self, configurationAttributes):\\r\\n        print \"RPT Policy. Destroying ...\"\\r\\n        print \"RPT Policy. Destroyed successfully\"\\r\\n        return True\\r\\n\\r\\n    def getApiVersion(self):\\r\\n        return 11\\r\\n\\r\\n    # Returns required claims definitions.\\r\\n    # This method must provide definition of all claims that is used in \\'authorize\\' method.\\r\\n    # Note : name in both places must match.\\r\\n    # %1$s - placeholder for issuer. It uses standard Java Formatter, docs : https://docs.oracle.com/javase/7/docs/api/java/util/Formatter.html\\r\\n    def getRequiredClaims(self, context): # context is reference of io.jans.as.uma.authorization.UmaAuthorizationContext\\r\\n        json = \"\"\"[\\r\\n        {\\r\\n            \"issuer\" : [ \"%1$s\" ],\\r\\n            \"name\" : \"country\",\\r\\n            \"claim_token_format\" : [ \"http://openid.net/specs/openid-connect-core-1_0.html#IDToken\" ],\\r\\n            \"claim_type\" : \"string\",\\r\\n            \"friendly_name\" : \"country\"\\r\\n        },\\r\\n        {\\r\\n            \"issuer\" : [ \"%1$s\" ],\\r\\n            \"name\" : \"city\",\\r\\n            \"claim_token_format\" : [ \"http://openid.net/specs/openid-connect-core-1_0.html#IDToken\" ],\\r\\n            \"claim_type\" : \"string\",\\r\\n            \"friendly_name\" : \"city\"\\r\\n        }\\r\\n        ]\"\"\"\\r\\n        context.addRedirectUserParam(\"customUserParam1\", \"value1\") # pass some custom parameters to need_info uri. It can be removed if you don\\'t need custom parameters.\\r\\n        return ClaimDefinitionBuilder.build(String.format(json, context.getIssuer()))\\r\\n\\r\\n    # Main authorization method. Must return True or False.\\r\\n    def authorize(self, context): # context is reference of io.jans.as.uma.authorization.UmaAuthorizationContext\\r\\n        print \"RPT Policy. Authorizing ...\"\\r\\n\\r\\n        if context.getClaim(\"country\") == \\'US\\' and context.getClaim(\"city\") == \\'NY\\':\\r\\n            print \"Authorized successfully!\"\\r\\n            return True\\r\\n\\r\\n        return False\\r\\n\\r\\n    # Returns name of the Claims-Gathering script which will be invoked if need_info error is returned.\\r\\n    def getClaimsGatheringScriptName(self, context): # context is reference of io.jans.as.uma.authorization.UmaAuthorizationContext\\r\\n        context.addRedirectUserParam(\"customUserParam2\", \"value2\") # pass some custom parameters to need_info uri. It can be removed if you don\\'t need custom parameters.\\r\\n        return \"sampleClaimsGathering\"'], 'jansScrTyp': ['uma_rpt_policy'], 'objectClass': ['top', 'jansCustomScr'], 'jansEnabled': ['false'], 'jansProgLng': ['python']} 11:35:29 06/21/21 Querying LDAP for dn inum=2DAF-F9A5,ou=scripts,o=jans 11:35:29 06/21/21 Adding LDAP dn:inum=2DAF-F9A5,ou=scripts,o=jans entry:{'description': ['Client authorization UMA RPT Policy for SCIM and Passport'], 'displayName': ['scim_access_policy'], 'inum': ['2DAF-F9A5'], 'jansConfProperty': ['{\"value1\":\"allowed_clients\",\"value2\":\"\",\"description\":\"\"}'], 'jansLevel': ['100'], 'jansModuleProperty': ['{\"value1\":\"location_type\",\"value2\":\"ldap\",\"description\":\"\"}'], 'jansRevision': ['1'], 'jansScr': ['# oxAuth is available under the MIT License (2008). See http://opensource.org/licenses/MIT for full text.\\n# Copyright (c) 2017, Janssen\\n#\\n# Author: Jose Gonzalez\\n# Adapted from previous 3.0.1 script of Yuriy Movchan\\n#\\n# oxConfigurationProperty required:\\n#   allowed_clients - comma separated list of dns of allowed clients\\n#   (i.e. the SCIM RP client)\\n\\nfrom io.jans.as.model.uma import UmaConstants\\nfrom io.jans.model.uma import ClaimDefinitionBuilder\\nfrom io.jans.model.custom.script.type.uma import UmaRptPolicyType\\nfrom io.jans.service.cdi.util import CdiUtil\\nfrom io.jans.util import StringHelper, ArrayHelper\\nfrom java.util import Arrays, ArrayList, HashSet\\nfrom java.lang import String\\n\\nclass UmaRptPolicy(UmaRptPolicyType):\\n\\n    def init(self, currentTimeMillis):\\n        self.currentTimeMillis = currentTimeMillis\\n\\n    def init(self, customScript, configurationAttributes):\\n        print \"RPT Policy. Initializing ...\"\\n        self.clientsSet = self.prepareClientsSet(configurationAttributes)\\n        print \"RPT Policy. Initialized successfully\"\\n        return True\\n\\n    def destroy(self, configurationAttributes):\\n        print \"RPT Policy. Destroyed successfully\"\\n        return True\\n\\n    def getApiVersion(self):\\n        return 11\\n\\n    def getRequiredClaims(self, context):\\n        json = \"\"\"[\\n        ]\"\"\"\\n        return ClaimDefinitionBuilder.build(json)\\n\\n    def authorize(self, context): # context is reference of io.jans.as.uma.authorization.UmaAuthorizationContext\\n        print \"RPT Policy. Authorizing ...\"\\n\\n        client_id=context.getClient().getClientId()\\n        print \"UmaRptPolicy. client_id = %s\" % client_id\\n\\n        if (StringHelper.isEmpty(client_id)):\\n            return False\\n     \\n        if (self.clientsSet.contains(client_id)):\\n            print \"UmaRptPolicy. Authorizing client\"\\n            return True\\n        else:\\n            print \"UmaRptPolicy. Client isn\\'t authorized\"\\n            return False\\n\\n    def getClaimsGatheringScriptName(self, context):\\n        return UmaConstants.NO_SCRIPT\\n\\n    def prepareClientsSet(self, configurationAttributes):\\n        clientsSet = HashSet()\\n        if (not configurationAttributes.containsKey(\"allowed_clients\")):\\n            return clientsSet\\n\\n        allowedClientsList = configurationAttributes.get(\"allowed_clients\").getValue2()\\n        if (StringHelper.isEmpty(allowedClientsList)):\\n            print \"UmaRptPolicy. The property allowed_clients is empty\"\\n            return clientsSet    \\n\\n        allowedClientsListArray = StringHelper.split(allowedClientsList, \",\")\\n        if (ArrayHelper.isEmpty(allowedClientsListArray)):\\n            print \"UmaRptPolicy. No clients specified in allowed_clients property\"\\n            return clientsSet\\n        \\n        # Convert to HashSet to quick search\\n        i = 0\\n        count = len(allowedClientsListArray)\\n        while (i &lt; count):\\n            client = allowedClientsListArray[i]\\n            clientsSet.add(client)\\n            i = i + 1\\n\\n        return clientsSet\\n'], 'jansScrTyp': ['uma_rpt_policy'], 'objectClass': ['top', 'jansCustomScr'], 'jansEnabled': ['false'], 'jansProgLng': ['python']} 11:35:29 06/21/21 Querying LDAP for dn inum=2DAF-F996,ou=scripts,o=jans 11:35:29 06/21/21 Adding LDAP dn:inum=2DAF-F996,ou=scripts,o=jans entry:{'description': ['Sample UMA Claims Gathering'], 'displayName': ['sampleClaimsGathering'], 'inum': ['2DAF-F996'], 'jansLevel': ['1'], 'jansModuleProperty': ['{\"value1\":\"location_type\",\"value2\":\"ldap\",\"description\":\"\"}'], 'jansRevision': ['1'], 'jansScr': ['# oxAuth is available under the MIT License (2008). See http://opensource.org/licenses/MIT for full text.\\r\\n# Copyright (c) 2017, Janssen\\r\\n#\\r\\n# Author: Yuriy Zabrovarnyy\\r\\n#\\r\\n\\r\\nfrom io.jans.model.custom.script.type.uma import UmaClaimsGatheringType\\r\\n\\r\\nclass UmaClaimsGathering(UmaClaimsGatheringType):\\r\\n\\r\\n    def init(self, currentTimeMillis):\\r\\n        self.currentTimeMillis = currentTimeMillis\\r\\n\\r\\n    def init(self, customScript, configurationAttributes):\\r\\n        print \"Claims-Gathering. Initializing ...\"\\r\\n        print \"Claims-Gathering. Initialized successfully\"\\r\\n\\r\\n        return True\\r\\n\\r\\n    def destroy(self, configurationAttributes):\\r\\n        print \"Claims-Gathering. Destroying ...\"\\r\\n        print \"Claims-Gathering. Destroyed successfully\"\\r\\n        return True\\r\\n\\r\\n    def getApiVersion(self):\\r\\n        return 11\\r\\n\\r\\n\\r\\n    # Main gather method. Must return True (if gathering performed successfully) or False (if fail).\\r\\n    # Method must set claim into context (via context.putClaim(\\'name\\', value)) in order to persist it (otherwise it will be lost).\\r\\n    # All user entered values can be access via Map context.getPageClaims()\\r\\n    def gather(self, step, context): # context is reference of io.jans.as.uma.authorization.UmaGatherContext\\r\\n        print \"Claims-Gathering. Gathering ...\"\\r\\n\\r\\n        if step == 1:\\r\\n            if (context.getPageClaims().containsKey(\"country\")):\\r\\n                country = context.getPageClaims().get(\"country\")\\r\\n                print \"Country: \" + country\\r\\n\\r\\n                context.putClaim(\"country\", country)\\r\\n                return True\\r\\n\\r\\n            print \"Claims-Gathering. \\'country\\' is not provided on step 1.\"\\r\\n            return False\\r\\n\\r\\n        elif step == 2:\\r\\n            if (context.getPageClaims().containsKey(\"city\")):\\r\\n                city = context.getPageClaims().get(\"city\")\\r\\n                print \"City: \" + city\\r\\n\\r\\n                context.putClaim(\"city\", city)\\r\\n                print \"Claims-Gathering. \\'city\\' is not provided on step 2.\"\\r\\n                return True\\r\\n\\r\\n        return False\\r\\n\\r\\n    def getNextStep(self, step, context):\\r\\n        return -1\\r\\n\\r\\n    def prepareForStep(self, step, context):\\r\\n        if step == 10 and not context.isAuthenticated():\\r\\n            # user is not authenticated, so we are redirecting user to authorization endpoint\\r\\n            # client_id is specified via configuration attribute.\\r\\n            # Make sure that given client has redirect_uri to Claims-Gathering Endpoint with parameter authentication=true\\r\\n            # Sample https://sample.com/restv1/uma/gather_claims?authentication=true\\r\\n            # If redirect to external url is performated, make sure that viewAction has onPostback=\"true\" (otherwise redirect will not work)\\r\\n            # After user is authenticated then within the script it\\'s possible to get user attributes as\\r\\n            # context.getUser(\"uid\", \"sn\")\\r\\n            # If user is authenticated to current AS (to the same server, not external one) then it\\'s possible to\\r\\n            # access Connect session attributes directly (no need to obtain id_token after redirect with \\'code\\').\\r\\n            # To fetch attributes please use getConnectSessionAttributes() method.\\r\\n\\r\\n            print \"User is not authenticated. Redirect for authentication ...\"\\r\\n            clientId = context.getConfigurationAttributes().get(\"client_id\").getValue2()\\r\\n            redirectUri = context.getClaimsGatheringEndpoint() + \"?authentication=true\" # without authentication=true parameter it will not work\\r\\n            authorizationUrl = context.getAuthorizationEndpoint() + \"?client_id=\" + clientId + \"&amp;redirect_uri=\" + redirectUri + \"&amp;scope=openid&amp;response_type=code\"\\r\\n            context.redirectToExternalUrl(authorizationUrl) # redirect to external url\\r\\n            return False\\r\\n        if step == 10 and context.isAuthenticated(): # example how to get session attribute if user is authenticated to same AS\\r\\n            arc = context.getConnectSessionAttributes().get(\"acr\")\\r\\n\\r\\n        return True\\r\\n\\r\\n    def getStepsCount(self, context):\\r\\n        return 2\\r\\n\\r\\n    def getPageForStep(self, step, context):\\r\\n        if step == 1:\\r\\n            return \"/uma2/sample/country.xhtml\"\\r\\n        elif step == 2:\\r\\n            return \"/uma2/sample/city.xhtml\"\\r\\n        return \"\"'], 'jansScrTyp': ['uma_claims_gathering'], 'objectClass': ['top', 'jansCustomScr'], 'jansEnabled': ['false'], 'jansProgLng': ['python']} 11:35:29 06/21/21 Querying LDAP for dn inum=2DAF-AA90,ou=scripts,o=jans 11:35:29 06/21/21 Adding LDAP dn:inum=2DAF-AA90,ou=scripts,o=jans entry:{'description': ['Introspection Sample Script'], 'displayName': ['introspection_sample'], 'inum': ['2DAF-AA90'], 'jansLevel': ['1'], 'jansModuleProperty': ['{\"value1\":\"location_type\",\"value2\":\"ldap\",\"description\":\"\"}'], 'jansRevision': ['1'], 'jansScr': ['# oxAuth is available under the MIT License (2008). See http://opensource.org/licenses/MIT for full text.\\n# Copyright (c) 2018, Janssen\\n#\\n# Author: Yuriy Zabrovarnyy\\n#\\n#\\n\\nfrom io.jans.model.custom.script.type.introspection import IntrospectionType\\nfrom java.lang import String\\n\\nclass Introspection(IntrospectionType):\\n    def init(self, currentTimeMillis):\\n        self.currentTimeMillis = currentTimeMillis\\n\\n    def init(self, customScript, configurationAttributes):\\n        print \"Introspection script. Initializing ...\"\\n        print \"Introspection script. Initialized successfully\"\\n\\n        return True\\n\\n    def destroy(self, configurationAttributes):\\n        print \"Introspection script. Destroying ...\"\\n        print \"Introspection script. Destroyed successfully\"\\n        return True\\n\\n    def getApiVersion(self):\\n        return 11\\n\\n    # Returns boolean, true - apply introspection method, false - ignore it.\\n    # This method is called after introspection response is ready. This method can modify introspection response.\\n    # Note :\\n    # responseAsJsonObject - is org.codehaus.jettison.json.JSONObject, you can use any method to manipulate json\\n    # context is reference of io.jans.as.service.external.context.ExternalIntrospectionContext (in https://github.com/JanssenFederation/oxauth project, )\\n    def modifyResponse(self, responseAsJsonObject, context):\\n        responseAsJsonObject.accumulate(\"key_from_script\", \"value_from_script\")\\n        return True\\n\\n'], 'jansScrTyp': ['introspection'], 'objectClass': ['top', 'jansCustomScr'], 'jansEnabled': ['false'], 'jansProgLng': ['python']} 11:35:29 06/21/21 Querying LDAP for dn inum=2DAF-BA90,ou=scripts,o=jans 11:35:29 06/21/21 Adding LDAP dn:inum=2DAF-BA90,ou=scripts,o=jans entry:{'description': ['Introspection Custom Parameters Sample Script'], 'displayName': ['introspection_custom_params'], 'inum': ['2DAF-BA90'], 'jansLevel': ['1'], 'jansModuleProperty': ['{\"value1\":\"location_type\",\"value2\":\"ldap\",\"description\":\"\"}'], 'jansRevision': ['1'], 'jansScr': ['# oxAuth is available under the MIT License (2008). See http://opensource.org/licenses/MIT for full text.\\n# Copyright (c) 2019, Janssen\\n#\\n# Author: Yuriy Mochan\\n#\\n#\\n\\nfrom io.jans.model.custom.script.type.introspection import IntrospectionType\\nfrom io.jans.as.model.common import AuthorizationGrantList\\nfrom io.jans.as.server.service import SessionIdService\\nfrom io.jans.service.cdi.util import CdiUtil\\nfrom java.lang import String\\n\\nclass Introspection(IntrospectionType):\\n    def init(self, currentTimeMillis):\\n        self.currentTimeMillis = currentTimeMillis\\n\\n    def init(self, customScript, configurationAttributes):\\n        print \"Introspection script. Initializing ...\"\\n        print \"Introspection script. Initialized successfully\"\\n\\n        return True\\n\\n    def destroy(self, configurationAttributes):\\n        print \"Introspection script. Destroying ...\"\\n        print \"Introspection script. Destroyed successfully\"\\n        return True\\n\\n    def getApiVersion(self):\\n        return 11\\n\\n    # Returns boolean, true - apply introspection method, false - ignore it.\\n    # This method is called after introspection response is ready. This method can modify introspection response.\\n    # Note :\\n    # responseAsJsonObject - is org.codehaus.jettison.json.JSONObject, you can use any method to manipulate json\\n    # context is reference of io.jans.as.service.external.context.ExternalIntrospectionContext (in https://github.com/JanssenFederation/oxauth project, )\\n    def modifyResponse(self, responseAsJsonObject, context):\\n        token = context.getHttpRequest().getParameter(\"token\")\\n        if token is None:\\n            print \"Introspection. There is no token in request\"\\n            return False\\n\\n        authorizationGrantList = CdiUtil.bean(AuthorizationGrantList)\\n        authorizationGrant = authorizationGrantList.getAuthorizationGrantByAccessToken(token);\\n        if authorizationGrant is None:\\n            print \"Introspection. Failed to load authorization grant by token\"\\n            return False\\n\\n        # Put user_id into response\\n        responseAsJsonObject.accumulate(\"user_id\", authorizationGrant.getUser().getUserId())\\n\\n        # Put custom parameters into response\\n        sessionDn = authorizationGrant.getSessionDn();\\n        if sessionDn is None:\\n            # There is no session\\n            return True\\n\\n        sessionIdService = CdiUtil.bean(SessionIdService)\\n        session = sessionIdService.getSessionById(sessionDn)\\n        if sessionDn is None:\\n            print \"Introspection. Failed to load session \\'%s\\'\" % sessionDn\\n            return False\\n\\n        # Return session_id\\n        responseAsJsonObject.accumulate(\"session_id\", sessionDn)\\n        \\n        sessionAttributes = session.getSessionAttributes()\\n        if sessionAttributes is None:\\n            # There is no session attributes\\n            return True\\n\\n        # Append custom claims\\n        if sessionAttributes.containsKey(\"custom1\"):\\n            responseAsJsonObject.accumulate(\"custom1\", sessionAttributes.get(\"custom1\"))\\n        if sessionAttributes.containsKey(\"custom2\"):\\n            responseAsJsonObject.accumulate(\"custom2\", sessionAttributes.get(\"custom2\"))\\n\\n        return True\\n\\n'], 'jansScrTyp': ['introspection'], 'objectClass': ['top', 'jansCustomScr'], 'jansEnabled': ['false'], 'jansProgLng': ['python']} 11:35:29 06/21/21 Querying LDAP for dn inum=2DAF-CA90,ou=scripts,o=jans 11:35:29 06/21/21 Adding LDAP dn:inum=2DAF-CA90,ou=scripts,o=jans entry:{'description': ['Frontchannel logout Sample'], 'displayName': ['frontchannel_logout_sample'], 'inum': ['2DAF-CA90'], 'jansLevel': ['1'], 'jansModuleProperty': ['{\"value1\":\"location_type\",\"value2\":\"ldap\",\"description\":\"\"}'], 'jansRevision': ['1'], 'jansScr': ['# Copyright (c) 2020, Janssen\\n#\\n# Author: Yuriy Zabrovarnyy\\n#\\n\\nfrom io.jans.model.custom.script.type.logout import EndSessionType\\nfrom java.lang import String\\n\\nclass EndSession(EndSessionType):\\n    def init(self, currentTimeMillis):\\n        self.currentTimeMillis = currentTimeMillis\\n\\n    def init(self, customScript, configurationAttributes):\\n        print \"EndSession script. Initializing ...\"\\n        print \"EndSession script. Initialized successfully\"\\n\\n        return True\\n\\n    def destroy(self, configurationAttributes):\\n        print \"EndSession script. Destroying ...\"\\n        print \"EndSession script. Destroyed successfully\"\\n        return True\\n\\n    def getApiVersion(self):\\n        return 11\\n\\n    # Returns string, it must be valid HTML (with iframes according to spec http://openid.net/specs/openid-connect-frontchannel-1_0.html)\\n    # This method is called on <code>/end_session</code> after actual session is killed and oxauth construct HTML to return to RP.\\n    # Note :\\n    # context is reference of io.jans.as.service.external.context.EndSessionContext (in https://github.com/JanssenFederation/oxauth project, )\\n    def getFrontchannelHtml(self, context):\\n        return \"\"'], 'jansScrTyp': ['end_session'], 'objectClass': ['top', 'jansCustomScr'], 'jansEnabled': ['false'], 'jansProgLng': ['python']} 11:35:29 06/21/21 Querying LDAP for dn inum=2DAF-AA91,ou=scripts,o=jans 11:35:29 06/21/21 Adding LDAP dn:inum=2DAF-AA91,ou=scripts,o=jans entry:{'description': ['Resource Owner Password Credentials Example'], 'displayName': ['resource_owner_password_credentials_example'], 'inum': ['2DAF-AA91'], 'jansLevel': ['1'], 'jansModuleProperty': ['{\"value1\":\"location_type\",\"value2\":\"ldap\",\"description\":\"\"}'], 'jansRevision': ['1'], 'jansScr': ['from io.jans.model.custom.script.type.owner import ResourceOwnerPasswordCredentialsType\\nfrom io.jans.as.server.service import AuthenticationService\\nfrom io.jans.service.cdi.util import CdiUtil\\nfrom java.lang import String\\n\\nclass ResourceOwnerPasswordCredentials(ResourceOwnerPasswordCredentialsType):\\n    def init(self, currentTimeMillis):\\n        self.currentTimeMillis = currentTimeMillis\\n\\n    def init(self, customScript, configurationAttributes):\\n        print \"ROPC script. Initializing ...\"\\n\\n        self.usernameParamName = \"username\"\\n        self.passwordParamName = \"password\"\\n\\n        print \"ROPC script. Initialized successfully\"\\n\\n        return True\\n\\n    def destroy(self, configurationAttributes):\\n        print \"ROPC script. Destroying ...\"\\n        print \"ROPC script. Destroyed successfully\"\\n        return True\\n\\n    def getApiVersion(self):\\n        return 11\\n\\n    # Returns True and set user into context when user authenticated succesfully\\n    # Returns False when user not authenticated or it\\'s needed to cancel notmal flow\\n    # Note :\\n    # context is reference of io.jans.as.service.external.context.ExternalResourceOwnerPasswordCredentialsContext#ExternalResourceOwnerPasswordCredentialsContext (in https://github.com/JanssenFederation/oxauth project, )\\n    def authenticate(self, context):\\n        print \"ROPC script. Authenticate\"\\n        deviceIdParam = context.getHttpRequest().getParameterValues(\"device_id\")\\n        if deviceIdParam != None and (deviceIdParam.lenght &gt; 0 ):\\n            result = deviceIdParam[0] == \"device_id_1\"\\n            if not result:\\n                return False\\n\\n            # Set auntenticated user in context\\n            # context.setUser(user)\\n            return True\\n\\n        # Do generic authentication in other cases\\n        authService = CdiUtil.bean(AuthenticationService)\\n\\n        username = context.getHttpRequest().getParameter(self.usernameParamName)\\n        password = context.getHttpRequest().getParameter(self.passwordParamName)\\n        result = authService.authenticate(username, password)\\n        if not result:\\n            print \"ROPC script. Authenticate. Could not authenticate user \\'%s\\' \" % username\\n            return False\\n\\n        context.setUser(authService.getAuthenticatedUser())\\n\\n        return True\\n'], 'jansScrTyp': ['resource_owner_password_credentials'], 'objectClass': ['top', 'jansCustomScr'], 'jansEnabled': ['false'], 'jansProgLng': ['python']} 11:35:29 06/21/21 Querying LDAP for dn inum=2DAF-BA91,ou=scripts,o=jans 11:35:29 06/21/21 Adding LDAP dn:inum=2DAF-BA91,ou=scripts,o=jans entry:{'description': ['Resource Owner Password Credentials Custom Parameters Example'], 'displayName': ['resource_owner_password_credentials_custom_params_example'], 'inum': ['2DAF-BA91'], 'jansLevel': ['1'], 'jansModuleProperty': ['{\"value1\":\"location_type\",\"value2\":\"ldap\",\"description\":\"\"}'], 'jansRevision': ['1'], 'jansScr': ['# oxAuth is available under the MIT License (2008). See http://opensource.org/licenses/MIT for full text.\\n# Copyright (c) 2019, Janssen\\n#\\n# Author: Yuriy Mochan\\n#\\n#\\n\\nfrom io.jans.model.custom.script.type.owner import ResourceOwnerPasswordCredentialsType\\nfrom io.jans.as.server.service import AuthenticationService, SessionIdService\\nfrom io.jans.as.model.common import SessionIdState\\nfrom io.jans.as.server.security import Identity\\nfrom io.jans.service.cdi.util import CdiUtil\\nfrom io.jans.as.model.authorize import AuthorizeRequestParam\\nfrom io.jans.as.model.config import Constants\\nfrom io.jans.util import StringHelper\\nfrom java.lang import String\\nfrom java.util import Date, HashMap\\n\\nclass ResourceOwnerPasswordCredentials(ResourceOwnerPasswordCredentialsType):\\n    def init(self, currentTimeMillis):\\n        self.currentTimeMillis = currentTimeMillis\\n\\n    def init(self, customScript, configurationAttributes):\\n        print \"ROPC script. Initializing ...\"\\n        print \"ROPC script. Initialized successfully\"\\n        return True\\n\\n    def destroy(self, configurationAttributes):\\n        print \"ROPC script. Destroying ...\"\\n        print \"ROPC script. Destroyed successfully\"\\n        return True\\n\\n    def getApiVersion(self):\\n        return 11\\n\\n    # Returns True and set user into context when user authenticated succesfully\\n    # Returns False when user not authenticated or it\\'s needed to cancel notmal flow\\n    # Note :\\n    # context is reference of io.jans.as.service.external.context.ExternalResourceOwnerPasswordCredentialsContext#ExternalResourceOwnerPasswordCredentialsContext (in https://github.com/JanssenFederation/oxauth project, )\\n    def authenticate(self, context):\\n        print \"ROPC script. Authenticate\"\\n\\n        # Do generic authentication\\n        authenticationService = CdiUtil.bean(AuthenticationService)\\n\\n        username = context.getHttpRequest().getParameter(\"username\")\\n        password = context.getHttpRequest().getParameter(\"password\")\\n        result = authenticationService.authenticate(username, password)\\n        if not result:\\n            print \"ROPC script. Authenticate. Could not authenticate user \\'%s\\' \" % username\\n            return False\\n\\n        context.setUser(authenticationService.getAuthenticatedUser())\\n        print \"ROPC script. Authenticate. User \\'%s\\' authenticated successfully\" % username\\n        \\n\\n        # Get cusom parameters from request\\n        customParam1Value = context.getHttpRequest().getParameter(\"custom1\")\\n        customParam2Value = context.getHttpRequest().getParameter(\"custom2\")\\n\\n        customParameters = {}\\n        customParameters[\"custom1\"] = customParam1Value\\n        customParameters[\"custom2\"] = customParam2Value\\n        print \"ROPC script. Authenticate. User \\'%s\\'. Creating authenticated session with custom attributes: \\'%s\\'\" % (username, customParameters)\\n\\n        session = self.createNewAuthenticatedSession(context, customParameters)\\n        \\n        # This is needed to allow store in token entry sessionId\\n        authenticationService.configureEventUser(session)\\n\\n        print \"ROPC script. Authenticate. User \\'%s\\'. Created authenticated session: \\'%s\\'\" % (username, customParameters)\\n\\n        return True\\n\\n    def createNewAuthenticatedSession(self, context, customParameters={}):\\n        sessionIdService = CdiUtil.bean(SessionIdService)\\n\\n        user = context.getUser()\\n        client = CdiUtil.bean(Identity).getSessionClient().getClient()\\n\\n        # Add mandatory session parameters\\n        sessionAttributes = HashMap()\\n        sessionAttributes.put(Constants.AUTHENTICATED_USER, user.getUserId())\\n        sessionAttributes.put(AuthorizeRequestParam.CLIENT_ID, client.getClientId())\\n        sessionAttributes.put(AuthorizeRequestParam.PROMPT, \"\")\\n\\n        # Add custom session parameters\\n        for key, value in customParameters.iteritems():\\n            if StringHelper.isNotEmpty(value):\\n                sessionAttributes.put(key, value)\\n\\n        # Generate authenticated session\\n        sessionId = sessionIdService.generateAuthenticatedSessionId(context.getHttpRequest(), user.getDn(), sessionAttributes)\\n\\n        print \"ROPC script. Generated session id. DN: \\'%s\\'\" % sessionId.getDn()\\n\\n        return sessionId\\n'], 'jansScrTyp': ['resource_owner_password_credentials'], 'objectClass': ['top', 'jansCustomScr'], 'jansEnabled': ['false'], 'jansProgLng': ['python']} 11:35:29 06/21/21 Querying LDAP for dn inum=4BBE-C6A8,ou=scripts,o=jans 11:35:29 06/21/21 Adding LDAP dn:inum=4BBE-C6A8,ou=scripts,o=jans entry:{'description': ['Basic (with user locking) authentication module'], 'displayName': ['basic_lock'], 'inum': ['4BBE-C6A8'], 'jansConfProperty': ['{\"value1\":\"invalid_login_count_attribute\",\"value2\":\"oxCountInvalidLogin\",\"description\":\"\"}', '{\"value1\":\"maximum_invalid_login_attemps\",\"value2\":\"3\",\"description\":\"\"}', '{\"value1\":\"lock_expiration_time\",\"value2\":\"120\",\"description\":\"\"}'], 'jansLevel': ['20'], 'jansModuleProperty': ['{\"value1\":\"location_type\",\"value2\":\"ldap\",\"description\":\"\"}', '{\"value1\":\"usage_type\",\"value2\":\"interactive\",\"description\":\"\"}'], 'jansRevision': ['1'], 'jansScr': ['# oxAuth is available under the MIT License (2008). See http://opensource.org/licenses/MIT for full text.\\n# Copyright (c) 2016, Janssen\\n#\\n# Author: Yuriy Movchan\\n# Author: Gasmyr Mougang\\n#\\n\\nfrom io.jans.service.cdi.util import CdiUtil\\nfrom io.jans.as.server.security import Identity\\nfrom io.jans.model.custom.script.type.auth import PersonAuthenticationType\\nfrom io.jans.as.server.service import AuthenticationService\\nfrom io.jans.as.server.service import UserService\\nfrom io.jans.service import CacheService\\nfrom io.jans.util import StringHelper\\nfrom io.jans.orm.exception import AuthenticationException\\nfrom javax.faces.application import FacesMessage\\nfrom io.jans.jsf2.message import FacesMessages\\nfrom java.time import LocalDateTime, Duration\\nfrom java.time.format import DateTimeFormatter\\n\\nimport java\\nimport datetime\\nimport json\\n\\nclass PersonAuthentication(PersonAuthenticationType):\\n    def init(self, currentTimeMillis):\\n        self.currentTimeMillis = currentTimeMillis\\n\\n    def init(self, customScript,  configurationAttributes):\\n        print \"Basic (lock account). Initialization\"\\n\\n        self.invalidLoginCountAttribute = \"oxCountInvalidLogin\"\\n        if configurationAttributes.containsKey(\"invalid_login_count_attribute\"):\\n            self.invalidLoginCountAttribute = configurationAttributes.get(\"invalid_login_count_attribute\").getValue2()\\n        else:\\n            print \"Basic (lock account). Initialization. Using default attribute\"\\n\\n        self.maximumInvalidLoginAttemps = 3\\n        if configurationAttributes.containsKey(\"maximum_invalid_login_attemps\"):\\n            self.maximumInvalidLoginAttemps = StringHelper.toInteger(configurationAttributes.get(\"maximum_invalid_login_attemps\").getValue2())\\n        else:\\n            print \"Basic (lock account). Initialization. Using default number attempts\"\\n\\n        self.lockExpirationTime = 180\\n        if configurationAttributes.containsKey(\"lock_expiration_time\"):\\n            self.lockExpirationTime = StringHelper.toInteger(configurationAttributes.get(\"lock_expiration_time\").getValue2())\\n        else:\\n            print \"Basic (lock account). Initialization. Using default lock expiration time\"\\n\\n\\n        print \"Basic (lock account). Initialized successfully. invalid_login_count_attribute: \\'%s\\', maximum_invalid_login_attemps: \\'%s\\', lock_expiration_time: \\'%s\\'\" % (self.invalidLoginCountAttribute, self.maximumInvalidLoginAttemps, self.lockExpirationTime)\\n\\n        return True   \\n\\n    def destroy(self, configurationAttributes):\\n        print \"Basic (lock account). Destroy\"\\n        print \"Basic (lock account). Destroyed successfully\"\\n        return True\\n\\n    def getApiVersion(self):\\n        return 11\\n\\n    def getAuthenticationMethodClaims(self, requestParameters):\\n        return None\\n        \\n    def isValidAuthenticationMethod(self, usageType, configurationAttributes):\\n        return True\\n\\n    def getAlternativeAuthenticationMethod(self, usageType, configurationAttributes):\\n        return None\\n\\n    def authenticate(self, configurationAttributes, requestParameters, step):\\n        authenticationService = CdiUtil.bean(AuthenticationService)\\n\\n        if step == 1:\\n            print \"Basic (lock account). Authenticate for step 1\"\\n            facesMessages = CdiUtil.bean(FacesMessages)\\n            facesMessages.setKeepMessages()\\n            identity = CdiUtil.bean(Identity)\\n            credentials = identity.getCredentials()\\n            user_name = credentials.getUsername()\\n            user_password = credentials.getPassword()\\n            cacheService = CdiUtil.bean(CacheService)\\n            userService = CdiUtil.bean(UserService)\\n\\n\\n            logged_in = False\\n            if (StringHelper.isNotEmptyString(user_name) and StringHelper.isNotEmptyString(user_password)):\\n                try:\\n                    logged_in = authenticationService.authenticate(user_name, user_password)\\n                except AuthenticationException:\\n                    print \"Basic (lock account). Authenticate. Failed to authenticate user \\'%s\\'\" % user_name\\n\\n            if logged_in:\\n                self.setUserAttributeValue(user_name, self.invalidLoginCountAttribute, StringHelper.toString(0))\\n            else:\\n                countInvalidLoginArributeValue = self.getUserAttributeValue(user_name, self.invalidLoginCountAttribute)\\n                userSatus = self.getUserAttributeValue(user_name, \"jansStatus\")\\n                print \"Current user \\'%s\\' status is \\'%s\\'\" % ( user_name, userSatus )\\n\\n                countInvalidLogin = StringHelper.toInteger(countInvalidLoginArributeValue, 0)\\n\\n                if countInvalidLogin &lt; self.maximumInvalidLoginAttemps:\\n                    countInvalidLogin = countInvalidLogin + 1\\n                    remainingAttempts = self.maximumInvalidLoginAttemps - countInvalidLogin\\n\\n                    print \"Remaining login count attempts \\'%s\\' for user \\'%s\\'\" % ( remainingAttempts, user_name )\\n\\n                    self.setUserAttributeValue(user_name, self.invalidLoginCountAttribute, StringHelper.toString(countInvalidLogin))\\n                    if remainingAttempts &gt; 0 and userSatus == \"active\":\\n                        facesMessages.add(FacesMessage.SEVERITY_INFO, StringHelper.toString(remainingAttempts)+\" more attempt(s) before account is LOCKED!\")\\n\\n                if (countInvalidLogin &gt;= self.maximumInvalidLoginAttemps) and ((userSatus == None) or (userSatus == \"active\")):\\n                    print \"Basic (lock account). Locking \\'%s\\' for \\'%s\\' seconds\" % ( user_name, self.lockExpirationTime)\\n                    self.lockUser(user_name)\\n                    return False\\n\\n                if (countInvalidLogin &gt;= self.maximumInvalidLoginAttemps) and userSatus == \"inactive\":\\n                    print \"Basic (lock account). User \\'%s\\' is locked. Checking if we can unlock him\" % user_name\\n                    \\n                    unlock_and_authenticate = False\\n\\n                    object_from_store = cacheService.get(None, \"lock_user_\" + user_name)\\n                    if object_from_store == None:\\n                        # Object in cache was expired. We need to unlock user\\n                        print \"Basic (lock account). User locking details for user \\'%s\\' not exists\" % user_name\\n                        unlock_and_authenticate = True\\n                    else:\\n                        # Analyze object from cache\\n                        user_lock_details = json.loads(object_from_store)\\n\\n                        user_lock_details_locked = user_lock_details[\\'locked\\']\\n                        user_lock_details_created = user_lock_details[\\'created\\']\\n                        user_lock_details_created_date = LocalDateTime.parse(user_lock_details_created, DateTimeFormatter.ISO_LOCAL_DATE_TIME)\\n                        user_lock_details_created_diff = Duration.between(user_lock_details_created_date, LocalDateTime.now()).getSeconds()\\n                        print \"Basic (lock account). Get user \\'%s\\' locking details. locked: \\'%s\\', Created: \\'%s\\', Difference in seconds: \\'%s\\'\" % ( user_name, user_lock_details_locked, user_lock_details_created, user_lock_details_created_diff )\\n\\n                        if user_lock_details_locked and user_lock_details_created_diff &gt;= self.lockExpirationTime:\\n                            print \"Basic (lock account). Unlocking user \\'%s\\' after lock expiration\" % user_name\\n                            unlock_and_authenticate = True\\n\\n                    if unlock_and_authenticate:\\n                        self.unLockUser(user_name)\\n                        self.setUserAttributeValue(user_name, self.invalidLoginCountAttribute, StringHelper.toString(0))\\n                        logged_in = authenticationService.authenticate(user_name, user_password)\\n                        if not logged_in:\\n                            # Update number of attempts \\n                            self.setUserAttributeValue(user_name, self.invalidLoginCountAttribute, StringHelper.toString(1))\\n                            if self.maximumInvalidLoginAttemps == 1:\\n                                # Lock user if maximum count login attempts is 1 \\n                                self.lockUser(user_name)\\n                                return False\\n\\n\\n            return logged_in\\n        else:\\n            return False\\n\\n    def prepareForStep(self, configurationAttributes, requestParameters, step):\\n        if step == 1:\\n            print \"Basic (lock account). Prepare for Step 1\"\\n            return True\\n        else:\\n            return False\\n\\n    def getExtraParametersForStep(self, configurationAttributes, step):\\n        return None\\n\\n    def getCountAuthenticationSteps(self, configurationAttributes):\\n        return 1\\n\\n    def getPageForStep(self, configurationAttributes, step):\\n        return \"\"\\n        \\n    def getNextStep(self, configurationAttributes, requestParameters, step):\\n        return -1\\n\\n    def getLogoutExternalUrl(self, configurationAttributes, requestParameters):\\n        print \"Get external logout URL call\"\\n        return None\\n\\n    def logout(self, configurationAttributes, requestParameters):\\n        return True\\n\\n    def getUserAttributeValue(self, user_name, attribute_name):\\n        if StringHelper.isEmpty(user_name):\\n            return None\\n\\n        userService = CdiUtil.bean(UserService)\\n\\n        find_user_by_uid = userService.getUser(user_name, attribute_name)\\n        if find_user_by_uid == None:\\n            return None\\n\\n        custom_attribute_value = userService.getCustomAttribute(find_user_by_uid, attribute_name)\\n        if custom_attribute_value == None:\\n            return None\\n        \\n        attribute_value = custom_attribute_value.getValue()\\n\\n        print \"Basic (lock account). Get user attribute. User\\'s \\'%s\\' attribute \\'%s\\' value is \\'%s\\'\" % (user_name, attribute_name, attribute_value)\\n\\n        return attribute_value\\n\\n    def setUserAttributeValue(self, user_name, attribute_name, attribute_value):\\n        if StringHelper.isEmpty(user_name):\\n            return None\\n\\n        userService = CdiUtil.bean(UserService)\\n\\n        find_user_by_uid = userService.getUser(user_name)\\n        if find_user_by_uid == None:\\n            return None\\n        \\n        userService.setCustomAttribute(find_user_by_uid, attribute_name, attribute_value)\\n        updated_user = userService.updateUser(find_user_by_uid)\\n\\n        print \"Basic (lock account). Set user attribute. User\\'s \\'%s\\' attribute \\'%s\\' value is \\'%s\\'\" % (user_name, attribute_name, attribute_value)\\n\\n        return updated_user\\n\\n    def lockUser(self, user_name):\\n        if StringHelper.isEmpty(user_name):\\n            return None\\n\\n        userService = CdiUtil.bean(UserService)\\n        cacheService= CdiUtil.bean(CacheService)\\n        facesMessages = CdiUtil.bean(FacesMessages)\\n        facesMessages.setKeepMessages()\\n\\n        find_user_by_uid = userService.getUser(user_name)\\n        if (find_user_by_uid == None):\\n            return None\\n\\n        status_attribute_value = userService.getCustomAttribute(find_user_by_uid, \"jansStatus\")\\n        if status_attribute_value != None:\\n            user_status = status_attribute_value.getValue()\\n            if StringHelper.equals(user_status, \"inactive\"):\\n                print \"Basic (lock account). Lock user. User \\'%s\\' locked already\" % user_name\\n                return\\n        \\n        userService.setCustomAttribute(find_user_by_uid, \"jansStatus\", \"inactive\")\\n        userService.setCustomAttribute(find_user_by_uid, \"oxTrustActive\", \"false\")\\n        updated_user = userService.updateUser(find_user_by_uid)\\n\\n        object_to_store = json.dumps({\\'locked\\': True, \\'created\\': LocalDateTime.now().toString()}, separators=(\\',\\',\\':\\'))\\n\\n        cacheService.put(StringHelper.toString(self.lockExpirationTime), \"lock_user_\"+user_name, object_to_store);\\n        facesMessages.add(FacesMessage.SEVERITY_ERROR, \"Your account is locked. Please try again after \" + StringHelper.toString(self.lockExpirationTime) + \" secs\")\\n\\n        print \"Basic (lock account). Lock user. User \\'%s\\' locked\" % user_name\\n\\n    def unLockUser(self, user_name):\\n        if StringHelper.isEmpty(user_name):\\n            return None\\n\\n        userService = CdiUtil.bean(UserService)\\n        cacheService= CdiUtil.bean(CacheService)\\n\\n        find_user_by_uid = userService.getUser(user_name)\\n        if (find_user_by_uid == None):\\n            return None\\n\\n        object_to_store = json.dumps({\\'locked\\': False, \\'created\\': LocalDateTime.now().toString()}, separators=(\\',\\',\\':\\'))\\n        cacheService.put(StringHelper.toString(self.lockExpirationTime), \"lock_user_\"+user_name, object_to_store);\\n\\n        userService.setCustomAttribute(find_user_by_uid, \"jansStatus\", \"active\")\\n        userService.setCustomAttribute(find_user_by_uid, \"oxTrustActive\", \"true\")\\n        userService.setCustomAttribute(find_user_by_uid, self.invalidLoginCountAttribute, None)\\n        updated_user = userService.updateUser(find_user_by_uid)\\n\\n\\n        print \"Basic (lock account). Lock user. User \\'%s\\' unlocked\" % user_name\\n'], 'jansScrTyp': ['person_authentication'], 'objectClass': ['top', 'jansCustomScr'], 'jansEnabled': ['false'], 'jansProgLng': ['python']} 11:35:29 06/21/21 Querying LDAP for dn inum=5018-AF9C,ou=scripts,o=jans 11:35:29 06/21/21 Adding LDAP dn:inum=5018-AF9C,ou=scripts,o=jans entry:{'description': ['UAF authentication module'], 'displayName': ['uaf'], 'inum': ['5018-AF9C'], 'jansConfProperty': ['{\"value1\":\"uaf_server_uri\",\"value2\":\"https://test.dd.jans.io\",\"description\":\"\"}', '{\"value1\":\"uaf_policy_name\",\"value2\":\"default\",\"description\":\"\"}', '{\"value1\":\"qr_options\",\"value2\":\"{ width: 400, height: 400 }\",\"description\":\"\"}', '{\"value1\":\"registration_uri\",\"value2\":\"https://test.dd.jans.io/identity/register\",\"description\":\"\"}', '{\"value1\":\"send_push_notifaction\",\"value2\":\"false\",\"description\":\"\"}'], 'jansLevel': ['70'], 'jansModuleProperty': ['{\"value1\":\"location_type\",\"value2\":\"ldap\",\"description\":\"\"}', '{\"value1\":\"usage_type\",\"value2\":\"interactive\",\"description\":\"\"}'], 'jansRevision': ['1'], 'jansScr': ['# oxAuth is available under the MIT License (2008). See http://opensource.org/licenses/MIT for full text.\\n# Copyright (c) 2016, Janssen\\n#\\n# Author: Yuriy Movchan\\n#\\n\\n# Requires the following custom properties and values:\\n#   uaf_server_uri: \\n#\\n# These are non mandatory custom properties and values:\\n#   uaf_policy_name: default\\n#   send_push_notifaction: false\\n#   registration_uri: https:///identity/register\\n#   qr_options: { width: 400, height: 400 }\\n\\nfrom io.jans.model.custom.script.type.auth import PersonAuthenticationType\\nfrom io.jans.service.cdi.util import CdiUtil\\nfrom io.jans.as.server.security import Identity\\nfrom io.jans.as.server.service import AuthenticationService, SessionIdService\\nfrom io.jans.as.server.service import UserService\\nfrom io.jans.util import StringHelper, ArrayHelper\\nfrom io.jans.as.util import ServerUtil\\nfrom io.jans.as.model.config import Constants\\nfrom javax.ws.rs.core import Response\\nfrom java.util import Arrays\\nfrom io.jans.as.service.net import HttpService\\nfrom org.apache.http.params import CoreConnectionPNames\\n\\nimport sys\\nimport java\\nimport json\\n\\nclass PersonAuthentication(PersonAuthenticationType):\\n    def init(self, currentTimeMillis):\\n        self.currentTimeMillis = currentTimeMillis\\n\\n    def init(self, customScript, configurationAttributes):\\n        print \"UAF. Initialization\"\\n\\n        if not configurationAttributes.containsKey(\"uaf_server_uri\"):\\n            print \"UAF. Initialization. Property uaf_server_uri is mandatory\"\\n            return False\\n\\n        self.uaf_server_uri = configurationAttributes.get(\"uaf_server_uri\").getValue2()\\n\\n        self.uaf_policy_name = \"default\"\\n        if configurationAttributes.containsKey(\"uaf_policy_name\"):\\n            self.uaf_policy_name = configurationAttributes.get(\"uaf_policy_name\").getValue2()\\n\\n        self.send_push_notifaction = False\\n        if configurationAttributes.containsKey(\"send_push_notifaction\"):\\n            self.send_push_notifaction = StringHelper.toBoolean(configurationAttributes.get(\"send_push_notifaction\").getValue2(), False)\\n\\n        self.registration_uri = None\\n        if configurationAttributes.containsKey(\"registration_uri\"):\\n            self.registration_uri = configurationAttributes.get(\"registration_uri\").getValue2()\\n\\n        self.customQrOptions = {}\\n        if configurationAttributes.containsKey(\"qr_options\"):\\n            self.customQrOptions = configurationAttributes.get(\"qr_options\").getValue2()\\n\\n        print \"UAF. Initializing HTTP client\"\\n        httpService = CdiUtil.bean(HttpService)\\n        self.http_client = httpService.getHttpsClient()\\n        http_client_params = self.http_client.getParams()\\n        http_client_params.setIntParameter(CoreConnectionPNames.CONNECTION_TIMEOUT, 15 * 1000)\\n\\n        print \"UAF. Initialized successfully. uaf_server_uri: \\'%s\\', uaf_policy_name: \\'%s\\', send_push_notifaction: \\'%s\\', registration_uri: \\'%s\\', qr_options: \\'%s\\'\" % (self.uaf_server_uri, self.uaf_policy_name, self.send_push_notifaction, self.registration_uri, self.customQrOptions)\\n        \\n        print \"UAF. Initialized successfully\"\\n        return True\\n\\n    def destroy(self, configurationAttributes):\\n        print \"UAF. Destroy\"\\n        print \"UAF. Destroyed successfully\"\\n        return True\\n\\n    def getApiVersion(self):\\n        return 11\\n        \\n    def getAuthenticationMethodClaims(self, requestParameters):\\n        return None\\n        \\n    def isValidAuthenticationMethod(self, usageType, configurationAttributes):\\n        return True\\n\\n    def getAlternativeAuthenticationMethod(self, usageType, configurationAttributes):\\n        return None\\n\\n    def authenticate(self, configurationAttributes, requestParameters, step):\\n        identity = CdiUtil.bean(Identity)\\n        credentials = identity.getCredentials()\\n\\n        session_attributes = identity.getSessionId().getSessionAttributes()\\n\\n        self.setRequestScopedParameters(identity)\\n\\n        if (step == 1):\\n            print \"UAF. Authenticate for step 1\"\\n\\n            user_name = credentials.getUsername()\\n\\n            authenticated_user = self.processBasicAuthentication(credentials)\\n            if authenticated_user == None:\\n                return False\\n\\n            uaf_auth_method = \"authenticate\"\\n            # Uncomment this block if you need to allow user second device registration\\n            #enrollment_mode = ServerUtil.getFirstValue(requestParameters, \"loginForm:registerButton\")\\n            #if StringHelper.isNotEmpty(enrollment_mode):\\n            #    uaf_auth_method = \"enroll\"\\n            \\n            if uaf_auth_method == \"authenticate\":\\n                user_enrollments = self.findEnrollments(credentials)\\n                if len(user_enrollments) == 0:\\n                    uaf_auth_method = \"enroll\"\\n                    print \"UAF. Authenticate for step 1. There is no UAF enrollment for user \\'%s\\'. Changing uaf_auth_method to \\'%s\\'\" % (user_name, uaf_auth_method)\\n\\n            print \"UAF. Authenticate for step 1. uaf_auth_method: \\'%s\\'\" % uaf_auth_method\\n            \\n            identity.setWorkingParameter(\"uaf_auth_method\", uaf_auth_method)\\n\\n            return True\\n        elif (step == 2):\\n            print \"UAF. Authenticate for step 2\"\\n\\n            session = CdiUtil.bean(SessionIdService).getSessionId()\\n            if session == None:\\n                print \"UAF. Prepare for step 2. Failed to determine session_id\"\\n                return False\\n\\n            user = authenticationService.getAuthenticatedUser()\\n            if (user == None):\\n                print \"UAF. Authenticate for step 2. Failed to determine user name\"\\n                return False\\n            user_name = user.getUserId()\\n\\n            uaf_auth_result = ServerUtil.getFirstValue(requestParameters, \"auth_result\")\\n            if uaf_auth_result != \"success\":\\n                print \"UAF. Authenticate for step 2. auth_result is \\'%s\\'\" % uaf_auth_result\\n                return False\\n\\n            # Restore state from session\\n            uaf_auth_method = session_attributes.get(\"uaf_auth_method\")\\n\\n            if not uaf_auth_method in [\\'enroll\\', \\'authenticate\\']:\\n                print \"UAF. Authenticate for step 2. Failed to authenticate user. uaf_auth_method: \\'%s\\'\" % uaf_auth_method\\n                return False\\n\\n            # Request STATUS_OBB\\n            if True:\\n                #TODO: Remove this condition\\n                # It\\'s workaround becuase it\\'s not possible to call STATUS_OBB 2 times. First time on browser and second ime on server\\n                uaf_user_device_handle = ServerUtil.getFirstValue(requestParameters, \"auth_handle\")\\n            else:\\n                uaf_obb_auth_method = session_attributes.get(\"uaf_obb_auth_method\")\\n                uaf_obb_server_uri = session_attributes.get(\"uaf_obb_server_uri\")\\n                uaf_obb_start_response = session_attributes.get(\"uaf_obb_start_response\")\\n\\n                # Prepare STATUS_OBB\\n                uaf_obb_start_response_json = json.loads(uaf_obb_start_response)\\n                uaf_obb_status_request_dictionary = { \"operation\": \"STATUS_%s\" % uaf_obb_auth_method,\\n                                                      \"userName\": user_name,\\n                                                      \"needDetails\": 1,\\n                                                      \"oobStatusHandle\": uaf_obb_start_response_json[\"oobStatusHandle\"],\\n                                                    }\\n    \\n                uaf_obb_status_request = json.dumps(uaf_obb_status_request_dictionary, separators=(\\',\\',\\':\\'))\\n                print \"UAF. Authenticate for step 2. Prepared STATUS request: \\'%s\\' to send to \\'%s\\'\" % (uaf_obb_status_request, uaf_obb_server_uri)\\n\\n                uaf_status_obb_response = self.executePost(uaf_obb_server_uri, uaf_obb_status_request)\\n                if uaf_status_obb_response == None:\\n                    return False\\n\\n                print \"UAF. Authenticate for step 2. Get STATUS response: \\'%s\\'\" % uaf_status_obb_response\\n                uaf_status_obb_response_json = json.loads(uaf_status_obb_response)\\n                \\n                if uaf_status_obb_response_json[\"statusCode\"] != 4000:\\n                    print \"UAF. Authenticate for step 2. UAF operation status is invalid. statusCode: \\'%s\\'\" % uaf_status_obb_response_json[\"statusCode\"]\\n                    return False\\n\\n                uaf_user_device_handle = uaf_status_obb_response_json[\"additionalInfo\"][\"authenticatorsResult\"][\"handle\"]\\n\\n            if StringHelper.isEmpty(uaf_user_device_handle):\\n                print \"UAF. Prepare for step 2. Failed to get UAF handle\"\\n                return False\\n\\n            uaf_user_external_uid = \"uaf:%s\" % uaf_user_device_handle\\n            print \"UAF. Authenticate for step 2. UAF handle: \\'%s\\'\" % uaf_user_external_uid\\n\\n            if uaf_auth_method == \"authenticate\":\\n                # Validate if user used device with same keYHandle\\n                user_enrollments = self.findEnrollments(credentials)\\n                if len(user_enrollments) == 0:\\n                    uaf_auth_method = \"enroll\"\\n                    print \"UAF. Authenticate for step 2. There is no UAF enrollment for user \\'%s\\'.\" % user_name\\n                    return False\\n                \\n                for user_enrollment in user_enrollments:\\n                    if StringHelper.equalsIgnoreCase(user_enrollment, uaf_user_device_handle):\\n                        print \"UAF. Authenticate for step 2. There is UAF enrollment for user \\'%s\\'. User authenticated successfully\" % user_name\\n                        return True\\n            else:\\n                userService = CdiUtil.bean(UserService)\\n\\n                # Double check just to make sure. We did checking in previous step\\n                # Check if there is user which has uaf_user_external_uid\\n                # Avoid mapping user cert to more than one IDP account\\n                find_user_by_external_uid = userService.getUserByAttribute(\"oxExternalUid\", uaf_user_external_uid)\\n                if find_user_by_external_uid == None:\\n                    # Add uaf_user_external_uid to user\\'s external GUID list\\n                    find_user_by_external_uid = userService.addUserAttribute(user_name, \"oxExternalUid\", uaf_user_external_uid)\\n                    if find_user_by_external_uid == None:\\n                        print \"UAF. Authenticate for step 2. Failed to update current user\"\\n                        return False\\n    \\n                    return True\\n\\n            return False\\n        else:\\n            return False\\n\\n    def prepareForStep(self, configurationAttributes, requestParameters, step):\\n        authenticationService = CdiUtil.bean(AuthenticationService)\\n\\n        identity = CdiUtil.bean(Identity)\\n        credentials = identity.getCredentials()\\n\\n        session_attributes = identity.getSessionId().getSessionAttributes()\\n\\n        self.setRequestScopedParameters(identity)\\n\\n        if (step == 1):\\n            return True\\n        elif (step == 2):\\n            print \"UAF. Prepare for step 2\"\\n\\n            session = CdiUtil.bean(SessionIdService).getSessionId()\\n            if session == None:\\n                print \"UAF. Prepare for step 2. Failed to determine session_id\"\\n                return False\\n\\n            user = authenticationService.getAuthenticatedUser()\\n            if (user == None):\\n                print \"UAF. Prepare for step 2. Failed to determine user name\"\\n                return False\\n\\n            uaf_auth_method = session_attributes.get(\"uaf_auth_method\")\\n            if StringHelper.isEmpty(uaf_auth_method):\\n                print \"UAF. Prepare for step 2. Failed to determine auth_method\"\\n                return False\\n\\n            print \"UAF. Prepare for step 2. uaf_auth_method: \\'%s\\'\" % uaf_auth_method\\n\\n            uaf_obb_auth_method = \"OOB_REG\"\\n            uaf_obb_server_uri = self.uaf_server_uri + \"/nnl/v2/reg\" \\n            if StringHelper.equalsIgnoreCase(uaf_auth_method, \"authenticate\"):\\n                uaf_obb_auth_method = \"OOB_AUTH\"\\n                uaf_obb_server_uri = self.uaf_server_uri + \"/nnl/v2/auth\" \\n\\n            # Prepare START_OBB\\n            uaf_obb_start_request_dictionary = { \"operation\": \"START_%s\" % uaf_obb_auth_method,\\n                                                 \"userName\": user.getUserId(),\\n                                                 \"policyName\": \"default\",\\n                                                 \"oobMode\":\\n                                                    { \"qr\": \"true\", \"rawData\": \"false\", \"push\": \"false\" } \\n                                               }\\n\\n            uaf_obb_start_request = json.dumps(uaf_obb_start_request_dictionary, separators=(\\',\\',\\':\\'))\\n            print \"UAF. Prepare for step 2. Prepared START request: \\'%s\\' to send to \\'%s\\'\" % (uaf_obb_start_request, uaf_obb_server_uri)\\n\\n            # Request START_OBB\\n            uaf_obb_start_response = self.executePost(uaf_obb_server_uri, uaf_obb_start_request)\\n            if uaf_obb_start_response == None:\\n                return False\\n\\n            print \"UAF. Prepare for step 2. Get START response: \\'%s\\'\" % uaf_obb_start_response\\n            uaf_obb_start_response_json = json.loads(uaf_obb_start_response)\\n\\n            # Prepare STATUS_OBB\\n            #TODO: Remove needDetails parameter\\n            uaf_obb_status_request_dictionary = { \"operation\": \"STATUS_%s\" % uaf_obb_auth_method,\\n                                                  \"userName\": user.getUserId(),\\n                                                  \"needDetails\": 1,\\n                                                  \"oobStatusHandle\": uaf_obb_start_response_json[\"oobStatusHandle\"],\\n                                                }\\n\\n            uaf_obb_status_request = json.dumps(uaf_obb_status_request_dictionary, separators=(\\',\\',\\':\\'))\\n            print \"UAF. Prepare for step 2. Prepared STATUS request: \\'%s\\' to send to \\'%s\\'\" % (uaf_obb_status_request, uaf_obb_server_uri)\\n\\n            identity.setWorkingParameter(\"uaf_obb_auth_method\", uaf_obb_auth_method)\\n            identity.setWorkingParameter(\"uaf_obb_server_uri\", uaf_obb_server_uri)\\n            identity.setWorkingParameter(\"uaf_obb_start_response\", uaf_obb_start_response)\\n            identity.setWorkingParameter(\"qr_image\", uaf_obb_start_response_json[\"modeResult\"][\"qrCode\"][\"qrImage\"])\\n            identity.setWorkingParameter(\"uaf_obb_status_request\", uaf_obb_status_request)\\n\\n            return True\\n        else:\\n            return False\\n\\n    def getExtraParametersForStep(self, configurationAttributes, step):\\n        return Arrays.asList(\"uaf_auth_method\", \"uaf_obb_auth_method\", \"uaf_obb_server_uri\", \"uaf_obb_start_response\")\\n\\n    def getCountAuthenticationSteps(self, configurationAttributes):\\n        return 2\\n\\n    def getPageForStep(self, configurationAttributes, step):\\n        if (step == 2):\\n            return \"/auth/uaf/login.xhtml\"\\n\\n        return \"\"\\n\\n    def getNextStep(self, configurationAttributes, requestParameters, step):\\n        return -1\\n\\n    def getLogoutExternalUrl(self, configurationAttributes, requestParameters):\\n        print \"Get external logout URL call\"\\n        return None\\n\\n    def logout(self, configurationAttributes, requestParameters):\\n        return True\\n\\n    def setRequestScopedParameters(self, identity):\\n        if self.registration_uri != None:\\n            identity.setWorkingParameter(\"external_registration_uri\", self.registration_uri)\\n        identity.setWorkingParameter(\"qr_options\", self.customQrOptions)\\n\\n    def processBasicAuthentication(self, credentials):\\n        userService = CdiUtil.bean(UserService)\\n        authenticationService = CdiUtil.bean(AuthenticationService)\\n\\n        user_name = credentials.getUsername()\\n        user_password = credentials.getPassword()\\n\\n        logged_in = False\\n        if StringHelper.isNotEmptyString(user_name) and StringHelper.isNotEmptyString(user_password):\\n            logged_in = authenticationService.authenticate(user_name, user_password)\\n\\n        if not logged_in:\\n            return None\\n\\n        find_user_by_uid = authenticationService.getAuthenticatedUser()\\n        if find_user_by_uid == None:\\n            print \"UAF. Process basic authentication. Failed to find user \\'%s\\'\" % user_name\\n            return None\\n        \\n        return find_user_by_uid\\n\\n    def findEnrollments(self, credentials):\\n        result = []\\n\\n        userService = CdiUtil.bean(UserService)\\n        user_name = credentials.getUsername()\\n        user = userService.getUser(user_name, \"oxExternalUid\")\\n        if user == None:\\n            print \"UAF. Find enrollments. Failed to find user\"\\n            return result\\n        \\n        user_custom_ext_attribute = userService.getCustomAttribute(user, \"oxExternalUid\")\\n        if user_custom_ext_attribute == None:\\n            return result\\n        \\n        uaf_prefix = \"uaf:\"\\n        uaf_prefix_length = len(uaf_prefix) \\n        for user_external_uid in user_custom_ext_attribute.getValues():\\n            index = user_external_uid.find(uaf_prefix)\\n            if index != -1:\\n                enrollment_uid = user_external_uid[uaf_prefix_length:]\\n                result.append(enrollment_uid)\\n        \\n        return result\\n\\n    def executePost(self, request_uri, request_data):\\n        httpService = CdiUtil.bean(HttpService)\\n\\n        request_headers = { \"Content-type\" : \"application/json; charset=UTF-8\", \"Accept\" : \"application/json\" }\\n\\n        try:\\n            http_service_response = httpService.executePost(self.http_client, request_uri, None, request_headers, request_data)\\n            http_response = http_service_response.getHttpResponse()\\n        except:\\n            print \"UAF. Validate POST response. Exception: \", sys.exc_info()[1]\\n            return None\\n\\n        try:\\n            if not httpService.isResponseStastusCodeOk(http_response):\\n                print \"UAF. Validate POST response. Get invalid response from  server: %s\" % str(http_response.getStatusLine().getStatusCode())\\n                httpService.consume(http_response)\\n                return None\\n    \\n            response_bytes = httpService.getResponseContent(http_response)\\n            response_string = httpService.convertEntityToString(response_bytes)\\n            httpService.consume(http_response)\\n            \\n            return response_string\\n        finally:\\n            http_service_response.closeConnection()\\n        return None\\n'], 'jansScrTyp': ['person_authentication'], 'objectClass': ['top', 'jansCustomScr'], 'jansEnabled': ['false'], 'jansProgLng': ['python']} 11:35:29 06/21/21 Querying LDAP for dn inum=5018-D4BF,ou=scripts,o=jans 11:35:29 06/21/21 Adding LDAP dn:inum=5018-D4BF,ou=scripts,o=jans entry:{'description': ['HOTP/TOPT authentication module'], 'displayName': ['otp'], 'inum': ['5018-D4BF'], 'jansConfProperty': ['{\"value1\":\"otp_type\",\"value2\":\"totp\",\"description\":\"\"}', '{\"value1\":\"otp_conf_file\",\"value2\":\"/etc/certs/otp_configuration.json\",\"description\":\"\"}', '{\"value1\":\"issuer\",\"value2\":\"Gluu Inc\",\"description\":\"\"}', '{\"value1\":\"label\",\"value2\":\"Gluu OTP\",\"description\":\"\"}', '{\"value1\":\"qr_options\",\"value2\":\"{ size: 400, mSize: 0.05 }\",\"description\":\"\"}', '{\"value1\":\"registration_uri\",\"value2\":\"https://test.dd.jans.io/identity/register\",\"description\":\"\"}'], 'jansLevel': ['40'], 'jansModuleProperty': ['{\"value1\":\"location_type\",\"value2\":\"ldap\",\"description\":\"\"}', '{\"value1\":\"usage_type\",\"value2\":\"interactive\",\"description\":\"\"}'], 'jansRevision': ['1'], 'jansScr': ['# oxAuth is available under the MIT License (2008). See http://opensource.org/licenses/MIT for full text.\\n# Copyright (c) 2016, Janssen\\n#\\n# Author: Yuriy Movchan\\n#\\n\\n# Requires the following custom properties and values:\\n#   otp_type: totp/hotp\\n#   issuer: Janssen Inc\\n#   otp_conf_file: /etc/certs/otp_configuration.json\\n#\\n# These are non mandatory custom properties and values:\\n#   label: Janssen OTP\\n#   qr_options: { width: 400, height: 400 }\\n#   registration_uri: https://ce-dev.jans.org/identity/register\\n\\nimport jarray\\nimport json\\nimport sys\\nfrom com.google.common.io import BaseEncoding\\nfrom com.lochbridge.oath.otp import HOTP\\nfrom com.lochbridge.oath.otp import HOTPValidator\\nfrom com.lochbridge.oath.otp import HmacShaAlgorithm\\nfrom com.lochbridge.oath.otp import TOTP\\nfrom com.lochbridge.oath.otp.keyprovisioning import OTPAuthURIBuilder\\nfrom com.lochbridge.oath.otp.keyprovisioning import OTPKey\\nfrom com.lochbridge.oath.otp.keyprovisioning.OTPKey import OTPType\\nfrom java.security import SecureRandom\\nfrom java.util import Arrays\\nfrom java.util.concurrent import TimeUnit\\nfrom javax.faces.application import FacesMessage\\nfrom io.jans.jsf2.message import FacesMessages\\nfrom io.jans.model.custom.script.type.auth import PersonAuthenticationType\\nfrom io.jans.as.server.security import Identity\\nfrom io.jans.as.server.service import AuthenticationService, SessionIdService\\nfrom io.jans.as.server.service import UserService\\nfrom io.jans.as.util import ServerUtil\\nfrom io.jans.service.cdi.util import CdiUtil\\nfrom io.jans.util import StringHelper\\n\\n\\nclass PersonAuthentication(PersonAuthenticationType):\\n    def init(self, currentTimeMillis):\\n        self.currentTimeMillis = currentTimeMillis\\n\\n    def init(self, customScript, configurationAttributes):\\n        print \"OTP. Initialization\"\\n\\n        if not configurationAttributes.containsKey(\"otp_type\"):\\n            print \"OTP. Initialization. Property otp_type is mandatory\"\\n            return False\\n        self.otpType = configurationAttributes.get(\"otp_type\").getValue2()\\n\\n        if not self.otpType in [\"hotp\", \"totp\"]:\\n            print \"OTP. Initialization. Property value otp_type is invalid\"\\n            return False\\n\\n        if not configurationAttributes.containsKey(\"issuer\"):\\n            print \"OTP. Initialization. Property issuer is mandatory\"\\n            return False\\n        self.otpIssuer = configurationAttributes.get(\"issuer\").getValue2()\\n\\n        self.customLabel = None\\n        if configurationAttributes.containsKey(\"label\"):\\n            self.customLabel = configurationAttributes.get(\"label\").getValue2()\\n\\n        self.customQrOptions = {}\\n        if configurationAttributes.containsKey(\"qr_options\"):\\n            self.customQrOptions = configurationAttributes.get(\"qr_options\").getValue2()\\n\\n        self.registrationUri = None\\n        if configurationAttributes.containsKey(\"registration_uri\"):\\n            self.registrationUri = configurationAttributes.get(\"registration_uri\").getValue2()\\n\\n        validOtpConfiguration = self.loadOtpConfiguration(configurationAttributes)\\n        if not validOtpConfiguration:\\n            return False\\n\\n        print \"OTP. Initialized successfully\"\\n        return True\\n\\n    def destroy(self, configurationAttributes):\\n        print \"OTP. Destroy\"\\n        print \"OTP. Destroyed successfully\"\\n        return True\\n\\n    def getApiVersion(self):\\n        return 11\\n        \\n    def getAuthenticationMethodClaims(self, requestParameters):\\n        return None\\n\\n    def getNextStep(self, configurationAttributes, requestParameters, step):\\n        print \"getNextStep Invoked\"\\n        # If user not pass current step change step to previous\\n        identity = CdiUtil.bean(Identity)\\n        retry_current_step = identity.getWorkingParameter(\"retry_current_step\")\\n        if retry_current_step:\\n            print \"OTP. Get next step. Retrying current step %s\" % step\\n            # Remove old QR code\\n            #identity.setWorkingParameter(\"super.jans.request\", \"timeout\")\\n            resultStep = step\\n            return resultStep\\n        return -1\\n\\n    def isValidAuthenticationMethod(self, usageType, configurationAttributes):\\n        return True\\n\\n    def getAlternativeAuthenticationMethod(self, usageType, configurationAttributes):\\n        return None\\n\\n    def authenticate(self, configurationAttributes, requestParameters, step):\\n        authenticationService = CdiUtil.bean(AuthenticationService)\\n\\n        identity = CdiUtil.bean(Identity)\\n        credentials = identity.getCredentials()\\n\\n        self.setRequestScopedParameters(identity)\\n\\n        if step == 1:\\n            print \"OTP. Authenticate for step 1\"\\n            authenticated_user = self.processBasicAuthentication(credentials)\\n            if authenticated_user == None:\\n                return False\\n\\n            otp_auth_method = \"authenticate\"\\n            # Uncomment this block if you need to allow user second OTP registration\\n            #enrollment_mode = ServerUtil.getFirstValue(requestParameters, \"loginForm:registerButton\")\\n            #if StringHelper.isNotEmpty(enrollment_mode):\\n            #    otp_auth_method = \"enroll\"\\n\\n            if otp_auth_method == \"authenticate\":\\n                user_enrollments = self.findEnrollments(authenticated_user.getUserId())\\n                if len(user_enrollments) == 0:\\n                    otp_auth_method = \"enroll\"\\n                    print \"OTP. Authenticate for step 1. There is no OTP enrollment for user \\'%s\\'. Changing otp_auth_method to \\'%s\\'\" % (authenticated_user.getUserId(), otp_auth_method)\\n\\n            if otp_auth_method == \"enroll\":\\n                print \"OTP. Authenticate for step 1. Setting count steps: \\'%s\\'\" % 3\\n                identity.setWorkingParameter(\"otp_count_login_steps\", 3)\\n\\n            print \"OTP. Authenticate for step 1. otp_auth_method: \\'%s\\'\" % otp_auth_method\\n            identity.setWorkingParameter(\"otp_auth_method\", otp_auth_method)\\n\\n            return True\\n        elif step == 2:\\n            print \"OTP. Authenticate for step 2\"\\n\\n            authenticationService = CdiUtil.bean(AuthenticationService)\\n            user = authenticationService.getAuthenticatedUser()\\n            if user == None:\\n                print \"OTP. Authenticate for step 2. Failed to determine user name\"\\n                return False\\n\\n            session_id_validation = self.validateSessionId(identity)\\n            if not session_id_validation:\\n                return False\\n\\n            # Restore state from session\\n            identity.setWorkingParameter(\"retry_current_step\", False)\\n            otp_auth_method = identity.getWorkingParameter(\"otp_auth_method\")\\n            if otp_auth_method == \\'enroll\\':\\n                auth_result = ServerUtil.getFirstValue(requestParameters, \"auth_result\")\\n                if not StringHelper.isEmpty(auth_result):\\n                    # defect fix #1225  - Retry the step, show QR code again\\n                    if auth_result == \\'timeout\\':\\n\\t\\t\\t\\t\\t\\tprint \"OTP. QR-code timeout. Authenticate for step %s. Reinitializing current step\" % step\\n\\t\\t\\t\\t\\t\\tidentity.setWorkingParameter(\"retry_current_step\", True)\\n\\t\\t\\t\\t\\t\\treturn True\\n\\n                    print \"OTP. Authenticate for step 2. User not enrolled OTP\"\\n                    return False\\n\\n                print \"OTP. Authenticate for step 2. Skipping this step during enrollment\"\\n                return True\\n\\n            otp_auth_result = self.processOtpAuthentication(requestParameters, user.getUserId(), identity, otp_auth_method)\\n            print \"OTP. Authenticate for step 2. OTP authentication result: \\'%s\\'\" % otp_auth_result\\n\\n            return otp_auth_result\\n        elif step == 3:\\n            print \"OTP. Authenticate for step 3\"\\n\\n            authenticationService = CdiUtil.bean(AuthenticationService)\\n            user = authenticationService.getAuthenticatedUser()\\n            if user == None:\\n                print \"OTP. Authenticate for step 2. Failed to determine user name\"\\n                return False\\n\\n            session_id_validation = self.validateSessionId(identity)\\n            if not session_id_validation:\\n                return False\\n\\n            # Restore state from session\\n            otp_auth_method = identity.getWorkingParameter(\"otp_auth_method\")\\n            if otp_auth_method != \\'enroll\\':\\n                return False\\n\\n            otp_auth_result = self.processOtpAuthentication(requestParameters, user.getUserId(), identity, otp_auth_method)\\n            print \"OTP. Authenticate for step 3. OTP authentication result: \\'%s\\'\" % otp_auth_result\\n\\n            return otp_auth_result\\n        else:\\n            return False\\n\\n    def prepareForStep(self, configurationAttributes, requestParameters, step):\\n        identity = CdiUtil.bean(Identity)\\n        credentials = identity.getCredentials()\\n\\n        self.setRequestScopedParameters(identity)\\n\\n        if step == 1:\\n            print \"OTP. Prepare for step 1\"\\n\\n            return True\\n        elif step == 2:\\n            print \"OTP. Prepare for step 2\"\\n\\n            session_id_validation = self.validateSessionId(identity)\\n            if not session_id_validation:\\n                return False\\n\\n            otp_auth_method = identity.getWorkingParameter(\"otp_auth_method\")\\n            print \"OTP. Prepare for step 2. otp_auth_method: \\'%s\\'\" % otp_auth_method\\n\\n            if otp_auth_method == \\'enroll\\':\\n                authenticationService = CdiUtil.bean(AuthenticationService)\\n                user = authenticationService.getAuthenticatedUser()\\n                if user == None:\\n                    print \"OTP. Prepare for step 2. Failed to load user enty\"\\n                    return False\\n\\n                if self.otpType == \"hotp\":\\n                    otp_secret_key = self.generateSecretHotpKey()\\n                    otp_enrollment_request = self.generateHotpSecretKeyUri(otp_secret_key, self.otpIssuer, user.getAttribute(\"displayName\"))\\n                elif self.otpType == \"totp\":\\n                    otp_secret_key = self.generateSecretTotpKey()\\n                    otp_enrollment_request = self.generateTotpSecretKeyUri(otp_secret_key, self.otpIssuer, user.getAttribute(\"displayName\"))\\n                else:\\n                    print \"OTP. Prepare for step 2. Unknown OTP type: \\'%s\\'\" % self.otpType\\n                    return False\\n\\n                print \"OTP. Prepare for step 2. Prepared enrollment request for user: \\'%s\\'\" % user.getUserId()\\n                identity.setWorkingParameter(\"otp_secret_key\", self.toBase64Url(otp_secret_key))\\n                identity.setWorkingParameter(\"otp_enrollment_request\", otp_enrollment_request)\\n\\n            return True\\n        elif step == 3:\\n            print \"OTP. Prepare for step 3\"\\n\\n            session_id_validation = self.validateSessionId(identity)\\n            if not session_id_validation:\\n                return False\\n\\n            otp_auth_method = identity.getWorkingParameter(\"otp_auth_method\")\\n            print \"OTP. Prepare for step 3. otp_auth_method: \\'%s\\'\" % otp_auth_method\\n\\n            if otp_auth_method == \\'enroll\\':\\n                return True\\n\\n        return False\\n\\n    def getExtraParametersForStep(self, configurationAttributes, step):\\n        return Arrays.asList(\"otp_auth_method\", \"otp_count_login_steps\", \"otp_secret_key\", \"otp_enrollment_request\",\"retry_current_step\")\\n\\n    def getCountAuthenticationSteps(self, configurationAttributes):\\n        identity = CdiUtil.bean(Identity)\\n\\n        if identity.isSetWorkingParameter(\"otp_count_login_steps\"):\\n            return StringHelper.toInteger(\"%s\" % identity.getWorkingParameter(\"otp_count_login_steps\"))\\n        else:\\n            return 2\\n\\n    def getPageForStep(self, configurationAttributes, step):\\n        if step == 2:\\n            identity = CdiUtil.bean(Identity)\\n\\n            otp_auth_method = identity.getWorkingParameter(\"otp_auth_method\")\\n            print \"OTP. Gep page for step 2. otp_auth_method: \\'%s\\'\" % otp_auth_method\\n\\n            if otp_auth_method == \\'enroll\\':\\n                return \"/auth/otp/enroll.xhtml\"\\n            else:\\n                return \"/auth/otp/otplogin.xhtml\"\\n        elif step == 3:\\n            return \"/auth/otp/otplogin.xhtml\"\\n\\n        return \"\"\\n\\n\\n    def getLogoutExternalUrl(self, configurationAttributes, requestParameters):\\n        print \"Get external logout URL call\"\\n        return None\\n\\n    def logout(self, configurationAttributes, requestParameters):\\n        return True\\n\\n    def setRequestScopedParameters(self, identity):\\n        if self.registrationUri != None:\\n            identity.setWorkingParameter(\"external_registration_uri\", self.registrationUri)\\n\\n        if self.customLabel != None:\\n            identity.setWorkingParameter(\"qr_label\", self.customLabel)\\n\\n        identity.setWorkingParameter(\"qr_options\", self.customQrOptions)\\n\\n    def loadOtpConfiguration(self, configurationAttributes):\\n        print \"OTP. Load OTP configuration\"\\n        if not configurationAttributes.containsKey(\"otp_conf_file\"):\\n            return False\\n\\n        otp_conf_file = configurationAttributes.get(\"otp_conf_file\").getValue2()\\n\\n        # Load configuration from file\\n        f = open(otp_conf_file, \\'r\\')\\n        try:\\n            otpConfiguration = json.loads(f.read())\\n        except:\\n            print \"OTP. Load OTP configuration. Failed to load configuration from file:\", otp_conf_file\\n            return False\\n        finally:\\n            f.close()\\n\\n        # Check configuration file settings\\n        try:\\n            self.hotpConfiguration = otpConfiguration[\"hotp\"]\\n            self.totpConfiguration = otpConfiguration[\"totp\"]\\n            \\n            hmacShaAlgorithm = self.totpConfiguration[\"hmacShaAlgorithm\"]\\n            hmacShaAlgorithmType = None\\n\\n            if StringHelper.equalsIgnoreCase(hmacShaAlgorithm, \"sha1\"):\\n                hmacShaAlgorithmType = HmacShaAlgorithm.HMAC_SHA_1\\n            elif StringHelper.equalsIgnoreCase(hmacShaAlgorithm, \"sha256\"):\\n                hmacShaAlgorithmType = HmacShaAlgorithm.HMAC_SHA_256\\n            elif StringHelper.equalsIgnoreCase(hmacShaAlgorithm, \"sha512\"):\\n                hmacShaAlgorithmType = HmacShaAlgorithm.HMAC_SHA_512\\n            else:\\n                print \"OTP. Load OTP configuration. Invalid TOTP HMAC SHA algorithm: \\'%s\\'\" % hmacShaAlgorithm\\n                 \\n            self.totpConfiguration[\"hmacShaAlgorithmType\"] = hmacShaAlgorithmType\\n        except:\\n            print \"OTP. Load OTP configuration. Invalid configuration file \\'%s\\' format. Exception: \\'%s\\'\" % (otp_conf_file, sys.exc_info()[1])\\n            return False\\n        \\n\\n        return True\\n\\n    def processBasicAuthentication(self, credentials):\\n        userService = CdiUtil.bean(UserService)\\n        authenticationService = CdiUtil.bean(AuthenticationService)\\n\\n        user_name = credentials.getUsername()\\n        user_password = credentials.getPassword()\\n\\n        logged_in = False\\n        if StringHelper.isNotEmptyString(user_name) and StringHelper.isNotEmptyString(user_password):\\n            logged_in = authenticationService.authenticate(user_name, user_password)\\n\\n        if not logged_in:\\n            return None\\n\\n        find_user_by_uid = authenticationService.getAuthenticatedUser()\\n        if find_user_by_uid == None:\\n            print \"OTP. Process basic authentication. Failed to find user \\'%s\\'\" % user_name\\n            return None\\n        \\n        return find_user_by_uid\\n\\n    def findEnrollments(self, user_name, skipPrefix = True):\\n        result = []\\n\\n        userService = CdiUtil.bean(UserService)\\n        user = userService.getUser(user_name, \"oxExternalUid\")\\n        if user == None:\\n            print \"OTP. Find enrollments. Failed to find user\"\\n            return result\\n        \\n        user_custom_ext_attribute = userService.getCustomAttribute(user, \"oxExternalUid\")\\n        if user_custom_ext_attribute == None:\\n            return result\\n\\n        otp_prefix = \"%s:\" % self.otpType\\n        \\n        otp_prefix_length = len(otp_prefix) \\n        for user_external_uid in user_custom_ext_attribute.getValues():\\n            index = user_external_uid.find(otp_prefix)\\n            if index != -1:\\n                if skipPrefix:\\n                    enrollment_uid = user_external_uid[otp_prefix_length:]\\n                else:\\n                    enrollment_uid = user_external_uid\\n\\n                result.append(enrollment_uid)\\n        \\n        return result\\n\\n    def validateSessionId(self, identity):\\n        session = CdiUtil.bean(SessionIdService).getSessionId()\\n        if session == None:\\n            print \"OTP. Validate session id. Failed to determine session_id\"\\n            return False\\n\\n        otp_auth_method = identity.getWorkingParameter(\"otp_auth_method\")\\n        if not otp_auth_method in [\\'enroll\\', \\'authenticate\\']:\\n            print \"OTP. Validate session id. Failed to authenticate user. otp_auth_method: \\'%s\\'\" % otp_auth_method\\n            return False\\n\\n        return True\\n\\n    def processOtpAuthentication(self, requestParameters, user_name, identity, otp_auth_method):\\n        facesMessages = CdiUtil.bean(FacesMessages)\\n        facesMessages.setKeepMessages()\\n\\n        userService = CdiUtil.bean(UserService)\\n\\n        otpCode = ServerUtil.getFirstValue(requestParameters, \"loginForm:otpCode\")\\n        if StringHelper.isEmpty(otpCode):\\n            facesMessages.add(FacesMessage.SEVERITY_ERROR, \"Failed to authenticate. OTP code is empty\")\\n            print \"OTP. Process OTP authentication. otpCode is empty\"\\n\\n            return False\\n        \\n        if otp_auth_method == \"enroll\":\\n            # Get key from session\\n            otp_secret_key_encoded = identity.getWorkingParameter(\"otp_secret_key\")\\n            if otp_secret_key_encoded == None:\\n                print \"OTP. Process OTP authentication. OTP secret key is invalid\"\\n                return False\\n            \\n            otp_secret_key = self.fromBase64Url(otp_secret_key_encoded)\\n\\n            if self.otpType == \"hotp\":\\n                validation_result = self.validateHotpKey(otp_secret_key, 1, otpCode)\\n                \\n                if (validation_result != None) and validation_result[\"result\"]:\\n                    print \"OTP. Process HOTP authentication during enrollment. otpCode is valid\"\\n                    # Store HOTP Secret Key and moving factor in user entry\\n                    otp_user_external_uid = \"hotp:%s;%s\" % ( otp_secret_key_encoded, validation_result[\"movingFactor\"] )\\n\\n                    # Add otp_user_external_uid to user\\'s external GUID list\\n                    find_user_by_external_uid = userService.addUserAttribute(user_name, \"oxExternalUid\", otp_user_external_uid)\\n                    if find_user_by_external_uid != None:\\n                        return True\\n\\n                    print \"OTP. Process HOTP authentication during enrollment. Failed to update user entry\"\\n            elif self.otpType == \"totp\":\\n                validation_result = self.validateTotpKey(otp_secret_key, otpCode,user_name)\\n                if (validation_result != None) and validation_result[\"result\"]:\\n                    print \"OTP. Process TOTP authentication during enrollment. otpCode is valid\"\\n                    # Store TOTP Secret Key and moving factor in user entry\\n                    otp_user_external_uid = \"totp:%s\" % otp_secret_key_encoded\\n\\n                    # Add otp_user_external_uid to user\\'s external GUID list\\n                    find_user_by_external_uid = userService.addUserAttribute(user_name, \"oxExternalUid\", otp_user_external_uid)\\n                    if find_user_by_external_uid != None:\\n                        return True\\n\\n                    print \"OTP. Process TOTP authentication during enrollment. Failed to update user entry\"\\n        elif otp_auth_method == \"authenticate\":\\n            user_enrollments = self.findEnrollments(user_name)\\n\\n            if len(user_enrollments) == 0:\\n                print \"OTP. Process OTP authentication. There is no OTP enrollment for user \\'%s\\'\" % user_name\\n                facesMessages.add(FacesMessage.SEVERITY_ERROR, \"There is no valid OTP user enrollments\")\\n                return False\\n\\n            if self.otpType == \"hotp\":\\n                for user_enrollment in user_enrollments:\\n                    user_enrollment_data = user_enrollment.split(\";\")\\n                    otp_secret_key_encoded = user_enrollment_data[0]\\n\\n                    # Get current moving factor from user entry\\n                    moving_factor = StringHelper.toInteger(user_enrollment_data[1])\\n                    otp_secret_key = self.fromBase64Url(otp_secret_key_encoded)\\n\\n                    # Validate TOTP\\n                    validation_result = self.validateHotpKey(otp_secret_key, moving_factor, otpCode)\\n                    if (validation_result != None) and validation_result[\"result\"]:\\n                        print \"OTP. Process HOTP authentication during authentication. otpCode is valid\"\\n                        otp_user_external_uid = \"hotp:%s;%s\" % ( otp_secret_key_encoded, moving_factor )\\n                        new_otp_user_external_uid = \"hotp:%s;%s\" % ( otp_secret_key_encoded, validation_result[\"movingFactor\"] )\\n    \\n                        # Update moving factor in user entry\\n                        find_user_by_external_uid = userService.replaceUserAttribute(user_name, \"oxExternalUid\", otp_user_external_uid, new_otp_user_external_uid)\\n                        if find_user_by_external_uid != None:\\n                            return True\\n    \\n                        print \"OTP. Process HOTP authentication during authentication. Failed to update user entry\"\\n            elif self.otpType == \"totp\":\\n                for user_enrollment in user_enrollments:\\n                    otp_secret_key = self.fromBase64Url(user_enrollment)\\n\\n                    # Validate TOTP\\n                    validation_result = self.validateTotpKey(otp_secret_key, otpCode, user_name)\\n                    if (validation_result != None) and validation_result[\"result\"]:\\n                        print \"OTP. Process TOTP authentication during authentication. otpCode is valid\"\\n                        return True\\n\\n        facesMessages.add(FacesMessage.SEVERITY_ERROR, \"Failed to authenticate. OTP code is invalid\")\\n        print \"OTP. Process OTP authentication. OTP code is invalid\"\\n\\n        return False\\n\\n    # Shared HOTP/TOTP methods\\n    def generateSecretKey(self, keyLength):\\n        bytes = jarray.zeros(keyLength, \"b\")\\n        secureRandom = SecureRandom()\\n        secureRandom.nextBytes(bytes)\\n        \\n        return bytes\\n    \\n    # HOTP methods\\n    def generateSecretHotpKey(self):\\n        keyLength = self.hotpConfiguration[\"keyLength\"]\\n        \\n        return self.generateSecretKey(keyLength)\\n\\n    def generateHotpKey(self, secretKey, movingFactor):\\n        digits = self.hotpConfiguration[\"digits\"]\\n\\n        hotp = HOTP.key(secretKey).digits(digits).movingFactor(movingFactor).build()\\n        \\n        return hotp.value()\\n\\n    def validateHotpKey(self, secretKey, movingFactor, totpKey):\\n        lookAheadWindow = self.hotpConfiguration[\"lookAheadWindow\"]\\n        digits = self.hotpConfiguration[\"digits\"]\\n\\n        htopValidationResult = HOTPValidator.lookAheadWindow(lookAheadWindow).validate(secretKey, movingFactor, digits, totpKey)\\n        if htopValidationResult.isValid():\\n            return { \"result\": True, \"movingFactor\": htopValidationResult.getNewMovingFactor() }\\n\\n        return { \"result\": False, \"movingFactor\": None }\\n\\n    def generateHotpSecretKeyUri(self, secretKey, issuer, userDisplayName):\\n        digits = self.hotpConfiguration[\"digits\"]\\n\\n        secretKeyBase32 = self.toBase32(secretKey)\\n        otpKey = OTPKey(secretKeyBase32, OTPType.HOTP)\\n        label = issuer + \" %s\" % userDisplayName\\n\\n        otpAuthURI = OTPAuthURIBuilder.fromKey(otpKey).label(label).issuer(issuer).digits(digits).build()\\n\\n        return otpAuthURI.toUriString()\\n\\n    # TOTP methods\\n    def generateSecretTotpKey(self):\\n        keyLength = self.totpConfiguration[\"keyLength\"]\\n        \\n        return self.generateSecretKey(keyLength)\\n\\n    def generateTotpKey(self, secretKey):\\n        digits = self.totpConfiguration[\"digits\"]\\n        timeStep = self.totpConfiguration[\"timeStep\"]\\n        hmacShaAlgorithmType = self.totpConfiguration[\"hmacShaAlgorithmType\"]\\n\\n        totp = TOTP.key(secretKey).digits(digits).timeStep(TimeUnit.SECONDS.toMillis(timeStep)).hmacSha(hmacShaAlgorithmType).build()\\n        \\n        return totp.value()\\n\\n    def validateTotpKey(self, secretKey, totpKey, user_name):\\n        localTotpKey = self.generateTotpKey(secretKey)\\n        cachedOTP = self.getCachedOTP(user_name)\\n\\n        if StringHelper.equals(localTotpKey, totpKey) and not StringHelper.equals(localTotpKey, cachedOTP):\\n            userService = CdiUtil.bean(UserService)\\n            if cachedOTP is None:\\n                userService.addUserAttribute(user_name, \"oxOTPCache\",localTotpKey)\\n            else :\\n                userService.replaceUserAttribute(user_name, \"oxOTPCache\", cachedOTP, localTotpKey)\\n            print \"OTP. Caching OTP: \\'%s\\'\" % localTotpKey\\n            return { \"result\": True }\\n        return { \"result\": False }\\n\\t\\n    def getCachedOTP(self, user_name):\\n        userService = CdiUtil.bean(UserService)\\n        user = userService.getUser(user_name, \"oxOTPCache\")\\n        if user is None:\\n            print \"OTP. Get Cached OTP. Failed to find OTP\"\\n            return None\\n        customAttribute = userService.getCustomAttribute(user, \"oxOTPCache\")\\n        \\n        if customAttribute is None:\\n            print \"OTP. Custom attribute is null\"\\n            return None\\n        user_cached_OTP = customAttribute.getValue()\\n        if user_cached_OTP is None:\\n            print \"OTP. no OTP is present in LDAP\"\\n            return None\\n        \\n        print \"OTP.Cached OTP: \\'%s\\'\" % user_cached_OTP\\n        return user_cached_OTP\\n        \\n    def generateTotpSecretKeyUri(self, secretKey, issuer, userDisplayName):\\n        digits = self.totpConfiguration[\"digits\"]\\n        timeStep = self.totpConfiguration[\"timeStep\"]\\n\\n        secretKeyBase32 = self.toBase32(secretKey)\\n        otpKey = OTPKey(secretKeyBase32, OTPType.TOTP)\\n        label = issuer + \" %s\" % userDisplayName\\n\\n        otpAuthURI = OTPAuthURIBuilder.fromKey(otpKey).label(label).issuer(issuer).digits(digits).timeStep(TimeUnit.SECONDS.toMillis(timeStep)).build()\\n\\n        return otpAuthURI.toUriString()\\n\\n    # Utility methods\\n    def toBase32(self, bytes):\\n        return BaseEncoding.base32().omitPadding().encode(bytes)\\n\\n    def toBase64Url(self, bytes):\\n        return BaseEncoding.base64Url().encode(bytes)\\n\\n    def fromBase64Url(self, chars):\\n        return BaseEncoding.base64Url().decode(chars)\\n\\n\\n'], 'jansScrTyp': ['person_authentication'], 'objectClass': ['top', 'jansCustomScr'], 'jansEnabled': ['false'], 'jansProgLng': ['python']} 11:35:29 06/21/21 Querying LDAP for dn inum=5018-F9CF,ou=scripts,o=jans 11:35:29 06/21/21 Adding LDAP dn:inum=5018-F9CF,ou=scripts,o=jans entry:{'description': ['DUO authentication module'], 'displayName': ['duo'], 'inum': ['5018-F9CF'], 'jansConfProperty': ['{\"value1\":\"duo_creds_file\",\"value2\":\"/etc/certs/duo_creds.json\",\"description\":\"\"}', '{\"value1\":\"duo_host\",\"value2\":\"api-random.duosecurity.com\",\"description\":\"\"}'], 'jansLevel': ['50'], 'jansModuleProperty': ['{\"value1\":\"usage_type\",\"value2\":\"interactive\",\"description\":\"\"}', '{\"value1\":\"location_type\",\"value2\":\"ldap\",\"description\":\"\"}'], 'jansRevision': ['1'], 'jansScr': ['# oxAuth is available under the MIT License (2008). See http://opensource.org/licenses/MIT for full text.\\n# Copyright (c) 2016, Janssen\\n#\\n# Author: Yuriy Movchan\\n#\\n\\nfrom io.jans.service.cdi.util import CdiUtil\\nfrom io.jans.as.server.security import Identity\\nfrom io.jans.model.custom.script.type.auth import PersonAuthenticationType\\nfrom io.jans.as.server.service import AuthenticationService\\nfrom io.jans.as.server.service import UserService\\nfrom io.jans.service import MailService\\nfrom io.jans.util import ArrayHelper\\nfrom io.jans.util import StringHelper\\nfrom java.util import Arrays\\n\\nimport duo_web\\nimport json\\n\\nclass PersonAuthentication(PersonAuthenticationType):\\n    def init(self, currentTimeMillis):\\n        self.currentTimeMillis = currentTimeMillis\\n\\n    def init(self, customScript, configurationAttributes):\\n        print \"Duo. Initialization\"\\n\\n        duo_creds_file = configurationAttributes.get(\"duo_creds_file\").getValue2()\\n        # Load credentials from file\\n        f = open(duo_creds_file, \\'r\\')\\n        try:\\n            creds = json.loads(f.read())\\n        except:\\n            print \"Duo. Initialization. Failed to load creds from file:\", duo_creds_file\\n            return False\\n        finally:\\n            f.close()\\n\\n        self.ikey = str(creds[\"ikey\"])\\n        self.skey = str(creds[\"skey\"])\\n        self.akey = str(creds[\"akey\"])\\n\\n        self.use_duo_group = False\\n        if (configurationAttributes.containsKey(\"duo_group\")):\\n            self.duo_group = configurationAttributes.get(\"duo_group\").getValue2()\\n            self.use_duo_group = True\\n            print \"Duo. Initialization. Using Duo only if user belong to group:\", self.duo_group\\n\\n        self.use_audit_group = False\\n        if (configurationAttributes.containsKey(\"audit_group\")):\\n            self.audit_group = configurationAttributes.get(\"audit_group\").getValue2()\\n\\n            if (not configurationAttributes.containsKey(\"audit_group_email\")):\\n                print \"Duo. Initialization. Property audit_group_email is not specified\"\\n                return False\\n\\n            self.audit_email = configurationAttributes.get(\"audit_group_email\").getValue2()\\n            self.use_audit_group = True\\n\\n            print \"Duo. Initialization. Using audito group:\", self.audit_group\\n            \\n        if (self.use_duo_group or self.use_audit_group):\\n            if (not configurationAttributes.containsKey(\"audit_attribute\")):\\n                print \"Duo. Initialization. Property audit_attribute is not specified\"\\n                return False\\n            else:\\n                self.audit_attribute = configurationAttributes.get(\"audit_attribute\").getValue2()\\n\\n        print \"Duo. Initialized successfully\"\\n        return True   \\n\\n    def destroy(self, configurationAttributes):\\n        print \"Duo. Destroy\"\\n        print \"Duo. Destroyed successfully\"\\n        return True\\n\\n    def getApiVersion(self):\\n        return 11\\n        \\n    def getAuthenticationMethodClaims(self, requestParameters):\\n        return None\\n        \\n    def isValidAuthenticationMethod(self, usageType, configurationAttributes):\\n        return True\\n\\n    def getAlternativeAuthenticationMethod(self, usageType, configurationAttributes):\\n        return None\\n\\n    def authenticate(self, configurationAttributes, requestParameters, step):\\n        duo_host = configurationAttributes.get(\"duo_host\").getValue2()\\n\\n        authenticationService = CdiUtil.bean(AuthenticationService)\\n\\n        identity = CdiUtil.bean(Identity)\\n\\n        if (step == 1):\\n            print \"Duo. Authenticate for step 1\"\\n\\n            # Check if user authenticated already in another custom script\\n            user = authenticationService.getAuthenticatedUser()\\n            if user == None:\\n                credentials = identity.getCredentials()\\n                user_name = credentials.getUsername()\\n                user_password = credentials.getPassword()\\n    \\n                logged_in = False\\n                if (StringHelper.isNotEmptyString(user_name) and StringHelper.isNotEmptyString(user_password)):\\n                    userService = CdiUtil.bean(UserService)\\n                    logged_in = authenticationService.authenticate(user_name, user_password)\\n    \\n                if (not logged_in):\\n                    return False\\n    \\n                user = authenticationService.getAuthenticatedUser()\\n\\n            if (self.use_duo_group):\\n                print \"Duo. Authenticate for step 1. Checking if user belong to Duo group\"\\n                is_member_duo_group = self.isUserMemberOfGroup(user, self.audit_attribute, self.duo_group)\\n                if (is_member_duo_group):\\n                    print \"Duo. Authenticate for step 1. User \\'\" + user.getUserId() + \"\\' member of Duo group\"\\n                    duo_count_login_steps = 2\\n                else:\\n                    self.processAuditGroup(user)\\n                    duo_count_login_steps = 1\\n\\n                identity.setWorkingParameter(\"duo_count_login_steps\", duo_count_login_steps)\\n\\n            return True\\n        elif (step == 2):\\n            print \"Duo. Authenticate for step 2\"\\n            user = authenticationService.getAuthenticatedUser()\\n            if user == None:\\n                print \"Duo. Authenticate for step 2. Failed to determine user name\"\\n                return False\\n\\n            user_name = user.getUserId()\\n\\n            sig_response_array = requestParameters.get(\"sig_response\")\\n            if ArrayHelper.isEmpty(sig_response_array):\\n                print \"Duo. Authenticate for step 2. sig_response is empty\"\\n                return False\\n\\n            duo_sig_response = sig_response_array[0]\\n\\n            print \"Duo. Authenticate for step 2. duo_sig_response: \" + duo_sig_response\\n\\n            authenticated_username = duo_web.verify_response(self.ikey, self.skey, self.akey, duo_sig_response)\\n\\n            print \"Duo. Authenticate for step 2. authenticated_username: \" + authenticated_username + \", expected user_name: \" + user_name\\n\\n            if (not StringHelper.equals(user_name, authenticated_username)):\\n                return False\\n\\n            self.processAuditGroup(user)\\n\\n            return True\\n        else:\\n            return False\\n\\n    def prepareForStep(self, configurationAttributes, requestParameters, step):\\n        identity = CdiUtil.bean(Identity)\\n        authenticationService = CdiUtil.bean(AuthenticationService)\\n\\n        duo_host = configurationAttributes.get(\"duo_host\").getValue2()\\n\\n        if (step == 1):\\n            print \"Duo. Prepare for step 1\"\\n\\n            return True\\n        elif (step == 2):\\n            print \"Duo. Prepare for step 2\"\\n\\n            user = authenticationService.getAuthenticatedUser()\\n            if (user == None):\\n                print \"Duo. Prepare for step 2. Failed to determine user name\"\\n                return False\\n            user_name = user.getUserId()\\n\\n            duo_sig_request = duo_web.sign_request(self.ikey, self.skey, self.akey, user_name)\\n            print \"Duo. Prepare for step 2. duo_sig_request: \" + duo_sig_request\\n            \\n            identity.setWorkingParameter(\"duo_host\", duo_host)\\n            identity.setWorkingParameter(\"duo_sig_request\", duo_sig_request)\\n\\n            return True\\n        else:\\n            return False\\n\\n    def getExtraParametersForStep(self, configurationAttributes, step):\\n        if step == 2:\\n            return Arrays.asList(\"duo_count_login_steps\", \"cas2_user_uid\")\\n\\n        return None\\n\\n    def getCountAuthenticationSteps(self, configurationAttributes):\\n        identity = CdiUtil.bean(Identity)\\n        if (identity.isSetWorkingParameter(\"duo_count_login_steps\")):\\n            return int(identity.getWorkingParameter(\"duo_count_login_steps\"))\\n\\n        return 2\\n\\n    def getPageForStep(self, configurationAttributes, step):\\n        if (step == 2):\\n            return \"/auth/duo/duologin.xhtml\"\\n        return \"\"\\n\\n    def getNextStep(self, configurationAttributes, requestParameters, step):\\n        return -1\\n\\n    def getLogoutExternalUrl(self, configurationAttributes, requestParameters):\\n        print \"Get external logout URL call\"\\n        return None\\n\\n    def logout(self, configurationAttributes, requestParameters):\\n        return True\\n\\n    def isUserMemberOfGroup(self, user, attribute, group):\\n        is_member = False\\n        member_of_list = user.getAttributeValues(attribute)\\n        if (member_of_list != None):\\n            for member_of in member_of_list:\\n                if StringHelper.equalsIgnoreCase(group, member_of) or member_of.endswith(group):\\n                    is_member = True\\n                    break\\n\\n        return is_member\\n\\n    def processAuditGroup(self, user):\\n        if (self.use_audit_group):\\n            is_member = self.isUserMemberOfGroup(user, self.audit_attribute, self.audit_group)\\n            if (is_member):\\n                print \"Duo. Authenticate for processAuditGroup. User \\'\" + user.getUserId() + \"\\' member of audit group\"\\n                print \"Duo. Authenticate for processAuditGroup. Sending e-mail about user \\'\" + user.getUserId() + \"\\' login to\", self.audit_email\\n                \\n                # Send e-mail to administrator\\n                user_id = user.getUserId()\\n                mailService = CdiUtil.bean(MailService)\\n                subject = \"User log in: \" + user_id\\n                body = \"User log in: \" + user_id\\n                mailService.sendMail(self.audit_email, subject, body)\\n'], 'jansScrTyp': ['person_authentication'], 'objectClass': ['top', 'jansCustomScr'], 'jansEnabled': ['false'], 'jansProgLng': ['python']} 11:35:29 06/21/21 Querying LDAP for dn inum=522F-CDC5,ou=scripts,o=jans 11:35:29 06/21/21 Adding LDAP dn:inum=522F-CDC5,ou=scripts,o=jans entry:{'description': ['Sample Update User script'], 'displayName': ['update_user'], 'inum': ['522F-CDC5'], 'jansLevel': ['100'], 'jansModuleProperty': ['{\"value1\":\"location_type\",\"value2\":\"ldap\",\"description\":\"\"}'], 'jansRevision': ['1'], 'jansScr': ['# oxAuth is available under the MIT License (2008). See http://opensource.org/licenses/MIT for full text.\\n# Copyright (c) 2016, Janssen\\n#\\n# Author: Yuriy Movchan\\n#\\n\\nfrom io.jans.model.custom.script.type.user import UpdateUserType\\nfrom io.jans.util import StringHelper, ArrayHelper\\nfrom java.util import Arrays, ArrayList\\n\\nimport java\\n\\nclass UpdateUser(UpdateUserType):\\n    def init(self, currentTimeMillis):\\n        self.currentTimeMillis = currentTimeMillis\\n\\n    def init(self, customScript, configurationAttributes):\\n        print \"Update user. Initialization\"\\n        print \"Update user. Initialized successfully\"\\n\\n        return True   \\n\\n    def destroy(self, configurationAttributes):\\n        print \"Update user. Destroy\"\\n        print \"Update user. Destroyed successfully\"\\n        return True   \\n\\n    def getApiVersion(self):\\n        return 11\\n\\n    def newUser(self, user, configurationAttributes):\\n        print \"Update user. newUser method\"\\n\\n        return True\\n\\n    def addUser(self, user, persisted, configurationAttributes):\\n        print \"Update user. addUser method\"\\n\\n        return True\\n\\n    def postAddUser(self, user, configurationAttributes):\\n        print \"Update user. postAddUser method\"\\n\\n        return True\\n\\n    # Update user entry before persistent it\\n    #   user is io.jans.oxtrust.model.JanssenCustomPerson\\n    #   persisted is boolean value to specify if operation type: add/modify\\n    #   configurationAttributes is java.util.Map\\n    def updateUser(self, user, persisted, configurationAttributes):\\n        print \"Update user. updateUser method\"\\n\\n        uid = user.getUid()\\n        print \"Update user. User uid: {}\".format(uid)\\n       \\n        mail = uid + \"@example.org\"\\n        user.setMail(mail)\\n\\n        return True\\n\\n    def postUpdateUser(self, user, configurationAttributes):\\n        print \"Update user. postUpdateUser method\"\\n\\n        return True\\n\\n    def deleteUser(self, user, persisted, configurationAttributes):\\n        print \"Update user. deleteUser method\"\\n\\n        return True\\n\\n    def postDeleteUser(self, user, configurationAttributes):\\n        print \"Update user. postDeleteUser method\"\\n\\n        return True\\n'], 'jansScrTyp': ['update_user'], 'objectClass': ['top', 'jansCustomScr'], 'jansEnabled': ['false'], 'jansProgLng': ['python']} 11:35:29 06/21/21 Querying LDAP for dn inum=6EA0-8F0C,ou=scripts,o=jans 11:35:29 06/21/21 Adding LDAP dn:inum=6EA0-8F0C,ou=scripts,o=jans entry:{'description': ['Sample User Registration script'], 'displayName': ['user_registration'], 'inum': ['6EA0-8F0C'], 'jansConfProperty': ['{\"value1\":\"enable_user\",\"value2\":\"false\",\"description\":\"\"}'], 'jansLevel': ['90'], 'jansModuleProperty': ['{\"value1\":\"location_type\",\"value2\":\"ldap\",\"description\":\"\"}'], 'jansRevision': ['1'], 'jansScr': ['# oxAuth is available under the MIT License (2008). See http://opensource.org/licenses/MIT for full text.\\r\\n# Copyright (c) 2016, Janssen\\r\\n#\\r\\n# Author: Yuriy Movchan\\r\\n#\\r\\n\\r\\nfrom io.jans.model.custom.script.type.user import UserRegistrationType\\r\\nfrom io.jans.util import StringHelper, ArrayHelper\\r\\nfrom java.util import Arrays, ArrayList\\r\\n\\r\\nimport java\\r\\n\\r\\nclass UserRegistration(UserRegistrationType):\\r\\n    def init(self, currentTimeMillis):\\r\\n        self.currentTimeMillis = currentTimeMillis\\r\\n\\r\\n    def init(self, customScript, configurationAttributes):\\r\\n        print \"User registration. Initialization\"\\r\\n\\r\\n        self.enable_user = StringHelper.toBoolean(configurationAttributes.get(\"enable_user\").getValue2(), False)\\r\\n\\r\\n        print \"User registration. Initialized successfully\"\\r\\n\\r\\n        return True   \\r\\n\\r\\n    def destroy(self, configurationAttributes):\\r\\n        print \"User registration. Destroy\"\\r\\n        print \"User registration. Destroyed successfully\"\\r\\n        return True   \\r\\n\\r\\n    # User registration init method\\r\\n    #   user is io.jans.oxtrust.model.JanssenCustomPerson\\r\\n    #   requestParameters is java.util.Map\\r\\n    #   configurationAttributes is java.util.Map\\r\\n    def initRegistration(self, user, requestParameters, configurationAttributes):\\r\\n        print \"User registration. Init method\"\\r\\n\\r\\n        return True\\r\\n\\r\\n    # User registration pre method\\r\\n    #   user is io.jans.oxtrust.model.JanssenCustomPerson\\r\\n    #   requestParameters is java.util.Map\\r\\n    #   configurationAttributes is java.util.Map\\r\\n    def preRegistration(self, user, requestParameters, configurationAttributes):\\r\\n        print \"User registration. Pre method\"\\r\\n\\r\\n        userStatus = \"active\"\\r\\n        if not self.enable_user:\\r\\n            userStatus = \"inactive\"\\r\\n\\r\\n        # Disable/Enable registered user\\r\\n        user.setStatus(userStatus)\\r\\n\\r\\n        return True\\r\\n\\r\\n    # User registration post method\\r\\n    #   user is io.jans.oxtrust.model.JanssenCustomPerson\\r\\n    #   requestParameters is java.util.Map\\r\\n    #   configurationAttributes is java.util.Map\\r\\n    def postRegistration(self, user, requestParameters, configurationAttributes):\\r\\n        print \"User registration. Post method\"\\r\\n\\r\\n        return True\\r\\n    \\r\\n    # User confirm New Registration method\\r\\n    #   user is io.jans.oxtrust.model.JanssenCustomPerson\\r\\n    #   requestParameters is java.util.Map\\r\\n    #   configurationAttributes is java.util.Map\\r\\n    def confirmRegistration(self, user, requestParameters, configurationAttributes):\\r\\n        print \"User registration. Confirm registration method\"\\r\\n\\r\\n        return True\\r\\n\\r\\n    def getApiVersion(self):\\r\\n        return 11\\r\\n'], 'jansScrTyp': ['user_registration'], 'objectClass': ['top', 'jansCustomScr'], 'jansEnabled': ['false'], 'jansProgLng': ['python']} 11:35:29 06/21/21 Querying LDAP for dn inum=6EA0-8F0D,ou=scripts,o=jans 11:35:29 06/21/21 Adding LDAP dn:inum=6EA0-8F0D,ou=scripts,o=jans entry:{'description': ['Sample Confirm User Registration  script'], 'displayName': ['user_confirm_registration'], 'inum': ['6EA0-8F0D'], 'jansLevel': ['100'], 'jansModuleProperty': ['{\"value1\":\"location_type\",\"value2\":\"ldap\",\"description\":\"\"}'], 'jansRevision': ['1'], 'jansScr': ['# oxAuth is available under the MIT License (2008). See http://opensource.org/licenses/MIT for full text.\\r\\n# Copyright (c) 2016, Janssen\\r\\n#\\r\\n\\r\\nfrom io.jans.service.cdi.util import CdiUtil\\r\\nfrom io.jans.model.custom.script.type.user import UserRegistrationType\\r\\nfrom io.jans.service import MailService\\r\\nfrom io.jans.oxtrust.service import PersonService\\r\\nfrom io.jans.util import StringHelper, ArrayHelper\\r\\nfrom java.util import Arrays, ArrayList\\r\\nfrom io.jans.config.oxtrust import AppConfiguration\\r\\nfrom javax.faces.context import ExternalContext\\r\\nfrom io.jans.oxtrust.service import ConfigurationService\\r\\n\\r\\nimport java\\r\\n\\r\\nclass UserRegistration(UserRegistrationType):\\r\\n    def init(self, currentTimeMillis):\\r\\n        self.currentTimeMillis = currentTimeMillis\\r\\n\\r\\n    def init(self, customScript, configurationAttributes):\\r\\n        print \"User Confirm registration. Initialization\"\\r\\n        print \"User Confirm registration. Initialized successfully\"\\r\\n\\r\\n        return True   \\r\\n\\r\\n    def destroy(self, configurationAttributes):\\r\\n        print \"User Confirm registration. Destroy\"\\r\\n        print \"User Confirm registration. Destroyed successfully\"\\r\\n        return True   \\r\\n\\r\\n    # User registration init method\\r\\n    #   user is io.jans.oxtrust.model.JanssenCustomPerson\\r\\n    #   requestParameters is java.util.Map\\r\\n    #   configurationAttributes is java.util.Map\\r\\n    def initRegistration(self, user, requestParameters, configurationAttributes):\\r\\n        print \"User Confirm registration. Init method\"\\r\\n        #hostName = requestParameters.get(\"hostName\")[0]\\r\\n        #print \"HostName Initialization : %s\" % hostName\\r\\n        return True\\r\\n\\r\\n    # User registration pre method\\r\\n    #   user is io.jans.oxtrust.model.JanssenCustomPerson\\r\\n    #   requestParameters is java.util.Map\\r\\n    #   configurationAttributes is java.util.Map\\r\\n    def preRegistration(self, user, requestParameters, configurationAttributes):\\r\\n        print \"User Confirm registration. Pre method\"\\r\\n        userStatus = \"inactive\"\\r\\n\\r\\n        # Disable/Enable registered user\\r\\n        user.setStatus(userStatus)\\r\\n        self.guid = StringHelper.getRandomString(16)\\r\\n        user.setGuid(self.guid)\\r\\n        return True\\r\\n\\r\\n    # User registration post method\\r\\n    #   user is io.jans.oxtrust.model.JanssenCustomPerson\\r\\n    #   requestParameters is java.util.Map\\r\\n    #   configurationAttributes is java.util.Map\\r\\n    def postRegistration(self, user, requestParameters, configurationAttributes):\\r\\n        print \"User Confirm registration. Post method\"\\r\\n        externalContext = CdiUtil.bean(ExternalContext)\\r\\n        contextPath = externalContext.getRequest().getContextPath()\\r\\n        hostName =  externalContext.getRequestServerName()\\r\\n        print \"HostName from context : %s\" % hostName\\r\\n        mailService = CdiUtil.bean(MailService)\\r\\n        subject = \"Registration confirmation\"\\r\\n        activationLink = \"https://%s%s/confirm/registration.htm?code=%s\" %(hostName, contextPath, self.guid)\\r\\n        body = \"Welcome<p>Dear %s,</p><p>Your Account has been created, welcome to %s.</p><p>You are just one step way from activating your account on %s.</p><p>Click the button and start using your account.</p>Activate your account now!\"  % (user.getUid(), hostName, hostName, activationLink)\\r\\n        print \"User Confirm registration. Post method. Attempting to send e-mail to \\'%s\\' message \\'%s\\'\" % (user.getMail(), body)\\r\\n        mailService.sendMail(user.getMail(), None, subject, body, body);\\r\\n        return True\\r\\n\\r\\n    def confirmRegistration(self, user, requestParameters, configurationAttributes):\\r\\n        print \"User Confirm registration. Confirm method\"\\r\\n        code_array = requestParameters.get(\"code\")\\r\\n        if ArrayHelper.isEmpty(code_array):\\r\\n            print \"User Confirm registration. Confirm method. code is empty\"\\r\\n            return False\\r\\n\\r\\n        confirmation_code = code_array[0]\\r\\n        print \"User Confirm registration. Confirm method. code: \\'%s\\'\" % confirmation_code\\r\\n\\r\\n        if confirmation_code == None:\\r\\n            print \"User Confirm registration. Confirm method. Confirmation code not exist in request\"\\r\\n            return False\\r\\n\\r\\n        personService = CdiUtil.bean(PersonService)\\r\\n        user = personService.getPersonByAttribute(\"oxGuid\", confirmation_code)\\r\\n        if user == None:\\r\\n            print \"User Confirm registration. Confirm method. There is no user by confirmation code: \\'%s\\'\" % confirmation_code\\r\\n            return False\\r\\n\\r\\n        if confirmation_code == user.getGuid():\\r\\n            user.setStatus(\"active\")\\r\\n            user.setGuid(\"\")\\r\\n            personService.updatePerson(user)\\r\\n            print \"User Confirm registration. Confirm method. User \\'%s\\' confirmed his registration\" % user.getUid()\\r\\n            return True\\r\\n\\r\\n        print \"User Confirm registration. Confirm method. Confirmation code for user \\'%s\\' is invalid\" % user.getUid()\\r\\n        return False\\r\\n\\r\\n    def getApiVersion(self):\\r\\n        return 11\\r\\n'], 'jansScrTyp': ['user_registration'], 'objectClass': ['top', 'jansCustomScr'], 'jansEnabled': ['false'], 'jansProgLng': ['python']} 11:35:29 06/21/21 Querying LDAP for dn inum=8BAF-80D6,ou=scripts,o=jans 11:35:29 06/21/21 Adding LDAP dn:inum=8BAF-80D6,ou=scripts,o=jans entry:{'description': ['Fido U2F authentication module'], 'displayName': ['u2f'], 'inum': ['8BAF-80D6'], 'jansConfProperty': ['{\"value1\":\"u2f_application_id\",\"value2\":\"https://test.dd.jans.io\",\"description\":\"\"}', '{\"value1\":\"u2f_server_uri\",\"value2\":\"https://test.dd.jans.io\",\"description\":\"\"}'], 'jansLevel': ['50'], 'jansModuleProperty': ['{\"value1\":\"usage_type\",\"value2\":\"interactive\",\"description\":\"\"}', '{\"value1\":\"location_type\",\"value2\":\"ldap\",\"description\":\"\"}'], 'jansRevision': ['1'], 'jansScr': ['# oxAuth is available under the MIT License (2008). See http://opensource.org/licenses/MIT for full text.\\r\\n# Copyright (c) 2016, Janssen\\r\\n#\\r\\n# Author: Yuriy Movchan\\r\\n#\\r\\n\\r\\nimport java\\r\\nimport sys\\r\\nfrom javax.ws.rs.core import Response\\r\\nfrom javax.ws.rs import WebApplicationException\\r\\nfrom org.jboss.resteasy.client.exception import ResteasyClientException\\r\\nfrom io.jans.model.custom.script.type.auth import PersonAuthenticationType\\r\\nfrom io.jans.as.client.fido.u2f import FidoU2fClientFactory\\r\\nfrom io.jans.as.model.config import Constants\\r\\nfrom io.jans.as.server.security import Identity\\r\\nfrom io.jans.as.server.service import AuthenticationService, SessionIdService\\r\\nfrom io.jans.as.server.service import UserService\\r\\nfrom io.jans.as.service.fido.u2f import DeviceRegistrationService\\r\\nfrom io.jans.as.util import ServerUtil\\r\\nfrom io.jans.service.cdi.util import CdiUtil\\r\\nfrom io.jans.util import StringHelper\\r\\n\\r\\n\\r\\nclass PersonAuthentication(PersonAuthenticationType):\\r\\n    def init(self, currentTimeMillis):\\r\\n        self.currentTimeMillis = currentTimeMillis\\r\\n\\r\\n    def init(self, customScript, configurationAttributes):\\r\\n        print \"U2F. Initialization\"\\r\\n\\r\\n        print \"U2F. Initialization. Downloading U2F metadata\"\\r\\n        u2f_server_uri = configurationAttributes.get(\"u2f_server_uri\").getValue2()\\r\\n        u2f_server_metadata_uri = u2f_server_uri + \"/.well-known/fido-u2f-configuration\"\\r\\n\\r\\n        metaDataConfigurationService = FidoU2fClientFactory.instance().createMetaDataConfigurationService(u2f_server_metadata_uri)\\r\\n\\r\\n        max_attempts = 20\\r\\n        for attempt in range(1, max_attempts + 1):\\r\\n            try:\\r\\n                self.metaDataConfiguration = metaDataConfigurationService.getMetadataConfiguration()\\r\\n                break\\r\\n            except WebApplicationException, ex:\\r\\n                # Detect if last try or we still get Service Unavailable HTTP error\\r\\n                if (attempt == max_attempts) or (ex.getResponse().getStatus() != Response.Status.SERVICE_UNAVAILABLE.getStatusCode()):\\r\\n                    raise ex\\r\\n\\r\\n                java.lang.Thread.sleep(3000)\\r\\n                print \"Attempting to load metadata: %d\" % attempt\\r\\n        \\r\\n        print \"U2F. Initialized successfully\"\\r\\n        return True   \\r\\n\\r\\n    def destroy(self, configurationAttributes):\\r\\n        print \"U2F. Destroy\"\\r\\n        print \"U2F. Destroyed successfully\"\\r\\n        return True\\r\\n\\r\\n    def getApiVersion(self):\\r\\n        return 11\\r\\n        \\r\\n    def getAuthenticationMethodClaims(self, requestParameters):\\r\\n        return None\\r\\n        \\r\\n    def isValidAuthenticationMethod(self, usageType, configurationAttributes):\\r\\n        return True\\r\\n\\r\\n    def getAlternativeAuthenticationMethod(self, usageType, configurationAttributes):\\r\\n        return None\\r\\n\\r\\n    def authenticate(self, configurationAttributes, requestParameters, step):\\r\\n        authenticationService = CdiUtil.bean(AuthenticationService)\\r\\n\\r\\n        identity = CdiUtil.bean(Identity)\\r\\n        credentials = identity.getCredentials()\\r\\n\\r\\n        user_name = credentials.getUsername()\\r\\n\\r\\n        if (step == 1):\\r\\n            print \"U2F. Authenticate for step 1\"\\r\\n\\r\\n            user_password = credentials.getPassword()\\r\\n            logged_in = False\\r\\n            if (StringHelper.isNotEmptyString(user_name) and StringHelper.isNotEmptyString(user_password)):\\r\\n                userService = CdiUtil.bean(UserService)\\r\\n                logged_in = authenticationService.authenticate(user_name, user_password)\\r\\n\\r\\n            if (not logged_in):\\r\\n                return False\\r\\n\\r\\n            return True\\r\\n        elif (step == 2):\\r\\n            print \"U2F. Authenticate for step 2\"\\r\\n\\r\\n            token_response = ServerUtil.getFirstValue(requestParameters, \"tokenResponse\")\\r\\n            if token_response == None:\\r\\n                print \"U2F. Authenticate for step 2. tokenResponse is empty\"\\r\\n                return False\\r\\n\\r\\n            auth_method = ServerUtil.getFirstValue(requestParameters, \"authMethod\")\\r\\n            if auth_method == None:\\r\\n                print \"U2F. Authenticate for step 2. authMethod is empty\"\\r\\n                return False\\r\\n\\r\\n            authenticationService = CdiUtil.bean(AuthenticationService)\\r\\n            user = authenticationService.getAuthenticatedUser()\\r\\n            if (user == None):\\r\\n                print \"U2F. Prepare for step 2. Failed to determine user name\"\\r\\n                return False\\r\\n\\r\\n            if (auth_method == \\'authenticate\\'):\\r\\n                print \"U2F. Prepare for step 2. Call FIDO U2F in order to finish authentication workflow\"\\r\\n                authenticationRequestService = FidoU2fClientFactory.instance().createAuthenticationRequestService(self.metaDataConfiguration)\\r\\n                authenticationStatus = authenticationRequestService.finishAuthentication(user.getUserId(), token_response)\\r\\n\\r\\n                if (authenticationStatus.getStatus() != Constants.RESULT_SUCCESS):\\r\\n                    print \"U2F. Authenticate for step 2. Get invalid authentication status from FIDO U2F server\"\\r\\n                    return False\\r\\n\\r\\n                return True\\r\\n            elif (auth_method == \\'enroll\\'):\\r\\n                print \"U2F. Prepare for step 2. Call FIDO U2F in order to finish registration workflow\"\\r\\n                registrationRequestService = FidoU2fClientFactory.instance().createRegistrationRequestService(self.metaDataConfiguration)\\r\\n                registrationStatus = registrationRequestService.finishRegistration(user.getUserId(), token_response)\\r\\n\\r\\n                if (registrationStatus.getStatus() != Constants.RESULT_SUCCESS):\\r\\n                    print \"U2F. Authenticate for step 2. Get invalid registration status from FIDO U2F server\"\\r\\n                    return False\\r\\n\\r\\n                return True\\r\\n            else:\\r\\n                print \"U2F. Prepare for step 2. Authenticatiod method is invalid\"\\r\\n                return False\\r\\n\\r\\n            return False\\r\\n        else:\\r\\n            return False\\r\\n\\r\\n    def prepareForStep(self, configurationAttributes, requestParameters, step):\\r\\n        identity = CdiUtil.bean(Identity)\\r\\n\\r\\n        if (step == 1):\\r\\n            return True\\r\\n        elif (step == 2):\\r\\n            print \"U2F. Prepare for step 2\"\\r\\n\\r\\n            session = CdiUtil.bean(SessionIdService).getSessionId()\\r\\n            if session == None:\\r\\n                print \"U2F. Prepare for step 2. Failed to determine session_id\"\\r\\n                return False\\r\\n\\r\\n            authenticationService = CdiUtil.bean(AuthenticationService)\\r\\n            user = authenticationService.getAuthenticatedUser()\\r\\n            if (user == None):\\r\\n                print \"U2F. Prepare for step 2. Failed to determine user name\"\\r\\n                return False\\r\\n\\r\\n            u2f_application_id = configurationAttributes.get(\"u2f_application_id\").getValue2()\\r\\n\\r\\n            # Check if user have registered devices\\r\\n            deviceRegistrationService = CdiUtil.bean(DeviceRegistrationService)\\r\\n\\r\\n            userInum = user.getAttribute(\"inum\")\\r\\n\\r\\n            registrationRequest = None\\r\\n            authenticationRequest = None\\r\\n\\r\\n            deviceRegistrations = deviceRegistrationService.findUserDeviceRegistrations(userInum, u2f_application_id)\\r\\n            if (deviceRegistrations.size() &gt; 0):\\r\\n                print \"U2F. Prepare for step 2. Call FIDO U2F in order to start authentication workflow\"\\r\\n\\r\\n                try:\\r\\n                    authenticationRequestService = FidoU2fClientFactory.instance().createAuthenticationRequestService(self.metaDataConfiguration)\\r\\n                    authenticationRequest = authenticationRequestService.startAuthentication(user.getUserId(), None, u2f_application_id, session.getId())\\r\\n                except ClientResponseFailure, ex:\\r\\n                    if (ex.getResponse().getResponseStatus() != Response.Status.NOT_FOUND):\\r\\n                        print \"U2F. Prepare for step 2. Failed to start authentication workflow. Exception:\", sys.exc_info()[1]\\r\\n                        return False\\r\\n            else:\\r\\n                print \"U2F. Prepare for step 2. Call FIDO U2F in order to start registration workflow\"\\r\\n                registrationRequestService = FidoU2fClientFactory.instance().createRegistrationRequestService(self.metaDataConfiguration)\\r\\n                registrationRequest = registrationRequestService.startRegistration(user.getUserId(), u2f_application_id, session.getId())\\r\\n\\r\\n            identity.setWorkingParameter(\"fido_u2f_authentication_request\", ServerUtil.asJson(authenticationRequest))\\r\\n            identity.setWorkingParameter(\"fido_u2f_registration_request\", ServerUtil.asJson(registrationRequest))\\r\\n\\r\\n            return True\\r\\n        elif (step == 3):\\r\\n            print \"U2F. Prepare for step 3\"\\r\\n\\r\\n            return True\\r\\n        else:\\r\\n            return False\\r\\n\\r\\n    def getExtraParametersForStep(self, configurationAttributes, step):\\r\\n        return None\\r\\n\\r\\n    def getCountAuthenticationSteps(self, configurationAttributes):\\r\\n        return 2\\r\\n\\r\\n    def getPageForStep(self, configurationAttributes, step):\\r\\n        if (step == 2):\\r\\n            return \"/auth/u2f/login.xhtml\"\\r\\n\\r\\n        return \"\"\\r\\n\\r\\n    def getNextStep(self, configurationAttributes, requestParameters, step):\\r\\n        return -1\\r\\n\\r\\n    def getLogoutExternalUrl(self, configurationAttributes, requestParameters):\\r\\n        print \"Get external logout URL call\"\\r\\n        return None\\r\\n\\r\\n    def logout(self, configurationAttributes, requestParameters):\\r\\n        return True\\r\\n'], 'jansScrTyp': ['person_authentication'], 'objectClass': ['top', 'jansCustomScr'], 'jansEnabled': ['false'], 'jansProgLng': ['python']} 11:35:29 06/21/21 Querying LDAP for dn inum=8BAF-80D7,ou=scripts,o=jans 11:35:29 06/21/21 Adding LDAP dn:inum=8BAF-80D7,ou=scripts,o=jans entry:{'description': ['Fido2 authentication module'], 'displayName': ['fido2'], 'inum': ['8BAF-80D7'], 'jansConfProperty': ['{\"value1\":\"fido2_server_uri\",\"value2\":\"https://test.dd.jans.io\",\"hide\":false,\"description\":\"\"}'], 'jansLevel': ['70'], 'jansModuleProperty': ['{\"value1\":\"usage_type\",\"value2\":\"interactive\",\"description\":\"\"}', '{\"value1\":\"location_type\",\"value2\":\"ldap\",\"description\":\"\"}'], 'jansRevision': ['1'], 'jansScr': ['# oxAuth is available under the MIT License (2008). See http://opensource.org/licenses/MIT for full text.\\n# Copyright (c) 2018, Janssen\\n#\\n# Author: Yuriy Movchan\\n#\\n\\nfrom javax.ws.rs.core import Response\\nfrom org.jboss.resteasy.client import ClientResponseFailure\\nfrom org.jboss.resteasy.client.exception import ResteasyClientException\\nfrom javax.ws.rs.core import Response\\nfrom io.jans.model.custom.script.type.auth import PersonAuthenticationType\\nfrom io.jans.fido2.client import Fido2ClientFactory\\nfrom io.jans.as.server.security import Identity\\nfrom io.jans.as.server.service import AuthenticationService, SessionIdService\\nfrom io.jans.as.server.service import UserService\\nfrom io.jans.as.util import ServerUtil\\nfrom io.jans.service.cdi.util import CdiUtil\\nfrom io.jans.util import StringHelper\\n\\nfrom java.util.concurrent.locks import ReentrantLock\\n\\nimport java\\nimport sys\\ntry:\\n    import json\\nexcept ImportError:\\n    import simplejson as json\\n\\nclass PersonAuthentication(PersonAuthenticationType):\\n    def init(self, currentTimeMillis):\\n        self.currentTimeMillis = currentTimeMillis\\n\\n    def init(self, customScript, configurationAttributes):\\n        print \"Fido2. Initialization\"\\n\\n        if not configurationAttributes.containsKey(\"fido2_server_uri\"):\\n            print \"fido2_server_uri. Initialization. Property fido2_server_uri is not specified\"\\n            return False\\n\\n        self.fido2_server_uri = configurationAttributes.get(\"fido2_server_uri\").getValue2()\\n\\n        self.fido2_domain = None\\n        if configurationAttributes.containsKey(\"fido2_domain\"):\\n            self.fido2_domain = configurationAttributes.get(\"fido2_domain\").getValue2()\\n\\n        self.metaDataLoaderLock = ReentrantLock()\\n        self.metaDataConfiguration = None\\n        \\n        print \"Fido2. Initialized successfully\"\\n        return True   \\n\\n    def destroy(self, configurationAttributes):\\n        print \"Fido2. Destroy\"\\n        print \"Fido2. Destroyed successfully\"\\n        return True\\n\\n    def getApiVersion(self):\\n        return 11\\n        \\n    def getAuthenticationMethodClaims(self, requestParameters):\\n        return None\\n        \\n    def isValidAuthenticationMethod(self, usageType, configurationAttributes):\\n        return True\\n\\n    def getAlternativeAuthenticationMethod(self, usageType, configurationAttributes):\\n        return None\\n\\n    def authenticate(self, configurationAttributes, requestParameters, step):\\n        authenticationService = CdiUtil.bean(AuthenticationService)\\n\\n        identity = CdiUtil.bean(Identity)\\n        credentials = identity.getCredentials()\\n\\n        user_name = credentials.getUsername()\\n\\n        if step == 1:\\n            print \"Fido2. Authenticate for step 1\"\\n\\n            user_password = credentials.getPassword()\\n            logged_in = False\\n            if StringHelper.isNotEmptyString(user_name) and StringHelper.isNotEmptyString(user_password):\\n                userService = CdiUtil.bean(UserService)\\n                logged_in = authenticationService.authenticate(user_name, user_password)\\n\\n            if not logged_in:\\n                return False\\n\\n            return True\\n        elif step == 2:\\n            print \"Fido2. Authenticate for step 2\"\\n\\n            token_response = ServerUtil.getFirstValue(requestParameters, \"tokenResponse\")\\n            if token_response == None:\\n                print \"Fido2. Authenticate for step 2. tokenResponse is empty\"\\n                return False\\n\\n            auth_method = ServerUtil.getFirstValue(requestParameters, \"authMethod\")\\n            if auth_method == None:\\n                print \"Fido2. Authenticate for step 2. authMethod is empty\"\\n                return False\\n\\n            authenticationService = CdiUtil.bean(AuthenticationService)\\n            user = authenticationService.getAuthenticatedUser()\\n            if user == None:\\n                print \"Fido2. Prepare for step 2. Failed to determine user name\"\\n                return False\\n\\n            if auth_method == \\'authenticate\\':\\n                print \"Fido2. Prepare for step 2. Call Fido2 in order to finish authentication flow\"\\n                assertionService = Fido2ClientFactory.instance().createAssertionService(self.metaDataConfiguration)\\n                assertionStatus = assertionService.verify(token_response)\\n                authenticationStatusEntity = assertionStatus.readEntity(java.lang.String)\\n\\n                if assertionStatus.getStatus() != Response.Status.OK.getStatusCode():\\n                    print \"Fido2. Authenticate for step 2. Get invalid authentication status from Fido2 server\"\\n                    return False\\n\\n                return True\\n            elif auth_method == \\'enroll\\':\\n                print \"Fido2. Prepare for step 2. Call Fido2 in order to finish registration flow\"\\n                attestationService = Fido2ClientFactory.instance().createAttestationService(self.metaDataConfiguration)\\n                attestationStatus = attestationService.verify(token_response)\\n\\n                if attestationStatus.getStatus() != Response.Status.OK.getStatusCode():\\n                    print \"Fido2. Authenticate for step 2. Get invalid registration status from Fido2 server\"\\n                    return False\\n\\n                return True\\n            else:\\n                print \"Fido2. Prepare for step 2. Authentication method is invalid\"\\n                return False\\n\\n            return False\\n        else:\\n            return False\\n\\n    def prepareForStep(self, configurationAttributes, requestParameters, step):\\n        identity = CdiUtil.bean(Identity)\\n\\n        if step == 1:\\n            return True\\n        elif step == 2:\\n            print \"Fido2. Prepare for step 2\"\\n\\n            session = CdiUtil.bean(SessionIdService).getSessionId()\\n            if session == None:\\n                print \"Fido2. Prepare for step 2. Failed to determine session_id\"\\n                return False\\n\\n            authenticationService = CdiUtil.bean(AuthenticationService)\\n            user = authenticationService.getAuthenticatedUser()\\n            if user == None:\\n                print \"Fido2. Prepare for step 2. Failed to determine user name\"\\n                return False\\n\\n            userName = user.getUserId()\\n\\n            metaDataConfiguration = self.getMetaDataConfiguration()\\n            \\n            assertionResponse = None\\n            attestationResponse = None\\n\\n            # Check if user have registered devices\\n            userService = CdiUtil.bean(UserService)\\n            countFido2Devices = userService.countFidoAndFido2Devices(userName, self.fido2_domain)\\n            if countFido2Devices &gt; 0:\\n                print \"Fido2. Prepare for step 2. Call Fido2 endpoint in order to start assertion flow\"\\n\\n                try:\\n                    assertionService = Fido2ClientFactory.instance().createAssertionService(metaDataConfiguration)\\n                    assertionRequest = json.dumps({\\'username\\': userName}, separators=(\\',\\', \\':\\'))\\n                    assertionResponse = assertionService.authenticate(assertionRequest).readEntity(java.lang.String)\\n                except ClientResponseFailure, ex:\\n                    print \"Fido2. Prepare for step 2. Failed to start assertion flow. Exception:\", sys.exc_info()[1]\\n                    return False\\n            else:\\n                print \"Fido2. Prepare for step 2. Call Fido2 endpoint in order to start attestation flow\"\\n\\n                try:\\n                    attestationService = Fido2ClientFactory.instance().createAttestationService(metaDataConfiguration)\\n                    attestationRequest = json.dumps({\\'username\\': userName, \\'displayName\\': userName, \\'attestation\\' : \\'direct\\'}, separators=(\\',\\', \\':\\'))\\n                    attestationResponse = attestationService.register(attestationRequest).readEntity(java.lang.String)\\n                except ClientResponseFailure, ex:\\n                    print \"Fido2. Prepare for step 2. Failed to start attestation flow. Exception:\", sys.exc_info()[1]\\n                    return False\\n\\n            identity.setWorkingParameter(\"fido2_assertion_request\", ServerUtil.asJson(assertionResponse))\\n            identity.setWorkingParameter(\"fido2_attestation_request\", ServerUtil.asJson(attestationResponse))\\n            print \"Fido2. Prepare for step 2. Successfully start flow with next requests.\\nfido2_assertion_request: \\'%s\\'\\nfido2_attestation_request: \\'%s\\'\" % ( assertionResponse, attestationResponse )\\n\\n            return True\\n        elif step == 3:\\n            print \"Fido2. Prepare for step 3\"\\n\\n            return True\\n        else:\\n            return False\\n\\n    def getExtraParametersForStep(self, configurationAttributes, step):\\n        return None\\n\\n    def getCountAuthenticationSteps(self, configurationAttributes):\\n        return 2\\n\\n    def getNextStep(self, configurationAttributes, requestParameters, step):\\n        return -1\\n\\n    def getPageForStep(self, configurationAttributes, step):\\n        if step == 2:\\n            return \"/auth/fido2/login.xhtml\"\\n\\n        return \"\"\\n\\n    def logout(self, configurationAttributes, requestParameters):\\n        return True\\n\\n    def getAuthenticationMethodClaims(self, requestParameters):\\n        return None\\n        \\n    def getLogoutExternalUrl(self, configurationAttributes, requestParameters):\\n        print \"Get external logout URL call\"\\n        return None    \\n        \\n        \\n    def getMetaDataConfiguration(self):\\n        if self.metaDataConfiguration != None:\\n            return self.metaDataConfiguration\\n        \\n        self.metaDataLoaderLock.lock()\\n        # Make sure that another thread not loaded configuration already          \\n        if self.metaDataConfiguration != None:\\n            return self.metaDataConfiguration\\n\\n        try:\\n            print \"Fido2. Initialization. Downloading Fido2 metadata\"\\n            self.fido2_server_metadata_uri = self.fido2_server_uri + \"/.well-known/fido2-configuration\"\\n            #self.fido2_server_metadata_uri = self.fido2_server_uri + \"/fido2/restv1/fido2/configuration\"\\n\\n            metaDataConfigurationService = Fido2ClientFactory.instance().createMetaDataConfigurationService(self.fido2_server_metadata_uri)\\n    \\n            max_attempts = 10\\n            for attempt in range(1, max_attempts + 1):\\n                try:\\n                    self.metaDataConfiguration = metaDataConfigurationService.getMetadataConfiguration().readEntity(java.lang.String)\\n                    return self.metaDataConfiguration\\n                except ClientResponseFailure, ex:\\n                    # Detect if last try or we still get Service Unavailable HTTP error\\n                    if (attempt == max_attempts) or (ex.getResponse().getResponseStatus() != Response.Status.SERVICE_UNAVAILABLE):\\n                        raise ex\\n    \\n                    java.lang.Thread.sleep(3000)\\n                    print \"Attempting to load metadata: %d\" % attempt\\n                except ResteasyClientException, ex:\\n                    # Detect if last try or we still get Service Unavailable HTTP error\\n                    if attempt == max_attempts:\\n                        raise ex\\n    \\n                    java.lang.Thread.sleep(3000)\\n                    print \"Attempting to load metadata: %d\" % attempt\\n        finally:\\n            self.metaDataLoaderLock.unlock()\\n            \\n'], 'jansScrTyp': ['person_authentication'], 'objectClass': ['top', 'jansCustomScr'], 'jansEnabled': ['false'], 'jansProgLng': ['python']} 11:35:29 06/21/21 Querying LDAP for dn inum=92F0-BF9E,ou=scripts,o=jans 11:35:29 06/21/21 Adding LDAP dn:inum=92F0-BF9E,ou=scripts,o=jans entry:{'description': ['Super Gluu authentication module'], 'displayName': ['super_gluu'], 'inum': ['92F0-BF9E'], 'jansConfProperty': ['{\"value1\":\"qr_options\",\"value2\":\"{ size: 500, mSize: 0.05 }\",\"description\":\"\"}', '{\"value1\":\"label\",\"value2\":\"Super Gluu\",\"description\":\"\"}', '{\"value1\":\"registration_uri\",\"value2\":\"https://test.dd.jans.io/identity/register\",\"description\":\"\"}', '{\"value1\":\"authentication_mode\",\"value2\":\"two_step\",\"description\":\"\"}', '{\"value1\":\"notification_service_mode\",\"value2\":\"gluu\",\"description\":\"\"}', '{\"value1\":\"credentials_file\",\"value2\":\"/etc/certs/super_gluu_creds.json\",\"description\":\"\"}', '{\"value1\":\"supergluu_android_download_url\",\"value2\":\"https://play.google.com/store/apps/details?id=gluu.org.super.gluu&amp;hl=en_US\",\"description\":\"\"}', '{\"value1\":\"supergluu_ios_download_url\",\"value2\":\"https://itunes.apple.com/us/app/super-gluu/id1093479646\",\"description\":\"\"}'], 'jansLevel': ['60'], 'jansModuleProperty': ['{\"value1\":\"location_type\",\"value2\":\"ldap\",\"description\":\"\"}', '{\"value1\":\"usage_type\",\"value2\":\"interactive\",\"description\":\"\"}'], 'jansRevision': ['1'], 'jansScr': ['# oxAuth is available under the MIT License (2008). See http://opensource.org/licenses/MIT for full text.\\n# Copyright (c) 2016, Janssen\\n#\\n# Author: Yuriy Movchan\\n#\\n\\nfrom com.google.android.gcm.server import Sender, Message\\nfrom com.notnoop.apns import APNS\\nfrom java.util import Arrays\\nfrom org.apache.http.params import CoreConnectionPNames\\nfrom io.jans.service.cdi.util import CdiUtil\\nfrom io.jans.as.server.security import Identity\\nfrom io.jans.model.custom.script.type.auth import PersonAuthenticationType\\nfrom io.jans.as.model.config import ConfigurationFactory\\nfrom io.jans.as.server.service import AuthenticationService, SessionIdService\\nfrom io.jans.as.service.fido.u2f import DeviceRegistrationService\\nfrom io.jans.as.service.net import HttpService\\nfrom io.jans.as.util import ServerUtil\\nfrom io.jans.util import StringHelper\\nfrom io.jans.as.service.common import EncryptionService, UserService\\nfrom io.jans.service import MailService\\nfrom io.jans.as.service.push.sns import PushPlatform, PushSnsService \\nfrom io.jans.oxnotify.client import NotifyClientFactory \\nfrom java.util import Arrays, HashMap, IdentityHashMap, Date\\nfrom java.time import ZonedDateTime\\nfrom java.time.format import DateTimeFormatter\\n\\ntry:\\n    from io.jans.oxd.license.client.js import Product\\n    from io.jans.oxd.license.validator import LicenseValidator\\n    has_license_api = True\\nexcept ImportError:\\n    print \"Super-Janssen. Load. Failed to load licensing API\"\\n    has_license_api = False\\n\\nimport datetime\\nimport urllib\\n\\nimport sys\\nimport json\\n\\nclass PersonAuthentication(PersonAuthenticationType):\\n    def init(self, currentTimeMillis):\\n        self.currentTimeMillis = currentTimeMillis\\n\\n    def init(self, customScript, configurationAttributes):\\n        print \"Super-Janssen. Initialization\"\\n\\n        if not configurationAttributes.containsKey(\"authentication_mode\"):\\n            print \"Super-Janssen. Initialization. Property authentication_mode is mandatory\"\\n            return False\\n\\n        self.applicationId = None\\n        if configurationAttributes.containsKey(\"application_id\"):\\n            self.applicationId = configurationAttributes.get(\"application_id\").getValue2()\\n\\n        self.registrationUri = None\\n        if configurationAttributes.containsKey(\"registration_uri\"):\\n            self.registrationUri = configurationAttributes.get(\"registration_uri\").getValue2()\\n\\n        authentication_mode = configurationAttributes.get(\"authentication_mode\").getValue2()\\n        if StringHelper.isEmpty(authentication_mode):\\n            print \"Super-Janssen. Initialization. Failed to determine authentication_mode. authentication_mode configuration parameter is empty\"\\n            return False\\n        \\n        self.oneStep = StringHelper.equalsIgnoreCase(authentication_mode, \"one_step\")\\n        self.twoStep = StringHelper.equalsIgnoreCase(authentication_mode, \"two_step\")\\n\\n        if not (self.oneStep or self.twoStep):\\n            print \"Super-Janssen. Initialization. Valid authentication_mode values are one_step and two_step\"\\n            return False\\n        \\n        self.enabledPushNotifications = self.initPushNotificationService(configurationAttributes)\\n\\n        self.androidUrl = None\\n        if configurationAttributes.containsKey(\"supe.jans.android_download_url\"):\\n            self.androidUrl = configurationAttributes.get(\"supe.jans.android_download_url\").getValue2()\\n\\n        self.IOSUrl = None\\n        if configurationAttributes.containsKey(\"supe.jans.ios_download_url\"):\\n            self.IOSUrl = configurationAttributes.get(\"supe.jans.ios_download_url\").getValue2()\\n\\n        self.customLabel = None\\n        if configurationAttributes.containsKey(\"label\"):\\n            self.customLabel = configurationAttributes.get(\"label\").getValue2()\\n\\n        self.customQrOptions = {}\\n        if configurationAttributes.containsKey(\"qr_options\"):\\n            self.customQrOptions = configurationAttributes.get(\"qr_options\").getValue2()\\n\\n        self.use_super.jans.group = False\\n        if configurationAttributes.containsKey(\"super.jans.group\"):\\n            self.super.jans.group = configurationAttributes.get(\"super.jans.group\").getValue2()\\n            self.use_super.jans.group = True\\n            print \"Super-Janssen. Initialization. Using super.jans.only if user belong to group: %s\" % self.super.jans.group\\n\\n        self.use_audit_group = False\\n        if configurationAttributes.containsKey(\"audit_group\"):\\n            self.audit_group = configurationAttributes.get(\"audit_group\").getValue2()\\n\\n            if (not configurationAttributes.containsKey(\"audit_group_email\")):\\n                print \"Super-Janssen. Initialization. Property audit_group_email is not specified\"\\n                return False\\n\\n            self.audit_email = configurationAttributes.get(\"audit_group_email\").getValue2()\\n            self.use_audit_group = True\\n\\n            print \"Super-Janssen. Initialization. Using audit group: %s\" % self.audit_group\\n            \\n        if self.use_super.jans.group or self.use_audit_group:\\n            if not configurationAttributes.containsKey(\"audit_attribute\"):\\n                print \"Super-Janssen. Initialization. Property audit_attribute is not specified\"\\n                return False\\n            else:\\n                self.audit_attribute = configurationAttributes.get(\"audit_attribute\").getValue2()\\n\\n        self.valid_license = False\\n        # Removing or altering this block validation is against the terms of the license. \\n        if has_license_api and configurationAttributes.containsKey(\"license_file\"):\\n            license_file = configurationAttributes.get(\"license_file\").getValue2()\\n\\n            # Load license from file\\n            f = open(license_file, \\'r\\')\\n            try:\\n                license = json.loads(f.read())\\n            except:\\n                print \"Super-Janssen. Initialization. Failed to load license from file: %s\" % license_file\\n                return False\\n            finally:\\n                f.close()\\n            \\n            # Validate license\\n            try:\\n                self.license_content = LicenseValidator.validate(license[\"public_key\"], license[\"public_password\"], license[\"license_password\"], license[\"license\"],\\n                                          Product.SUPER_GLUU, Date())\\n                self.valid_license = self.license_content.isValid()\\n            except:\\n                print \"Super-Janssen. Initialization. Failed to validate license. Exception: \", sys.exc_info()[1]\\n                return False\\n\\n            print \"Super-Janssen. Initialization. License status: \\'%s\\'. License metadata: \\'%s\\'\" % (self.valid_license, self.license_content.getMetadata())\\n\\n        print \"Super-Janssen. Initialized successfully. oneStep: \\'%s\\', twoStep: \\'%s\\', pushNotifications: \\'%s\\', customLabel: \\'%s\\'\" % (self.oneStep, self.twoStep, self.enabledPushNotifications, self.customLabel)\\n\\n        return True   \\n\\n    def destroy(self, configurationAttributes):\\n        print \"Super-Janssen. Destroy\"\\n\\n        self.pushAndroidService = None\\n        self.pushAppleService = None\\n\\n        print \"Super-Janssen. Destroyed successfully\"\\n        return True\\n\\n    def getApiVersion(self):\\n        return 11\\n        \\n    def getAuthenticationMethodClaims(self, requestParameters):\\n        return None\\n        \\n    def isValidAuthenticationMethod(self, usageType, configurationAttributes):\\n        return True\\n\\n    def getAlternativeAuthenticationMethod(self, usageType, configurationAttributes):\\n        return None\\n\\n    def authenticate(self, configurationAttributes, requestParameters, step):\\n        authenticationService = CdiUtil.bean(AuthenticationService)\\n\\n        identity = CdiUtil.bean(Identity)\\n        credentials = identity.getCredentials()\\n\\n        session_attributes = identity.getSessionId().getSessionAttributes()\\n\\n        client_redirect_uri = self.getApplicationUri(session_attributes)\\n        if client_redirect_uri == None:\\n            print \"Super-Janssen. Authenticate. redirect_uri is not set\"\\n            return False\\n\\n        self.setRequestScopedParameters(identity, step)\\n\\n        # Validate form result code and initialize QR code regeneration if needed (retry_current_step = True)\\n        identity.setWorkingParameter(\"retry_current_step\", False)\\n        form_auth_result = ServerUtil.getFirstValue(requestParameters, \"auth_result\")\\n        if StringHelper.isNotEmpty(form_auth_result):\\n            print \"Super-Janssen. Authenticate for step %s. Get auth_result: \\'%s\\'\" % (step, form_auth_result)\\n            if form_auth_result in [\\'error\\']:\\n                return False\\n\\n            if form_auth_result in [\\'timeout\\']:\\n                if ((step == 1) and self.oneStep) or ((step == 2) and self.twoStep):        \\n                    print \"Super-Janssen. Authenticate for step %s. Reinitializing current step\" % step\\n                    identity.setWorkingParameter(\"retry_current_step\", True)\\n                    return False\\n\\n        userService = CdiUtil.bean(UserService)\\n        deviceRegistrationService = CdiUtil.bean(DeviceRegistrationService)\\n        if step == 1:\\n            print \"Super-Janssen. Authenticate for step 1\"\\n\\n            user_name = credentials.getUsername()\\n            if self.oneStep:\\n                session_device_status = self.getSessionDeviceStatus(session_attributes, user_name)\\n                if session_device_status == None:\\n                    return False\\n\\n                u2f_device_id = session_device_status[\\'device_id\\']\\n\\n                validation_result = self.validateSessionDeviceStatus(client_redirect_uri, session_device_status)\\n                if validation_result:\\n                    print \"Super-Janssen. Authenticate for step 1. User successfully authenticated with u2f_device \\'%s\\'\" % u2f_device_id\\n                else:\\n                    return False\\n                    \\n                if not session_device_status[\\'one_step\\']:\\n                    print \"Super-Janssen. Authenticate for step 1. u2f_device \\'%s\\' is not one step device\" % u2f_device_id\\n                    return False\\n                    \\n                # There are two steps only in enrollment mode\\n                if session_device_status[\\'enroll\\']:\\n                    return validation_result\\n\\n                identity.setWorkingParameter(\"super.jans.count_login_steps\", 1)\\n\\n                user_inum = session_device_status[\\'user_inum\\']\\n\\n                u2f_device = deviceRegistrationService.findUserDeviceRegistration(user_inum, u2f_device_id, \"oxId\")\\n                if u2f_device == None:\\n                    print \"Super-Janssen. Authenticate for step 1. Failed to load u2f_device \\'%s\\'\" % u2f_device_id\\n                    return False\\n\\n                logged_in = authenticationService.authenticate(user_name)\\n                if not logged_in:\\n                    print \"Super-Janssen. Authenticate for step 1. Failed to authenticate user \\'%s\\'\" % user_name\\n                    return False\\n\\n                print \"Super-Janssen. Authenticate for step 1. User \\'%s\\' successfully authenticated with u2f_device \\'%s\\'\" % (user_name, u2f_device_id)\\n                \\n                return True\\n            elif self.twoStep:\\n                authenticated_user = self.processBasicAuthentication(credentials)\\n                if authenticated_user == None:\\n                    return False\\n\\n                if (self.use_super.jans.group):\\n                    print \"Super-Janssen. Authenticate for step 1. Checking if user belong to super.jans.group\"\\n                    is_member_super.jans.group = self.isUserMemberOfGroup(authenticated_user, self.audit_attribute, self.super.jans.group)\\n                    if (is_member_super.jans.group):\\n                        print \"Super-Janssen. Authenticate for step 1. User \\'%s\\' member of super.jans.group\" % authenticated_user.getUserId()\\n                        super.jans.count_login_steps = 2\\n                    else:\\n                        if self.use_audit_group:\\n                            self.processAuditGroup(authenticated_user, self.audit_attribute, self.audit_group)\\n                        super.jans.count_login_steps = 1\\n    \\n                    identity.setWorkingParameter(\"super.jans.count_login_steps\", super.jans.count_login_steps)\\n                    \\n                    if super.jans.count_login_steps == 1:\\n                        return True\\n    \\n                auth_method = \\'authenticate\\'\\n                enrollment_mode = ServerUtil.getFirstValue(requestParameters, \"loginForm:registerButton\")\\n                if StringHelper.isNotEmpty(enrollment_mode):\\n                    auth_method = \\'enroll\\'\\n                \\n                if auth_method == \\'authenticate\\':\\n                    user_inum = userService.getUserInum(authenticated_user)\\n                    u2f_devices_list = deviceRegistrationService.findUserDeviceRegistrations(user_inum, client_redirect_uri, \"oxId\")\\n                    if u2f_devices_list.size() == 0:\\n                        auth_method = \\'enroll\\'\\n                        print \"Super-Janssen. Authenticate for step 1. There is no U2F \\'%s\\' user devices associated with application \\'%s\\'. Changing auth_method to \\'%s\\'\" % (user_name, client_redirect_uri, auth_method)\\n    \\n                print \"Super-Janssen. Authenticate for step 1. auth_method: \\'%s\\'\" % auth_method\\n                \\n                identity.setWorkingParameter(\"super.jans.auth_method\", auth_method)\\n\\n                return True\\n\\n            return False\\n        elif step == 2:\\n            print \"Super-Janssen. Authenticate for step 2\"\\n\\n            user = authenticationService.getAuthenticatedUser()\\n            if (user == None):\\n                print \"Super-Janssen. Authenticate for step 2. Failed to determine user name\"\\n                return False\\n            user_name = user.getUserId()\\n\\n            session_attributes = identity.getSessionId().getSessionAttributes()\\n\\n            session_device_status = self.getSessionDeviceStatus(session_attributes, user_name)\\n            if session_device_status == None:\\n                return False\\n\\n            u2f_device_id = session_device_status[\\'device_id\\']\\n\\n            # There are two steps only in enrollment mode\\n            if self.oneStep and session_device_status[\\'enroll\\']:\\n                authenticated_user = self.processBasicAuthentication(credentials)\\n                if authenticated_user == None:\\n                    return False\\n\\n                user_inum = userService.getUserInum(authenticated_user)\\n                \\n                attach_result = deviceRegistrationService.attachUserDeviceRegistration(user_inum, u2f_device_id)\\n\\n                print \"Super-Janssen. Authenticate for step 2. Result after attaching u2f_device \\'%s\\' to user \\'%s\\': \\'%s\\'\" % (u2f_device_id, user_name, attach_result) \\n\\n                return attach_result\\n            elif self.twoStep:\\n                if user_name == None:\\n                    print \"Super-Janssen. Authenticate for step 2. Failed to determine user name\"\\n                    return False\\n\\n                validation_result = self.validateSessionDeviceStatus(client_redirect_uri, session_device_status, user_name)\\n                if validation_result:\\n                    print \"Super-Janssen. Authenticate for step 2. User \\'%s\\' successfully authenticated with u2f_device \\'%s\\'\" % (user_name, u2f_device_id)\\n                else:\\n                    return False\\n                \\n                super.jans.request = json.loads(session_device_status[\\'super.jans.request\\'])\\n                auth_method = super.jans.request[\\'method\\']\\n                if auth_method in [\\'enroll\\', \\'authenticate\\']:\\n                    if validation_result and self.use_audit_group:\\n                        user = authenticationService.getAuthenticatedUser()\\n                        self.processAuditGroup(user, self.audit_attribute, self.audit_group)\\n\\n                    return validation_result\\n\\n                print \"Super-Janssen. Authenticate for step 2. U2F auth_method is invalid\"\\n\\n            return False\\n        else:\\n            return False\\n\\n    def prepareForStep(self, configurationAttributes, requestParameters, step):\\n        identity = CdiUtil.bean(Identity)\\n        session_attributes = identity.getSessionId().getSessionAttributes()\\n\\n        client_redirect_uri = self.getApplicationUri(session_attributes)\\n        if client_redirect_uri == None:\\n            print \"Super-Janssen. Prepare for step. redirect_uri is not set\"\\n            return False\\n\\n        self.setRequestScopedParameters(identity, step)\\n\\n        if step == 1:\\n            print \"Super-Janssen. Prepare for step 1\"\\n            if self.oneStep:\\n                session = CdiUtil.bean(SessionIdService).getSessionId()\\n                if session == None:\\n                    print \"Super-Janssen. Prepare for step 2. Failed to determine session_id\"\\n                    return False\\n\\n                issuer = CdiUtil.bean(ConfigurationFactory).getConfiguration().getIssuer()\\n                super.jans.request_dictionary = {\\'app\\': client_redirect_uri,\\n                                   \\'issuer\\': issuer,\\n                                   \\'state\\': session.getId(),\\n                                   \\'licensed\\': self.valid_license,\\n                                   \\'created\\': DateTimeFormatter.ISO_OFFSET_DATE_TIME.format(ZonedDateTime.now().withNano(0))}\\n\\n                self.addGeolocationData(session_attributes, super.jans.request_dictionary)\\n\\n                super.jans.request = json.dumps(super.jans.request_dictionary, separators=(\\',\\',\\':\\'))\\n                print \"Super-Janssen. Prepare for step 1. Prepared super.jans.request:\", super.jans.request\\n    \\n                identity.setWorkingParameter(\"super.jans.request\", super.jans.request)\\n            elif self.twoStep:\\n                identity.setWorkingParameter(\"display_register_action\", True)\\n\\n            return True\\n        elif step == 2:\\n            print \"Super-Janssen. Prepare for step 2\"\\n            if self.oneStep:\\n                return True\\n\\n            authenticationService = CdiUtil.bean(AuthenticationService)\\n            user = authenticationService.getAuthenticatedUser()\\n            if user == None:\\n                print \"Super-Janssen. Prepare for step 2. Failed to determine user name\"\\n                return False\\n\\n            if session_attributes.containsKey(\"super.jans.request\"):\\n               super.jans.request = session_attributes.get(\"super.jans.request\")\\n               if not StringHelper.equalsIgnoreCase(super.jans.request, \"timeout\"):\\n                   print \"Super-Janssen. Prepare for step 2. Request was generated already\"\\n                   return True\\n            \\n            session = CdiUtil.bean(SessionIdService).getSessionId()\\n            if session == None:\\n                print \"Super-Janssen. Prepare for step 2. Failed to determine session_id\"\\n                return False\\n\\n            auth_method = session_attributes.get(\"super.jans.auth_method\")\\n            if StringHelper.isEmpty(auth_method):\\n                print \"Super-Janssen. Prepare for step 2. Failed to determine auth_method\"\\n                return False\\n\\n            print \"Super-Janssen. Prepare for step 2. auth_method: \\'%s\\'\" % auth_method\\n            \\n            issuer = CdiUtil.bean(ConfigurationFactory).getAppConfiguration().getIssuer()\\n            super.jans.request_dictionary = {\\'username\\': user.getUserId(),\\n                               \\'app\\': client_redirect_uri,\\n                               \\'issuer\\': issuer,\\n                               \\'method\\': auth_method,\\n                               \\'state\\': session.getId(),\\n                               \\'licensed\\': self.valid_license,\\n                               \\'created\\': DateTimeFormatter.ISO_OFFSET_DATE_TIME.format(ZonedDateTime.now().withNano(0))}\\n\\n            self.addGeolocationData(session_attributes, super.jans.request_dictionary)\\n\\n            super.jans.request = json.dumps(super.jans.request_dictionary, separators=(\\',\\',\\':\\'))\\n            print \"Super-Janssen. Prepare for step 2. Prepared super.jans.request:\", super.jans.request\\n\\n            identity.setWorkingParameter(\"super.jans.request\", super.jans.request)\\n            identity.setWorkingParameter(\"super.jans.auth_method\", auth_method)\\n\\n            if auth_method in [\\'authenticate\\']:\\n                self.sendPushNotification(client_redirect_uri, user, super.jans.request)\\n\\n            return True\\n        else:\\n            return False\\n\\n    def getNextStep(self, configurationAttributes, requestParameters, step):\\n        # If user not pass current step change step to previous\\n        identity = CdiUtil.bean(Identity)\\n        retry_current_step = identity.getWorkingParameter(\"retry_current_step\")\\n        if retry_current_step:\\n            print \"Super-Janssen. Get next step. Retrying current step\"\\n\\n            # Remove old QR code\\n            identity.setWorkingParameter(\"super.jans.request\", \"timeout\")\\n\\n            resultStep = step\\n            return resultStep\\n\\n        return -1\\n\\n    def getExtraParametersForStep(self, configurationAttributes, step):\\n        if step == 1:\\n            if self.oneStep:        \\n                return Arrays.asList(\"super.jans.request\")\\n            elif self.twoStep:\\n                return Arrays.asList(\"display_register_action\")\\n        elif step == 2:\\n            return Arrays.asList(\"super.jans.auth_method\", \"super.jans.request\")\\n        \\n        return None\\n\\n    def getCountAuthenticationSteps(self, configurationAttributes):\\n        identity = CdiUtil.bean(Identity)\\n        if identity.isSetWorkingParameter(\"super.jans.count_login_steps\"):\\n            return identity.getWorkingParameter(\"super.jans.count_login_steps\")\\n        else:\\n            return 2\\n\\n    def getPageForStep(self, configurationAttributes, step):\\n        if step == 1:\\n            if self.oneStep:        \\n                return \"/auth/super.jans.login.xhtml\"\\n        elif step == 2:\\n            if self.oneStep:\\n                return \"/login.xhtml\"\\n            else:\\n                identity = CdiUtil.bean(Identity)\\n                authmethod = identity.getWorkingParameter(\"super.jans.auth_method\")\\n                print \"Super-Janssen. authmethod \\'%s\\'\" % authmethod\\n                if authmethod == \"enroll\":\\n                    return \"/auth/super.jans.login.xhtml\"\\n                else:\\n                    return \"/auth/super.jans.login.xhtml\"\\n\\n        return \"\"\\n\\n    def getLogoutExternalUrl(self, configurationAttributes, requestParameters):\\n        print \"Get external logout URL call\"\\n        return None\\n\\n    def logout(self, configurationAttributes, requestParameters):\\n        return True\\n\\n    def processBasicAuthentication(self, credentials):\\n        authenticationService = CdiUtil.bean(AuthenticationService)\\n\\n        user_name = credentials.getUsername()\\n        user_password = credentials.getPassword()\\n\\n        logged_in = False\\n        if StringHelper.isNotEmptyString(user_name) and StringHelper.isNotEmptyString(user_password):\\n            logged_in = authenticationService.authenticate(user_name, user_password)\\n\\n        if not logged_in:\\n            return None\\n\\n        find_user_by_uid = authenticationService.getAuthenticatedUser()\\n        if find_user_by_uid == None:\\n            print \"Super-Janssen. Process basic authentication. Failed to find user \\'%s\\'\" % user_name\\n            return None\\n        \\n        return find_user_by_uid\\n\\n    def validateSessionDeviceStatus(self, client_redirect_uri, session_device_status, user_name = None):\\n        userService = CdiUtil.bean(UserService)\\n        deviceRegistrationService = CdiUtil.bean(DeviceRegistrationService)\\n\\n        u2f_device_id = session_device_status[\\'device_id\\']\\n\\n        u2f_device = None\\n        if session_device_status[\\'enroll\\'] and session_device_status[\\'one_step\\']:\\n            u2f_device = deviceRegistrationService.findOneStepUserDeviceRegistration(u2f_device_id)\\n            if u2f_device == None:\\n                print \"Super-Janssen. Validate session device status. There is no one step u2f_device \\'%s\\'\" % u2f_device_id\\n                return False\\n        else:\\n            # Validate if user has specified device_id enrollment\\n            user_inum = userService.getUserInum(user_name)\\n\\n            if session_device_status[\\'one_step\\']:\\n                user_inum = session_device_status[\\'user_inum\\']\\n    \\n            u2f_device = deviceRegistrationService.findUserDeviceRegistration(user_inum, u2f_device_id)\\n            if u2f_device == None:\\n                print \"Super-Janssen. Validate session device status. There is no u2f_device \\'%s\\' associated with user \\'%s\\'\" % (u2f_device_id, user_inum)\\n                return False\\n\\n        if not StringHelper.equalsIgnoreCase(client_redirect_uri, u2f_device.application):\\n            print \"Super-Janssen. Validate session device status. u2f_device \\'%s\\' associated with other application \\'%s\\'\" % (u2f_device_id, u2f_device.application)\\n            return False\\n        \\n        return True\\n\\n    def getSessionDeviceStatus(self, session_attributes, user_name):\\n        print \"Super-Janssen. Get session device status\"\\n\\n        if not session_attributes.containsKey(\"super.jans.request\"):\\n            print \"Super-Janssen. Get session device status. There is no Super-Janssen request in session attributes\"\\n            return None\\n\\n        # Check session state extended\\n        if not session_attributes.containsKey(\"session_custom_state\"):\\n            print \"Super-Janssen. Get session device status. There is no session_custom_state in session attributes\"\\n            return None\\n\\n        session_custom_state = session_attributes.get(\"session_custom_state\")\\n        if not StringHelper.equalsIgnoreCase(\"approved\", session_custom_state):\\n            print \"Super-Janssen. Get session device status. User \\'%s\\' not approve or not pass U2F authentication. session_custom_state: \\'%s\\'\" % (user_name, session_custom_state)\\n            return None\\n\\n        # Try to find device_id in session attribute\\n        if not session_attributes.containsKey(\"oxpush2_u2f_device_id\"):\\n            print \"Super-Janssen. Get session device status. There is no u2f_device associated with this request\"\\n            return None\\n\\n        # Try to find user_inum in session attribute\\n        if not session_attributes.containsKey(\"oxpush2_u2f_device_user_inum\"):\\n            print \"Super-Janssen. Get session device status. There is no user_inum associated with this request\"\\n            return None\\n        \\n        enroll = False\\n        if session_attributes.containsKey(\"oxpush2_u2f_device_enroll\"):\\n            enroll = StringHelper.equalsIgnoreCase(\"true\", session_attributes.get(\"oxpush2_u2f_device_enroll\"))\\n\\n        one_step = False\\n        if session_attributes.containsKey(\"oxpush2_u2f_device_one_step\"):\\n            one_step = StringHelper.equalsIgnoreCase(\"true\", session_attributes.get(\"oxpush2_u2f_device_one_step\"))\\n                        \\n        super.jans.request = session_attributes.get(\"super.jans.request\")\\n        u2f_device_id = session_attributes.get(\"oxpush2_u2f_device_id\")\\n        user_inum = session_attributes.get(\"oxpush2_u2f_device_user_inum\")\\n\\n        session_device_status = {\"super.jans.request\": super.jans.request, \"device_id\": u2f_device_id, \"user_inum\" : user_inum, \"enroll\" : enroll, \"one_step\" : one_step}\\n        print \"Super-Janssen. Get session device status. session_device_status: \\'%s\\'\" % (session_device_status)\\n        \\n        return session_device_status\\n\\n    def initPushNotificationService(self, configurationAttributes):\\n        print \"Super-Janssen. Initialize Native/SNS/Janssen notification services\"\\n\\n        self.pushSnsMode = False\\n        self.pushJanssenMode = False\\n        if configurationAttributes.containsKey(\"notification_service_mode\"):\\n            notificationServiceMode = configurationAttributes.get(\"notification_service_mode\").getValue2()\\n            if StringHelper.equalsIgnoreCase(notificationServiceMode, \"sns\"):\\n                return self.initSnsPushNotificationService(configurationAttributes)\\n            elif StringHelper.equalsIgnoreCase(notificationServiceMode, .jans.):\\n                return self.initJanssenPushNotificationService(configurationAttributes)\\n\\n        return self.initNativePushNotificationService(configurationAttributes)\\n\\n    def initNativePushNotificationService(self, configurationAttributes):\\n        print \"Super-Janssen. Initialize native notification services\"\\n        \\n        creds = self.loadPushNotificationCreds(configurationAttributes)\\n        if creds == None:\\n            return False\\n        \\n        try:\\n            android_creds = creds[\"android\"][\"gcm\"]\\n            ios_creds = creds[\"ios\"][\"apns\"]\\n        except:\\n            print \"Super-Janssen. Initialize native notification services. Invalid credentials file format\"\\n            return False\\n        \\n        self.pushAndroidService = None\\n        self.pushAppleService = None\\n        if android_creds[\"enabled\"]:\\n            self.pushAndroidService = Sender(android_creds[\"api_key\"]) \\n            print \"Super-Janssen. Initialize native notification services. Created Android notification service\"\\n            \\n        if ios_creds[\"enabled\"]:\\n            p12_file_path = ios_creds[\"p12_file_path\"]\\n            p12_password = ios_creds[\"p12_password\"]\\n\\n            try:\\n                encryptionService = CdiUtil.bean(EncryptionService)\\n                p12_password = encryptionService.decrypt(p12_password)\\n            except:\\n                # Ignore exception. Password is not encrypted\\n                print \"Super-Janssen. Initialize native notification services. Assuming that \\'p12_password\\' password in not encrypted\"\\n\\n            apnsServiceBuilder =  APNS.newService().withCert(p12_file_path, p12_password)\\n            if ios_creds[\"production\"]:\\n                self.pushAppleService = apnsServiceBuilder.withProductionDestination().build()\\n            else:\\n                self.pushAppleService = apnsServiceBuilder.withSandboxDestination().build()\\n\\n            self.pushAppleServiceProduction = ios_creds[\"production\"]\\n\\n            print \"Super-Janssen. Initialize native notification services. Created iOS notification service\"\\n\\n        enabled = self.pushAndroidService != None or self.pushAppleService != None\\n\\n        return enabled\\n\\n    def initSnsPushNotificationService(self, configurationAttributes):\\n        print \"Super-Janssen. Initialize SNS notification services\"\\n        self.pushSnsMode = True\\n\\n        creds = self.loadPushNotificationCreds(configurationAttributes)\\n        if creds == None:\\n            return False\\n        \\n        try:\\n            sns_creds = creds[\"sns\"]\\n            android_creds = creds[\"android\"][\"sns\"]\\n            ios_creds = creds[\"ios\"][\"sns\"]\\n        except:\\n            print \"Super-Janssen. Initialize SNS notification services. Invalid credentials file format\"\\n            return False\\n        \\n        self.pushAndroidService = None\\n        self.pushAppleService = None\\n        if not (android_creds[\"enabled\"] or ios_creds[\"enabled\"]):\\n            print \"Super-Janssen. Initialize SNS notification services. SNS disabled for all platforms\"\\n            return False\\n\\n        sns_access_key = sns_creds[\"access_key\"]\\n        sns_secret_access_key = sns_creds[\"secret_access_key\"]\\n        sns_region = sns_creds[\"region\"]\\n\\n        encryptionService = CdiUtil.bean(EncryptionService)\\n\\n        try:\\n            sns_secret_access_key = encryptionService.decrypt(sns_secret_access_key)\\n        except:\\n            # Ignore exception. Password is not encrypted\\n            print \"Super-Janssen. Initialize SNS notification services. Assuming that \\'sns_secret_access_key\\' in not encrypted\"\\n        \\n        pushSnsService = CdiUtil.bean(PushSnsService)\\n        pushClient = pushSnsService.createSnsClient(sns_access_key, sns_secret_access_key, sns_region)\\n\\n        if android_creds[\"enabled\"]:\\n            self.pushAndroidService = pushClient\\n            self.pushAndroidPlatformArn = android_creds[\"platform_arn\"]\\n            print \"Super-Janssen. Initialize SNS notification services. Created Android notification service\"\\n\\n        if ios_creds[\"enabled\"]:\\n            self.pushAppleService = pushClient \\n            self.pushApplePlatformArn = ios_creds[\"platform_arn\"]\\n            self.pushAppleServiceProduction = ios_creds[\"production\"]\\n            print \"Super-Janssen. Initialize SNS notification services. Created iOS notification service\"\\n\\n        enabled = self.pushAndroidService != None or self.pushAppleService != None\\n\\n        return enabled\\n\\n    def initJanssenPushNotificationService(self, configurationAttributes):\\n        print \"Super-Janssen. Initialize Janssen notification services\"\\n\\n        self.pushJanssenMode = True\\n\\n        creds = self.loadPushNotificationCreds(configurationAttributes)\\n        if creds == None:\\n            return False\\n        \\n        try:\\n           .jans.conf = creds[.jans.]\\n            android_creds = creds[\"android\"][.jans.]\\n            ios_creds = creds[\"ios\"][.jans.]\\n        except:\\n            print \"Super-Janssen. Initialize Janssen notification services. Invalid credentials file format\"\\n            return False\\n        \\n        self.pushAndroidService = None\\n        self.pushAppleService = None\\n        if not (android_creds[\"enabled\"] or ios_creds[\"enabled\"]):\\n            print \"Super-Janssen. Initialize Janssen notification services. Janssen disabled for all platforms\"\\n            return False\\n\\n       .jans.server_uri =.jans.conf[\"server_uri\"]\\n        notifyClientFactory = NotifyClientFactory.instance()\\n        metadataConfiguration = None\\n        try:\\n            metadataConfiguration = notifyClientFactory.createMetaDataConfigurationService.jans.server_uri).getMetadataConfiguration()\\n        except:\\n            print \"Super-Janssen. Initialize Janssen notification services. Failed to load metadata. Exception: \", sys.exc_info()[1]\\n            return False\\n\\n       .jans.lient = notifyClientFactory.createNotifyService(metadataConfiguration)\\n        encryptionService = CdiUtil.bean(EncryptionService)\\n\\n        if android_creds[\"enabled\"]:\\n           .jans.access_key = android_creds[\"access_key\"]\\n           .jans.secret_access_key = android_creds[\"secret_access_key\"]\\n    \\n            try:\\n               .jans.secret_access_key = encryptionService.decrypt.jans.secret_access_key)\\n            except:\\n                # Ignore exception. Password is not encrypted\\n                print \"Super-Janssen. Initialize Janssen notification services. Assuming that .jans.secret_access_key\\' in not encrypted\"\\n            \\n            self.pushAndroidService =.jans.lient \\n            self.pushAndroidServiceAuth = notifyClientFactory.getAuthorization.jans.access_key,.jans.secret_access_key);\\n            print \"Super-Janssen. Initialize Janssen notification services. Created Android notification service\"\\n\\n        if ios_creds[\"enabled\"]:\\n           .jans.access_key = ios_creds[\"access_key\"]\\n           .jans.secret_access_key = ios_creds[\"secret_access_key\"]\\n    \\n            try:\\n               .jans.secret_access_key = encryptionService.decrypt.jans.secret_access_key)\\n            except:\\n                # Ignore exception. Password is not encrypted\\n                print \"Super-Janssen. Initialize Janssen notification services. Assuming that .jans.secret_access_key\\' in not encrypted\"\\n            \\n            self.pushAppleService =.jans.lient \\n            self.pushAppleServiceAuth = notifyClientFactory.getAuthorization.jans.access_key,.jans.secret_access_key);\\n            print \"Super-Janssen. Initialize Janssen notification services. Created iOS notification service\"\\n\\n        enabled = self.pushAndroidService != None or self.pushAppleService != None\\n\\n        return enabled\\n\\n    def loadPushNotificationCreds(self, configurationAttributes):\\n        print \"Super-Janssen. Initialize notification services\"\\n        if not configurationAttributes.containsKey(\"credentials_file\"):\\n            return None\\n\\n        super.jans.creds_file = configurationAttributes.get(\"credentials_file\").getValue2()\\n\\n        # Load credentials from file\\n        f = open(super.jans.creds_file, \\'r\\')\\n        try:\\n            creds = json.loads(f.read())\\n        except:\\n            print \"Super-Janssen. Initialize notification services. Failed to load credentials from file:\", super.jans.creds_file\\n            return None\\n        finally:\\n            f.close()\\n\\n        return creds\\n\\n    def sendPushNotification(self, client_redirect_uri, user, super.jans.request):\\n        try:\\n            self.sendPushNotificationImpl(client_redirect_uri, user, super.jans.request)\\n        except:\\n            print \"Super-Janssen. Send push notification. Failed to send push notification: \", sys.exc_info()[1]\\n\\n    def sendPushNotificationImpl(self, client_redirect_uri, user, super.jans.request):\\n        if not self.enabledPushNotifications:\\n            return\\n\\n        user_name = user.getUserId()\\n        print \"Super-Janssen. Send push notification. Loading user \\'%s\\' devices\" % user_name\\n\\n        send_notification = False\\n        send_notification_result = True\\n\\n        userService = CdiUtil.bean(UserService)\\n        deviceRegistrationService = CdiUtil.bean(DeviceRegistrationService)\\n\\n        user_inum = userService.getUserInum(user_name)\\n\\n        send_android = 0\\n        send_ios = 0\\n        u2f_devices_list = deviceRegistrationService.findUserDeviceRegistrations(user_inum, client_redirect_uri, \"oxId\", \"oxDeviceData\", \"oxDeviceNotificationConf\")\\n        if u2f_devices_list.size() &gt; 0:\\n            for u2f_device in u2f_devices_list:\\n                device_data = u2f_device.getDeviceData()\\n\\n                # Device data which Super-Janssen gets during enrollment\\n                if device_data == None:\\n                    continue\\n\\n                platform = device_data.getPlatform()\\n                push_token = device_data.getPushToken()\\n                debug = False\\n\\n                if StringHelper.equalsIgnoreCase(platform, \"ios\") and StringHelper.isNotEmpty(push_token):\\n                    # Sending notification to iOS user\\'s device\\n                    if self.pushAppleService == None:\\n                        print \"Super-Janssen. Send push notification. Apple native push notification service is not enabled\"\\n                    else:\\n                        send_notification = True\\n                        \\n                        title = \"Super Janssen\"\\n                        message = \"Confirm your sign in request to: %s\" % client_redirect_uri\\n\\n                        if self.pushSnsMode or self.pushJanssenMode:\\n                            pushSnsService = CdiUtil.bean(PushSnsService)\\n                            targetEndpointArn = self.getTargetEndpointArn(deviceRegistrationService, pushSnsService, PushPlatform.APNS, user, u2f_device)\\n                            if targetEndpointArn == None:\\n                            \\treturn\\n\\n                            send_notification = True\\n    \\n                            sns_push_request_dictionary = { \"aps\": \\n                                                                { \"badge\": 0,\\n                                                                  \"alert\" : {\"body\": message, \"title\" : title},\\n                                                                  \"category\": \"ACTIONABLE\",\\n                                                                  \"content-available\": \"1\",\\n                                                                  \"sound\": \\'default\\'\\n                                                           },\\n                                                           \"request\" : super.jans.request\\n                            }\\n                            push_message = json.dumps(sns_push_request_dictionary, separators=(\\',\\',\\':\\'))\\n    \\n                            if self.pushSnsMode:\\n                                apple_push_platform = PushPlatform.APNS\\n                                if not self.pushAppleServiceProduction:\\n                                    apple_push_platform = PushPlatform.APNS_SANDBOX\\n        \\n                                send_notification_result = pushSnsService.sendPushMessage(self.pushAppleService, apple_push_platform, targetEndpointArn, push_message, None)\\n                                if debug:\\n                                    print \"Super-Janssen. Send iOS SNS push notification. token: \\'%s\\', message: \\'%s\\', send_notification_result: \\'%s\\', apple_push_platform: \\'%s\\'\" % (push_token, push_message, send_notification_result, apple_push_platform)\\n                            elif self.pushJanssenMode:\\n                                send_notification_result = self.pushAppleService.sendNotification(self.pushAppleServiceAuth, targetEndpointArn, push_message)\\n                                if debug:\\n                                    print \"Super-Janssen. Send iOS Janssen push notification. token: \\'%s\\', message: \\'%s\\', send_notification_result: \\'%s\\'\" % (push_token, push_message, send_notification_result)\\n                        else:\\n                            additional_fields = { \"request\" : super.jans.request }\\n    \\n                            msgBuilder = APNS.newPayload().alertBody(message).alertTitle(title).sound(\"default\")\\n                            msgBuilder.category(\\'ACTIONABLE\\').badge(0)\\n                            msgBuilder.forNewsstand()\\n                            msgBuilder.customFields(additional_fields)\\n                            push_message = msgBuilder.build()\\n    \\n                            send_notification_result = self.pushAppleService.push(push_token, push_message)\\n                            if debug:\\n                                print \"Super-Janssen. Send iOS Native push notification. token: \\'%s\\', message: \\'%s\\', send_notification_result: \\'%s\\'\" % (push_token, push_message, send_notification_result)\\n                        send_ios = send_ios + 1\\n\\n                if StringHelper.equalsIgnoreCase(platform, \"android\") and StringHelper.isNotEmpty(push_token):\\n                    # Sending notification to Android user\\'s device\\n                    if self.pushAndroidService == None:\\n                        print \"Super-Janssen. Send native push notification. Android native push notification service is not enabled\"\\n                    else:\\n                        send_notification = True\\n\\n                        title = \"Super-Janssen\"\\n                        if self.pushSnsMode or self.pushJanssenMode:\\n                            pushSnsService = CdiUtil.bean(PushSnsService)\\n                            targetEndpointArn = self.getTargetEndpointArn(deviceRegistrationService, pushSnsService, PushPlatform.GCM, user, u2f_device)\\n                            if targetEndpointArn == None:\\n                            \\treturn\\n\\n                            send_notification = True\\n    \\n                            sns_push_request_dictionary = { \"collapse_key\": \"single\",\\n                                                            \"content_available\": True,\\n                                                            \"time_to_live\": 60,\\n                                                            \"data\": \\n                                                                { \"message\" : super.jans.request,\\n                                                                  \"title\" : title }\\n                            }\\n                            push_message = json.dumps(sns_push_request_dictionary, separators=(\\',\\',\\':\\'))\\n    \\n                            if self.pushSnsMode:\\n                                send_notification_result = pushSnsService.sendPushMessage(self.pushAndroidService, PushPlatform.GCM, targetEndpointArn, push_message, None)\\n                                if debug:\\n                                    print \"Super-Janssen. Send Android SNS push notification. token: \\'%s\\', message: \\'%s\\', send_notification_result: \\'%s\\'\" % (push_token, push_message, send_notification_result)\\n                            elif self.pushJanssenMode:\\n                                send_notification_result = self.pushAndroidService.sendNotification(self.pushAndroidServiceAuth, targetEndpointArn, push_message)\\n                                if debug:\\n                                    print \"Super-Janssen. Send Android Janssen push notification. token: \\'%s\\', message: \\'%s\\', send_notification_result: \\'%s\\'\" % (push_token, push_message, send_notification_result)\\n                        else:\\n                            msgBuilder = Message.Builder().addData(\"message\", super.jans.request).addData(\"title\", title).collapseKey(\"single\").contentAvailable(True)\\n                            push_message = msgBuilder.build()\\n    \\n                            send_notification_result = self.pushAndroidService.send(push_message, push_token, 3)\\n                            if debug:\\n                                print \"Super-Janssen. Send Android Native push notification. token: \\'%s\\', message: \\'%s\\', send_notification_result: \\'%s\\'\" % (push_token, push_message, send_notification_result)\\n                        send_android = send_android + 1\\n\\n        print \"Super-Janssen. Send push notification. send_android: \\'%s\\', send_ios: \\'%s\\'\" % (send_android, send_ios)\\n\\n    def getTargetEndpointArn(self, deviceRegistrationService, pushSnsService, platform, user, u2fDevice):\\n        targetEndpointArn = None\\n                             \\n        # Return endpoint ARN if it created already\\n        notificationConf = u2fDevice.getDeviceNotificationConf()\\n        if StringHelper.isNotEmpty(notificationConf):\\n            notificationConfJson = json.loads(notificationConf)\\n            targetEndpointArn = notificationConfJson[\\'sns_endpoint_arn\\']\\n            if StringHelper.isNotEmpty(targetEndpointArn):\\n                print \"Super-Janssen. Get target endpoint ARN. There is already created target endpoint ARN\"\\n                return targetEndpointArn\\n\\n        # Create endpoint ARN        \\n        pushClient = None\\n        pushClientAuth = None\\n        platformApplicationArn = None\\n        if platform == PushPlatform.GCM:\\n            pushClient = self.pushAndroidService\\n            if self.pushSnsMode:\\n                platformApplicationArn = self.pushAndroidPlatformArn\\n            if self.pushJanssenMode:\\n                pushClientAuth = self.pushAndroidServiceAuth\\n        elif platform == PushPlatform.APNS:\\n            pushClient = self.pushAppleService\\n            if self.pushSnsMode:\\n                platformApplicationArn = self.pushApplePlatformArn\\n            if self.pushJanssenMode:\\n                pushClientAuth = self.pushAppleServiceAuth\\n        else:\\n            return None\\n\\n        deviceData = u2fDevice.getDeviceData()\\n        pushToken = deviceData.getPushToken()\\n        \\n        print \"Super-Janssen. Get target endpoint ARN. Attempting to create target endpoint ARN for user: \\'%s\\'\" % user.getUserId()\\n        if self.pushSnsMode:\\n            targetEndpointArn = pushSnsService.createPlatformArn(pushClient, platformApplicationArn, pushToken, user)\\n        else:\\n            customUserData = pushSnsService.getCustomUserData(user)\\n            registerDeviceResponse = pushClient.registerDevice(pushClientAuth, pushToken, customUserData);\\n            if registerDeviceResponse != None and registerDeviceResponse.getStatusCode() == 200:\\n                targetEndpointArn = registerDeviceResponse.getEndpointArn()\\n        \\n        if StringHelper.isEmpty(targetEndpointArn):\\n\\t        print \"Super-Janssen. Failed to get endpoint ARN for user: \\'%s\\'\" % user.getUserId()\\n        \\treturn None\\n\\n        print \"Super-Janssen. Get target endpoint ARN. Create target endpoint ARN \\'%s\\' for user: \\'%s\\'\" % (targetEndpointArn, user.getUserId())\\n        \\n        # Store created endpoint ARN in device entry\\n        userInum = user.getAttribute(\"inum\")\\n        u2fDeviceUpdate = deviceRegistrationService.findUserDeviceRegistration(userInum, u2fDevice.getId())\\n        u2fDeviceUpdate.setDeviceNotificationConf(\\'{\"sns_endpoint_arn\" : \"%s\"}\\' % targetEndpointArn)\\n        deviceRegistrationService.updateDeviceRegistration(userInum, u2fDeviceUpdate)\\n\\n        return targetEndpointArn\\n\\n    def getApplicationUri(self, session_attributes):\\n        if self.applicationId != None:\\n            return self.applicationId\\n            \\n        if not session_attributes.containsKey(\"redirect_uri\"):\\n            return None\\n\\n        return session_attributes.get(\"redirect_uri\")\\n\\n    def setRequestScopedParameters(self, identity, step):\\n        downloadMap = HashMap()\\n        if self.registrationUri != None:\\n            identity.setWorkingParameter(\"external_registration_uri\", self.registrationUri)\\n\\n        if self.androidUrl!= None and step == 1:\\n            downloadMap.put(\"android\", self.androidUrl)\\n\\n        if self.IOSUrl  != None and step == 1:\\n            downloadMap.put(\"ios\", self.IOSUrl)\\n            \\n        if self.customLabel != None:\\n            identity.setWorkingParameter(\"super.jans.label\", self.customLabel)\\n            \\n        identity.setWorkingParameter(\"download_url\", downloadMap)\\n        identity.setWorkingParameter(\"super.jans.qr_options\", self.customQrOptions)\\n\\n    def addGeolocationData(self, session_attributes, super.jans.request_dictionary):\\n        if session_attributes.containsKey(\"remote_ip\"):\\n            remote_ip = session_attributes.get(\"remote_ip\")\\n            if StringHelper.isNotEmpty(remote_ip):\\n                print \"Super-Janssen. Prepare for step 2. Adding req_ip and req_loc to super.jans.request\"\\n                super.jans.request_dictionary[\\'req_ip\\'] = remote_ip\\n\\n                remote_loc_dic = self.determineGeolocationData(remote_ip)\\n                if remote_loc_dic == None:\\n                    print \"Super-Janssen. Prepare for step 2. Failed to determine remote location by remote IP \\'%s\\'\" % remote_ip\\n                    return\\n\\n                remote_loc = \"%s, %s, %s\" % ( remote_loc_dic[\\'country\\'], remote_loc_dic[\\'regionName\\'], remote_loc_dic[\\'city\\'] )\\n                remote_loc_encoded = urllib.quote(remote_loc.encode(\\'utf-8\\'))\\n                super.jans.request_dictionary[\\'req_loc\\'] = remote_loc_encoded\\n\\n    def determineGeolocationData(self, remote_ip):\\n        print \"Super-Janssen. Determine remote location. remote_ip: \\'%s\\'\" % remote_ip\\n        httpService = CdiUtil.bean(HttpService)\\n\\n        http_client = httpService.getHttpsClient()\\n        http_client_params = http_client.getParams()\\n        http_client_params.setIntParameter(CoreConnectionPNames.CONNECTION_TIMEOUT, 15 * 1000)\\n        \\n        geolocation_service_url = \"http://ip-api.com/json/%s?fields=49177\" % remote_ip\\n        geolocation_service_headers = { \"Accept\" : \"application/json\" }\\n\\n        try:\\n            http_service_response = httpService.executeGet(http_client, geolocation_service_url,  geolocation_service_headers)\\n            http_response = http_service_response.getHttpResponse()\\n        except:\\n            print \"Super-Janssen. Determine remote location. Exception: \", sys.exc_info()[1]\\n            return None\\n\\n        try:\\n            if not httpService.isResponseStastusCodeOk(http_response):\\n                print \"Super-Janssen. Determine remote location. Get invalid response from validation server: \", str(http_response.getStatusLine().getStatusCode())\\n                httpService.consume(http_response)\\n                return None\\n    \\n            response_bytes = httpService.getResponseContent(http_response)\\n            response_string = httpService.convertEntityToString(response_bytes)\\n            httpService.consume(http_response)\\n        finally:\\n            http_service_response.closeConnection()\\n\\n        if response_string == None:\\n            print \"Super-Janssen. Determine remote location. Get empty response from location server\"\\n            return None\\n        \\n        response = json.loads(response_string)\\n        \\n        if not StringHelper.equalsIgnoreCase(response[\\'status\\'], \"success\"):\\n            print \"Super-Janssen. Determine remote location. Get response with status: \\'%s\\'\" % response[\\'status\\']\\n            return None\\n\\n        return response\\n\\n    def isUserMemberOfGroup(self, user, attribute, group):\\n        is_member = False\\n        member_of_list = user.getAttributeValues(attribute)\\n        if (member_of_list != None):\\n            for member_of in member_of_list:\\n                if StringHelper.equalsIgnoreCase(group, member_of) or member_of.endswith(group):\\n                    is_member = True\\n                    break\\n\\n        return is_member\\n\\n    def processAuditGroup(self, user, attribute, group):\\n        is_member = self.isUserMemberOfGroup(user, attribute, group)\\n        if (is_member):\\n            print \"Super-Janssen. Authenticate for processAuditGroup. User \\'%s\\' member of audit group\" % user.getUserId()\\n            print \"Super-Janssen. Authenticate for processAuditGroup. Sending e-mail about user \\'%s\\' login to %s\" % (user.getUserId(), self.audit_email)\\n            \\n            # Send e-mail to administrator\\n            user_id = user.getUserId()\\n            mailService = CdiUtil.bean(MailService)\\n            subject = \"User log in: %s\" % user_id\\n            body = \"User log in: %s\" % user_id\\n            mailService.sendMail(self.audit_email, subject, body)\\n'], 'jansScrTyp': ['person_authentication'], 'objectClass': ['top', 'jansCustomScr'], 'jansEnabled': ['false'], 'jansProgLng': ['python']} 11:35:29 06/21/21 Querying LDAP for dn inum=92F0-759E,ou=scripts,o=jans 11:35:29 06/21/21 Adding LDAP dn:inum=92F0-759E,ou=scripts,o=jans entry:{'description': ['ThumbSignIn authentication module'], 'displayName': ['thumb_sign_in'], 'inum': ['92F0-759E'], 'jansConfProperty': ['{\"value1\":\"ts_host\",\"value2\":\"https://ts.host.com\",\"description\":\"\"}', '{\"value1\":\"ts_apiKey\",\"value2\":\"ts_api_key\",\"description\":\"\"}', '{\"value1\":\"ts_apiSecret\",\"value2\":\"ts_api_secret\",\"description\":\"\"}'], 'jansLevel': ['50'], 'jansModuleProperty': ['{\"value1\":\"location_type\",\"value2\":\"ldap\",\"description\":\"\"}', '{\"value1\":\"usage_type\",\"value2\":\"interactive\",\"description\":\"\"}'], 'jansRevision': ['1'], 'jansScr': ['# Author: ThumbSignIn\\n\\nfrom io.jans.service.cdi.util import CdiUtil\\nfrom io.jans.as.server.security import Identity\\nfrom io.jans.model.custom.script.type.auth import PersonAuthenticationType\\nfrom io.jans.as.server.service import AuthenticationService\\nfrom io.jans.util import StringHelper\\nfrom io.jans.as.util import ServerUtil\\nfrom com.pramati.ts.thumbsignin_java_sdk import ThumbsigninApiController\\nfrom org.json import JSONObject\\nfrom io.jans.as.model.util import Base64Util\\nfrom java.lang import String\\n\\nimport java\\n\\n\\nclass PersonAuthentication(PersonAuthenticationType):\\n\\n    def init(self, current_time_millis):\\n        self.currentTimeMillis = current_time_millis\\n        self.thumbsigninApiController = ThumbsigninApiController()\\n\\n    def init(self, customScript, configuration_attributes):\\n        print \"ThumbSignIn. Initialization\"\\n\\n        global ts_host\\n        ts_host = configuration_attributes.get(\"ts_host\").getValue2()\\n        print \"ThumbSignIn. Initialization. Value of ts_host is %s\" % ts_host\\n\\n        global ts_api_key\\n        ts_api_key = configuration_attributes.get(\"ts_apiKey\").getValue2()\\n        print \"ThumbSignIn. Initialization. Value of ts_api_key is %s\" % ts_api_key\\n\\n        global ts_api_secret\\n        ts_api_secret = configuration_attributes.get(\"ts_apiSecret\").getValue2()\\n\\n        global ts_statusPath\\n        ts_statusPath = \"/ts/secure/txn-status/\"\\n\\n        global AUTHENTICATE\\n        AUTHENTICATE = \"authenticate\"\\n\\n        global REGISTER\\n        REGISTER = \"register\"\\n\\n        global TRANSACTION_ID\\n        TRANSACTION_ID = \"transactionId\"\\n\\n        global USER_ID\\n        USER_ID = \"userId\"\\n\\n        global USER_LOGIN_FLOW\\n        USER_LOGIN_FLOW = \"userLoginFlow\"\\n\\n        global THUMBSIGNIN_AUTHENTICATION\\n        THUMBSIGNIN_AUTHENTICATION = \"ThumbSignIn_Authentication\"\\n\\n        global THUMBSIGNIN_REGISTRATION\\n        THUMBSIGNIN_REGISTRATION = \"ThumbSignIn_Registration\"\\n\\n        global THUMBSIGNIN_LOGIN_POST_REGISTRATION\\n        THUMBSIGNIN_LOGIN_POST_REGISTRATION = \"ThumbSignIn_RegistrationSucess\"\\n\\n        global RELYING_PARTY_ID\\n        RELYING_PARTY_ID = \"relyingPartyId\"\\n\\n        global RELYING_PARTY_LOGIN_URL\\n        RELYING_PARTY_LOGIN_URL = \"relyingPartyLoginUrl\"\\n\\n        global TSI_LOGIN_PAGE\\n        TSI_LOGIN_PAGE = \"/auth/thumbsignin/tsLogin.xhtml\"\\n\\n        global TSI_REGISTER_PAGE\\n        TSI_REGISTER_PAGE = \"/auth/thumbsignin/tsRegister.xhtml\"\\n\\n        global TSI_LOGIN_POST_REGISTRATION_PAGE\\n        TSI_LOGIN_POST_REGISTRATION_PAGE = \"/auth/thumbsignin/tsRegistrationSuccess.xhtml\"\\n\\n        print \"ThumbSignIn. Initialized successfully\"\\n        return True\\n\\n    @staticmethod\\n    def set_relying_party_login_url(identity):\\n        print \"ThumbSignIn. Inside set_relying_party_login_url...\"\\n        session_id = identity.getSessionId()\\n        session_attribute = session_id.getSessionAttributes()\\n        state_jwt_token = session_attribute.get(\"state\")\\n        print \"ThumbSignIn. Value of state_jwt_token is %s\" % state_jwt_token\\n        relying_party_login_url = \"\"\\n        if (state_jwt_token is None) or (\".\" not in state_jwt_token):\\n            print \"ThumbSignIn. Value of state parameter is not in the format of JWT Token\"\\n            identity.setWorkingParameter(RELYING_PARTY_LOGIN_URL, relying_party_login_url)\\n            return None\\n\\n        state_jwt_token_array = String(state_jwt_token).split(\"\\\\.\")\\n        state_jwt_token_payload = state_jwt_token_array[1]\\n        state_payload_str = String(Base64Util.base64urldecode(state_jwt_token_payload), \"UTF-8\")\\n        state_payload_json = JSONObject(state_payload_str)\\n        print \"ThumbSignIn. Value of state JWT token Payload is %s\" % state_payload_json\\n        if state_payload_json.has(\"additional_claims\"):\\n            additional_claims = state_payload_json.get(\"additional_claims\")\\n            relying_party_id = additional_claims.get(RELYING_PARTY_ID)\\n            print \"ThumbSignIn. Value of relying_party_id is %s\" % relying_party_id\\n            identity.setWorkingParameter(RELYING_PARTY_ID, relying_party_id)\\n\\n            if String(relying_party_id).startsWith(\"google.com\"):\\n                # google.com/a/unphishableenterprise.com\\n                relying_party_id_array = String(relying_party_id).split(\"/\")\\n                google_domain = relying_party_id_array[2]\\n                print \"ThumbSignIn. Value of google_domain is %s\" % google_domain\\n                relying_party_login_url = \"https://www.google.com/accounts/AccountChooser?hd=\"+ google_domain + \"%26continue=https://apps.google.com/user/hub\"\\n                # elif (String(relying_party_id).startsWith(\"xyz\")):\\n                # relying_party_login_url = \"xyz.com\"\\n            else:\\n                # If relying_party_login_url is empty, Janssen\\'s default login URL will be used\\n                relying_party_login_url = \"\"\\n\\n        print \"ThumbSignIn. Value of relying_party_login_url is %s\" % relying_party_login_url\\n        identity.setWorkingParameter(RELYING_PARTY_LOGIN_URL, relying_party_login_url)\\n        return None\\n\\n    def initialize_thumbsignin(self, identity, request_path):\\n        # Invoking the authenticate/register ThumbSignIn API via the Java SDK\\n        thumbsignin_response = self.thumbsigninApiController.handleThumbSigninRequest(request_path, ts_api_key, ts_api_secret)\\n        print \"ThumbSignIn. Value of thumbsignin_response is %s\" % thumbsignin_response\\n\\n        thumbsignin_response_json = JSONObject(thumbsignin_response)\\n        transaction_id = thumbsignin_response_json.get(TRANSACTION_ID)\\n        status_request_type = \"authStatus\" if request_path == AUTHENTICATE else \"regStatus\"\\n        status_request = status_request_type + \"/\" + transaction_id\\n        print \"ThumbSignIn. Value of status_request is %s\" % status_request\\n\\n        authorization_header = self.thumbsigninApiController.getAuthorizationHeaderJsonStr(status_request, ts_api_key, ts_api_secret)\\n        print \"ThumbSignIn. Value of authorization_header is %s\" % authorization_header\\n        # {\"authHeader\":\"HmacSHA256 Credential=X,SignedHeaders=accept;content-type;x-ts-date,Signature=X\",\"XTsDate\":\"X\"}\\n        authorization_header_json = JSONObject(authorization_header)\\n        auth_header = authorization_header_json.get(\"authHeader\")\\n        x_ts_date = authorization_header_json.get(\"XTsDate\")\\n\\n        tsi_response_key = \"authenticateResponseJsonStr\" if request_path == AUTHENTICATE else \"registerResponseJsonStr\"\\n        identity.setWorkingParameter(tsi_response_key, thumbsignin_response)\\n        identity.setWorkingParameter(\"authorizationHeader\", auth_header)\\n        identity.setWorkingParameter(\"xTsDate\", x_ts_date)\\n        return None\\n\\n    def prepareForStep(self, configuration_attributes, request_parameters, step):\\n        print \"ThumbSignIn. Inside prepareForStep. Step %d\" % step\\n        identity = CdiUtil.bean(Identity)\\n        authentication_service = CdiUtil.bean(AuthenticationService)\\n\\n        identity.setWorkingParameter(\"ts_host\", ts_host)\\n        identity.setWorkingParameter(\"ts_statusPath\", ts_statusPath)\\n\\n        self.set_relying_party_login_url(identity)\\n\\n        if step == 1 or step == 3:\\n            print \"ThumbSignIn. Prepare for step 1\"\\n            self.initialize_thumbsignin(identity, AUTHENTICATE)\\n            return True\\n\\n        elif step == 2:\\n            print \"ThumbSignIn. Prepare for step 2\"\\n            if identity.isSetWorkingParameter(USER_LOGIN_FLOW):\\n                user_login_flow = identity.getWorkingParameter(USER_LOGIN_FLOW)\\n                print \"ThumbSignIn. Value of user_login_flow is %s\" % user_login_flow\\n            user = authentication_service.getAuthenticatedUser()\\n            if user is None:\\n                print \"ThumbSignIn. Prepare for step 2. Failed to determine user name\"\\n                return False\\n            user_name = user.getUserId()\\n            print \"ThumbSignIn. Prepare for step 2. user_name: \" + user_name\\n            if user_name is None:\\n                return False\\n            identity.setWorkingParameter(USER_ID, user_name)\\n            self.initialize_thumbsignin(identity, REGISTER + \"/\" + user_name)\\n            return True\\n        else:\\n            return False\\n\\n    def get_user_id_from_thumbsignin(self, request_parameters):\\n        transaction_id = ServerUtil.getFirstValue(request_parameters, TRANSACTION_ID)\\n        print \"ThumbSignIn. Value of transaction_id is %s\" % transaction_id\\n        get_user_request = \"getUser/\" + transaction_id\\n        print \"ThumbSignIn. Value of get_user_request is %s\" % get_user_request\\n\\n        get_user_response = self.thumbsigninApiController.handleThumbSigninRequest(get_user_request, ts_api_key, ts_api_secret)\\n        print \"ThumbSignIn. Value of get_user_response is %s\" % get_user_response\\n        get_user_response_json = JSONObject(get_user_response)\\n        thumbsignin_user_id = get_user_response_json.get(USER_ID)\\n        print \"ThumbSignIn. Value of thumbsignin_user_id is %s\" % thumbsignin_user_id\\n        return thumbsignin_user_id\\n\\n    def authenticate(self, configuration_attributes, request_parameters, step):\\n        print \"ThumbSignIn. Inside authenticate. Step %d\" % step\\n        authentication_service = CdiUtil.bean(AuthenticationService)\\n        identity = CdiUtil.bean(Identity)\\n\\n        identity.setWorkingParameter(\"ts_host\", ts_host)\\n        identity.setWorkingParameter(\"ts_statusPath\", ts_statusPath)\\n\\n        if step == 1 or step == 3:\\n            print \"ThumbSignIn. Authenticate for Step %d\" % step\\n\\n            login_flow = ServerUtil.getFirstValue(request_parameters, \"login_flow\")\\n            print \"ThumbSignIn. Value of login_flow parameter is %s\" % login_flow\\n\\n            # Logic for ThumbSignIn Authentication Flow (Either step 1 or step 3)\\n            if login_flow == THUMBSIGNIN_AUTHENTICATION or login_flow == THUMBSIGNIN_LOGIN_POST_REGISTRATION:\\n                identity.setWorkingParameter(USER_LOGIN_FLOW, login_flow)\\n                print \"ThumbSignIn. Value of userLoginFlow is %s\" % identity.getWorkingParameter(USER_LOGIN_FLOW)\\n                logged_in_status = authentication_service.authenticate(self.get_user_id_from_thumbsignin(request_parameters))\\n                print \"ThumbSignIn. logged_in status : %r\" % logged_in_status\\n                return logged_in_status\\n\\n            # Logic for traditional login flow (step 1)\\n            print \"ThumbSignIn. User credentials login flow\"\\n            identity.setWorkingParameter(USER_LOGIN_FLOW, THUMBSIGNIN_REGISTRATION)\\n            print \"ThumbSignIn. Value of userLoginFlow is %s\" % identity.getWorkingParameter(USER_LOGIN_FLOW)\\n            logged_in = self.authenticate_user_credentials(identity, authentication_service)\\n            print \"ThumbSignIn. Status of User Credentials based Authentication : %r\" % logged_in\\n\\n            # When the traditional login fails, reinitialize the ThumbSignIn data before sending error response to UI\\n            if not logged_in:\\n                self.initialize_thumbsignin(identity, AUTHENTICATE)\\n                return False\\n\\n            print \"ThumbSignIn. Authenticate successful for step %d\" % step\\n            return True\\n\\n        elif step == 2:\\n            print \"ThumbSignIn. Registration flow (step 2)\"\\n            self.verify_user_login_flow(identity)\\n\\n            user = self.get_authenticated_user_from.jans.authentication_service)\\n            if user is None:\\n                print \"ThumbSignIn. Registration flow (step 2). Failed to determine user name\"\\n                return False\\n\\n            user_name = user.getUserId()\\n            print \"ThumbSignIn. Registration flow (step 2) successful. user_name: %s\" % user_name\\n            return True\\n\\n        else:\\n            return False\\n\\n    def authenticate_user_credentials(self, identity, authentication_service):\\n        credentials = identity.getCredentials()\\n        user_name = credentials.getUsername()\\n        user_password = credentials.getPassword()\\n        print \"ThumbSignIn. user_name: \" + user_name\\n        logged_in = False\\n        if StringHelper.isNotEmptyString(user_name) and StringHelper.isNotEmptyString(user_password):\\n            logged_in = self.authenticate_user_in.jans.ldap(authentication_service, user_name, user_password)\\n        return logged_in\\n\\n    @staticmethod\\n    def authenticate_user_in.jans.ldap(authentication_service, user_name, user_password):\\n        return authentication_service.authenticate(user_name, user_password)\\n\\n    @staticmethod\\n    def get_authenticated_user_from.jans.authentication_service):\\n        return authentication_service.getAuthenticatedUser()\\n\\n    @staticmethod\\n    def verify_user_login_flow(identity):\\n        if identity.isSetWorkingParameter(USER_LOGIN_FLOW):\\n            user_login_flow = identity.getWorkingParameter(USER_LOGIN_FLOW)\\n            print \"ThumbSignIn. Value of user_login_flow is %s\" % user_login_flow\\n        else:\\n            identity.setWorkingParameter(USER_LOGIN_FLOW, THUMBSIGNIN_REGISTRATION)\\n            print \"ThumbSignIn. Setting the value of user_login_flow to %s\" % identity.getWorkingParameter(USER_LOGIN_FLOW)\\n\\n    def getExtraParametersForStep(self, configuration_attributes, step):\\n        return None\\n\\n    def getCountAuthenticationSteps(self, configuration_attributes):\\n        print \"ThumbSignIn. Inside getCountAuthenticationSteps..\"\\n        identity = CdiUtil.bean(Identity)\\n\\n        user_login_flow = identity.getWorkingParameter(USER_LOGIN_FLOW)\\n        print \"ThumbSignIn. Value of userLoginFlow is %s\" % user_login_flow\\n        if user_login_flow == THUMBSIGNIN_AUTHENTICATION:\\n            print \"ThumbSignIn. Total Authentication Steps is: 1\"\\n            return 1\\n        print \"ThumbSignIn. Total Authentication Steps is: 3\"\\n        return 3\\n\\n    def getPageForStep(self, configuration_attributes, step):\\n        print \"ThumbSignIn. Inside getPageForStep. Step %d\" % step\\n        if step == 3:\\n            return TSI_LOGIN_POST_REGISTRATION_PAGE\\n        thumbsignin_page = TSI_REGISTER_PAGE if step == 2 else TSI_LOGIN_PAGE\\n        return thumbsignin_page\\n\\n    def destroy(self, configurationAttributes):\\n        print \"ThumbSignIn. Destroy\"\\n        return True\\n\\n    def getApiVersion(self):\\n        return 11\\n        \\n    def getAuthenticationMethodClaims(self, requestParameters):\\n        return None\\n        \\n    def isValidAuthenticationMethod(self, usageType, configurationAttributes):\\n        return True\\n\\n    def getAlternativeAuthenticationMethod(self, usageType, configurationAttributes):\\n        return None\\n\\n    def getNextStep(self, configurationAttributes, requestParameters, step):\\n        return -1\\n\\n    def getLogoutExternalUrl(self, configurationAttributes, requestParameters):\\n        print \"Get external logout URL call\"\\n        return None\\n\\n    def logout(self, configurationAttributes, requestParameters):\\n        return True\\n'], 'jansScrTyp': ['person_authentication'], 'objectClass': ['top', 'jansCustomScr'], 'jansEnabled': ['false'], 'jansProgLng': ['python']} 11:35:29 06/21/21 Querying LDAP for dn inum=A51E-76DA,ou=scripts,o=jans 11:35:29 06/21/21 Adding LDAP dn:inum=A51E-76DA,ou=scripts,o=jans entry:{'description': ['Sample authentication module'], 'displayName': ['basic'], 'inum': ['A51E-76DA'], 'jansLevel': ['10'], 'jansModuleProperty': ['{\"value1\":\"usage_type\",\"value2\":\"interactive\",\"description\":\"\"}', '{\"value1\":\"location_type\",\"value2\":\"ldap\",\"description\":\"\"}'], 'jansRevision': ['1'], 'jansScr': ['# oxAuth is available under the MIT License (2008). See http://opensource.org/licenses/MIT for full text.\\n# Copyright (c) 2016, Janssen\\n#\\n# Author: Yuriy Movchan\\n#\\n\\nfrom io.jans.service.cdi.util import CdiUtil\\nfrom io.jans.as.server.security import Identity\\nfrom io.jans.model.custom.script.type.auth import PersonAuthenticationType\\nfrom io.jans.as.server.service import AuthenticationService\\nfrom io.jans.util import StringHelper\\n\\nimport java\\n\\nclass PersonAuthentication(PersonAuthenticationType):\\n    def init(self, currentTimeMillis):\\n        self.currentTimeMillis = currentTimeMillis\\n\\n    def init(self, customScript,  configurationAttributes):\\n        print \"Basic. Initialization\"\\n        print \"Basic. Initialized successfully\"\\n        return True   \\n\\n    def destroy(self, configurationAttributes):\\n        print \"Basic. Destroy\"\\n        print \"Basic. Destroyed successfully\"\\n        return True\\n        \\n    def getAuthenticationMethodClaims(self, requestParameters):\\n        return None\\n        \\n    def getApiVersion(self):\\n        return 11\\n\\n    def isValidAuthenticationMethod(self, usageType, configurationAttributes):\\n        return True\\n\\n    def getAlternativeAuthenticationMethod(self, usageType, configurationAttributes):\\n        return None\\n\\n    def authenticate(self, configurationAttributes, requestParameters, step):\\n        authenticationService = CdiUtil.bean(AuthenticationService)\\n\\n        if (step == 1):\\n            print \"Basic. Authenticate for step 1\"\\n\\n            identity = CdiUtil.bean(Identity)\\n            credentials = identity.getCredentials()\\n\\n            user_name = credentials.getUsername()\\n            user_password = credentials.getPassword()\\n\\n            logged_in = False\\n            if (StringHelper.isNotEmptyString(user_name) and StringHelper.isNotEmptyString(user_password)):\\n                logged_in = authenticationService.authenticate(user_name, user_password)\\n\\n            if (not logged_in):\\n                return False\\n\\n            return True\\n        else:\\n            return False\\n\\n    def prepareForStep(self, configurationAttributes, requestParameters, step):\\n        if (step == 1):\\n            print \"Basic. Prepare for Step 1\"\\n            return True\\n        else:\\n            return False\\n\\n    def getExtraParametersForStep(self, configurationAttributes, step):\\n        return None\\n\\n    def getCountAuthenticationSteps(self, configurationAttributes):\\n        return 1\\n\\n    def getPageForStep(self, configurationAttributes, step):\\n        return \"\"\\n\\n    def getNextStep(self, configurationAttributes, requestParameters, step):\\n        return -1\\n\\n    def getLogoutExternalUrl(self, configurationAttributes, requestParameters):\\n        print \"Get external logout URL call\"\\n        return None\\n\\n    def logout(self, configurationAttributes, requestParameters):\\n        return True\\n'], 'jansScrTyp': ['person_authentication'], 'objectClass': ['top', 'jansCustomScr'], 'jansEnabled': ['false'], 'jansProgLng': ['python']} 11:35:29 06/21/21 Querying LDAP for dn inum=A910-56AB,ou=scripts,o=jans 11:35:29 06/21/21 Adding LDAP dn:inum=A910-56AB,ou=scripts,o=jans entry:{'description': ['Sample script for SCIM events'], 'displayName': ['scim_event_handler'], 'inum': ['A910-56AB'], 'jansConfProperty': ['{\"value1\":\"testProp1\",\"value2\":\"Test value 1\",\"description\":\"\"}', '{\"value1\":\"testProp2\",\"value2\":\"Test value 2\",\"description\":\"\"}'], 'jansLevel': ['100'], 'jansModuleProperty': ['{\"value1\":\"location_type\",\"value2\":\"ldap\",\"description\":\"\"}'], 'jansRevision': ['1'], 'jansScr': ['# oxTrust is available under the MIT License (2008). See http://opensource.org/licenses/MIT for full text.\\n# Copyright (c) 2014, Janssen\\n#\\n# Author: Jose Gonzalez\\n#\\nfrom io.jans.model.custom.script.type.scim import ScimType\\nfrom io.jans.util import StringHelper, ArrayHelper\\nfrom java.util import Arrays, ArrayList\\nfrom io.jans.oxtrust.ldap.service import PersonService\\nfrom io.jans.service.cdi.util import CdiUtil\\nfrom io.jans.oxtrust.model import JanssenCustomPerson\\n\\nimport java\\n\\nclass ScimEventHandler(ScimType):\\n\\n    def init(self, currentTimeMillis):\\n        self.currentTimeMillis = currentTimeMillis\\n\\n    def init(self, customScript, configurationAttributes):\\n        print \"ScimEventHandler (init): Initialized successfully\"\\n        return True   \\n\\n    def destroy(self, configurationAttributes):\\n        print \"ScimEventHandler (destroy): Destroyed successfully\"\\n        return True   \\n\\n    def getApiVersion(self):\\n        #return 2 if you want the post scripts being executed\\n        return 11\\n\\n    def createUser(self, user, configurationAttributes):\\n\\n        print \"ScimEventHandler (createUser): Current id = \" + user.getUid()\\n\\n        testProp1 = configurationAttributes.get(\"testProp1\").getValue2()\\n        testProp2 = configurationAttributes.get(\"testProp2\").getValue2()\\n\\n        print \"ScimEventHandler (createUser): testProp1 = \" + testProp1\\n        print \"ScimEventHandler (createUser): testProp2 = \" + testProp2\\n\\n        return True\\n\\n    def updateUser(self, user, configurationAttributes):\\n        personService = CdiUtil.bean(PersonService)\\n        oldUser = personService.getPersonByUid(user.getUid())\\n        print \"ScimEventHandler (updateUser): Old displayName %s\" % oldUser.getDisplayName()\\n        print \"ScimEventHandler (updateUser): New displayName \" + user.getDisplayName()\\n        return True\\n\\n    def deleteUser(self, user, configurationAttributes):\\n        print \"ScimEventHandler (deleteUser): Current id = \" + user.getUid()\\n        return True\\n\\n    def createGroup(self, group, configurationAttributes):\\n        print \"ScimEventHandler (createGroup): Current displayName = \" + group.getDisplayName()\\n        return True\\n\\n    def updateGroup(self, group, configurationAttributes):\\n        print \"ScimEventHandler (updateGroup): Current displayName = \" + group.getDisplayName()\\n        return True\\n\\n    def deleteGroup(self, group, configurationAttributes):\\n        print \"ScimEventHandler (deleteGroup): Current displayName = \" + group.getDisplayName()\\n        return True\\n        \\n    def postCreateUser(self, user, configurationAttributes):\\n        return True\\n\\n    def postUpdateUser(self, user, configurationAttributes):\\n        return True\\n\\n    def postDeleteUser(self, user, configurationAttributes):\\n        return True\\n\\n    def postUpdateGroup(self, group, configurationAttributes):\\n        return True\\n\\n    def postCreateGroup(self, group, configurationAttributes):\\n        return True\\n\\n    def postDeleteGroup(self, group, configurationAttributes):\\n        return True'], 'jansScrTyp': ['scim'], 'objectClass': ['top', 'jansCustomScr'], 'jansEnabled': ['false'], 'jansProgLng': ['python']} 11:35:29 06/21/21 Querying LDAP for dn inum=DAA9-B788,ou=scripts,o=jans 11:35:29 06/21/21 Adding LDAP dn:inum=DAA9-B788,ou=scripts,o=jans entry:{'description': ['Sample Client Registration script'], 'displayName': ['client_registration'], 'inum': ['DAA9-B788'], 'jansConfProperty': ['{\"value1\":\"client_redirect_uris\",\"value2\":\"https://client.example.com/example1, https://client.example.com/example2\",\"description\":\"\"}'], 'jansLevel': ['100'], 'jansModuleProperty': ['{\"value1\":\"location_type\",\"value2\":\"ldap\",\"description\":\"\"}'], 'jansRevision': ['1'], 'jansScr': ['# oxAuth is available under the MIT License (2008). See http://opensource.org/licenses/MIT for full text.\\n# Copyright (c) 2016, Janssen\\n#\\n# Author: Yuriy Movchan\\n#\\n\\nfrom io.jans.model.custom.script.type.client import ClientRegistrationType\\nfrom io.jans.service.cdi.util import CdiUtil\\nfrom io.jans.as.service import ScopeService\\nfrom io.jans.util import StringHelper, ArrayHelper\\nfrom java.util import Arrays, ArrayList, HashSet\\n\\nimport java\\n\\nclass ClientRegistration(ClientRegistrationType):\\n    def init(self, currentTimeMillis):\\n        self.currentTimeMillis = currentTimeMillis\\n\\n    def init(self, customScript, configurationAttributes):\\n        print \"Client registration. Initialization\"\\n        \\n        self.clientRedirectUrisSet = self.prepareClientRedirectUris(configurationAttributes)\\n\\n        print \"Client registration. Initialized successfully\"\\n        return True   \\n\\n    def destroy(self, configurationAttributes):\\n        print \"Client registration. Destroy\"\\n        print \"Client registration. Destroyed successfully\"\\n        return True   \\n\\n    # Update client entry before persistent it\\n    #   registerRequest is io.jans.as.client.RegisterRequest\\n    #   client is io.jans.as.model.registration.Client\\n    #   configurationAttributes is java.util.Map\\n    def createClient(self, registerRequest, client, configurationAttributes):\\n        print \"Client registration. CreateClient method\"\\n\\n        redirectUris = client.getRedirectUris()\\n        print \"Client registration. Redirect Uris: %s\" % redirectUris\\n\\n        addAddressScope = False\\n        for redirectUri in redirectUris:\\n            if (self.clientRedirectUrisSet.contains(redirectUri)):\\n                addAddressScope = True\\n                break\\n        \\n        print \"Client registration. Is add address scope: %s\" % addAddressScope\\n\\n        if addAddressScope:\\n            currentScopes = client.getScopes()\\n            print \"Client registration. Current scopes: %s\" % currentScopes\\n            \\n            scopeService = CdiUtil.bean(ScopeService)\\n            addressScope = scopeService.getScopeByDisplayName(\"address\")\\n            newScopes = ArrayHelper.addItemToStringArray(currentScopes, addressScope.getDn())\\n    \\n            print \"Client registration. Result scopes: %s\" % newScopes\\n            client.setScopes(newScopes)\\n\\n        return True\\n\\n    # Update client entry before persistent it\\n    #   registerRequest is io.jans.as.client.RegisterRequest\\n    #   client is io.jans.as.model.registration.Client\\n    #   configurationAttributes is java.util.Map\\n    def updateClient(self, registerRequest, client, configurationAttributes):\\n        print \"Client registration. UpdateClient method\"\\n        return True\\n\\n    def getApiVersion(self):\\n        return 11\\n\\n    def prepareClientRedirectUris(self, configurationAttributes):\\n        clientRedirectUrisSet = HashSet()\\n        if not configurationAttributes.containsKey(\"client_redirect_uris\"):\\n            return clientRedirectUrisSet\\n\\n        clientRedirectUrisList = configurationAttributes.get(\"client_redirect_uris\").getValue2()\\n        if StringHelper.isEmpty(clientRedirectUrisList):\\n            print \"Client registration. The property client_redirect_uris is empty\"\\n            return clientRedirectUrisSet    \\n\\n        clientRedirectUrisArray = StringHelper.split(clientRedirectUrisList, \",\")\\n        if ArrayHelper.isEmpty(clientRedirectUrisArray):\\n            print \"Client registration. No clients specified in client_redirect_uris property\"\\n            return clientRedirectUrisSet\\n        \\n        # Convert to HashSet to quick search\\n        i = 0\\n        count = len(clientRedirectUrisArray)\\n        while i &lt; count:\\n            uris = clientRedirectUrisArray[i]\\n            clientRedirectUrisSet.add(uris)\\n            i = i + 1\\n\\n        return clientRedirectUrisSet\\n\\n    # Returns secret key which will be used to validate Software Statement if HMAC algorithm is used (e.g. HS256, HS512). Invoked if oxauth conf property softwareStatementValidationType=SCRIPT which is default/fallback value.\\n    # context is reference of io.jans.as.service.external.context.DynamicClientRegistrationContext (in https://github.com/JanssenFederation/oxauth project )\\n    def getSoftwareStatementHmacSecret(self, context):\\n        return \"\"\\n\\n    # Returns JWKS which will be used to validate Software Statement if keys are used (e.g. RS256). Invoked if oxauth conf property softwareStatementValidationType=SCRIPT which is default/fallback value.\\n    # context is reference of io.jans.as.service.external.context.DynamicClientRegistrationContext (in https://github.com/JanssenFederation/oxauth project )\\n    def getSoftwareStatementJwks(self, context):\\n        return \"\"\\n'], 'jansScrTyp': ['client_registration'], 'objectClass': ['top', 'jansCustomScr'], 'jansEnabled': ['false'], 'jansProgLng': ['python']} 11:35:29 06/21/21 Querying LDAP for dn inum=09A0-93D6,ou=scripts,o=jans 11:35:29 06/21/21 Adding LDAP dn:inum=09A0-93D6,ou=scripts,o=jans entry:{'description': ['Twilio SMS authentication module'], 'displayName': ['twilio_sms'], 'inum': ['09A0-93D6'], 'jansConfProperty': ['{\"value1\":\"twilio_sid\",\"value2\":\"\",\"description\":\"Twilio account SID\"}', '{\"value1\":\"twilio_token\",\"value2\":\"\",\"description\":\"Twilio API token\"}', '{\"value1\":\"from_number\",\"value2\":\"\",\"description\":\"Twilio phone number with SMS capabilities\"}'], 'jansLevel': ['50'], 'jansModuleProperty': ['{\"value1\":\"usage_type\",\"value2\":\"interactive\",\"description\":\"\"}', '{\"value1\":\"location_type\",\"value2\":\"ldap\",\"description\":\"\"}'], 'jansRevision': ['1'], 'jansScr': ['# oxAuth is available under the MIT License (2008). See http://opensource.org/licenses/MIT for full text.\\r\\n# Copyright (c) 2018, Janssen\\r\\n#\\r\\n# Author: Jose Gonzalez\\r\\n# Author: Gasmyr Mougang\\r\\n\\r\\nfrom io.jans.service.cdi.util import CdiUtil\\r\\nfrom io.jans.as.server.security import Identity\\r\\nfrom io.jans.model.custom.script.type.auth import PersonAuthenticationType\\r\\nfrom io.jans.as.server.service import AuthenticationService\\r\\nfrom io.jans.as.server.service import UserService\\r\\nfrom io.jans.as.server.service import SessionIdService\\r\\nfrom io.jans.as.util import ServerUtil\\r\\nfrom io.jans.util import StringHelper, ArrayHelper\\r\\nfrom java.util import Arrays\\r\\nfrom javax.faces.application import FacesMessage\\r\\nfrom io.jans.jsf2.message import FacesMessages\\r\\n\\r\\nimport com.twilio.Twilio as Twilio\\r\\nimport com.twilio.rest.api.v2010.account.Message as Message\\r\\nimport com.twilio.type.PhoneNumber as PhoneNumber\\r\\nimport org.codehaus.jettison.json.JSONArray as JSONArray\\r\\n\\r\\n\\r\\nimport java\\r\\nimport random\\r\\nimport jarray\\r\\n\\r\\nclass PersonAuthentication(PersonAuthenticationType):\\r\\n    def init(self, currentTimeMillis):\\r\\n        self.currentTimeMillis = currentTimeMillis\\r\\n        self.mobile_number = None\\r\\n        self.identity = CdiUtil.bean(Identity)\\r\\n\\r\\n    def init(self, customScript, configurationAttributes):\\r\\n        print \"==============================================\"\\r\\n        print \"===TWILIO SMS INITIALIZATION==================\"\\r\\n        print \"==============================================\"\\r\\n        self.ACCOUNT_SID = None\\r\\n        self.AUTH_TOKEN = None\\r\\n        self.FROM_NUMBER = None\\r\\n\\r\\n        # Get Custom Properties\\r\\n        try:\\r\\n            self.ACCOUNT_SID = configurationAttributes.get(\"twilio_sid\").getValue2()\\r\\n        except:\\r\\n            print \\'TwilioSMS, Missing required configuration attribute \"twilio_sid\"\\'\\r\\n\\r\\n        try:\\r\\n            self.AUTH_TOKEN = configurationAttributes.get(\"twilio_token\").getValue2()\\r\\n        except:\\r\\n            print\\'TwilioSMS, Missing required configuration attribute \"twilio_token\"\\'\\r\\n        try:\\r\\n            self.FROM_NUMBER = configurationAttributes.get(\"from_number\").getValue2()\\r\\n        except:\\r\\n            print\\'TwilioSMS, Missing required configuration attribute \"from_number\"\\'\\r\\n\\r\\n        if None in (self.ACCOUNT_SID, self.AUTH_TOKEN, self.FROM_NUMBER):\\r\\n            print \"twilio_sid, twilio_token, from_number is empty ... returning False\"\\r\\n            return False\\r\\n\\r\\n        print \"===TWILIO SMS INITIALIZATION DONE PROPERLY=====\"  \\r\\n        return True\\r\\n\\r\\n    def destroy(self, configurationAttributes):\\r\\n        print \"Twilio SMS. Destroy\"\\r\\n        print \"Twilio SMS. Destroyed successfully\"\\r\\n        return True\\r\\n\\r\\n    def getApiVersion(self):\\r\\n        return 11\\r\\n        \\r\\n    def getAuthenticationMethodClaims(self, requestParameters):\\r\\n        return None\\r\\n        \\r\\n    def isValidAuthenticationMethod(self, usageType, configurationAttributes):\\r\\n        return True\\r\\n\\r\\n    def getAlternativeAuthenticationMethod(self, usageType, configurationAttributes):\\r\\n        return None\\r\\n\\r\\n    def authenticate(self, configurationAttributes, requestParameters, step):\\r\\n        print \"==============================================\"\\r\\n        print \"====TWILIO SMS AUTHENCATION===================\"\\r\\n        print \"==============================================\"\\r\\n        userService = CdiUtil.bean(UserService)\\r\\n        authenticationService = CdiUtil.bean(AuthenticationService)\\r\\n        sessionIdService = CdiUtil.bean(SessionIdService)\\r\\n        facesMessages = CdiUtil.bean(FacesMessages)\\r\\n        facesMessages.setKeepMessages()\\r\\n\\r\\n        session_attributes = self.identity.getSessionId().getSessionAttributes()\\r\\n        form_passcode = ServerUtil.getFirstValue(requestParameters, \"passcode\")\\r\\n        form_name = ServerUtil.getFirstValue(requestParameters, \"TwilioSmsloginForm\")\\r\\n\\r\\n        print \"TwilioSMS. form_response_passcode: %s\" % str(form_passcode)\\r\\n\\r\\n        if step == 1:\\r\\n            print \"==============================================\"\\r\\n            print \"=TWILIO SMS STEP 1 | Password Authentication==\"\\r\\n            print \"==============================================\"\\r\\n            credentials = self.identity.getCredentials()\\r\\n            user_name = credentials.getUsername()\\r\\n            user_password = credentials.getPassword()\\r\\n            logged_in = False\\r\\n            if StringHelper.isNotEmptyString(user_name) and StringHelper.isNotEmptyString(user_password):\\r\\n                logged_in = authenticationService.authenticate(user_name, user_password)\\r\\n\\r\\n            if not logged_in:\\r\\n                return False\\r\\n\\r\\n            # Get the Person\\'s number and generate a code\\r\\n            foundUser = None\\r\\n            try:\\r\\n                foundUser = authenticationService.getAuthenticatedUser()\\r\\n            except:\\r\\n                print \\'TwilioSMS, Error retrieving user %s from LDAP\\' % (user_name)\\r\\n                return False\\r\\n\\r\\n            try:\\r\\n                isVerified = foundUser.getAttribute(\"phoneNumberVerified\")\\r\\n                if isVerified:\\r\\n                    self.mobile_number = foundUser.getAttribute(\"employeeNumber\")\\r\\n                if  self.mobile_number == None:\\r\\n                    self.mobile_number = foundUser.getAttribute(\"mobile\")\\r\\n                if  self.mobile_number == None:\\r\\n                    self.mobile_number = foundUser.getAttribute(\"telephoneNumber\")\\r\\n                if  self.mobile_number == None:\\r\\n                    print \"TwilioSMS, Error finding mobile number for user \\'%s\\'\" % user_name    \\r\\n                    \\r\\n            except:\\r\\n                facesMessages.add(FacesMessage.SEVERITY_ERROR, \"Failed to determine mobile phone number\")\\r\\n                print \\'TwilioSMS, Error finding mobile number for \"%s\". Exception: %s<code>% (user_name, sys.exc_info()[1])</code>\\'\\r\\n                return False\\r\\n\\r\\n            # Generate Random six digit code and store it in array\\r\\n            code = random.randint(100000, 999999)\\r\\n\\r\\n            # Get code and save it in LDAP temporarily with special session entry\\r\\n            self.identity.setWorkingParameter(\"code\", code)\\r\\n            sessionId = sessionIdService.getSessionId() # fetch from persistence\\r\\n            sessionId.getSessionAttributes().put(\"code\", code)\\r\\n\\r\\n            try:\\r\\n                Twilio.init(self.ACCOUNT_SID, self.AUTH_TOKEN);\\r\\n                message = Message.creator(PhoneNumber(self.mobile_number), PhoneNumber(self.FROM_NUMBER), str(code)).create();\\r\\n                print \"++++++++++++++++++++++++++++++++++++++++++++++\"\\r\\n                print \\'TwilioSMs, Message Sid: %s\\' % (message.getSid())\\r\\n                print \\'TwilioSMs, User phone: %s\\' % (self.mobile_number)\\r\\n                print \"++++++++++++++++++++++++++++++++++++++++++++++\"\\r\\n                sessionId.getSessionAttributes().put(\"mobile_number\", self.mobile_number)\\r\\n                sessionId.getSessionAttributes().put(\"mobile\", self.mobile_number)\\r\\n                sessionIdService.updateSessionId(sessionId)\\r\\n                self.identity.setWorkingParameter(\"mobile_number\", self.mobile_number)\\r\\n                self.identity.getSessionId().getSessionAttributes().put(\"mobile_number\",self.mobile_number)\\r\\n                self.identity.setWorkingParameter(\"mobile\", self.mobile_number)\\r\\n                self.identity.getSessionId().getSessionAttributes().put(\"mobile\",self.mobile_number)\\r\\n                print \"++++++++++++++++++++++++++++++++++++++++++++++\"\\r\\n                print \"Number: %s\" % (self.identity.getWorkingParameter(\"mobile_number\"))\\r\\n                print \"Mobile: %s\" % (self.identity.getWorkingParameter(\"mobile\"))\\r\\n                print \"++++++++++++++++++++++++++++++++++++++++++++++\"\\r\\n                print \"========================================\"\\r\\n                print \"===TWILIO SMS FIRST STEP DONE PROPERLY==\"\\r\\n                print \"========================================\"\\r\\n                return True\\r\\n            except Exception, ex:\\r\\n                facesMessages.add(FacesMessage.SEVERITY_ERROR, \"Failed to send message to mobile phone\")\\r\\n                print \"TwilioSMS. Error sending message to Twilio\"\\r\\n                print \"TwilioSMS. Unexpected error:\", ex\\r\\n\\r\\n            return False\\r\\n        elif step == 2:\\r\\n            # Retrieve the session attribute\\r\\n            print \"==============================================\"\\r\\n            print \"=TWILIO SMS STEP 2 | Password Authentication==\"\\r\\n            print \"==============================================\"\\r\\n            code = session_attributes.get(\"code\")\\r\\n            print \\'=======&gt; Session code is \"%s\"\\' % str(code)\\r\\n            sessionIdService = CdiUtil.bean(SessionIdService)\\r\\n            sessionId = sessionIdService.getSessionId() # fetch from persistence\\r\\n            code = sessionId.getSessionAttributes().get(\"code\")\\r\\n            print \\'=======&gt; Database code is \"%s\"\\' % str(code)\\r\\n            self.identity.setSessionId(sessionId)\\r\\n            print \"==============================================\"\\r\\n            print \"TwilioSMS. Code: %s\" % str(code)\\r\\n            print \"==============================================\"\\r\\n            if code is None:\\r\\n                print \"TwilioSMS. Failed to find previously sent code\"\\r\\n                return False\\r\\n\\r\\n            if form_passcode is None:\\r\\n                print \"TwilioSMS. Passcode is empty\"\\r\\n                return False\\r\\n\\r\\n            if len(form_passcode) != 6:\\r\\n                print \"TwilioSMS. Passcode from response is not 6 digits: %s\" % form_passcode\\r\\n                return False\\r\\n\\r\\n            if form_passcode == code:\\r\\n                print \"TiwlioSMS, SUCCESS! User entered the same code!\"\\r\\n                print \"========================================\"\\r\\n                print \"===TWILIO SMS SECOND STEP DONE PROPERLY\"\\r\\n                print \"========================================\"\\r\\n                return True\\r\\n\\r\\n            print \"+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\" \\r\\n            print \"TwilioSMS. FAIL! User entered the wrong code! %s != %s\" % (form_passcode, code)\\r\\n            print \"+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\" \\r\\n            facesMessages.add(FacesMessage.SEVERITY_ERROR, \"Incorrect Twilio code, please try again.\")\\r\\n            print \"================================================\"\\r\\n            print \"===TWILIO SMS SECOND STEP FAILED: INCORRECT CODE\"\\r\\n            print \"================================================\"\\r\\n            return False\\r\\n\\r\\n        print \"TwilioSMS. ERROR: step param not found or != (1|2)\"\\r\\n\\r\\n        return False\\r\\n\\r\\n    def prepareForStep(self, configurationAttributes, requestParameters, step):\\r\\n        if step == 1:\\r\\n            print \"TwilioSMS. Prepare for Step 1\"\\r\\n            return True\\r\\n        elif step == 2:\\r\\n            print \"TwilioSMS. Prepare for Step 2\"\\r\\n            return True\\r\\n        return False\\r\\n\\r\\n    def getExtraParametersForStep(self, configurationAttributes, step):\\r\\n        if step == 2:\\r\\n            return Arrays.asList(\"code\")\\r\\n\\r\\n        return None\\r\\n\\r\\n    def getCountAuthenticationSteps(self, configurationAttributes):\\r\\n        return 2\\r\\n\\r\\n    def getPageForStep(self, configurationAttributes, step):\\r\\n        if step == 2:\\r\\n            return \"/auth/otp_sms/otp_sms.xhtml\"\\r\\n\\r\\n        return \"\"\\r\\n        \\r\\n    def getNextStep(self, configurationAttributes, requestParameters, step):\\r\\n        return -1\\r\\n\\r\\n    def getLogoutExternalUrl(self, configurationAttributes, requestParameters):\\r\\n        print \"Get external logout URL call\"\\r\\n        return None\\r\\n        \\r\\n    def logout(self, configurationAttributes, requestParameters):\\r\\n        return True\\r\\n'], 'jansScrTyp': ['person_authentication'], 'objectClass': ['top', 'jansCustomScr'], 'jansEnabled': ['false'], 'jansProgLng': ['python']} 11:35:29 06/21/21 Querying LDAP for dn inum=09A0-93D7,ou=scripts,o=jans 11:35:29 06/21/21 Adding LDAP dn:inum=09A0-93D7,ou=scripts,o=jans entry:{'description': ['SMPP SMS authentication module'], 'displayName': ['smpp'], 'inum': ['09A0-93D7'], 'jansConfProperty': ['{\"value1\":\"smpp_server\",\"value2\":\"\",\"description\":\"IP or FQDN of SMPP server\"}', '{\"value1\":\"smpp_port\",\"value2\":\"\",\"description\":\"TCP port of the SMPP server\"}', '{\"value1\":\"system_id\",\"value2\":\"\",\"description\":\"Use if SMPP server requires authentication\"}', '{\"value1\":\"password\",\"value2\":\"\",\"description\":\"Use if SMPP server requires authentication\"}', '{\"value1\":\"source_addr_ton\",\"value2\":\"\",\"description\":\"Type of number, eg ALPHANUMERIC, INTERNATIONAL\"}', '{\"value1\":\"source_addr\",\"value2\":\"\",\"description\":\"From number/name\"}'], 'jansLevel': ['45'], 'jansModuleProperty': ['{\"value1\":\"usage_type\",\"value2\":\"interactive\",\"description\":\"\"}', '{\"value1\":\"location_type\",\"value2\":\"ldap\",\"description\":\"\"}'], 'jansRevision': ['1'], 'jansScr': ['# oxAuth is available under the MIT License (2008). See http://opensource.org/licenses/MIT for full text.\\n# Copyright (c) 2018, Janssen\\n# Copyright (c) 2019, Tele2\\n\\n# Author: Jose Gonzalez\\n# Author: Gasmyr Mougang\\n# Author: Stefan Andersson\\n\\nfrom java.util import Arrays, Date\\nfrom java.io import IOException\\nfrom java.lang import Enum\\n\\nfrom io.jans.service.cdi.util import CdiUtil\\nfrom io.jans.as.server.security import Identity\\nfrom io.jans.model.custom.script.type.auth import PersonAuthenticationType\\nfrom io.jans.as.server.service import AuthenticationService\\nfrom io.jans.as.server.service import UserService\\nfrom io.jans.as.util import ServerUtil\\nfrom io.jans.util import StringHelper, ArrayHelper\\nfrom javax.faces.application import FacesMessage\\nfrom io.jans.jsf2.message import FacesMessages\\n\\nfrom org.jsmpp import InvalidResponseException, PDUException\\nfrom org.jsmpp.bean import Alphabet, BindType, ESMClass, GeneralDataCoding, MessageClass, NumberingPlanIndicator, RegisteredDelivery, SMSCDeliveryReceipt, TypeOfNumber\\nfrom org.jsmpp.extra import NegativeResponseException, ResponseTimeoutException\\nfrom org.jsmpp.session import BindParameter, SMPPSession\\nfrom org.jsmpp.util import AbsoluteTimeFormatter, TimeFormatter\\nimport random\\n\\n\\nclass SmppAttributeError(Exception):\\n    pass\\n\\n\\nclass PersonAuthentication(PersonAuthenticationType):\\n    def init(self, currentTimeMillis):\\n        self.currentTimeMillis = currentTimeMillis\\n        self.identity = CdiUtil.bean(Identity)\\n\\n    def get_and_parse_smpp_config(self, config, attribute, _type = None,  convert = False, optional = False, default_desc = None):\\n        try:\\n            value = config.get(attribute).getValue2()\\n        except:\\n            if default_desc:\\n                default_desc = \" using default \\'{}\\'\".format(default_desc)\\n            else:\\n                default_desc = \"\"\\n\\n            if optional:\\n                raise SmppAttributeError(\"SMPP missing optional configuration attribute \\'{}\\'{}\".format(attribute, default_desc))\\n            else:\\n                raise SmppAttributeError(\"SMPP missing required configuration attribute \\'{}\\'\".format(attribute))\\n\\n        if _type and issubclass(_type, Enum):\\n            try:\\n                return getattr(_type, value)\\n            except AttributeError:\\n                raise SmppAttributeError(\"SMPP could not find attribute \\'{}\\' in {}\".format(attribute, _type))\\n\\n        if convert:\\n            try:\\n                value = int(value)\\n            except AttributeError:\\n                try:\\n                    value = int(value, 16)\\n                except AttributeError:\\n                    raise SmppAttributeError(\"SMPP could not parse value \\'{}\\' of attribute \\'{}\\'\".format(value, attribute))\\n\\n        return value\\n\\n    def init(self, customScript, configurationAttributes):\\n        print(\"SMPP Initialization\")\\n\\n        self.TIME_FORMATTER = AbsoluteTimeFormatter()\\n\\n        self.SMPP_SERVER = None\\n        self.SMPP_PORT = None\\n\\n        self.SYSTEM_ID = None\\n        self.PASSWORD = None\\n\\n        # Setup some good defaults for TON, NPI and source (from) address\\n        # TON (Type of Number), NPI (Number Plan Indicator)\\n        self.SRC_ADDR_TON = TypeOfNumber.ALPHANUMERIC    # Alphanumeric\\n        self.SRC_ADDR_NPI = NumberingPlanIndicator.ISDN  # ISDN (E163/E164)\\n        self.SRC_ADDR = \"Janssen OTP\"\\n\\n        # Don\\'t touch these unless you know what your doing, we don\\'t handle number reformatting for\\n        # any other type than international.\\n        self.DST_ADDR_TON = TypeOfNumber.INTERNATIONAL   # International\\n        self.DST_ADDR_NPI = NumberingPlanIndicator.ISDN  # ISDN (E163/E164)\\n\\n        # Priority flag and data_coding bits\\n        self.PRIORITY_FLAG = 3  # Very Urgent (ANSI-136), Emergency (IS-95)\\n        self.DATA_CODING_ALPHABET = Alphabet.ALPHA_DEFAULT  # SMS default alphabet\\n        self.DATA_CODING_MESSAGE_CLASS = MessageClass.CLASS1  # EM (Mobile Equipment (mobile memory), normal message\\n\\n        # Required server settings\\n        try:\\n            self.SMPP_SERVER = self.get_and_parse_smpp_config(configurationAttributes, \"smpp_server\")\\n        except SmppAttributeError as e:\\n            print(e)\\n\\n        try:\\n            self.SMPP_PORT = self.get_and_parse_smpp_config(configurationAttributes, \"smpp_port\", convert = True)\\n        except SmppAttributeError as e:\\n            print(e)\\n\\n        if None in (self.SMPP_SERVER, self.SMPP_PORT):\\n            print(\"SMPP smpp_server and smpp_port is empty, will not enable SMPP service\")\\n            return False\\n\\n        # Optional system_id and password for bind auth\\n        try:\\n            self.SYSTEM_ID = self.get_and_parse_smpp_config(configurationAttributes, \"system_id\", optional = True)\\n        except SmppAttributeError as e:\\n            print(e)\\n\\n        try:\\n            self.PASSWORD = self.get_and_parse_smpp_config(configurationAttributes, \"password\", optional = True)\\n        except SmppAttributeError as e:\\n            print(e)\\n\\n        if None in (self.SYSTEM_ID, self.PASSWORD):\\n            print(\"SMPP Authentication disabled\")\\n\\n        # From number and to number settings\\n        try:\\n            self.SRC_ADDR_TON = self.get_and_parse_smpp_config(\\n                configurationAttributes,\\n                \"source_addr_ton\",\\n                _type = TypeOfNumber,\\n                optional = True,\\n                default_desc = self.SRC_ADDR_TON\\n            )\\n        except SmppAttributeError as e:\\n            print(e)\\n\\n        try:\\n            self.SRC_ADDR_NPI = self.get_and_parse_smpp_config(\\n                configurationAttributes,\\n                \"source_addr_npi\",\\n                _type = NumberingPlanIndicator,\\n                optional = True,\\n                default_desc = self.SRC_ADDR_NPI\\n            )\\n        except SmppAttributeError as e:\\n            print(e)\\n\\n        try:\\n            self.SRC_ADDR = self.get_and_parse_smpp_config(\\n                configurationAttributes,\\n                \"source_addr\",\\n                optional = True,\\n                default_desc = self.SRC_ADDR\\n            )\\n        except SmppAttributeError as e:\\n            print(e)\\n\\n        try:\\n            self.DST_ADDR_TON = self.get_and_parse_smpp_config(\\n                configurationAttributes,\\n                \"dest_addr_ton\",\\n                _type = TypeOfNumber,\\n                optional = True,\\n                default_desc = self.DST_ADDR_TON\\n            )\\n        except SmppAttributeError as e:\\n            print(e)\\n\\n        try:\\n            self.DST_ADDR_NPI = self.get_and_parse_smpp_config(\\n                configurationAttributes,\\n                \"dest_addr_npi\",\\n                _type = NumberingPlanIndicator,\\n                optional = True,\\n                default_desc = self.DST_ADDR_NPI\\n            )\\n        except SmppAttributeError as e:\\n            print(e)\\n\\n        # Priority flag and data coding, don\\'t touch these unless you know what your doing...\\n        try:\\n            self.PRIORITY_FLAG = self.get_and_parse_smpp_config(\\n                configurationAttributes,\\n                \"priority_flag\",\\n                convert = True,\\n                optional = True,\\n                default_desc = \"3 (Very Urgent, Emergency)\"\\n            )\\n        except SmppAttributeError as e:\\n            print(e)\\n\\n        try:\\n            self.DATA_CODING_ALPHABET = self.get_and_parse_smpp_config(\\n                configurationAttributes,\\n                \"data_coding_alphabet\",\\n                _type = Alphabet,\\n                optional = True,\\n                default_desc = self.DATA_CODING_ALPHABET\\n            )\\n        except SmppAttributeError as e:\\n            print(e)\\n\\n        try:\\n            self.DATA_CODING_MESSAGE_CLASS = self.get_and_parse_smpp_config(\\n                configurationAttributes,\\n                \"data_coding_alphabet\",\\n                _type = MessageClass,\\n                optional = True,\\n                default_desc = self.DATA_CODING_MESSAGE_CLASS\\n            )\\n        except SmppAttributeError as e:\\n            print(e)\\n\\n        print(\"SMPP Initialized successfully\")\\n        return True\\n\\n    def destroy(self, configurationAttributes):\\n        print(\"SMPP Destroy\")\\n        print(\"SMPP Destroyed successfully\")\\n        return True\\n\\n    def getApiVersion(self):\\n        return 11\\n        \\n    def getAuthenticationMethodClaims(self, requestParameters):\\n        return None\\n        \\n    def isValidAuthenticationMethod(self, usageType, configurationAttributes):\\n        return True\\n\\n    def getAlternativeAuthenticationMethod(self, usageType, configurationAttributes):\\n        return None\\n\\n    def authenticate(self, configurationAttributes, requestParameters, step):\\n        userService = CdiUtil.bean(UserService)\\n        authenticationService = CdiUtil.bean(AuthenticationService)\\n\\n        facesMessages = CdiUtil.bean(FacesMessages)\\n        facesMessages.setKeepMessages()\\n\\n        session_attributes = self.identity.getSessionId().getSessionAttributes()\\n        form_passcode = ServerUtil.getFirstValue(requestParameters, \"passcode\")\\n\\n        print(\"SMPP form_response_passcode: {}\".format(str(form_passcode)))\\n\\n        if step == 1:\\n            print(\"SMPP Step 1 Password Authentication\")\\n            credentials = self.identity.getCredentials()\\n\\n            user_name = credentials.getUsername()\\n            user_password = credentials.getPassword()\\n\\n            logged_in = False\\n            if StringHelper.isNotEmptyString(user_name) and StringHelper.isNotEmptyString(user_password):\\n                logged_in = authenticationService.authenticate(user_name, user_password)\\n\\n            if not logged_in:\\n                return False\\n\\n            # Get the Person\\'s number and generate a code\\n            foundUser = None\\n            try:\\n                foundUser = authenticationService.getAuthenticatedUser()\\n            except:\\n                print(\"SMPP Error retrieving user {} from LDAP\".format(user_name))\\n                return False\\n\\n            mobile_number = None\\n            try:\\n                isVerified = foundUser.getAttribute(\"phoneNumberVerified\")\\n                if isVerified:\\n                    mobile_number = foundUser.getAttribute(\"employeeNumber\")\\n                if not mobile_number:\\n                    mobile_number = foundUser.getAttribute(\"mobile\")\\n                if not mobile_number:\\n                    mobile_number = foundUser.getAttribute(\"telephoneNumber\")\\n                if not mobile_number:\\n                    facesMessages.add(FacesMessage.SEVERITY_ERROR, \"Failed to determine mobile phone number\")\\n                    print(\"SMPP Error finding mobile number for user \\'{}\\'\".format(user_name))\\n                    return False\\n            except Exception as e:\\n                facesMessages.add(FacesMessage.SEVERITY_ERROR, \"Failed to determine mobile phone number\")\\n                print(\"SMPP Error finding mobile number for {}: {}\".format(user_name, e))\\n                return False\\n\\n            # Generate Random six digit code\\n            code = random.randint(100000, 999999)\\n\\n            # Get code and save it in LDAP temporarily with special session entry\\n            self.identity.setWorkingParameter(\"code\", code)\\n\\n            self.identity.setWorkingParameter(\"mobile_number\", mobile_number)\\n            self.identity.getSessionId().getSessionAttributes().put(\"mobile_number\", mobile_number)\\n            if not self.sendMessage(mobile_number, str(code)):\\n                facesMessages.add(FacesMessage.SEVERITY_ERROR, \"Failed to send message to mobile phone\")\\n                return False\\n\\n            return True\\n        elif step == 2:\\n            # Retrieve the session attribute\\n            print(\"SMPP Step 2 SMS/OTP Authentication\")\\n            code = session_attributes.get(\"code\")\\n            print(\"SMPP Code: {}\".format(str(code)))\\n\\n            if code is None:\\n                print(\"SMPP Failed to find previously sent code\")\\n                return False\\n\\n            if form_passcode is None:\\n                print(\"SMPP Passcode is empty\")\\n                return False\\n\\n            if len(form_passcode) != 6:\\n                print(\"SMPP Passcode from response is not 6 digits: {}\".format(form_passcode))\\n                return False\\n\\n            if form_passcode == code:\\n                print(\"SMPP SUCCESS! User entered the same code!\")\\n                return True\\n\\n            print(\"SMPP failed, user entered the wrong code! {} != {}\".format(form_passcode, code))\\n            facesMessages.add(facesMessage.SEVERITY_ERROR, \"Incorrect SMS code, please try again.\")\\n            return False\\n\\n        print(\"SMPP ERROR: step param not found or != (1|2)\")\\n        return False\\n\\n    def prepareForStep(self, configurationAttributes, requestParameters, step):\\n        if step == 1:\\n            print(\"SMPP Prepare for Step 1\")\\n            return True\\n        elif step == 2:\\n            print(\"SMPP Prepare for Step 2\")\\n            return True\\n\\n        return False\\n\\n    def getExtraParametersForStep(self, configurationAttributes, step):\\n        if step == 2:\\n            return Arrays.asList(\"code\")\\n\\n        return None\\n\\n    def getCountAuthenticationSteps(self, configurationAttributes):\\n        return 2\\n\\n    def getPageForStep(self, configurationAttributes, step):\\n        if step == 2:\\n            return \"/auth/otp_sms/otp_sms.xhtml\"\\n\\n        return \"\"\\n\\n    def getNextStep(self, configurationAttributes, requestParameters, step):\\n        return -1\\n\\n    def getLogoutExternalUrl(self, configurationAttributes, requestParameters):\\n        print \"Get external logout URL call\"\\n        return None\\n\\n    def logout(self, configurationAttributes, requestParameters):\\n        return True\\n\\n    def sendMessage(self, number, code):\\n        status = False\\n        session = SMPPSession()\\n        session.setTransactionTimer(10000)\\n\\n        # We only handle international destination number reformatting.\\n        # All others may vary by configuration decisions taken on SMPP\\n        # server side which we have no clue about.\\n        if self.DST_ADDR_TON == TypeOfNumber.INTERNATIONAL and number.startswith(\"+\"):\\n            number = number[1:]\\n\\n        try:\\n            print(\"SMPP Connecting\")\\n            reference_id = session.connectAndBind(\\n                self.SMPP_SERVER,\\n                self.SMPP_PORT,\\n                BindParameter(\\n                    BindType.BIND_TX,\\n                    self.SYSTEM_ID,\\n                    self.PASSWORD,\\n                    None,\\n                    self.SRC_ADDR_TON,\\n                    self.SRC_ADDR_NPI,\\n                    None\\n                )\\n            )\\n            print(\"SMPP Connected to server with system id {}\".format(reference_id))\\n\\n            try:\\n                message_id = session.submitShortMessage(\\n                    \"CMT\",\\n                    self.SRC_ADDR_TON,\\n                    self.SRC_ADDR_NPI,\\n                    self.SRC_ADDR,\\n                    self.DST_ADDR_TON,\\n                    self.DST_ADDR_NPI,\\n                    number,\\n                    ESMClass(),\\n                    0,\\n                    self.PRIORITY_FLAG,\\n                    self.TIME_FORMATTER.format(Date()),\\n                    None,\\n                    RegisteredDelivery(SMSCDeliveryReceipt.DEFAULT),\\n                    0,\\n                    GeneralDataCoding(\\n                        self.DATA_CODING_ALPHABET,\\n                        self.DATA_CODING_MESSAGE_CLASS,\\n                        False\\n                    ),\\n                    0,\\n                    code\\n                )\\n                print(\"SMPP Message \\'{}\\' sent to #{} with message id {}\".format(code, number, message_id))\\n                status = True\\n            except PDUException as e:\\n                print(\"SMPP Invalid PDU parameter: {}\".format(e))\\n            except ResponseTimeoutException as e:\\n                print(\"SMPP Response timeout: {}\".format(e))\\n            except InvalidResponseException as e:\\n                print(\"SMPP Receive invalid response: {}\".format(e))\\n            except NegativeResponseException as e:\\n                print(\"SMPP Receive negative response: {}\".format(e))\\n            except IOException as e:\\n                print(\"SMPP IO error occured: {}\".format(e))\\n            finally:\\n                session.unbindAndClose()\\n        except IOException as e:\\n            print(\"SMPP Failed connect and bind to host: {}\".format(e))\\n\\n        return status\\n'], 'jansScrTyp': ['person_authentication'], 'objectClass': ['top', 'jansCustomScr'], 'jansEnabled': ['false'], 'jansProgLng': ['python']} 11:35:29 06/21/21 Querying LDAP for dn inum=DAA9-B789,ou=scripts,o=jans 11:35:29 06/21/21 Adding LDAP dn:inum=DAA9-B789,ou=scripts,o=jans entry:{'description': ['Sample Application Session script'], 'displayName': ['application_session'], 'inum': ['DAA9-B789'], 'jansLevel': ['100'], 'jansModuleProperty': ['{\"value1\":\"location_type\",\"value2\":\"ldap\",\"description\":\"\"}'], 'jansRevision': ['1'], 'jansScr': ['# oxAuth is available under the MIT License (2008). See http://opensource.org/licenses/MIT for full text.\\n# Copyright (c) 2016, Janssen\\n#\\n# Author: Yuriy Movchan\\n#\\n\\nfrom io.jans.model.custom.script.type.session import ApplicationSessionType\\nfrom io.jans.service.cdi.util import CdiUtil\\nfrom io.jans.persist import PersistenceEntryManager\\nfrom io.jans.as.model.config import StaticConfiguration\\nfrom io.jans.as.model.ldap import TokenLdap\\nfrom javax.faces.application import FacesMessage\\nfrom io.jans.jsf2.message import FacesMessages\\nfrom io.jans.util import StringHelper, ArrayHelper\\nfrom io.jans.as.model.config import Constants\\nfrom java.util import Arrays, ArrayList\\nfrom io.jans.as.service.external.session import SessionEventType\\n\\nimport java\\n\\nclass ApplicationSession(ApplicationSessionType):\\n    def init(self, currentTimeMillis):\\n        self.currentTimeMillis = currentTimeMillis\\n\\n    def init(self, customScript, configurationAttributes):\\n        print \"Application session. Initialization\"\\n\\n        self.entryManager = CdiUtil.bean(PersistenceEntryManager)\\n        self.staticConfiguration = CdiUtil.bean(StaticConfiguration)\\n\\n        print \"Application session. Initialized successfully\"\\n\\n        return True   \\n\\n    def destroy(self, configurationAttributes):\\n        print \"Application session. Destroy\"\\n        print \"Application session. Destroyed successfully\"\\n        return True   \\n\\n    def getApiVersion(self):\\n        return 11\\n\\n    # Called each time specific session event occurs\\n    # event is io.jans.as.service.external.session.SessionEvent\\n    def onEvent(self, event):\\n        if event.getType() == SessionEventType.AUTHENTICATED:\\n            print \"Session is authenticated, session: \" + event.getSessionId().getId()\\n        return\\n\\n    # Application calls it at start session request to allow notify 3rd part systems\\n    #   httpRequest is javax.servlet.http.HttpServletRequest\\n    #   sessionId is io.jans.as.model.common.SessionId\\n    #   configurationAttributes is java.util.Map\\n    def startSession(self, httpRequest, sessionId, configurationAttributes):\\n        print \"Application session. Starting external session\"\\n\\n        user_name = sessionId.getSessionAttributes().get(Constants.AUTHENTICATED_USER)\\n\\n        first_session = self.isFirstSession(user_name)\\n        if not first_session:\\n            facesMessages = CdiUtil.bean(FacesMessages)\\n            facesMessages.add(FacesMessage.SEVERITY_ERROR, \"Please, end active session first!\")\\n            return False\\n\\n        print \"Application session. External session started successfully\"\\n        return True\\n\\n    # Application calls it at end session request to allow notify 3rd part systems\\n    #   httpRequest is javax.servlet.http.HttpServletRequest\\n    #   sessionId is io.jans.as.model.common.SessionId\\n    #   configurationAttributes is java.util.Map\\n    def endSession(self, httpRequest, sessionId, configurationAttributes):\\n        print \"Application session. Starting external session end\"\\n\\n        print \"Application session. External session ended successfully\"\\n        return True\\n\\n    def isFirstSession(self, user_name):\\n        tokenLdap = TokenLdap()\\n        tokenLdap.setDn(self.staticConfiguration.getBaseDn().getClients())\\n        tokenLdap.setUserId(user_name)\\n\\n        tokenLdapList = self.entryManager.findEntries(tokenLdap, 1)\\n        print \"Application session. isFirstSession. Get result: \\'%s\\'\" % tokenLdapList\\n\\n        if (tokenLdapList != None) and (tokenLdapList.size() &gt; 0):\\n            print \"Application session. isFirstSession: False\"\\n            return False\\n\\n        print \"Application session. isFirstSession: True\"\\n        return True\\n'], 'jansScrTyp': ['application_session'], 'objectClass': ['top', 'jansCustomScr'], 'jansEnabled': ['false'], 'jansProgLng': ['python']} 11:35:29 06/21/21 Querying LDAP for dn inum=DAA9-BA60,ou=scripts,o=jans 11:35:29 06/21/21 Adding LDAP dn:inum=DAA9-BA60,ou=scripts,o=jans entry:{'description': ['Consent Gathering script'], 'displayName': ['consent_gathering'], 'inum': ['DAA9-BA60'], 'jansLevel': ['10'], 'jansModuleProperty': ['{\"value1\":\"location_type\",\"value2\":\"ldap\",\"description\":\"\"}'], 'jansRevision': ['1'], 'jansScr': ['# oxAuth is available under the MIT License (2008). See http://opensource.org/licenses/MIT for full text.\\n# Copyright (c) 2017, Janssen\\n#\\n# Author: Yuriy Movchan\\n#\\n\\nfrom io.jans.service.cdi.util import CdiUtil\\nfrom io.jans.as.server.security import Identity\\nfrom io.jans.model.custom.script.type.authz import ConsentGatheringType\\nfrom io.jans.util import StringHelper\\n\\nimport java\\nimport random\\n\\nclass ConsentGathering(ConsentGatheringType):\\n\\n    def init(self, currentTimeMillis):\\n        self.currentTimeMillis = currentTimeMillis\\n\\n    def init(self, customScript, configurationAttributes):\\n        print \"Consent-Gathering. Initializing ...\"\\n        print \"Consent-Gathering. Initialized successfully\"\\n\\n        return True\\n\\n    def destroy(self, configurationAttributes):\\n        print \"Consent-Gathering. Destroying ...\"\\n        print \"Consent-Gathering. Destroyed successfully\"\\n\\n        return True\\n\\n    def getApiVersion(self):\\n        return 1\\n\\n    # Main consent-gather method. Must return True (if gathering performed successfully) or False (if fail).\\n    # All user entered values can be access via Map context.getPageAttributes()\\n    def authorize(self, step, context): # context is reference of io.jans.as.service.external.context.ConsentGatheringContext\\n        print \"Consent-Gathering. Authorizing...\"\\n\\n        if step == 1:\\n            allowButton = context.getRequestParameters().get(\"authorizeForm:allowButton\")\\n            if (allowButton != None) and (len(allowButton) &gt; 0):\\n                print \"Consent-Gathering. Authorization success for step 1\"\\n                return True\\n\\n            print \"Consent-Gathering. Authorization declined for step 1\"\\n        elif step == 2:\\n            allowButton = context.getRequestParameters().get(\"authorizeForm:allowButton\")\\n            if (allowButton != None) and (len(allowButton) &gt; 0):\\n                print \"Consent-Gathering. Authorization success for step 2\"\\n                return True\\n\\n            print \"Consent-Gathering. Authorization declined for step 2\"\\n\\n        return False\\n\\n    def getNextStep(self, step, context):\\n        return -1\\n\\n    def prepareForStep(self, step, context):\\n        if not context.isAuthenticated():\\n            print \"User is not authenticated. Aborting authorization flow ...\"\\n            return False\\n\\n        if step == 2:\\n            pageAttributes = context.getPageAttributes()\\n            \\n            # Generate random consent gathering request\\n            consentRequest = \"Requested transaction #%s approval for the amount of sum $ %s.00\" % ( random.randint(100000, 1000000), random.randint(1, 100) )\\n            pageAttributes.put(\"consent_request\", consentRequest)\\n            return True\\n\\n        return True\\n\\n    def getStepsCount(self, context):\\n        return 11\\n\\n    def getPageForStep(self, step, context):\\n        if step == 1:\\n            return \"/authz/authorize.xhtml\"\\n        elif step == 2:\\n            return \"/authz/transaction.xhtml\"\\n\\n        return \"\"\\n'], 'jansScrTyp': ['consent_gathering'], 'objectClass': ['top', 'jansCustomScr'], 'jansEnabled': ['false'], 'jansProgLng': ['python']} 11:35:29 06/21/21 Querying LDAP for dn inum=8AF7.D82A,ou=scripts,o=jans 11:35:29 06/21/21 Adding LDAP dn:inum=8AF7.D82A,ou=scripts,o=jans entry:{'displayName': ['persistence_extension'], 'inum': ['8AF7.D82A'], 'jansLevel': ['100'], 'jansModuleProperty': ['{\"value1\":\"location_type\",\"value2\":\"ldap\",\"description\":\"\"}'], 'jansRevision': ['1'], 'jansScr': ['# oxAuth is available under the MIT License (2008). See http://opensource.org/licenses/MIT for full text.\\n# Copyright (c) 2020, Janssen\\n#\\n# Author: Yuriy Movchan\\n#\\n\\nfrom io.jans.service.cdi.util import CdiUtil\\nfrom io.jans.model.custom.script.type.persistence import PersistenceType\\nfrom io.jans.util import StringHelper\\nfrom io.jans.persist.operation.auth import PasswordEncryptionHelper\\nfrom io.jans.persist.operation.auth import PasswordEncryptionMethod\\n\\nimport java\\n\\nclass PersistenceExtension(PersistenceType):\\n\\n    def init(self, currentTimeMillis):\\n        self.currentTimeMillis = currentTimeMillis\\n\\n    def init(self, customScript, configurationAttributes):\\n        print \"Persistence extension. Initialization\"\\n        return True\\n\\n    def destroy(self, configurationAttributes):\\n        print \"Persistence extension. Destroy\"\\n        return True\\n\\n    def getApiVersion(self):\\n        return 11\\n\\n    def onAfterCreate(self, context, configurationAttributes):\\n        print \"Persistence extension. Method: onAfterCreate\"\\n\\n    def onAfterDestroy(self, context, configurationAttributes):\\n        print \"Persistence extension. Method: onAfterDestroy\"\\n\\n    def createHashedPassword(self, credential):\\n        print \"Persistence extension. Method: createHashedPassword\"\\n\\n        hashed_password= PasswordEncryptionHelper.createStoragePassword(credential, PasswordEncryptionMethod.HASH_METHOD_PKCS5S2)\\n\\n        return hashed_password\\n\\n    def compareHashedPasswords(self, credential, storedCredential):\\n        print \"Persistence extension. Method: compareHashedPasswords\"\\n        \\n        auth_result = PasswordEncryptionHelper.compareCredentials(credential, storedCredential)\\n\\n        return auth_result \\n'], 'jansScrTyp': ['persistence_extension'], 'objectClass': ['top', 'jansCustomScr'], 'jansEnabled': ['false'], 'jansProgLng': ['python']} 11:35:29 06/21/21 Querying LDAP for dn inum=8AF7.D82B,ou=scripts,o=jans 11:35:29 06/21/21 Adding LDAP dn:inum=8AF7.D82B,ou=scripts,o=jans entry:{'displayName': ['idp'], 'inum': ['8AF7.D82B'], 'jansLevel': ['100'], 'jansModuleProperty': ['{\"value1\":\"location_type\",\"value2\":\"ldap\",\"description\":\"\"}'], 'jansRevision': ['1'], 'jansScr': ['# oxShibboleth is available under the MIT License (2008). See http://opensource.org/licenses/MIT for full text.\\n# Copyright (c) 2020, Janssen\\n#\\n# Author: Yuriy Movchan\\n#\\n\\nfrom io.jans.model.custom.script.type.idp import IdpType\\nfrom io.jans.util import StringHelper\\nfrom io.jans.idp.externalauth import AuthenticatedNameTranslator\\nfrom net.shibboleth.idp.authn.principal import UsernamePrincipal, IdPAttributePrincipal\\nfrom net.shibboleth.idp.authn import ExternalAuthentication\\nfrom net.shibboleth.idp.attribute import IdPAttribute, StringAttributeValue\\nfrom net.shibboleth.idp.authn.context import AuthenticationContext, ExternalAuthenticationContext\\nfrom net.shibboleth.idp.attribute.context import AttributeContext\\nfrom javax.security.auth import Subject\\nfrom java.util import Collections, HashMap, HashSet, ArrayList, Arrays\\n\\nimport java\\n\\nclass IdpExtension(IdpType):\\n\\n    def init(self, currentTimeMillis):\\n        self.currentTimeMillis = currentTimeMillis\\n\\n    def init(self, customScript, configurationAttributes):\\n        print \"Idp extension. Initialization\"\\n        \\n        self.defaultNameTranslator = AuthenticatedNameTranslator()\\n        \\n        return True\\n\\n    def destroy(self, configurationAttributes):\\n        print \"Idp extension. Destroy\"\\n        return True\\n\\n    def getApiVersion(self):\\n        return 11\\n\\n    # Translate attributes from user profile\\n    #   context is io.jans.idp.externalauth.TranslateAttributesContext (https://github.com/JanssenFederation/shib-oxauth-authn3/blob/master/src/main/java/io.jans.idp/externalauth/TranslateAttributesContext.java)\\n    #   configurationAttributes is java.util.Map\\n    def translateAttributes(self, context, configurationAttributes):\\n        print \"Idp extension. Method: translateAttributes\"\\n        \\n        # Return False to use default method\\n        #return False\\n        \\n        request = context.getRequest()\\n        userProfile = context.getUserProfile()\\n        principalAttributes = self.defaultNameTranslator.produceIdpAttributePrincipal(userProfile.getAttributes())\\n        print \"Idp extension. Converted user profile: \\'%s\\' to attribute principal: \\'%s\\'\" % (userProfile, principalAttributes)\\n\\n        if not principalAttributes.isEmpty():\\n            print \"Idp extension. Found attributes from oxAuth. Processing...\"\\n            \\n            # Start: Custom part\\n            # Add givenName attribute\\n            givenNameAttribute = IdPAttribute(\"jansEnrollmentCode\")\\n            givenNameAttribute.setValues(ArrayList(Arrays.asList(StringAttributeValue(\"Dummy\"))))\\n            principalAttributes.add(IdPAttributePrincipal(givenNameAttribute))\\n            print \"Idp extension. Updated attribute principal: \\'%s\\'\" % principalAttributes\\n            # End: Custom part\\n\\n            principals = HashSet()\\n            principals.addAll(principalAttributes)\\n            principals.add(UsernamePrincipal(userProfile.getId()))\\n\\n            request.setAttribute(ExternalAuthentication.SUBJECT_KEY, Subject(False, Collections.singleton(principals),\\n                Collections.emptySet(), Collections.emptySet()))\\n\\n            print \"Created an IdP subject instance with principals containing attributes for: \\'%s\\'\" % userProfile.getId()\\n\\n            if False:\\n                idpAttributes = ArrayList()\\n                for principalAttribute in principalAttributes:\\n                    idpAttributes.add(principalAttribute.getAttribute())\\n    \\n                request.setAttribute(ExternalAuthentication.ATTRIBUTES_KEY, idpAttributes)\\n    \\n                authenticationKey = context.getAuthenticationKey()\\n                profileRequestContext = ExternalAuthentication.getProfileRequestContext(authenticationKey, request)\\n                authContext = profileRequestContext.getSubcontext(AuthenticationContext)\\n                extContext = authContext.getSubcontext(ExternalAuthenticationContext)\\n    \\n                extContext.setSubject(Subject(False, Collections.singleton(principals), Collections.emptySet(), Collections.emptySet()));\\n    \\n                extContext.getSubcontext(AttributeContext, True).setUnfilteredIdPAttributes(idpAttributes)\\n                extContext.getSubcontext(AttributeContext).setIdPAttributes(idpAttributes)\\n        else:\\n            print \"No attributes released from oxAuth. Creating an IdP principal for: \\'%s\\'\" % userProfile.getId()\\n            request.setAttribute(ExternalAuthentication.PRINCIPAL_NAME_KEY, userProfile.getId())\\n\\n        #Return True to specify that default method is not needed\\n        return False\\n\\n    # Update attributes before releasing them\\n    #   context is io.jans.idp.consent.processor.PostProcessAttributesContext (https://github.com/JanssenFederation/shib-oxauth-authn3/blob/master/src/main/java/io.jans.idp/consent/processor/PostProcessAttributesContext.java)\\n    #   configurationAttributes is java.util.Map\\n    def updateAttributes(self, context, configurationAttributes):\\n        print \"Idp extension. Method: updateAttributes\"\\n        attributeContext = context.getAttributeContext()\\n\\n        customAttributes = HashMap()\\n        customAttributes.putAll(attributeContext.getIdPAttributes())\\n\\n        # Remove givenName attribute\\n        customAttributes.remove(\"givenName\")\\n\\n        # Update surname attribute\\n        if customAttributes.containsKey(\"sn\"):\\n            customAttributes.get(\"sn\").setValues(ArrayList(Arrays.asList(StringAttributeValue(\"Dummy\"))))\\n        \\n        # Set updated attributes\\n        attributeContext.setIdPAttributes(customAttributes.values())\\n\\n        return True\\n'], 'jansScrTyp': ['idp'], 'objectClass': ['top', 'jansCustomScr'], 'jansEnabled': ['false'], 'jansProgLng': ['python']} 11:35:29 06/21/21 Querying LDAP for dn inum=2D3E.5A03,ou=scripts,o=jans 11:35:29 06/21/21 Adding LDAP dn:inum=2D3E.5A03,ou=scripts,o=jans entry:{'objectClass': ['top', 'jansCustomScr'], 'description': ['Update token sample script'], 'displayName': ['update_token_sample'], 'inum': ['2D3E.5A03'], 'jansEnabled': ['false'], 'jansLevel': ['1'], 'jansModuleProperty': ['{\"value1\":\"location_type\",\"value2\":\"ldap\",\"description\":\"\"}'], 'jansRevision': ['12'], 'jansScr': ['# oxAuth is available under the MIT License (2008). See http://opensource.org/licenses/MIT for full text.\\n# Copyright (c) 2021, Gluu\\n#\\n# Author: Yuriy Movchan\\n#\\n#\\n\\nfrom io.jans.model.custom.script.type.token import UpdateTokenType\\n\\nclass UpdateToken(UpdateTokenType):\\n    def init(self, currentTimeMillis):\\n        self.currentTimeMillis = currentTimeMillis\\n\\n    def init(self, customScript, configurationAttributes):\\n        print \"Update token script. Initializing ...\"\\n        print \"Update token script. Initialized successfully\"\\n\\n        return True\\n\\n    def destroy(self, configurationAttributes):\\n        print \"Update token script. Destroying ...\"\\n        print \"Update token script. Destroyed successfully\"\\n        return True\\n\\n    def getApiVersion(self):\\n        return 11\\n\\n    # Returns boolean, true - indicates that script applied changes\\n    # This method is called after adding headers and claims. Hence script can override them\\n    # Note :\\n    # jsonWebResponse - is io.jans.as.model.token.JsonWebResponse, you can use any method to manipulate JWT\\n    # context is reference of io.jans.as.server.service.external.context.ExternalUpdateTokenContext (in https://github.com/JanssenProject/jans-auth-server project, )\\n    def modifyIdToken(self, jsonWebResponse, context):\\n        print \"Update token script. Modify idToken: %s\" % jsonWebResponse\\n\\n        jsonWebResponse.getHeader().setClaim(\"custom_header_name\", \"custom_header_value\")\\n        jsonWebResponse.getClaims().setClaim(\"custom_claim_name\", \"custom_claim_value\")\\n\\n        print \"Update token script. After modify idToken: %s\" % jsonWebResponse\\n        return True\\n'], 'jansScrTyp': ['update_token'], 'jansProgLng': ['python']} 11:35:29 06/21/21 Querying LDAP for dn inum=C1BA-C1BA,ou=scripts,o=jans 11:35:29 06/21/21 Adding LDAP dn:inum=C1BA-C1BA,ou=scripts,o=jans entry:{'description': ['Firebase notification sender'], 'displayName': ['firebase_ciba_end_user_notification'], 'inum': ['C1BA-C1BA'], 'jansLevel': ['10'], 'jansModuleProperty': ['{\"value1\":\"location_type\",\"value2\":\"ldap\",\"description\":\"\"}'], 'jansRevision': ['1'], 'jansScr': ['# oxAuth is available under the MIT License (2008). See http://opensource.org/licenses/MIT for full text.\\n# Copyright (c) 2018, Janssen\\n#\\n# Author: Milton BO\\n#\\n#\\n\\nfrom io.jans.as.client.fcm import FirebaseCloudMessagingResponse\\nfrom io.jans.as.client.fcm import FirebaseCloudMessagingClient\\nfrom io.jans.as.client.fcm import FirebaseCloudMessagingRequest\\nfrom io.jans.as.util import RedirectUri\\nfrom io.jans.model.custom.script.type.ciba import EndUserNotificationType\\nfrom java.lang import String\\nfrom java.util import UUID\\n\\nclass EndUserNotification(EndUserNotificationType):\\n    def init(self, currentTimeMillis):\\n        self.currentTimeMillis = currentTimeMillis\\n\\n    def init(self, configurationAttributes):\\n        print \"Firebase EndUserNotification script. Initializing ...\"\\n        print \"Firebase EndUserNotification script. Initialized successfully\"\\n\\n        return True\\n\\n    def destroy(self, configurationAttributes):\\n        print \"Firebase EndUserNotification script. Destroying ...\"\\n        print \"Firebase EndUserNotification script. Destroyed successfully\"\\n        return True\\n\\n    def getApiVersion(self):\\n        return 1\\n\\n    # Returns boolean true or false depending on the process, if the notification\\n    # is sent successfully or not.\\n    def notifyEndUser(self, context):\\n        print \\'Sending push notification using Firebase Cloud Messaging\\'\\n        appConfiguration = context.getAppConfiguration()\\n        encryptionService = context.getEncryptionService()\\n        clientId = appConfiguration.getBackchannelClientId()\\n        redirectUri = appConfiguration.getBackchannelRedirectUri()\\n        url = appConfiguration.getCibaEndUserNotificationConfig().getNotificationUrl()\\n        key = encryptionService.decrypt(appConfiguration.getCibaEndUserNotificationConfig().getNotificationKey(), True)\\n        to = context.getDeviceRegistrationToken()\\n        title = \"oxAuth Authentication Request\"\\n        body = \"Client Initiated Backchannel Authentication (CIBA)\"\\n\\n        authorizationRequestUri = RedirectUri(appConfiguration.getAuthorizationEndpoint())\\n        authorizationRequestUri.addResponseParameter(\"client_id\", clientId)\\n        authorizationRequestUri.addResponseParameter(\"response_type\", \"id_token\")\\n        authorizationRequestUri.addResponseParameter(\"scope\", context.getScope())\\n        authorizationRequestUri.addResponseParameter(\"acr_values\", context.getAcrValues())\\n        authorizationRequestUri.addResponseParameter(\"redirect_uri\", redirectUri)\\n        authorizationRequestUri.addResponseParameter(\"state\", UUID.randomUUID().toString())\\n        authorizationRequestUri.addResponseParameter(\"nonce\", UUID.randomUUID().toString())\\n        authorizationRequestUri.addResponseParameter(\"prompt\", \"consent\")\\n        authorizationRequestUri.addResponseParameter(\"auth_req_id\", context.getAuthReqId())\\n\\n        clickAction = authorizationRequestUri.toString()\\n\\n        firebaseCloudMessagingRequest = FirebaseCloudMessagingRequest(key, to, title, body, clickAction)\\n        firebaseCloudMessagingClient = FirebaseCloudMessagingClient(url)\\n        firebaseCloudMessagingClient.setRequest(firebaseCloudMessagingRequest)\\n        firebaseCloudMessagingResponse = firebaseCloudMessagingClient.exec()\\n\\n        responseStatus = firebaseCloudMessagingResponse.getStatus()\\n        print \"CIBA: firebase cloud messaging result status \" + str(responseStatus)\\n        return (responseStatus &gt;= 200 and responseStatus &lt; 300 )\\n\\n'], 'jansScrTyp': ['ciba_end_user_notification'], 'objectClass': ['top', 'jansCustomScr'], 'jansEnabled': ['false'], 'jansProgLng': ['python']} 11:35:29 06/21/21 Importing entries from /opt/jans/jans-setup/output/jans-auth/people.ldif 11:35:29 06/21/21 Querying LDAP for dn inum=e14aac95-476c-42a3-b2f6-5dd9da6d6c15,ou=people,o=jans 11:35:29 06/21/21 Adding LDAP dn:inum=e14aac95-476c-42a3-b2f6-5dd9da6d6c15,ou=people,o=jans entry:{'objectClass': ['top', 'jansCustomPerson', 'jansPerson'], 'inum': ['e14aac95-476c-42a3-b2f6-5dd9da6d6c15'], 'uid': ['admin'], 'givenName': ['Admin'], 'middleName': ['Admin'], 'nickname': ['Admin'], 'sn': ['User'], 'userPassword': ['{SSHA}c0k4gZ2w+ANBu6guaojYfV+CV0N1v/08'], 'jansStatus': ['active'], 'memberOf': ['inum=60B7,ou=groups,o=jans'], 'displayName': ['Default Admin User'], 'mail': ['admin@test.dd.jans.io'], 'emailVerified': ['true']} 11:35:29 06/21/21 Importing entries from /opt/jans/jans-setup/output/jans-auth/groups.ldif 11:35:29 06/21/21 Querying LDAP for dn inum=60B7,ou=groups,o=jans 11:35:29 06/21/21 Adding LDAP dn:inum=60B7,ou=groups,o=jans entry:{'objectClass': ['top', 'jansGrp'], 'inum': ['60B7'], 'jansStatus': ['active'], 'displayName': ['Jannsen Manager Group'], 'description': ['This group is for administrative purpose, with full acces to users'], 'member': ['inum=e14aac95-476c-42a3-b2f6-5dd9da6d6c15,ou=people,o=jans']} 11:35:29 06/21/21 Installing Jans-Config-Api 11:35:29 06/21/21 Bind to database 11:35:29 06/21/21 Created dir: /opt/jans/jans-config-api 11:35:29 06/21/21 Created dir: /opt/jans/jans-config-api/config 11:35:29 06/21/21 Created dir: /opt/jans/jans-config-api/logs 11:35:29 06/21/21 Created dir: /opt/jans/jans-setup/output/jans-config-api 11:35:29 06/21/21 Running: /bin/chown -R jetty:jetty /opt/jans/jans-config-api 11:35:29 06/21/21 Copying file /opt/jans/jans-setup/static/system/systemd/jans-config-api.service to /etc/systemd/system 11:35:29 06/21/21 Copied /opt/jans/jans-setup/static/system/systemd/jans-config-api.service to /etc/systemd/system 11:35:29 06/21/21 Copying file /opt/dist/jans/jans-config-api-runner.jar to /opt/jans/jans-config-api 11:35:29 06/21/21 Copied /opt/dist/jans/jans-config-api-runner.jar to /opt/jans/jans-config-api 11:35:29 06/21/21 Copying file /opt/jans/jans-setup/static/system/initd/jans-config-api to /opt/dist/scripts 11:35:29 06/21/21 Copied /opt/jans/jans-setup/static/system/initd/jans-config-api to /opt/dist/scripts 11:35:29 06/21/21 Running: /bin/chmod +x /opt/dist/scripts/jans-config-api 11:35:29 06/21/21 Running: /usr/bin/systemctl enable jans-config-api 11:35:29 06/21/21 Run: /usr/bin/systemctl enable jans-config-api with result code: 0 11:35:29 06/21/21 Reading file /opt/jans/jans-setup/setup_app/data/jans-config-api-swagger.yaml 11:35:30 06/21/21 Checking ID for client jca_client_id 11:35:30 06/21/21 Searching database for dn ou=clients,o=jans with filter (&amp;(inum=1801.)(objectClass=jansClnt)) 11:35:30 06/21/21 Client ID for jca_client_id was created as 1801.0e9613e2-804e-487b-9696-84bb8045b895 11:35:30 06/21/21 Rendering template /opt/jans/jans-setup/templates/jans-config-api/application.properties 11:35:30 06/21/21 Reading file /opt/jans/jans-setup/templates/jans-config-api/application.properties 11:35:30 06/21/21 Writing file /opt/jans/jans-setup/output/jans-config-api/application.properties 11:35:30 06/21/21 Copying file /opt/jans/jans-setup/output/jans-config-api/application.properties to /opt/jans/jans-config-api/config 11:35:30 06/21/21 Copied /opt/jans/jans-setup/output/jans-config-api/application.properties to /opt/jans/jans-config-api/config 11:35:30 06/21/21 Importing ldif file(s): /opt/jans/jans-setup/output/jans-config-api/scopes.ldif, /opt/jans/jans-setup/output/jans-config-api/clients.ldif  11:35:30 06/21/21 Importing entries from /opt/jans/jans-setup/output/jans-config-api/scopes.ldif 11:35:30 06/21/21 Querying LDAP for dn inum=1800.71CF52,ou=scopes,o=jans 11:35:30 06/21/21 Adding LDAP dn:inum=1800.71CF52,ou=scopes,o=jans entry:{'description': ['View Auth Server properties related information'], 'displayName': ['Config API scope https://jans.io/oauth/jans-auth-server/config/properties.readonly'], 'inum': ['1800.71CF52'], 'jansAttrs': ['{\"spontaneousClientId\": null, \"spontaneousClientScopes\": [], \"showInConfigurationEndpoint\": false}'], 'jansDefScope': ['false'], 'jansId': ['https://jans.io/oauth/jans-auth-server/config/properties.readonly'], 'jansScopeTyp': ['oauth2'], 'objectclass': ['top', 'jansScope']} 11:35:30 06/21/21 Querying LDAP for dn inum=1800.23F516,ou=scopes,o=jans 11:35:30 06/21/21 Adding LDAP dn:inum=1800.23F516,ou=scopes,o=jans entry:{'description': ['Manage Auth Server properties related information'], 'displayName': ['Config API scope https://jans.io/oauth/jans-auth-server/config/properties.write'], 'inum': ['1800.23F516'], 'jansAttrs': ['{\"spontaneousClientId\": null, \"spontaneousClientScopes\": [], \"showInConfigurationEndpoint\": false}'], 'jansDefScope': ['false'], 'jansId': ['https://jans.io/oauth/jans-auth-server/config/properties.write'], 'jansScopeTyp': ['oauth2'], 'objectclass': ['top', 'jansScope']} 11:35:30 06/21/21 Querying LDAP for dn inum=1800.B1125F,ou=scopes,o=jans 11:35:30 06/21/21 Adding LDAP dn:inum=1800.B1125F,ou=scopes,o=jans entry:{'description': ['View FIDO2 related information'], 'displayName': ['Config API scope https://jans.io/oauth/config/fido2.readonly'], 'inum': ['1800.B1125F'], 'jansAttrs': ['{\"spontaneousClientId\": null, \"spontaneousClientScopes\": [], \"showInConfigurationEndpoint\": false}'], 'jansDefScope': ['false'], 'jansId': ['https://jans.io/oauth/config/fido2.readonly'], 'jansScopeTyp': ['oauth2'], 'objectclass': ['top', 'jansScope']} 11:35:30 06/21/21 Querying LDAP for dn inum=1800.02C5BE,ou=scopes,o=jans 11:35:30 06/21/21 Adding LDAP dn:inum=1800.02C5BE,ou=scopes,o=jans entry:{'description': ['Manage FIDO2 related information'], 'displayName': ['Config API scope https://jans.io/oauth/config/fido2.write'], 'inum': ['1800.02C5BE'], 'jansAttrs': ['{\"spontaneousClientId\": null, \"spontaneousClientScopes\": [], \"showInConfigurationEndpoint\": false}'], 'jansDefScope': ['false'], 'jansId': ['https://jans.io/oauth/config/fido2.write'], 'jansScopeTyp': ['oauth2'], 'objectclass': ['top', 'jansScope']} 11:35:30 06/21/21 Querying LDAP for dn inum=1800.CC7D1C,ou=scopes,o=jans 11:35:30 06/21/21 Adding LDAP dn:inum=1800.CC7D1C,ou=scopes,o=jans entry:{'description': ['View attribute related information'], 'displayName': ['Config API scope https://jans.io/oauth/config/attributes.readonly'], 'inum': ['1800.CC7D1C'], 'jansAttrs': ['{\"spontaneousClientId\": null, \"spontaneousClientScopes\": [], \"showInConfigurationEndpoint\": false}'], 'jansDefScope': ['false'], 'jansId': ['https://jans.io/oauth/config/attributes.readonly'], 'jansScopeTyp': ['oauth2'], 'objectclass': ['top', 'jansScope']} 11:35:30 06/21/21 Querying LDAP for dn inum=1800.5D52F6,ou=scopes,o=jans 11:35:30 06/21/21 Adding LDAP dn:inum=1800.5D52F6,ou=scopes,o=jans entry:{'description': ['Manage attribute related information'], 'displayName': ['Config API scope https://jans.io/oauth/config/attributes.write'], 'inum': ['1800.5D52F6'], 'jansAttrs': ['{\"spontaneousClientId\": null, \"spontaneousClientScopes\": [], \"showInConfigurationEndpoint\": false}'], 'jansDefScope': ['false'], 'jansId': ['https://jans.io/oauth/config/attributes.write'], 'jansScopeTyp': ['oauth2'], 'objectclass': ['top', 'jansScope']} 11:35:30 06/21/21 Querying LDAP for dn inum=1800.3F631C,ou=scopes,o=jans 11:35:30 06/21/21 Adding LDAP dn:inum=1800.3F631C,ou=scopes,o=jans entry:{'description': ['Delete attribute related information'], 'displayName': ['Config API scope https://jans.io/oauth/config/attributes.delete'], 'inum': ['1800.3F631C'], 'jansAttrs': ['{\"spontaneousClientId\": null, \"spontaneousClientScopes\": [], \"showInConfigurationEndpoint\": false}'], 'jansDefScope': ['false'], 'jansId': ['https://jans.io/oauth/config/attributes.delete'], 'jansScopeTyp': ['oauth2'], 'objectclass': ['top', 'jansScope']} 11:35:30 06/21/21 Querying LDAP for dn inum=1800.576FA9,ou=scopes,o=jans 11:35:30 06/21/21 Adding LDAP dn:inum=1800.576FA9,ou=scopes,o=jans entry:{'description': ['View ACRS related information'], 'displayName': ['Config API scope https://jans.io/oauth/config/acrs.readonly'], 'inum': ['1800.576FA9'], 'jansAttrs': ['{\"spontaneousClientId\": null, \"spontaneousClientScopes\": [], \"showInConfigurationEndpoint\": false}'], 'jansDefScope': ['false'], 'jansId': ['https://jans.io/oauth/config/acrs.readonly'], 'jansScopeTyp': ['oauth2'], 'objectclass': ['top', 'jansScope']} 11:35:30 06/21/21 Querying LDAP for dn inum=1800.14906B,ou=scopes,o=jans 11:35:30 06/21/21 Adding LDAP dn:inum=1800.14906B,ou=scopes,o=jans entry:{'description': ['Manage ACRS related information'], 'displayName': ['Config API scope https://jans.io/oauth/config/acrs.write'], 'inum': ['1800.14906B'], 'jansAttrs': ['{\"spontaneousClientId\": null, \"spontaneousClientScopes\": [], \"showInConfigurationEndpoint\": false}'], 'jansDefScope': ['false'], 'jansId': ['https://jans.io/oauth/config/acrs.write'], 'jansScopeTyp': ['oauth2'], 'objectclass': ['top', 'jansScope']} 11:35:30 06/21/21 Querying LDAP for dn inum=1800.78E26D,ou=scopes,o=jans 11:35:30 06/21/21 Adding LDAP dn:inum=1800.78E26D,ou=scopes,o=jans entry:{'description': ['View LDAP database related information'], 'displayName': ['Config API scope https://jans.io/oauth/config/database/ldap.readonly'], 'inum': ['1800.78E26D'], 'jansAttrs': ['{\"spontaneousClientId\": null, \"spontaneousClientScopes\": [], \"showInConfigurationEndpoint\": false}'], 'jansDefScope': ['false'], 'jansId': ['https://jans.io/oauth/config/database/ldap.readonly'], 'jansScopeTyp': ['oauth2'], 'objectclass': ['top', 'jansScope']} 11:35:30 06/21/21 Querying LDAP for dn inum=1800.0A40B5,ou=scopes,o=jans 11:35:30 06/21/21 Adding LDAP dn:inum=1800.0A40B5,ou=scopes,o=jans entry:{'description': ['Manage LDAP database related information'], 'displayName': ['Config API scope https://jans.io/oauth/config/database/ldap.write'], 'inum': ['1800.0A40B5'], 'jansAttrs': ['{\"spontaneousClientId\": null, \"spontaneousClientScopes\": [], \"showInConfigurationEndpoint\": false}'], 'jansDefScope': ['false'], 'jansId': ['https://jans.io/oauth/config/database/ldap.write'], 'jansScopeTyp': ['oauth2'], 'objectclass': ['top', 'jansScope']} 11:35:30 06/21/21 Querying LDAP for dn inum=1800.36E9E2,ou=scopes,o=jans 11:35:30 06/21/21 Adding LDAP dn:inum=1800.36E9E2,ou=scopes,o=jans entry:{'description': ['Delete LDAP database related information'], 'displayName': ['Config API scope https://jans.io/oauth/config/database/ldap.delete'], 'inum': ['1800.36E9E2'], 'jansAttrs': ['{\"spontaneousClientId\": null, \"spontaneousClientScopes\": [], \"showInConfigurationEndpoint\": false}'], 'jansDefScope': ['false'], 'jansId': ['https://jans.io/oauth/config/database/ldap.delete'], 'jansScopeTyp': ['oauth2'], 'objectclass': ['top', 'jansScope']} 11:35:30 06/21/21 Querying LDAP for dn inum=1800.7434DD,ou=scopes,o=jans 11:35:30 06/21/21 Adding LDAP dn:inum=1800.7434DD,ou=scopes,o=jans entry:{'description': ['View Couchbase database information'], 'displayName': ['Config API scope https://jans.io/oauth/config/database/couchbase.readonly'], 'inum': ['1800.7434DD'], 'jansAttrs': ['{\"spontaneousClientId\": null, \"spontaneousClientScopes\": [], \"showInConfigurationEndpoint\": false}'], 'jansDefScope': ['false'], 'jansId': ['https://jans.io/oauth/config/database/couchbase.readonly'], 'jansScopeTyp': ['oauth2'], 'objectclass': ['top', 'jansScope']} 11:35:30 06/21/21 Querying LDAP for dn inum=1800.CCB907,ou=scopes,o=jans 11:35:30 06/21/21 Adding LDAP dn:inum=1800.CCB907,ou=scopes,o=jans entry:{'description': ['Manage Couchbase database related information'], 'displayName': ['Config API scope https://jans.io/oauth/config/database/couchbase.write'], 'inum': ['1800.CCB907'], 'jansAttrs': ['{\"spontaneousClientId\": null, \"spontaneousClientScopes\": [], \"showInConfigurationEndpoint\": false}'], 'jansDefScope': ['false'], 'jansId': ['https://jans.io/oauth/config/database/couchbase.write'], 'jansScopeTyp': ['oauth2'], 'objectclass': ['top', 'jansScope']} 11:35:30 06/21/21 Querying LDAP for dn inum=1800.36EA8D,ou=scopes,o=jans 11:35:30 06/21/21 Adding LDAP dn:inum=1800.36EA8D,ou=scopes,o=jans entry:{'description': ['Delete Couchbase database related information'], 'displayName': ['Config API scope https://jans.io/oauth/config/database/couchbase.delete'], 'inum': ['1800.36EA8D'], 'jansAttrs': ['{\"spontaneousClientId\": null, \"spontaneousClientScopes\": [], \"showInConfigurationEndpoint\": false}'], 'jansDefScope': ['false'], 'jansId': ['https://jans.io/oauth/config/database/couchbase.delete'], 'jansScopeTyp': ['oauth2'], 'objectclass': ['top', 'jansScope']} 11:35:30 06/21/21 Querying LDAP for dn inum=1800.6E4537,ou=scopes,o=jans 11:35:30 06/21/21 Adding LDAP dn:inum=1800.6E4537,ou=scopes,o=jans entry:{'description': ['View cache scripts information'], 'displayName': ['Config API scope https://jans.io/oauth/config/scripts.readonly'], 'inum': ['1800.6E4537'], 'jansAttrs': ['{\"spontaneousClientId\": null, \"spontaneousClientScopes\": [], \"showInConfigurationEndpoint\": false}'], 'jansDefScope': ['false'], 'jansId': ['https://jans.io/oauth/config/scripts.readonly'], 'jansScopeTyp': ['oauth2'], 'objectclass': ['top', 'jansScope']} 11:35:30 06/21/21 Querying LDAP for dn inum=1800.6EAFBC,ou=scopes,o=jans 11:35:30 06/21/21 Adding LDAP dn:inum=1800.6EAFBC,ou=scopes,o=jans entry:{'description': ['Manage scripts related information'], 'displayName': ['Config API scope https://jans.io/oauth/config/scripts.write'], 'inum': ['1800.6EAFBC'], 'jansAttrs': ['{\"spontaneousClientId\": null, \"spontaneousClientScopes\": [], \"showInConfigurationEndpoint\": false}'], 'jansDefScope': ['false'], 'jansId': ['https://jans.io/oauth/config/scripts.write'], 'jansScopeTyp': ['oauth2'], 'objectclass': ['top', 'jansScope']} 11:35:30 06/21/21 Querying LDAP for dn inum=1800.4D6C46,ou=scopes,o=jans 11:35:30 06/21/21 Adding LDAP dn:inum=1800.4D6C46,ou=scopes,o=jans entry:{'description': ['Delete scripts related information'], 'displayName': ['Config API scope https://jans.io/oauth/config/scripts.delete'], 'inum': ['1800.4D6C46'], 'jansAttrs': ['{\"spontaneousClientId\": null, \"spontaneousClientScopes\": [], \"showInConfigurationEndpoint\": false}'], 'jansDefScope': ['false'], 'jansId': ['https://jans.io/oauth/config/scripts.delete'], 'jansScopeTyp': ['oauth2'], 'objectclass': ['top', 'jansScope']} 11:35:30 06/21/21 Querying LDAP for dn inum=1800.160ED7,ou=scopes,o=jans 11:35:30 06/21/21 Adding LDAP dn:inum=1800.160ED7,ou=scopes,o=jans entry:{'description': ['View cache related information'], 'displayName': ['Config API scope https://jans.io/oauth/config/cache.readonly'], 'inum': ['1800.160ED7'], 'jansAttrs': ['{\"spontaneousClientId\": null, \"spontaneousClientScopes\": [], \"showInConfigurationEndpoint\": false}'], 'jansDefScope': ['false'], 'jansId': ['https://jans.io/oauth/config/cache.readonly'], 'jansScopeTyp': ['oauth2'], 'objectclass': ['top', 'jansScope']} 11:35:30 06/21/21 Querying LDAP for dn inum=1800.70AEDC,ou=scopes,o=jans 11:35:30 06/21/21 Adding LDAP dn:inum=1800.70AEDC,ou=scopes,o=jans entry:{'description': ['Manage cache related information'], 'displayName': ['Config API scope https://jans.io/oauth/config/cache.write'], 'inum': ['1800.70AEDC'], 'jansAttrs': ['{\"spontaneousClientId\": null, \"spontaneousClientScopes\": [], \"showInConfigurationEndpoint\": false}'], 'jansDefScope': ['false'], 'jansId': ['https://jans.io/oauth/config/cache.write'], 'jansScopeTyp': ['oauth2'], 'objectclass': ['top', 'jansScope']} 11:35:30 06/21/21 Querying LDAP for dn inum=1800.BF6E92,ou=scopes,o=jans 11:35:30 06/21/21 Adding LDAP dn:inum=1800.BF6E92,ou=scopes,o=jans entry:{'description': ['View SMTP related information'], 'displayName': ['Config API scope https://jans.io/oauth/config/smtp.readonly'], 'inum': ['1800.BF6E92'], 'jansAttrs': ['{\"spontaneousClientId\": null, \"spontaneousClientScopes\": [], \"showInConfigurationEndpoint\": false}'], 'jansDefScope': ['false'], 'jansId': ['https://jans.io/oauth/config/smtp.readonly'], 'jansScopeTyp': ['oauth2'], 'objectclass': ['top', 'jansScope']} 11:35:30 06/21/21 Querying LDAP for dn inum=1800.DE2CE9,ou=scopes,o=jans 11:35:30 06/21/21 Adding LDAP dn:inum=1800.DE2CE9,ou=scopes,o=jans entry:{'description': ['Manage SMTP related information'], 'displayName': ['Config API scope https://jans.io/oauth/config/smtp.write'], 'inum': ['1800.DE2CE9'], 'jansAttrs': ['{\"spontaneousClientId\": null, \"spontaneousClientScopes\": [], \"showInConfigurationEndpoint\": false}'], 'jansDefScope': ['false'], 'jansId': ['https://jans.io/oauth/config/smtp.write'], 'jansScopeTyp': ['oauth2'], 'objectclass': ['top', 'jansScope']} 11:35:30 06/21/21 Querying LDAP for dn inum=1800.AA88E9,ou=scopes,o=jans 11:35:30 06/21/21 Adding LDAP dn:inum=1800.AA88E9,ou=scopes,o=jans entry:{'description': ['Delete SMTP related information'], 'displayName': ['Config API scope https://jans.io/oauth/config/smtp.delete'], 'inum': ['1800.AA88E9'], 'jansAttrs': ['{\"spontaneousClientId\": null, \"spontaneousClientScopes\": [], \"showInConfigurationEndpoint\": false}'], 'jansDefScope': ['false'], 'jansId': ['https://jans.io/oauth/config/smtp.delete'], 'jansScopeTyp': ['oauth2'], 'objectclass': ['top', 'jansScope']} 11:35:30 06/21/21 Querying LDAP for dn inum=1800.0384AD,ou=scopes,o=jans 11:35:30 06/21/21 Adding LDAP dn:inum=1800.0384AD,ou=scopes,o=jans entry:{'description': ['View logging related information'], 'displayName': ['Config API scope https://jans.io/oauth/config/logging.readonly'], 'inum': ['1800.0384AD'], 'jansAttrs': ['{\"spontaneousClientId\": null, \"spontaneousClientScopes\": [], \"showInConfigurationEndpoint\": false}'], 'jansDefScope': ['false'], 'jansId': ['https://jans.io/oauth/config/logging.readonly'], 'jansScopeTyp': ['oauth2'], 'objectclass': ['top', 'jansScope']} 11:35:30 06/21/21 Querying LDAP for dn inum=1800.F1A6B9,ou=scopes,o=jans 11:35:30 06/21/21 Adding LDAP dn:inum=1800.F1A6B9,ou=scopes,o=jans entry:{'description': ['Manage logging related information'], 'displayName': ['Config API scope https://jans.io/oauth/config/logging.write'], 'inum': ['1800.F1A6B9'], 'jansAttrs': ['{\"spontaneousClientId\": null, \"spontaneousClientScopes\": [], \"showInConfigurationEndpoint\": false}'], 'jansDefScope': ['false'], 'jansId': ['https://jans.io/oauth/config/logging.write'], 'jansScopeTyp': ['oauth2'], 'objectclass': ['top', 'jansScope']} 11:35:30 06/21/21 Querying LDAP for dn inum=1800.0A9979,ou=scopes,o=jans 11:35:30 06/21/21 Adding LDAP dn:inum=1800.0A9979,ou=scopes,o=jans entry:{'description': ['View JWKS related information'], 'displayName': ['Config API scope https://jans.io/oauth/config/jwks.readonly'], 'inum': ['1800.0A9979'], 'jansAttrs': ['{\"spontaneousClientId\": null, \"spontaneousClientScopes\": [], \"showInConfigurationEndpoint\": false}'], 'jansDefScope': ['false'], 'jansId': ['https://jans.io/oauth/config/jwks.readonly'], 'jansScopeTyp': ['oauth2'], 'objectclass': ['top', 'jansScope']} 11:35:30 06/21/21 Querying LDAP for dn inum=1800.AFE86F,ou=scopes,o=jans 11:35:30 06/21/21 Adding LDAP dn:inum=1800.AFE86F,ou=scopes,o=jans entry:{'description': ['Manage JWKS related information'], 'displayName': ['Config API scope https://jans.io/oauth/config/jwks.write'], 'inum': ['1800.AFE86F'], 'jansAttrs': ['{\"spontaneousClientId\": null, \"spontaneousClientScopes\": [], \"showInConfigurationEndpoint\": false}'], 'jansDefScope': ['false'], 'jansId': ['https://jans.io/oauth/config/jwks.write'], 'jansScopeTyp': ['oauth2'], 'objectclass': ['top', 'jansScope']} 11:35:30 06/21/21 Querying LDAP for dn inum=1800.EFB0CC,ou=scopes,o=jans 11:35:30 06/21/21 Adding LDAP dn:inum=1800.EFB0CC,ou=scopes,o=jans entry:{'description': ['View clients related information'], 'displayName': ['Config API scope https://jans.io/oauth/config/openid/clients.readonly'], 'inum': ['1800.EFB0CC'], 'jansAttrs': ['{\"spontaneousClientId\": null, \"spontaneousClientScopes\": [], \"showInConfigurationEndpoint\": false}'], 'jansDefScope': ['false'], 'jansId': ['https://jans.io/oauth/config/openid/clients.readonly'], 'jansScopeTyp': ['oauth2'], 'objectclass': ['top', 'jansScope']} 11:35:30 06/21/21 Querying LDAP for dn inum=1800.B61F69,ou=scopes,o=jans 11:35:30 06/21/21 Adding LDAP dn:inum=1800.B61F69,ou=scopes,o=jans entry:{'description': ['Manage clients related information'], 'displayName': ['Config API scope https://jans.io/oauth/config/openid/clients.write'], 'inum': ['1800.B61F69'], 'jansAttrs': ['{\"spontaneousClientId\": null, \"spontaneousClientScopes\": [], \"showInConfigurationEndpoint\": false}'], 'jansDefScope': ['false'], 'jansId': ['https://jans.io/oauth/config/openid/clients.write'], 'jansScopeTyp': ['oauth2'], 'objectclass': ['top', 'jansScope']} 11:35:30 06/21/21 Querying LDAP for dn inum=1800.5E824B,ou=scopes,o=jans 11:35:30 06/21/21 Adding LDAP dn:inum=1800.5E824B,ou=scopes,o=jans entry:{'description': ['Delete clients related information'], 'displayName': ['Config API scope https://jans.io/oauth/config/openid/clients.delete'], 'inum': ['1800.5E824B'], 'jansAttrs': ['{\"spontaneousClientId\": null, \"spontaneousClientScopes\": [], \"showInConfigurationEndpoint\": false}'], 'jansDefScope': ['false'], 'jansId': ['https://jans.io/oauth/config/openid/clients.delete'], 'jansScopeTyp': ['oauth2'], 'objectclass': ['top', 'jansScope']} 11:35:31 06/21/21 Querying LDAP for dn inum=1800.EF8727,ou=scopes,o=jans 11:35:31 06/21/21 Adding LDAP dn:inum=1800.EF8727,ou=scopes,o=jans entry:{'description': ['View scope related information'], 'displayName': ['Config API scope https://jans.io/oauth/config/scopes.readonly'], 'inum': ['1800.EF8727'], 'jansAttrs': ['{\"spontaneousClientId\": null, \"spontaneousClientScopes\": [], \"showInConfigurationEndpoint\": false}'], 'jansDefScope': ['false'], 'jansId': ['https://jans.io/oauth/config/scopes.readonly'], 'jansScopeTyp': ['oauth2'], 'objectclass': ['top', 'jansScope']} 11:35:31 06/21/21 Querying LDAP for dn inum=1800.E489B8,ou=scopes,o=jans 11:35:31 06/21/21 Adding LDAP dn:inum=1800.E489B8,ou=scopes,o=jans entry:{'description': ['Manage scope related information'], 'displayName': ['Config API scope https://jans.io/oauth/config/scopes.write'], 'inum': ['1800.E489B8'], 'jansAttrs': ['{\"spontaneousClientId\": null, \"spontaneousClientScopes\": [], \"showInConfigurationEndpoint\": false}'], 'jansDefScope': ['false'], 'jansId': ['https://jans.io/oauth/config/scopes.write'], 'jansScopeTyp': ['oauth2'], 'objectclass': ['top', 'jansScope']} 11:35:31 06/21/21 Querying LDAP for dn inum=1800.610BA5,ou=scopes,o=jans 11:35:31 06/21/21 Adding LDAP dn:inum=1800.610BA5,ou=scopes,o=jans entry:{'description': ['Delete scope related information'], 'displayName': ['Config API scope https://jans.io/oauth/config/scopes.delete'], 'inum': ['1800.610BA5'], 'jansAttrs': ['{\"spontaneousClientId\": null, \"spontaneousClientScopes\": [], \"showInConfigurationEndpoint\": false}'], 'jansDefScope': ['false'], 'jansId': ['https://jans.io/oauth/config/scopes.delete'], 'jansScopeTyp': ['oauth2'], 'objectclass': ['top', 'jansScope']} 11:35:31 06/21/21 Querying LDAP for dn inum=1800.6731FB,ou=scopes,o=jans 11:35:31 06/21/21 Adding LDAP dn:inum=1800.6731FB,ou=scopes,o=jans entry:{'description': ['View UMA Resource related information'], 'displayName': ['Config API scope https://jans.io/oauth/config/uma/resources.readonly'], 'inum': ['1800.6731FB'], 'jansAttrs': ['{\"spontaneousClientId\": null, \"spontaneousClientScopes\": [], \"showInConfigurationEndpoint\": false}'], 'jansDefScope': ['false'], 'jansId': ['https://jans.io/oauth/config/uma/resources.readonly'], 'jansScopeTyp': ['oauth2'], 'objectclass': ['top', 'jansScope']} 11:35:31 06/21/21 Querying LDAP for dn inum=1800.E4EBE7,ou=scopes,o=jans 11:35:31 06/21/21 Adding LDAP dn:inum=1800.E4EBE7,ou=scopes,o=jans entry:{'description': ['Manage UMA Resource related information'], 'displayName': ['Config API scope https://jans.io/oauth/config/uma/resources.write'], 'inum': ['1800.E4EBE7'], 'jansAttrs': ['{\"spontaneousClientId\": null, \"spontaneousClientScopes\": [], \"showInConfigurationEndpoint\": false}'], 'jansDefScope': ['false'], 'jansId': ['https://jans.io/oauth/config/uma/resources.write'], 'jansScopeTyp': ['oauth2'], 'objectclass': ['top', 'jansScope']} 11:35:31 06/21/21 Querying LDAP for dn inum=1800.0D8D8D,ou=scopes,o=jans 11:35:31 06/21/21 Adding LDAP dn:inum=1800.0D8D8D,ou=scopes,o=jans entry:{'description': ['Delete UMA Resource related information'], 'displayName': ['Config API scope https://jans.io/oauth/config/uma/resources.delete'], 'inum': ['1800.0D8D8D'], 'jansAttrs': ['{\"spontaneousClientId\": null, \"spontaneousClientScopes\": [], \"showInConfigurationEndpoint\": false}'], 'jansDefScope': ['false'], 'jansId': ['https://jans.io/oauth/config/uma/resources.delete'], 'jansScopeTyp': ['oauth2'], 'objectclass': ['top', 'jansScope']} 11:35:31 06/21/21 Importing entries from /opt/jans/jans-setup/output/jans-config-api/clients.ldif 11:35:31 06/21/21 Querying LDAP for dn inum=1801.0e9613e2-804e-487b-9696-84bb8045b895,ou=clients,o=jans 11:35:31 06/21/21 Adding LDAP dn:inum=1801.0e9613e2-804e-487b-9696-84bb8045b895,ou=clients,o=jans entry:{'del': ['false'], 'displayName': ['Jans Config Api Client'], 'inum': ['1801.0e9613e2-804e-487b-9696-84bb8045b895'], 'jansAccessTknAsJwt': ['false'], 'jansAccessTknSigAlg': ['RS256'], 'jansAppTyp': ['web'], 'jansAttrs': ['{\"tlsClientAuthSubjectDn\":\"\",\"runIntrospectionScriptBeforeAccessTokenAsJwtCreationAndIncludeClaims\":false,\"keepClientAuthorizationAfterExpiration\":false,\"allowSpontaneousScopes\":false,\"spontaneousScopes\":[],\"spontaneousScopeScriptDns\":[],\"backchannelLogoutUri\":[],\"backchannelLogoutSessionRequired\":false,\"additionalAudience\":[],\"postAuthnScripts\":[],\"consentGatheringScripts\":[],\"introspectionScripts\":[],\"rptClaimsScripts\":[]}'], 'jansClntSecret': ['H2QjtLYwppD4HqzxpItG0A=='], 'jansDisabled': ['false'], 'jansGrantTyp': ['authorization_code', 'refresh_token', 'client_credentials'], 'jansIdTknSignedRespAlg': ['RS256'], 'jansInclClaimsInIdTkn': ['false'], 'jansLogoutSessRequired': ['false'], 'jansPersistClntAuthzs': ['true'], 'jansRedirectURI': ['https://test.dd.jans.io/admin-ui', 'http://localhost:4100'], 'jansRequireAuthTime': ['false'], 'jansRespTyp': ['code'], 'jansRptAsJwt': ['false'], 'jansScope': ['inum=1800.71CF52,ou=scopes,o=jans', 'inum=1800.23F516,ou=scopes,o=jans', 'inum=1800.B1125F,ou=scopes,o=jans', 'inum=1800.02C5BE,ou=scopes,o=jans', 'inum=1800.CC7D1C,ou=scopes,o=jans', 'inum=1800.5D52F6,ou=scopes,o=jans', 'inum=1800.3F631C,ou=scopes,o=jans', 'inum=1800.576FA9,ou=scopes,o=jans', 'inum=1800.14906B,ou=scopes,o=jans', 'inum=1800.78E26D,ou=scopes,o=jans', 'inum=1800.0A40B5,ou=scopes,o=jans', 'inum=1800.36E9E2,ou=scopes,o=jans', 'inum=1800.7434DD,ou=scopes,o=jans', 'inum=1800.CCB907,ou=scopes,o=jans', 'inum=1800.36EA8D,ou=scopes,o=jans', 'inum=1800.6E4537,ou=scopes,o=jans', 'inum=1800.6EAFBC,ou=scopes,o=jans', 'inum=1800.4D6C46,ou=scopes,o=jans', 'inum=1800.160ED7,ou=scopes,o=jans', 'inum=1800.70AEDC,ou=scopes,o=jans', 'inum=1800.BF6E92,ou=scopes,o=jans', 'inum=1800.DE2CE9,ou=scopes,o=jans', 'inum=1800.AA88E9,ou=scopes,o=jans', 'inum=1800.0384AD,ou=scopes,o=jans', 'inum=1800.F1A6B9,ou=scopes,o=jans', 'inum=1800.0A9979,ou=scopes,o=jans', 'inum=1800.AFE86F,ou=scopes,o=jans', 'inum=1800.EFB0CC,ou=scopes,o=jans', 'inum=1800.B61F69,ou=scopes,o=jans', 'inum=1800.5E824B,ou=scopes,o=jans', 'inum=1800.EF8727,ou=scopes,o=jans', 'inum=1800.E489B8,ou=scopes,o=jans', 'inum=1800.610BA5,ou=scopes,o=jans', 'inum=1800.6731FB,ou=scopes,o=jans', 'inum=1800.E4EBE7,ou=scopes,o=jans', 'inum=1800.0D8D8D,ou=scopes,o=jans'], 'jansSubjectTyp': ['pairwise'], 'jansTknEndpointAuthMethod': ['client_secret_basic'], 'jansTrustedClnt': ['false'], 'objectClass': ['top', 'jansClnt']} 11:35:31 06/21/21 Checking ID for client jca_test_client_id 11:35:31 06/21/21 Searching database for dn ou=clients,o=jans with filter (&amp;(inum=1802.)(objectClass=jansClnt)) 11:35:31 06/21/21 Client ID for jca_test_client_id was created as 1802.2786585a-a886-425a-b5c0-317ef4339179 11:35:31 06/21/21 Searching database for dn ou=scopes,o=jans with filter (&amp;(inum=1800.)(objectClass=jansScope)) 11:35:31 06/21/21 Loding Jans Config Api test data 11:35:31 06/21/21 Reading file /opt/jans/jans-setup/templates/test/jans-config-api/data/jans-config-api.ldif 11:35:31 06/21/21 Writing file /opt/jans/jans-setup/output/jans-config-api/jans-config-api.ldif 11:35:31 06/21/21 Importing ldif file(s): /opt/jans/jans-setup/output/jans-config-api/jans-config-api.ldif  11:35:31 06/21/21 Importing entries from /opt/jans/jans-setup/output/jans-config-api/jans-config-api.ldif 11:35:31 06/21/21 Querying LDAP for dn inum=1802.2786585a-a886-425a-b5c0-317ef4339179,ou=clients,o=jans 11:35:31 06/21/21 Adding LDAP dn:inum=1802.2786585a-a886-425a-b5c0-317ef4339179,ou=clients,o=jans entry:{'objectClass': ['jansClnt', 'top'], 'del': ['FALSE'], 'displayName': ['Jans Config Api Client'], 'inum': ['1802.2786585a-a886-425a-b5c0-317ef4339179'], 'jansAccessTknAsJwt': ['FALSE'], 'jansAccessTknSigAlg': ['RS256'], 'jansAppTyp': ['web'], 'jansAttrs': ['{\"tlsClientAuthSubjectDn\":\"\",\"runIntrospectionScriptBeforeAccessTokenAsJwtCreationAndIncludeClaims\":false,\"keepClientAuthorizationAfterExpiration\":false,\"allowSpontaneousScopes\":false,\"spontaneousScopes\":[],\"spontaneousScopeScriptDns\":[],\"backchannelLogoutUri\":[],\"backchannelLogoutSessionRequired\":false,\"additionalAudience\":[],\"postAuthnScripts\":[],\"consentGatheringScripts\":[],\"introspectionScripts\":[],\"rptClaimsScripts\":[]}'], 'jansClntSecret': ['JJvRQzjTnxeDoGA5iQ4+6g=='], 'jansDisabled': ['FALSE'], 'jansGrantTyp': ['authorization_code', 'client_credentials', 'refresh_token'], 'jansIdTknSignedRespAlg': ['RS256'], 'jansInclClaimsInIdTkn': ['FALSE'], 'jansLogoutSessRequired': ['FALSE'], 'jansPersistClntAuthzs': ['TRUE'], 'jansRequireAuthTime': ['FALSE'], 'jansRespTyp': ['code'], 'jansRptAsJwt': ['FALSE'], 'jansSubjectTyp': ['pairwise'], 'jansTknEndpointAuthMethod': ['client_secret_basic'], 'jansTrustedClnt': ['FALSE'], 'jansScope': ['inum=1800.71CF52,ou=scopes,o=jans', 'inum=1800.23F516,ou=scopes,o=jans', 'inum=1800.B1125F,ou=scopes,o=jans', 'inum=1800.02C5BE,ou=scopes,o=jans', 'inum=1800.CC7D1C,ou=scopes,o=jans', 'inum=1800.5D52F6,ou=scopes,o=jans', 'inum=1800.3F631C,ou=scopes,o=jans', 'inum=1800.576FA9,ou=scopes,o=jans', 'inum=1800.14906B,ou=scopes,o=jans', 'inum=1800.78E26D,ou=scopes,o=jans', 'inum=1800.0A40B5,ou=scopes,o=jans', 'inum=1800.36E9E2,ou=scopes,o=jans', 'inum=1800.7434DD,ou=scopes,o=jans', 'inum=1800.CCB907,ou=scopes,o=jans', 'inum=1800.36EA8D,ou=scopes,o=jans', 'inum=1800.6E4537,ou=scopes,o=jans', 'inum=1800.6EAFBC,ou=scopes,o=jans', 'inum=1800.4D6C46,ou=scopes,o=jans', 'inum=1800.160ED7,ou=scopes,o=jans', 'inum=1800.70AEDC,ou=scopes,o=jans', 'inum=1800.BF6E92,ou=scopes,o=jans', 'inum=1800.DE2CE9,ou=scopes,o=jans', 'inum=1800.AA88E9,ou=scopes,o=jans', 'inum=1800.0384AD,ou=scopes,o=jans', 'inum=1800.F1A6B9,ou=scopes,o=jans', 'inum=1800.0A9979,ou=scopes,o=jans', 'inum=1800.AFE86F,ou=scopes,o=jans', 'inum=1800.EFB0CC,ou=scopes,o=jans', 'inum=1800.B61F69,ou=scopes,o=jans', 'inum=1800.5E824B,ou=scopes,o=jans', 'inum=1800.EF8727,ou=scopes,o=jans', 'inum=1800.E489B8,ou=scopes,o=jans', 'inum=1800.610BA5,ou=scopes,o=jans', 'inum=1800.6731FB,ou=scopes,o=jans', 'inum=1800.E4EBE7,ou=scopes,o=jans', 'inum=1800.0D8D8D,ou=scopes,o=jans']} 11:35:31 06/21/21 Installing Jans-Fido2 11:35:31 06/21/21 Bind to database 11:35:31 06/21/21 Running: /bin/mkdir -p /etc/jans/conf/fido2/authenticator_cert 11:35:31 06/21/21 Running: /bin/mkdir -p /etc/jans/conf/fido2/mds/cert 11:35:31 06/21/21 Running: /bin/mkdir -p /etc/jans/conf/fido2/mds/toc 11:35:31 06/21/21 Running: /bin/mkdir -p /etc/jans/conf/fido2/server_metadata 11:35:31 06/21/21 Copying file /opt/jans/jans-setup/static/system/systemd/jans-fido2.service to /etc/systemd/system 11:35:31 06/21/21 Copied /opt/jans/jans-setup/static/system/systemd/jans-fido2.service to /etc/systemd/system 11:35:31 06/21/21 Installing jetty service jans-fido2... 11:35:31 06/21/21 Preparing jans-fido2 service base folders 11:35:31 06/21/21 Running: /bin/mkdir -p /opt/jans/jetty/jans-fido2 11:35:31 06/21/21 Running: /bin/mkdir -p /opt/jans/jetty/jans-fido2/custom 11:35:31 06/21/21 Running: /bin/mkdir -p /opt/jans/jetty/jans-fido2/custom/pages 11:35:31 06/21/21 Running: /bin/mkdir -p /opt/jans/jetty/jans-fido2/custom/i18n 11:35:31 06/21/21 Running: /bin/mkdir -p /opt/jans/jetty/jans-fido2/custom/static 11:35:31 06/21/21 Running: /bin/mkdir -p /opt/jans/jetty/jans-fido2/custom/libs 11:35:31 06/21/21 Preparing jans-fido2 service base configuration 11:35:31 06/21/21 Running: /opt/jre/bin/java -jar /opt/jetty/start.jar jetty.home=/opt/jetty jetty.base=/opt/jans/jetty/jans-fido2 --add-to-start=server,deploy,resources,http,http-forwarded,threadpool,console-capture,jsp 11:35:31 06/21/21 Running: /bin/chown -R jetty:jetty /opt/jans/jetty/jans-fido2 11:35:31 06/21/21 Rendering template /opt/jans/jans-setup/templates/jetty/jans-fido2 11:35:31 06/21/21 Reading file /opt/jans/jans-setup/templates/jetty/jans-fido2 11:35:31 06/21/21 Writing file /opt/jans/jans-setup/output/jetty/jans-fido2 11:35:31 06/21/21 Copying file /opt/jans/jans-setup/output/jetty/jans-fido2 to /etc/default 11:35:31 06/21/21 Copied /opt/jans/jans-setup/output/jetty/jans-fido2 to /etc/default 11:35:31 06/21/21 Running: /bin/chown root:root /etc/default/jans-fido2 11:35:31 06/21/21 Running: /bin/chmod +x /opt/dist/scripts/jans-fido2 11:35:31 06/21/21 Creating 'jetty.conf' tmpfiles daemon file 11:35:31 06/21/21 Copying file /opt/jans/jans-setup/templates/jetty.conf.tmpfiles.d to /usr/lib/tmpfiles.d/jetty.conf 11:35:31 06/21/21 Copied /opt/jans/jans-setup/templates/jetty.conf.tmpfiles.d to /usr/lib/tmpfiles.d/jetty.conf 11:35:31 06/21/21 Running: /bin/chown root:root /usr/lib/tmpfiles.d/jetty.conf 11:35:31 06/21/21 Running: /bin/chmod 644 /usr/lib/tmpfiles.d/jetty.conf 11:35:31 06/21/21 Copying file /opt/jetty/bin/jetty.sh to /opt/dist/app/jans-fido2 11:35:31 06/21/21 Copied /opt/jetty/bin/jetty.sh to /opt/dist/app/jans-fido2 11:35:31 06/21/21 Seeting jetty parameter jetty.httpConfig.sendServerVersion=false for service jans-fido2 11:35:31 06/21/21 Reading file /opt/jans/jetty/jans-fido2/start.ini 11:35:31 06/21/21 Writing file /opt/jans/jetty/jans-fido2/start.ini 11:35:31 06/21/21 Running: cp -f /opt/jans/jetty/jans-fido2/start.ini /opt/jans/jetty/jans-fido2/start.ini.jans-1.0.0-1~ 11:35:31 06/21/21 Copying fido.war into jetty webapps folder... 11:35:31 06/21/21 Copying file /opt/dist/jans/jans-fido2.war to /opt/jans/jetty/jans-fido2/webapps 11:35:31 06/21/21 Copied /opt/dist/jans/jans-fido2.war to /opt/jans/jetty/jans-fido2/webapps 11:35:31 06/21/21 Running: /usr/bin/systemctl enable jans-fido2 11:35:31 06/21/21 Run: /usr/bin/systemctl enable jans-fido2 with result code: 0 11:35:31 06/21/21 Copying file /opt/jans/jans-setup/static/fido2/authenticator_cert/yubico-u2f-ca-cert.crt to /etc/jans/conf/fido2/authenticator_cert 11:35:31 06/21/21 Copied /opt/jans/jans-setup/static/fido2/authenticator_cert/yubico-u2f-ca-cert.crt to /etc/jans/conf/fido2/authenticator_cert 11:35:31 06/21/21 Copying file /opt/jans/jans-setup/static/fido2/authenticator_cert/HyperFIDO_CA_Cert_V1.pem to /etc/jans/conf/fido2/authenticator_cert 11:35:31 06/21/21 Copied /opt/jans/jans-setup/static/fido2/authenticator_cert/HyperFIDO_CA_Cert_V1.pem to /etc/jans/conf/fido2/authenticator_cert 11:35:31 06/21/21 Copying file /opt/jans/jans-setup/static/fido2/authenticator_cert/HyperFIDO_CA_Cert_V2.pem to /etc/jans/conf/fido2/authenticator_cert 11:35:31 06/21/21 Copied /opt/jans/jans-setup/static/fido2/authenticator_cert/HyperFIDO_CA_Cert_V2.pem to /etc/jans/conf/fido2/authenticator_cert 11:35:31 06/21/21 Copying file /opt/jans/jans-setup/static/fido2/mds_toc_cert/metadata-root-ca.cer to /etc/jans/conf/fido2/mds/cert 11:35:31 06/21/21 Copied /opt/jans/jans-setup/static/fido2/mds_toc_cert/metadata-root-ca.cer to /etc/jans/conf/fido2/mds/cert 11:35:31 06/21/21 Copied tree /opt/jans/jans-setup/static/auth/fido2/server_metadata to /etc/jans/conf/fido2/server_metadata 11:35:31 06/21/21 Running: /bin/mkdir -p /etc/jans/conf/fido2/apple 11:35:31 06/21/21 Copying file /opt/dist/app/Apple_WebAuthn_Root_CA.pem to /etc/jans/conf/fido2/apple 11:35:31 06/21/21 Copied /opt/dist/app/Apple_WebAuthn_Root_CA.pem to /etc/jans/conf/fido2/apple 11:35:31 06/21/21 Rendering template /opt/jans/jans-setup/templates/jans-fido2/dynamic-conf.json 11:35:31 06/21/21 Reading file /opt/jans/jans-setup/templates/jans-fido2/dynamic-conf.json 11:35:31 06/21/21 Writing file /opt/jans/jans-setup/output/jans-fido2/dynamic-conf.json 11:35:31 06/21/21 Rendering template /opt/jans/jans-setup/templates/jans-fido2/static-conf.json 11:35:31 06/21/21 Reading file /opt/jans/jans-setup/templates/jans-fido2/static-conf.json 11:35:31 06/21/21 Writing file /opt/jans/jans-setup/output/jans-fido2/static-conf.json 11:35:31 06/21/21 Loading file /opt/jans/jans-setup/output/jans-fido2/dynamic-conf.json 11:35:31 06/21/21 Reading file /opt/jans/jans-setup/output/jans-fido2/dynamic-conf.json 11:35:31 06/21/21 Loading file /opt/jans/jans-setup/output/jans-fido2/static-conf.json 11:35:31 06/21/21 Reading file /opt/jans/jans-setup/output/jans-fido2/static-conf.json 11:35:31 06/21/21 Rendering template /opt/jans/jans-setup/templates/jans-fido2/fido2.ldif 11:35:31 06/21/21 Reading file /opt/jans/jans-setup/templates/jans-fido2/fido2.ldif 11:35:31 06/21/21 Writing file /opt/jans/jans-setup/output/jans-fido2/fido2.ldif 11:35:31 06/21/21 Reading file /opt/jans/jans-setup/templates/jans-app.xml 11:35:31 06/21/21 Writing file /opt/jans/jetty/jans-fido2/webapps/jans-fido2.xml 11:35:31 06/21/21 Importing ldif file(s): /opt/jans/jans-setup/output/jans-fido2/fido2.ldif  11:35:31 06/21/21 Importing entries from /opt/jans/jans-setup/output/jans-fido2/fido2.ldif 11:35:31 06/21/21 Querying LDAP for dn ou=jans-fido2,ou=configuration,o=jans 11:35:31 06/21/21 Adding LDAP dn:ou=jans-fido2,ou=configuration,o=jans entry:{'jansConfDyn': ['{\\n   \"issuer\":\"https://test.dd.jans.io\",\\n   \"baseEndpoint\":\"https://test.dd.jans.io/fido2/restv1\",\\n   \"cleanServiceInterval\":60,\\n   \"cleanServiceBatchChunkSize\":10000,\\n   \"useLocalCache\":true,\\n   \"disableJdkLogger\":true,\\n   \"loggingLevel\":\"INFO\",\\n   \"loggingLayout\":\"text\",\\n   \"externalLoggerConfiguration\":\"\",\\n   \"metricReporterInterval\":300,\\n   \"metricReporterKeepDataDays\":15,\\n   \"metricReporterEnabled\":true,\\n   \"personCustomObjectClassList\":[\\n      \"jansCustomPerson\",\\n      \"jansPerson\"\\n   ],\\n   \"fido2Configuration\":{\\n      \"authenticatorCertsFolder\":\"/etc/jans/conf/fido2/authenticator_cert\",\\n      \"mdsCertsFolder\":\"/etc/jans/conf/fido2/mds/cert\",\\n      \"mdsTocsFolder\":\"/etc/jans/conf/fido2/mds/toc\",\\n      \"serverMetadataFolder\":\"/etc/jans/conf/fido2/server_metadata\",\\n      \"requestedCredentialTypes\":[\\n         \"RS256\",\\n         \"ES256\"\\n      ],\\n      \"requestedParties\":[\\n         {\\n            \"name\":\"https://test.dd.jans.io\",\\n            \"domains\":[\\n               \"test.dd.jans.io\"\\n            ]\\n         }\\n      ],\\n      \"userAutoEnrollment\":false,\\n      \"unfinishedRequestExpiration\":180,\\n      \"authenticationHistoryExpiration\":1296000\\n   }\\n}'], 'jansConfStatic': ['{\\n    \"baseDn\":{\\n        \"configuration\":\"ou=configuration,o=jans\",\\n        \"people\":\"ou=people,o=jans\",\\n        \"scripts\": \"ou=scripts,o=jans\",\\n        \"metric\":\"ou=statistic,o=metric\",\\n        \"sessions\":\"ou=sessions,o=jans\"\\n    }\\n}\\n'], 'jansRevision': ['1'], 'objectClass': ['top', 'jansAppConf'], 'ou': ['fido2']} 11:35:31 06/21/21 Installing Jans-Scim 11:35:31 06/21/21 Bind to database 11:35:31 06/21/21 Created dir: /opt/jans/jans-setup/output/jans-scim 11:35:31 06/21/21 Copying file /opt/jans/jans-setup/static/system/systemd/jans-scim.service to /etc/systemd/system 11:35:31 06/21/21 Copied /opt/jans/jans-setup/static/system/systemd/jans-scim.service to /etc/systemd/system 11:35:31 06/21/21 Copying scim.war into jetty webapps folder... 11:35:31 06/21/21 Installing jetty service jans-scim... 11:35:31 06/21/21 Preparing jans-scim service base folders 11:35:31 06/21/21 Running: /bin/mkdir -p /opt/jans/jetty/jans-scim 11:35:31 06/21/21 Running: /bin/mkdir -p /opt/jans/jetty/jans-scim/custom 11:35:31 06/21/21 Running: /bin/mkdir -p /opt/jans/jetty/jans-scim/custom/pages 11:35:31 06/21/21 Running: /bin/mkdir -p /opt/jans/jetty/jans-scim/custom/i18n 11:35:31 06/21/21 Running: /bin/mkdir -p /opt/jans/jetty/jans-scim/custom/static 11:35:31 06/21/21 Running: /bin/mkdir -p /opt/jans/jetty/jans-scim/custom/libs 11:35:31 06/21/21 Preparing jans-scim service base configuration 11:35:31 06/21/21 Running: /opt/jre/bin/java -jar /opt/jetty/start.jar jetty.home=/opt/jetty jetty.base=/opt/jans/jetty/jans-scim --add-to-start=server,deploy,resources,http,http-forwarded,console-capture,jsp,websocket 11:35:32 06/21/21 Running: /bin/chown -R jetty:jetty /opt/jans/jetty/jans-scim 11:35:32 06/21/21 Rendering template /opt/jans/jans-setup/templates/jetty/jans-scim 11:35:32 06/21/21 Reading file /opt/jans/jans-setup/templates/jetty/jans-scim 11:35:32 06/21/21 Writing file /opt/jans/jans-setup/output/jetty/jans-scim 11:35:32 06/21/21 Copying file /opt/jans/jans-setup/output/jetty/jans-scim to /etc/default 11:35:32 06/21/21 Copied /opt/jans/jans-setup/output/jetty/jans-scim to /etc/default 11:35:32 06/21/21 Running: /bin/chown root:root /etc/default/jans-scim 11:35:32 06/21/21 Running: /bin/chmod +x /opt/dist/scripts/jans-scim 11:35:32 06/21/21 Creating 'jetty.conf' tmpfiles daemon file 11:35:32 06/21/21 Copying file /opt/jans/jans-setup/templates/jetty.conf.tmpfiles.d to /usr/lib/tmpfiles.d/jetty.conf 11:35:32 06/21/21 Copied /opt/jans/jans-setup/templates/jetty.conf.tmpfiles.d to /usr/lib/tmpfiles.d/jetty.conf 11:35:32 06/21/21 Running: /bin/chown root:root /usr/lib/tmpfiles.d/jetty.conf 11:35:32 06/21/21 Running: /bin/chmod 644 /usr/lib/tmpfiles.d/jetty.conf 11:35:32 06/21/21 Copying file /opt/jetty/bin/jetty.sh to /opt/dist/app/jans-scim 11:35:32 06/21/21 Copied /opt/jetty/bin/jetty.sh to /opt/dist/app/jans-scim 11:35:32 06/21/21 Seeting jetty parameter jetty.httpConfig.sendServerVersion=false for service jans-scim 11:35:32 06/21/21 Reading file /opt/jans/jetty/jans-scim/start.ini 11:35:32 06/21/21 Writing file /opt/jans/jetty/jans-scim/start.ini 11:35:32 06/21/21 Running: cp -f /opt/jans/jetty/jans-scim/start.ini /opt/jans/jetty/jans-scim/start.ini.jans-1.0.0-1~ 11:35:32 06/21/21 Copying file /opt/dist/jans/jans-scim.war to /opt/jans/jetty/jans-scim/webapps 11:35:32 06/21/21 Copied /opt/dist/jans/jans-scim.war to /opt/jans/jetty/jans-scim/webapps 11:35:32 06/21/21 Running: /usr/bin/systemctl enable jans-scim 11:35:32 06/21/21 Run: /usr/bin/systemctl enable jans-scim with result code: 0 11:35:32 06/21/21 Generating jans-scim configuration 11:35:32 06/21/21 Reading file /opt/jans/jans-setup/setup_app/data/jans-scim-openapi.yaml 11:35:33 06/21/21 Checking ID for client scim_client_id 11:35:33 06/21/21 Searching database for dn ou=clients,o=jans with filter (&amp;(inum=1201.*)(objectClass=jansClnt)) 11:35:33 06/21/21 Client ID for scim_client_id was created as 1201.d1ec48fa-6302-4142-a560-25f2c8cd5b5b 11:35:33 06/21/21 Rendering template /opt/jans/jans-setup/templates/jans-scim/dynamic-conf.json 11:35:33 06/21/21 Reading file /opt/jans/jans-setup/templates/jans-scim/dynamic-conf.json 11:35:33 06/21/21 Writing file /opt/jans/jans-setup/output/jans-scim/dynamic-conf.json 11:35:33 06/21/21 Rendering template /opt/jans/jans-setup/templates/jans-scim/static-conf.json 11:35:33 06/21/21 Reading file /opt/jans/jans-setup/templates/jans-scim/static-conf.json 11:35:33 06/21/21 Writing file /opt/jans/jans-setup/output/jans-scim/static-conf.json 11:35:33 06/21/21 Loading file /opt/jans/jans-setup/output/jans-scim/dynamic-conf.json 11:35:33 06/21/21 Reading file /opt/jans/jans-setup/output/jans-scim/dynamic-conf.json 11:35:33 06/21/21 Loading file /opt/jans/jans-setup/output/jans-scim/static-conf.json 11:35:33 06/21/21 Reading file /opt/jans/jans-setup/output/jans-scim/static-conf.json 11:35:33 06/21/21 Rendering template /opt/jans/jans-setup/templates/jans-scim/configuration.ldif 11:35:33 06/21/21 Reading file /opt/jans/jans-setup/templates/jans-scim/configuration.ldif 11:35:33 06/21/21 Writing file /opt/jans/jans-setup/output/jans-scim/configuration.ldif 11:35:33 06/21/21 Importing ldif file(s): /opt/jans/jans-setup/output/jans-scim/configuration.ldif, /opt/jans/jans-setup/output/jans-scim/scopes.ldif, /opt/jans/jans-setup/output/jans-scim/clients.ldif  11:35:33 06/21/21 Importing entries from /opt/jans/jans-setup/output/jans-scim/configuration.ldif 11:35:33 06/21/21 Querying LDAP for dn ou=jans-scim,ou=configuration,o=jans 11:35:33 06/21/21 Adding LDAP dn:ou=jans-scim,ou=configuration,o=jans entry:{'jansConfDyn': ['{\\n    \"baseDN\":\"o=jans\",\\n\\n    \"applicationUrl\":\"https://test.dd.jans.io\",\\n    \"baseEndpoint\":\"https://test.dd.jans.io/jans-scim/restv1\",\\n\\n    \"personCustomObjectClass\":\"jansCustomPerson\",\\n\\n    \"oxAuthIssuer\":\"https://test.dd.jans.io\",\\n    \"umaIssuer\":\"https://test.dd.jans.io\",\\n\\n    \"scimUmaClientKeyId\":\"\",\\n\\n    \"rptConnectionPoolUseConnectionPooling\":true,\\n    \"rptConnectionPoolMaxTotal\":200,\\n    \"rptConnectionPoolDefaultMaxPerRoute\":20,\\n    \"rptConnectionPoolValidateAfterInactivity\":10,\\n    \"rptConnectionPoolCustomKeepAliveTimeout\":5,\\n    \"maxCount\": 200,\\n\\n    \"useLocalCache\":true,\\n\\n    \"disableJdkLogger\":true,\\n    \"loggingLevel\":\"INFO\",\\n    \"loggingLayout\":\"text\",\\n    \"externalLoggerConfiguration\":\"\",\\n\\n    \"metricReporterInterval\":300,\\n    \"metricReporterKeepDataDays\":15,\\n    \"metricReporterEnabled\":true\\n}\\n'], 'jansConfStatic': ['{\\n    \"baseDn\":{\\n        \"configuration\":\"ou=configuration,o=jans\",\\n        \"people\":\"ou=people,o=jans\",\\n        \"scripts\": \"ou=scripts,o=jans\",\\n        \"metric\":\"ou=statistic,o=metric\"\\n    }\\n}\\n'], 'jansRevision': ['1'], 'objectClass': ['top', 'jansAppConf'], 'ou': ['scim']} 11:35:33 06/21/21 Importing entries from /opt/jans/jans-setup/output/jans-scim/scopes.ldif 11:35:33 06/21/21 Querying LDAP for dn inum=1200.5BF072,ou=scopes,o=jans 11:35:33 06/21/21 Adding LDAP dn:inum=1200.5BF072,ou=scopes,o=jans entry:{'description': ['Query user resources'], 'displayName': ['Scim users.read'], 'inum': ['1200.5BF072'], 'jansId': ['https://jans.io/scim/users.read'], 'jansScopeTyp': ['oauth'], 'objectclass': ['top', 'jansScope']} 11:35:33 06/21/21 Querying LDAP for dn inum=1200.A3B561,ou=scopes,o=jans 11:35:33 06/21/21 Adding LDAP dn:inum=1200.A3B561,ou=scopes,o=jans entry:{'description': ['Modify user resources'], 'displayName': ['Scim users.write'], 'inum': ['1200.A3B561'], 'jansId': ['https://jans.io/scim/users.write'], 'jansScopeTyp': ['oauth'], 'objectclass': ['top', 'jansScope']} 11:35:33 06/21/21 Querying LDAP for dn inum=1200.4E2CEA,ou=scopes,o=jans 11:35:33 06/21/21 Adding LDAP dn:inum=1200.4E2CEA,ou=scopes,o=jans entry:{'description': ['Query group resources'], 'displayName': ['Scim groups.read'], 'inum': ['1200.4E2CEA'], 'jansId': ['https://jans.io/scim/groups.read'], 'jansScopeTyp': ['oauth'], 'objectclass': ['top', 'jansScope']} 11:35:33 06/21/21 Querying LDAP for dn inum=1200.2E5EB3,ou=scopes,o=jans 11:35:33 06/21/21 Adding LDAP dn:inum=1200.2E5EB3,ou=scopes,o=jans entry:{'description': ['Modify group resources'], 'displayName': ['Scim groups.write'], 'inum': ['1200.2E5EB3'], 'jansId': ['https://jans.io/scim/groups.write'], 'jansScopeTyp': ['oauth'], 'objectclass': ['top', 'jansScope']} 11:35:33 06/21/21 Querying LDAP for dn inum=1200.DCDD0B,ou=scopes,o=jans 11:35:33 06/21/21 Adding LDAP dn:inum=1200.DCDD0B,ou=scopes,o=jans entry:{'description': ['Query fido resources'], 'displayName': ['Scim fido.read'], 'inum': ['1200.DCDD0B'], 'jansId': ['https://jans.io/scim/fido.read'], 'jansScopeTyp': ['oauth'], 'objectclass': ['top', 'jansScope']} 11:35:33 06/21/21 Querying LDAP for dn inum=1200.E970DB,ou=scopes,o=jans 11:35:33 06/21/21 Adding LDAP dn:inum=1200.E970DB,ou=scopes,o=jans entry:{'description': ['Modify fido resources'], 'displayName': ['Scim fido.write'], 'inum': ['1200.E970DB'], 'jansId': ['https://jans.io/scim/fido.write'], 'jansScopeTyp': ['oauth'], 'objectclass': ['top', 'jansScope']} 11:35:33 06/21/21 Querying LDAP for dn inum=1200.7EEE68,ou=scopes,o=jans 11:35:33 06/21/21 Adding LDAP dn:inum=1200.7EEE68,ou=scopes,o=jans entry:{'description': ['Query fido 2 resources'], 'displayName': ['Scim fido2.read'], 'inum': ['1200.7EEE68'], 'jansId': ['https://jans.io/scim/fido2.read'], 'jansScopeTyp': ['oauth'], 'objectclass': ['top', 'jansScope']} 11:35:33 06/21/21 Querying LDAP for dn inum=1200.913068,ou=scopes,o=jans 11:35:33 06/21/21 Adding LDAP dn:inum=1200.913068,ou=scopes,o=jans entry:{'description': ['Modify fido 2 resources'], 'displayName': ['Scim fido2.write'], 'inum': ['1200.913068'], 'jansId': ['https://jans.io/scim/fido2.write'], 'jansScopeTyp': ['oauth'], 'objectclass': ['top', 'jansScope']} 11:35:33 06/21/21 Querying LDAP for dn inum=1200.C29A1B,ou=scopes,o=jans 11:35:33 06/21/21 Adding LDAP dn:inum=1200.C29A1B,ou=scopes,o=jans entry:{'description': ['Access the root .search endpoint'], 'displayName': ['Scim all-resources.search'], 'inum': ['1200.C29A1B'], 'jansId': ['https://jans.io/scim/all-resources.search'], 'jansScopeTyp': ['oauth'], 'objectclass': ['top', 'jansScope']} 11:35:33 06/21/21 Querying LDAP for dn inum=1200.A31CFE,ou=scopes,o=jans 11:35:33 06/21/21 Adding LDAP dn:inum=1200.A31CFE,ou=scopes,o=jans entry:{'description': ['Send requests to the bulk endpoint'], 'displayName': ['Scim bulk'], 'inum': ['1200.A31CFE'], 'jansId': ['https://jans.io/scim/bulk'], 'jansScopeTyp': ['oauth'], 'objectclass': ['top', 'jansScope']} 11:35:33 06/21/21 Importing entries from /opt/jans/jans-setup/output/jans-scim/clients.ldif 11:35:33 06/21/21 Querying LDAP for dn inum=1201.d1ec48fa-6302-4142-a560-25f2c8cd5b5b,ou=clients,o=jans 11:35:33 06/21/21 Adding LDAP dn:inum=1201.d1ec48fa-6302-4142-a560-25f2c8cd5b5b,ou=clients,o=jans entry:{'displayName': ['SCIM client'], 'inum': ['1201.d1ec48fa-6302-4142-a560-25f2c8cd5b5b'], 'jansAccessTknSigAlg': ['RS256'], 'jansAppTyp': ['native'], 'jansAttrs': ['{}'], 'jansClntSecret': ['2nsNrzJPRpgaWD6HB2vs0A=='], 'jansGrantTyp': ['client_credentials'], 'jansScope': ['inum=1200.5BF072,ou=scopes,o=jans', 'inum=1200.A3B561,ou=scopes,o=jans', 'inum=1200.4E2CEA,ou=scopes,o=jans', 'inum=1200.2E5EB3,ou=scopes,o=jans', 'inum=1200.DCDD0B,ou=scopes,o=jans', 'inum=1200.E970DB,ou=scopes,o=jans', 'inum=1200.7EEE68,ou=scopes,o=jans', 'inum=1200.913068,ou=scopes,o=jans', 'inum=1200.C29A1B,ou=scopes,o=jans', 'inum=1200.A31CFE,ou=scopes,o=jans'], 'jansSubjectTyp': ['pairwise'], 'jansTknEndpointAuthMethod': ['client_secret_basic'], 'objectClass': ['top', 'jansClnt']} 11:35:33 06/21/21 Reading file /opt/jans/jans-setup/templates/jans-app.xml 11:35:33 06/21/21 Writing file /opt/jans/jetty/jans-scim/webapps/jans-scim.xml 11:35:33 06/21/21 Installing Jans-Eleven 11:35:33 06/21/21 Bind to database 11:35:33 06/21/21 Copying file /opt/jans/jans-setup/static/system/systemd/jans-eleven.service to /etc/systemd/system 11:35:33 06/21/21 Copied /opt/jans/jans-setup/static/system/systemd/jans-eleven.service to /etc/systemd/system 11:35:33 06/21/21 Installing softhsm 11:35:33 06/21/21 Installing jetty service jans-eleven... 11:35:33 06/21/21 Preparing jans-eleven service base folders 11:35:33 06/21/21 Running: /bin/mkdir -p /opt/jans/jetty/jans-eleven 11:35:33 06/21/21 Running: /bin/mkdir -p /opt/jans/jetty/jans-eleven/custom 11:35:33 06/21/21 Running: /bin/mkdir -p /opt/jans/jetty/jans-eleven/custom/pages 11:35:33 06/21/21 Running: /bin/mkdir -p /opt/jans/jetty/jans-eleven/custom/i18n 11:35:33 06/21/21 Running: /bin/mkdir -p /opt/jans/jetty/jans-eleven/custom/static 11:35:33 06/21/21 Running: /bin/mkdir -p /opt/jans/jetty/jans-eleven/custom/libs 11:35:33 06/21/21 Preparing jans-eleven service base configuration 11:35:33 06/21/21 Running: /opt/jre/bin/java -jar /opt/jetty/start.jar jetty.home=/opt/jetty jetty.base=/opt/jans/jetty/jans-eleven --add-to-start=server,deploy,resources,http,http-forwarded,console-capture,jsp,websocket 11:35:33 06/21/21 Running: /bin/chown -R jetty:jetty /opt/jans/jetty/jans-eleven 11:35:33 06/21/21 Rendering template /opt/jans/jans-setup/templates/jetty/jans-eleven 11:35:33 06/21/21 Reading file /opt/jans/jans-setup/templates/jetty/jans-eleven 11:35:33 06/21/21 Writing file /opt/jans/jans-setup/output/jetty/jans-eleven 11:35:33 06/21/21 Copying file /opt/jans/jans-setup/output/jetty/jans-eleven to /etc/default 11:35:33 06/21/21 Copied /opt/jans/jans-setup/output/jetty/jans-eleven to /etc/default 11:35:33 06/21/21 Running: /bin/chown root:root /etc/default/jans-eleven 11:35:33 06/21/21 Running: /bin/chmod +x /opt/dist/scripts/jans-eleven 11:35:33 06/21/21 Creating 'jetty.conf' tmpfiles daemon file 11:35:33 06/21/21 Copying file /opt/jans/jans-setup/templates/jetty.conf.tmpfiles.d to /usr/lib/tmpfiles.d/jetty.conf 11:35:33 06/21/21 Copied /opt/jans/jans-setup/templates/jetty.conf.tmpfiles.d to /usr/lib/tmpfiles.d/jetty.conf 11:35:33 06/21/21 Running: /bin/chown root:root /usr/lib/tmpfiles.d/jetty.conf 11:35:33 06/21/21 Running: /bin/chmod 644 /usr/lib/tmpfiles.d/jetty.conf 11:35:33 06/21/21 Copying file /opt/jetty/bin/jetty.sh to /opt/dist/app/jans-eleven 11:35:33 06/21/21 Copied /opt/jetty/bin/jetty.sh to /opt/dist/app/jans-eleven 11:35:33 06/21/21 Seeting jetty parameter jetty.httpConfig.sendServerVersion=false for service jans-eleven 11:35:33 06/21/21 Reading file /opt/jans/jetty/jans-eleven/start.ini 11:35:33 06/21/21 Writing file /opt/jans/jetty/jans-eleven/start.ini 11:35:33 06/21/21 Running: cp -f /opt/jans/jetty/jans-eleven/start.ini /opt/jans/jetty/jans-eleven/start.ini.jans-1.0.0-1~ 11:35:33 06/21/21 Copying /opt/dist/jans/jans-eleven.war into jetty webapps folder... 11:35:33 06/21/21 Copying file /opt/dist/jans/jans-eleven.war to /opt/jans/jetty/jans-eleven/webapps 11:35:33 06/21/21 Copied /opt/dist/jans/jans-eleven.war to /opt/jans/jetty/jans-eleven/webapps 11:35:33 06/21/21 Running: /usr/bin/systemctl enable jans-eleven 11:35:33 06/21/21 Run: /usr/bin/systemctl enable jans-eleven with result code: 0 11:35:33 06/21/21 Rendering template /opt/jans/jans-setup/templates/jans-eleven/jans-eleven.json 11:35:33 06/21/21 Reading file /opt/jans/jans-setup/templates/jans-eleven/jans-eleven.json 11:35:33 06/21/21 Writing file /opt/jans/jans-setup/output/jans-eleven/jans-eleven.json 11:35:33 06/21/21 Copying file /opt/jans/jans-setup/output/jans-eleven/jans-eleven.json to /etc/jans/conf 11:35:33 06/21/21 Copied /opt/jans/jans-setup/output/jans-eleven/jans-eleven.json to /etc/jans/conf 11:35:33 06/21/21 Installing Jans-Cli 11:35:33 06/21/21 Installing Jans Cli 11:35:33 06/21/21 Running: /bin/ln -s /opt/jans/jans-cli/config_cli.py /opt/jans/jans-cli/config-cli.py 11:35:33 06/21/21 Running: /bin/ln -s /opt/jans/jans-cli/config_cli.py /opt/jans/jans-cli/scim-cli.py 11:35:33 06/21/21 Running: /bin/chmod +x /opt/jans/jans-cli/config_cli.py 11:35:33 06/21/21 Saving properties to /opt/jans/jans-setup/setup.properties.last 11:35:36 06/21/21 Running: /usr/bin/systemctl stop opendj 11:35:38 06/21/21 Run: /usr/bin/systemctl stop opendj with result code: 0 11:35:38 06/21/21 Running: /usr/bin/systemctl start opendj 11:35:43 06/21/21 Run: /usr/bin/systemctl start opendj with result code: 0 11:35:43 06/21/21 Running: /bin/chown -R jetty:root /etc/certs 11:35:43 06/21/21 Running: /bin/chmod -R 660 /etc/certs 11:35:43 06/21/21 Running: /bin/chmod u+X /etc/certs 11:35:43 06/21/21 Running: /usr/bin/systemctl stop cron 11:35:43 06/21/21 Run: /usr/bin/systemctl stop cron with result code: 0 11:35:43 06/21/21 Running: /usr/bin/systemctl start cron 11:35:43 06/21/21 Run: /usr/bin/systemctl start cron with result code: 0 11:35:45 06/21/21 Running: /usr/bin/systemctl stop opendj 11:35:48 06/21/21 Run: /usr/bin/systemctl stop opendj with result code: 0 11:35:48 06/21/21 Running: /usr/bin/systemctl start opendj 11:35:53 06/21/21 Run: /usr/bin/systemctl start opendj with result code: 0 11:35:55 06/21/21 Running: /usr/bin/systemctl stop apache2 11:35:55 06/21/21 Run: /usr/bin/systemctl stop apache2 with result code: 0 11:35:55 06/21/21 Running: /usr/bin/systemctl start apache2 11:35:55 06/21/21 Run: /usr/bin/systemctl start apache2 with result code: 0 11:35:57 06/21/21 Running: /usr/bin/systemctl stop jans-auth 11:35:57 06/21/21 Run: /usr/bin/systemctl stop jans-auth with result code: 0 11:35:57 06/21/21 Running: /usr/bin/systemctl start jans-auth 11:36:13 06/21/21 Run: /usr/bin/systemctl start jans-auth with result code: 0 11:36:15 06/21/21 Running: /usr/bin/systemctl stop jans-config-api 11:36:16 06/21/21 Run: /usr/bin/systemctl stop jans-config-api with result code: 0 11:36:16 06/21/21 Running: /usr/bin/systemctl start jans-config-api 11:36:16 06/21/21 Run: /usr/bin/systemctl start jans-config-api with result code: 0 11:36:18 06/21/21 Running: /usr/bin/systemctl stop jans-fido2 11:36:18 06/21/21 Run: /usr/bin/systemctl stop jans-fido2 with result code: 0 11:36:18 06/21/21 Running: /usr/bin/systemctl start jans-fido2 11:36:30 06/21/21 Run: /usr/bin/systemctl start jans-fido2 with result code: 0 11:36:32 06/21/21 Running: /usr/bin/systemctl stop jans-scim 11:36:32 06/21/21 Run: /usr/bin/systemctl stop jans-scim with result code: 0 11:36:32 06/21/21 Running: /usr/bin/systemctl start jans-scim 11:36:44 06/21/21 Run: /usr/bin/systemctl start jans-scim with result code: 0 11:36:46 06/21/21 Running: /usr/bin/systemctl stop jans-eleven 11:36:46 06/21/21 Run: /usr/bin/systemctl stop jans-eleven with result code: 0 11:36:46 06/21/21 Running: /usr/bin/systemctl start jans-eleven 11:36:50 06/21/21 Run: /usr/bin/systemctl start jans-eleven with result code: 0"},{"location":"while-coding/janssen/janssen-log-analysis-with-test-load/#start-test-data-load","title":"start test data load","text":"<p>11:36:50 06/21/21 Loading test data 11:36:50 06/21/21 Re-binding database 11:36:50 06/21/21 Bind to database 11:36:50 06/21/21 Making LDAP Conncetion 11:36:50 06/21/21 Making LDAP Connection to host localhost:1636 with user cn=directory manager 11:36:50 06/21/21 Checking Internet conncetion 11:36:50 06/21/21 Encoding test passwords 11:36:50 06/21/21 Rendering test templates 11:36:50 06/21/21 Reading file /opt/jans/jans-setup/templates/test/jans-auth/server/config-oxauth-test-ldap.properties.nrnd 11:36:50 06/21/21 Writing file /opt/jans/jans-setup/output/test/jans-auth/server/config-oxauth-test.properties 11:36:50 06/21/21 Running: /bin/mkdir -p /opt/jans/jans-setup/output/test/jans-auth/server 11:36:50 06/21/21 Rendering templates folder: /opt/jans/jans-setup/templates/test 11:36:50 06/21/21 Rendering template /opt/jans/jans-setup/templates/test/docs/oxauth-config-update.md 11:36:50 06/21/21 Writing rendered template /opt/jans/jans-setup/output/test/docs/oxauth-config-update.md 11:36:50 06/21/21 Rendering template /opt/jans/jans-setup/templates/test/scim-client/client/config-scim-test.properties 11:36:50 06/21/21 Writing rendered template /opt/jans/jans-setup/output/test/scim-client/client/config-scim-test.properties 11:36:50 06/21/21 Rendering template /opt/jans/jans-setup/templates/test/scim-client/data/scim-test-data-user.ldif 11:36:50 06/21/21 Writing rendered template /opt/jans/jans-setup/output/test/scim-client/data/scim-test-data-user.ldif 11:36:50 06/21/21 Rendering template /opt/jans/jans-setup/templates/test/scim-client/data/scim-test-data.ldif 11:36:50 06/21/21 Writing rendered template /opt/jans/jans-setup/output/test/scim-client/data/scim-test-data.ldif 11:36:50 06/21/21 Rendering template /opt/jans/jans-setup/templates/test/scim-client/schema/scim_test_manual_update.schema 11:36:50 06/21/21 Writing rendered template /opt/jans/jans-setup/output/test/scim-client/schema/scim_test_manual_update.schema 11:36:50 06/21/21 Rendering template /opt/jans/jans-setup/templates/test/scim-client/schema/103-scim_test.ldif 11:36:50 06/21/21 Writing rendered template /opt/jans/jans-setup/output/test/scim-client/schema/103-scim_test.ldif 11:36:50 06/21/21 Rendering template /opt/jans/jans-setup/templates/test/jans-config-api/client/config-api-server.properties 11:36:50 06/21/21 Writing rendered template /opt/jans/jans-setup/output/test/jans-config-api/client/config-api-server.properties 11:36:50 06/21/21 Rendering template /opt/jans/jans-setup/templates/test/jans-config-api/client/config-api-test.properties 11:36:50 06/21/21 Writing rendered template /opt/jans/jans-setup/output/test/jans-config-api/client/config-api-test.properties 11:36:50 06/21/21 Rendering template /opt/jans/jans-setup/templates/test/jans-config-api/data/jans-config-api.ldif 11:36:50 06/21/21 Writing rendered template /opt/jans/jans-setup/output/test/jans-config-api/data/jans-config-api.ldif 11:36:50 06/21/21 Rendering template /opt/jans/jans-setup/templates/test/jans-auth/client/config-oxauth-test-data.properties 11:36:50 06/21/21 Writing rendered template /opt/jans/jans-setup/output/test/jans-auth/client/config-oxauth-test-data.properties 11:36:50 06/21/21 Rendering template /opt/jans/jans-setup/templates/test/jans-auth/data/oxauth-test-data.ldif 11:36:50 06/21/21 Writing rendered template /opt/jans/jans-setup/output/test/jans-auth/data/oxauth-test-data.ldif 11:36:50 06/21/21 Rendering template /opt/jans/jans-setup/templates/test/jans-auth/data/oxauth-test-data-user.ldif 11:36:50 06/21/21 Writing rendered template /opt/jans/jans-setup/output/test/jans-auth/data/oxauth-test-data-user.ldif 11:36:50 06/21/21 Rendering template /opt/jans/jans-setup/templates/test/jans-auth/server/config-build.properties 11:36:50 06/21/21 Writing rendered template /opt/jans/jans-setup/output/test/jans-auth/server/config-build.properties 11:36:50 06/21/21 Rendering template /opt/jans/jans-setup/templates/test/jans-auth/server/config-oxauth-test-data.properties 11:36:50 06/21/21 Writing rendered template /opt/jans/jans-setup/output/test/jans-auth/server/config-oxauth-test-data.properties 11:36:50 06/21/21 Rendering template /opt/jans/jans-setup/templates/test/jans-auth/server/config-oxauth.properties 11:36:50 06/21/21 Writing rendered template /opt/jans/jans-setup/output/test/jans-auth/server/config-oxauth.properties 11:36:50 06/21/21 Rendering template /opt/jans/jans-setup/templates/test/jans-auth/schema/oxauth_index.txt 11:36:50 06/21/21 Writing rendered template /opt/jans/jans-setup/output/test/jans-auth/schema/oxauth_index.txt 11:36:50 06/21/21 Rendering template /opt/jans/jans-setup/templates/test/jans-auth/schema/102-oxauth_test.ldif 11:36:50 06/21/21 Writing rendered template /opt/jans/jans-setup/output/test/jans-auth/schema/102-oxauth_test.ldif 11:36:50 06/21/21 Loading test ldif files 11:36:50 06/21/21 Importing ldif file(s): /opt/jans/jans-setup/output/test/jans-auth/data/oxauth-test-data.ldif, /opt/jans/jans-setup/output/test/scim-client/data/scim-test-data.ldif, /opt/jans/jans-setup/output/test/jans-auth/data/oxauth-test-data-user.ldif, /opt/jans/jans-setup/output/test/scim-client/data/scim-test-data-user.ldif  11:36:50 06/21/21 Importing entries from /opt/jans/jans-setup/output/test/jans-auth/data/oxauth-test-data.ldif 11:36:50 06/21/21 Querying LDAP for dn inum=18CC,ou=attributes,o=jans 11:36:50 06/21/21 Adding LDAP dn:inum=18CC,ou=attributes,o=jans entry:{'description': ['Jans Client Application Type'], 'displayName': ['Jans Client Application Type'], 'inum': ['18CC'], 'jansAttrEditTyp': ['admin'], 'jansAttrName': ['jansAppTyp'], 'jansAttrOrigin': ['jansClnt'], 'jansAttrTyp': ['string'], 'jansAttrViewTyp': ['admin', 'user'], 'jansClaimName': ['jansAppType'], 'jansStatus': ['active'], 'objectClass': ['jansAttr', 'top'], 'urn': ['urn:jans:dir:attribute-def:jansAppTyp']} 11:36:50 06/21/21 Querying LDAP for dn inum=18CD,ou=attributes,o=jans 11:36:50 06/21/21 Adding LDAP dn:inum=18CD,ou=attributes,o=jans entry:{'description': ['Jans Client ID Token Signed Response Algorithm'], 'displayName': ['Jans Client ID Token Signed Response Algorithm'], 'inum': ['18CD'], 'jansAttrEditTyp': ['admin'], 'jansAttrName': ['jansIdTknSignedRespAlg'], 'jansAttrOrigin': ['jansClnt'], 'jansAttrTyp': ['string'], 'jansAttrViewTyp': ['admin', 'user'], 'jansClaimName': ['jansIdTknSignedRespAlg'], 'jansStatus': ['active'], 'objectClass': ['jansAttr', 'top'], 'urn': ['urn:jans:dir:attribute-def:jansIdTknSignedRespAlg']} 11:36:50 06/21/21 Querying LDAP for dn inum=18CE,ou=attributes,o=jans 11:36:50 06/21/21 Adding LDAP dn:inum=18CE,ou=attributes,o=jans entry:{'description': ['Jans Client Redirect URI'], 'displayName': ['Jans Client Redirect URI'], 'inum': ['18CE'], 'jansAttrEditTyp': ['admin'], 'jansAttrName': ['jansRedirectURI'], 'jansAttrOrigin': ['jansClnt'], 'jansAttrTyp': ['string'], 'jansAttrViewTyp': ['admin', 'user'], 'jansClaimName': ['jansRedirectURI'], 'jansStatus': ['active'], 'objectClass': ['jansAttr', 'top'], 'urn': ['urn:jans:dir:attribute-def:jansRedirectURI']} 11:36:50 06/21/21 Querying LDAP for dn inum=18CF,ou=attributes,o=jans 11:36:50 06/21/21 Adding LDAP dn:inum=18CF,ou=attributes,o=jans entry:{'description': ['Jans Client Scope'], 'displayName': ['Jans Client Scope'], 'inum': ['18CF'], 'jansAttrEditTyp': ['admin'], 'jansAttrName': ['jansScope'], 'jansAttrOrigin': ['jansClnt'], 'jansAttrTyp': ['string'], 'jansAttrViewTyp': ['admin', 'user'], 'jansClaimName': ['jansScope'], 'jansStatus': ['active'], 'objectClass': ['jansAttr', 'top'], 'urn': ['urn:jans:dir:attribute-def:jansScope']} 11:36:50 06/21/21 LDAP modify replace dn:inum=6609,ou=attributes,o=jans entry:{'changetype': ['modify'], 'jansStatus': ['active'], 'replace': ['jansStatus']} 11:36:50 06/21/21 LDAP modify replace dn:inum=43F1,ou=scopes,o=jans entry:{'changetype': ['modify'], 'jansDefScope': ['true'], 'replace': ['jansDefScope']} 11:36:50 06/21/21 LDAP modify replace dn:inum=764C,ou=scopes,o=jans entry:{'changetype': ['modify'], 'jansDefScope': ['true'], 'replace': ['jansDefScope']} 11:36:50 06/21/21 LDAP modify replace dn:inum=C17A,ou=scopes,o=jans entry:{'changetype': ['modify'], 'jansDefScope': ['true'], 'replace': ['jansDefScope']} 11:36:50 06/21/21 LDAP modify replace dn:inum=D491,ou=scopes,o=jans entry:{'changetype': ['modify'], 'jansDefScope': ['true'], 'replace': ['jansDefScope']} 11:36:50 06/21/21 LDAP modify replace dn:inum=341A,ou=scopes,o=jans entry:{'changetype': ['modify'], 'jansDefScope': ['true'], 'replace': ['jansDefScope']} 11:36:50 06/21/21 LDAP modify replace dn:inum=10B2,ou=scopes,o=jans entry:{'changetype': ['modify'], 'jansDefScope': ['true'], 'replace': ['jansDefScope']} 11:36:50 06/21/21 LDAP modify add dn:inum=341A,ou=scopes,o=jans entry:{'changetype': ['modify'], 'add': ['jansClaim'], 'jansClaim': ['inum=18CF,ou=attributes,o=jans', 'inum=18CC,ou=attributes,o=jans', 'inum=18CD,ou=attributes,o=jans', 'inum=18CE,ou=attributes,o=jans']} 11:36:50 06/21/21 Querying LDAP for dn inum=7D01,ou=scopes,o=jans 11:36:50 06/21/21 Adding LDAP dn:inum=7D01,ou=scopes,o=jans entry:{'description': ['Dynamic scope org_name'], 'inum': ['7D01'], 'jansDefScope': ['true'], 'jansId': ['org_name'], 'jansScopeTyp': ['dynamic'], 'jansScrDn': ['inum=031C-5621,ou=scripts,o=jans'], 'objectClass': ['top', 'jansScope']} 11:36:50 06/21/21 Querying LDAP for dn inum=7D02,ou=scopes,o=jans 11:36:50 06/21/21 Adding LDAP dn:inum=7D02,ou=scopes,o=jans entry:{'description': ['Dynamic scope work_phone'], 'inum': ['7D02'], 'jansDefScope': ['true'], 'jansId': ['work_phone'], 'jansScopeTyp': ['dynamic'], 'jansScrDn': ['inum=031C-5622,ou=scripts,o=jans'], 'objectClass': ['top', 'jansScope']} 11:36:50 06/21/21 Querying LDAP for dn inum=0465-1DEA,ou=scopes,o=jans 11:36:50 06/21/21 Adding LDAP dn:inum=0465-1DEA,ou=scopes,o=jans entry:{'description': ['Custom scope for tests'], 'inum': ['@DBE5-84F8-631A-9172CD07-49BE0465-1DEA'], 'jansClaim': ['inum=D2E0,ou=attributes,o=jans'], 'jansDefScope': ['true'], 'jansId': ['test'], 'jansScopeTyp': ['openid'], 'objectClass': ['jansScope', 'top']} 11:36:50 06/21/21 Querying LDAP for dn inum=FF81-2D39,ou=clients,o=jans 11:36:50 06/21/21 Adding LDAP dn:inum=FF81-2D39,ou=clients,o=jans entry:{'displayName': [\"Jans Test Client (don't remove)\"], 'inum': ['FF81-2D39'], 'jansAppTyp': ['web'], 'jansClaimRedirectURI': ['https://test.dd.jans.io/jans-auth/restv1/uma/gather_claims'], 'jansClntSecret': ['/jQfeEF4+BK2c2YYy1Ig+A=='], 'jansGrantTyp': ['authorization_code', 'implicit', 'refresh_token', 'client_credentials'], 'jansIdTknSignedRespAlg': ['RS256'], 'jansRedirectURI': ['https://test.dd.jans.io/jans-auth-rp/home.htm', 'https://client.example.com/cb', 'https://client.example.com/cb1', 'https://client.example.com/cb2'], 'jansRespTyp': ['token', 'code', 'id_token'], 'jansScope': ['inum=F0C4,ou=scopes,o=jans', 'inum=10B2,ou=scopes,o=jans', 'inum=764C,ou=scopes,o=jans', 'inum=43F1,ou=scopes,o=jans', 'inum=341A,ou=scopes,o=jans', 'inum=6D99,ou=scopes,o=jans'], 'jansTknEndpointAuthMethod': ['client_secret_basic'], 'jansTrustedClnt': ['true'], 'objectClass': ['top', 'jansClnt']} 11:36:50 06/21/21 Querying LDAP for dn inum=AB77-1A2B,ou=clients,o=jans 11:36:50 06/21/21 Adding LDAP dn:inum=AB77-1A2B,ou=clients,o=jans entry:{'displayName': [\"Jans Test Resource Server Client (don't remove)\"], 'inum': ['AB77-1A2B'], 'jansAppTyp': ['web'], 'jansClaimRedirectURI': ['https://test.dd.jans.io/jans-auth/restv1/uma/gather_claims'], 'jansClntSecret': ['4xUI3+ElNiGCNA5ATS1PuA=='], 'jansGrantTyp': ['authorization_code', 'implicit', 'refresh_token', 'client_credentials'], 'jansIdTknSignedRespAlg': ['RS256'], 'jansRedirectURI': ['https://client.example.com/cb'], 'jansRespTyp': ['code', 'id_token'], 'jansScope': ['inum=6D99,ou=scopes,o=jans', 'inum=7D90,ou=scopes,o=jans'], 'jansTknEndpointAuthMethod': ['client_secret_basic'], 'jansTrustedClnt': ['true'], 'objectClass': ['top', 'jansClnt']} 11:36:50 06/21/21 Querying LDAP for dn inum=3E20,ou=clients,o=jans 11:36:50 06/21/21 Adding LDAP dn:inum=3E20,ou=clients,o=jans entry:{'displayName': [\"Jans Test Requesting Party Client (don't remove)\"], 'inum': ['3E20'], 'jansAppTyp': ['web'], 'jansClntSecret': ['xMhV6v+OoDXsiu+EMgMguQ=='], 'jansGrantTyp': ['authorization_code', 'implicit', 'refresh_token', 'client_credentials'], 'jansIdTknSignedRespAlg': ['RS256'], 'jansRedirectURI': ['https://client.example.com/cb'], 'jansRespTyp': ['code', 'id_token'], 'jansTknEndpointAuthMethod': ['client_secret_basic'], 'jansTrustedClnt': ['true'], 'objectClass': ['top', 'jansClnt']} 11:36:50 06/21/21 Querying LDAP for dn inum=5214-40D1,ou=scopes,o=jans 11:36:50 06/21/21 Adding LDAP dn:inum=5214-40D1,ou=scopes,o=jans entry:{'displayName': ['View'], 'inum': ['5214-40D1'], 'jansId': ['http://photoz.example.com/dev/scopes/view'], 'jansScopeTyp': ['uma'], 'jansUmaPolicyScrDn': ['inum=2DAF-F995,ou=scripts,o=@1736-179E-AA60-16B28F7C-B9AB,o=jans'], 'objectClass': ['jansScope', 'top']} 11:36:50 06/21/21 Querying LDAP for dn inum=B6EA-B301,ou=scopes,o=jans 11:36:50 06/21/21 Adding LDAP dn:inum=B6EA-B301,ou=scopes,o=jans entry:{'displayName': ['Add/Edit'], 'inum': ['B6EA-B301'], 'jansId': ['modify'], 'jansScopeTyp': ['uma'], 'objectClass': ['jansScope', 'top']} 11:36:50 06/21/21 Querying LDAP for dn inum=03F8-EDD7,ou=scopes,o=jans 11:36:50 06/21/21 Adding LDAP dn:inum=03F8-EDD7,ou=scopes,o=jans entry:{'displayName': ['All'], 'inum': ['03F8-EDD7'], 'jansId': ['http://photoz.example.com/dev/scopes/all'], 'jansScopeTyp': ['uma'], 'objectClass': ['jansScope', 'top']} 11:36:50 06/21/21 Querying LDAP for dn jansId=a55ede29-8f5a-461d-b06e-76caee8d40b5,ou=sector_identifiers,o=jans 11:36:50 06/21/21 Adding LDAP dn:jansId=a55ede29-8f5a-461d-b06e-76caee8d40b5,ou=sector_identifiers,o=jans entry:{'jansId': ['a55ede29-8f5a-461d-b06e-76caee8d40b5'], 'jansRedirectURI': ['https://www.jans.org', 'http://localhost:80/jans-auth-rp/home.htm', 'https://localhost:8443/jans-auth-rp/home.htm', 'https://test.dd.jans.io/jans-auth-rp/home.htm', 'https://test.dd.jans.io/jans-auth-client/test/resources/jwks.json', 'https://client.example.org/callback', 'https://client.example.org/callback2', 'https://client.other_company.example.net/callback', 'https://client.example.com/cb', 'https://client.example.com/cb1', 'https://client.example.com/cb2'], 'objectClass': ['top', 'jansSectorIdentifier']} 11:36:50 06/21/21 Querying LDAP for dn jansId=840ef58d-a7d0-4986-af7b-71ed0089ce61,ou=sector_identifiers,o=jans 11:36:50 06/21/21 Adding LDAP dn:jansId=840ef58d-a7d0-4986-af7b-71ed0089ce61,ou=sector_identifiers,o=jans entry:{'jansId': ['840ef58d-a7d0-4986-af7b-71ed0089ce61'], 'jansRedirectURI': ['https://example.com/bad_sector_identifier'], 'objectClass': ['top', 'jansSectorIdentifier']} 11:36:50 06/21/21 LDAP modify replace dn:inum=031C-5621,ou=scripts,o=jans entry:{'changetype': ['modify'], 'jansEnabled': ['true'], 'replace': ['jansEnabled']} 11:36:50 06/21/21 LDAP modify replace dn:inum=031C-5622,ou=scripts,o=jans entry:{'changetype': ['modify'], 'jansEnabled': ['true'], 'replace': ['jansEnabled']} 11:36:50 06/21/21 LDAP modify replace dn:ou=configuration,o=jans entry:{'changetype': ['modify'], 'jansAuthMode': ['basic'], 'replace': ['jansAuthMode']} 11:36:50 06/21/21 Importing entries from /opt/jans/jans-setup/output/test/scim-client/data/scim-test-data.ldif 11:36:50 06/21/21 Querying LDAP for dn inum=ADA6,ou=attributes,o=jans 11:36:50 06/21/21 Adding LDAP dn:inum=ADA6,ou=attributes,o=jans entry:{'description': ['Scim First custom attribute'], 'displayName': ['Scim Custom First'], 'inum': ['ADA6'], 'jansAttrEditTyp': ['admin', 'user'], 'jansAttrName': ['scimCustomFirst'], 'jansAttrOrigin': ['jansCustomPerson'], 'jansAttrTyp': ['string'], 'jansMultivaluedAttr': ['false'], 'jansSAML1URI': ['urn:jans:dir:attribute-def:scimCustomFirst'], 'jansSAML2URI': ['urn:oid:scimCustomFirst'], 'jansAttrViewTyp': ['admin'], 'jansScimCustomAttr': ['true'], 'jansStatus': ['active'], 'objectClass': ['top', 'jansAttr']} 11:36:50 06/21/21 Querying LDAP for dn inum=70F0,ou=attributes,o=jans 11:36:50 06/21/21 Adding LDAP dn:inum=70F0,ou=attributes,o=jans entry:{'description': ['Scim Second custom attribute'], 'displayName': ['Scim Custom Second'], 'inum': ['70F0'], 'jansAttrEditTyp': ['admin', 'user'], 'jansAttrName': ['scimCustomSecond'], 'jansAttrOrigin': ['jansCustomPerson'], 'jansAttrTyp': ['generalizedTime'], 'jansMultivaluedAttr': ['true'], 'jansSAML1URI': ['urn:jans:dir:attribute-def:scimCustomSecond'], 'jansSAML2URI': ['urn:oid:scimCustomSecond'], 'jansAttrViewTyp': ['admin'], 'jansScimCustomAttr': ['true'], 'jansStatus': ['active'], 'objectClass': ['top', 'jansAttr']} 11:36:50 06/21/21 Querying LDAP for dn inum=653A,ou=attributes,o=jans 11:36:50 06/21/21 Adding LDAP dn:inum=653A,ou=attributes,o=jans entry:{'description': ['Scim Third custom attribute'], 'displayName': ['Scim Custom Third'], 'inum': ['653A'], 'jansAttrEditTyp': ['admin', 'user'], 'jansAttrName': ['scimCustomThird'], 'jansAttrOrigin': ['jansCustomPerson'], 'jansAttrTyp': ['numeric'], 'jansMultivaluedAttr': ['false'], 'jansSAML1URI': ['urn:jans:dir:attribute-def:scimCustomThird'], 'jansSAML2URI': ['urn:oid:scimCustomThird'], 'jansAttrViewTyp': ['admin'], 'jansScimCustomAttr': ['true'], 'jansStatus': ['active'], 'objectClass': ['top', 'jansAttr']} 11:36:50 06/21/21 Importing entries from /opt/jans/jans-setup/output/test/jans-auth/data/oxauth-test-data-user.ldif 11:36:50 06/21/21 Querying LDAP for dn inum=7890,ou=groups,o=jans 11:36:50 06/21/21 Adding LDAP dn:inum=7890,ou=groups,o=jans entry:{'displayName': ['Jans Test Group 1'], 'inum': ['7890'], 'jansStatus': ['active'], 'objectClass': ['top', 'jansGrp']} 11:36:50 06/21/21 Querying LDAP for dn inum=7891,ou=groups,o=jans 11:36:50 06/21/21 Adding LDAP dn:inum=7891,ou=groups,o=jans entry:{'displayName': ['Jans Test Group 2'], 'inum': ['7891'], 'jansStatus': ['active'], 'objectClass': ['top', 'jansGrp']} 11:36:50 06/21/21 Querying LDAP for dn inum=B1F3-AEAE-B798,ou=people,o=jans 11:36:50 06/21/21 Adding LDAP dn:inum=B1F3-AEAE-B798,ou=people,o=jans entry:{'birthdate': ['19830106010101.253Z'], 'c': ['US'], 'cn': ['Test User'], 'displayName': ['Jans Auth Test User'], 'emailVerified': ['true'], 'gender': ['Male'], 'givenName': ['Test'], 'inum': ['B1F3-AEAE-B798'], 'jansBackchannelDeviceRegistrationTkn': ['dv95B2zWvZBEGbcAf3byKO'], 'jansBackchannelUsrCode': ['59b335fb-a2df-4275-be43-1b8d3cc9a5c5'], 'jansPrefUsrName': ['user'], 'jansStatus': ['active'], 'l': ['Austin'], 'locale': ['en-US'], 'mail': ['test_user@test.org'], 'memberOf': ['inum=7890,ou=groups,o=jans', 'inum=7891,ou=groups,o=jans'], 'middleName': ['User'], 'mobile': ['(512) 516-2413'], 'nickname': ['user'], 'o': ['Test'], 'objectClass': ['top', 'jansCustomPerson', 'jansPerson'], 'phoneNumberVerified': ['true'], 'picture': ['http://www.jans.org/wp-content/uploads/2012/04/mike3.png'], 'preferredLanguage': ['en_US'], 'profile': ['http://www.mywebsite.com/profile'], 'sn': ['User'], 'st': ['Texas'], 'street': ['621 East 6th Street'], 'telephoneNumber': ['(512) 516-2413'], 'uid': ['test_user'], 'updatedAt': ['20170213135512.220Z'], 'userPassword': ['test_user_password'], 'website': ['http://www.jans.org'], 'zoneinfo': ['America/Chicago']} 11:36:50 06/21/21 Querying LDAP for dn inum=B1F3-AEAE-B799,ou=people,o=jans 11:36:50 06/21/21 Adding LDAP dn:inum=B1F3-AEAE-B799,ou=people,o=jans entry:{'birthdate': ['19830106010101.253Z'], 'c': ['US'], 'cn': ['Test User2'], 'displayName': ['Jans Auth Test User2'], 'emailVerified': ['true'], 'gender': ['Male'], 'givenName': ['Test2'], 'inum': ['B1F3-AEAE-B799'], 'jansPrefUsrName': ['user2'], 'jansStatus': ['active'], 'l': ['Austin'], 'locale': ['en-US'], 'mail': ['test_user2@test.org'], 'memberOf': ['inum=7890,ou=groups,o=jans', 'inum=7891,ou=groups,o=jans'], 'middleName': ['User2'], 'mobile': ['(512) 516-2414'], 'nickname': ['user2'], 'o': ['Test'], 'objectClass': ['top', 'jansCustomPerson', 'jansPerson'], 'phoneNumberVerified': ['true'], 'picture': ['http://www.jans.org/wp-content/uploads/2012/04/mike3.png'], 'preferredLanguage': ['en_US'], 'profile': ['http://www.mywebsite.com/profile'], 'sn': ['User2'], 'st': ['Texas'], 'street': ['622 East 6th Street'], 'telephoneNumber': ['(512) 516-2414'], 'uid': ['test_user2'], 'updatedAt': ['20170213135512.220Z'], 'userPassword': ['test_user_password2'], 'website': ['http://www.jans.io'], 'zoneinfo': ['America/Chicago']} 11:36:50 06/21/21 LDAP modify add dn:inum=7890,ou=groups,o=jans entry:{'add': ['member'], 'changetype': ['modify'], 'member': ['inum=B1F3-AEAE-B798,ou=people,o=jans']} 11:36:50 06/21/21 LDAP modify add dn:inum=7891,ou=groups,o=jans entry:{'add': ['member'], 'changetype': ['modify'], 'member': ['inum=B1F3-AEAE-B798,ou=people,o=jans']} 11:36:50 06/21/21 Importing entries from /opt/jans/jans-setup/output/test/scim-client/data/scim-test-data-user.ldif 11:36:50 06/21/21 Querying LDAP for dn inum=XXXX.AAAA-1111,ou=people,o=jans 11:36:50 06/21/21 Adding LDAP dn:inum=XXXX.AAAA-1111,ou=people,o=jans entry:{'birthdate': ['20140101000000Z'], 'displayName': ['Test Aaaa 1111'], 'jansEmail': ['{\"value\":\"aaaa1111@test.email\",\"type\":\"work\",\"primary\":false,\"display\":null}'], 'jansExtId': ['11000'], 'givenName': ['Aaaa 1111'], 'inum': ['XXXX.AAAA-1111'], 'jansStatus': ['active'], 'mail': ['aaaa1111@test.email'], 'objectClass': ['top', 'jansCustomPerson', 'jansPerson'], 'sn': ['FilterTest'], 'uid': ['aaaa1111'], 'userPassword': ['{SSHA}NuYCT1iY8F6GMogft08qWxitT5Pm5wjM']} 11:36:50 06/21/21 Querying LDAP for dn inum=XXXX.AAAA-2222,ou=people,o=jans 11:36:50 06/21/21 Adding LDAP dn:inum=XXXX.AAAA-2222,ou=people,o=jans entry:{'birthdate': ['20140210000000Z'], 'displayName': ['Test Aaaa 2222'], 'jansAddres': ['{\"type\":\"work\",\"streetAddress\":\"621 East 6th Street Suite 200\",\"locality\":\"Austin\",\"region\":\"TX\",\"postalCode\":\"78701\",\"country\":\"US\",\"formatted\":\"621 East 6th Street Suite 200  Austin, TX 78701 US\",\"primary\":false}'], 'jansPhotos': ['{\"value\":\"http://some.gif/AAAA-2222_thumb.gif\",\"display\":\"AAAA-2222 thumbnail\",\"type\":\"thumbnail\",\"primary\":false}', '{\"value\":\"http://some.gif/AAAA-2222.gif\",\"display\":\"AAAA-2222\",\"type\":\"photo\",\"primary\":true}'], 'jansExtId': ['12000'], 'givenName': ['Aaaa 2222'], 'inum': ['XXXX.AAAA-2222'], 'jansStatus': ['active'], 'objectClass': ['top', 'jansCustomPerson', 'jansPerson'], 'sn': ['FilterTest'], 'uid': ['aaaa2222'], 'userPassword': ['{SSHA}NuYCT1iY8F6GMogft08qWxitT5Pm5wjM']} 11:36:50 06/21/21 Querying LDAP for dn inum=XXXX.AAAA-3333,ou=people,o=jans 11:36:50 06/21/21 Adding LDAP dn:inum=XXXX.AAAA-3333,ou=people,o=jans entry:{'birthdate': ['20140307000000Z'], 'displayName': ['Test Aaaa 3333'], 'jansExtId': ['13000'], 'givenName': ['Aaaa 3333'], 'inum': ['XXXX.AAAA-3333'], 'jansStatus': ['active'], 'objectClass': ['top', 'jansCustomPerson', 'jansPerson'], 'sn': ['FilterTest'], 'uid': ['aaaa3333'], 'userPassword': ['{SSHA}NuYCT1iY8F6GMogft08qWxitT5Pm5wjM']} 11:36:50 06/21/21 Querying LDAP for dn inum=XXXX.AAAA-4444,ou=people,o=jans 11:36:50 06/21/21 Adding LDAP dn:inum=XXXX.AAAA-4444,ou=people,o=jans entry:{'birthdate': ['20140425000000Z'], 'displayName': ['Test Aaaa 4444'], 'jansExtId': ['14000'], 'givenName': ['Aaaa 4444'], 'inum': ['XXXX.AAAA-4444'], 'jansStatus': ['active'], 'objectClass': ['top', 'jansCustomPerson', 'jansPerson'], 'sn': ['FilterTest'], 'uid': ['aaaa4444'], 'userPassword': ['{SSHA}NuYCT1iY8F6GMogft08qWxitT5Pm5wjM']} 11:36:50 06/21/21 Querying LDAP for dn inum=XXXX.AAAA-5555,ou=people,o=jans 11:36:50 06/21/21 Adding LDAP dn:inum=XXXX.AAAA-5555,ou=people,o=jans entry:{'birthdate': ['20140518000000Z'], 'displayName': ['Test Aaaa 5555'], 'jansExtId': ['15000'], 'givenName': ['Aaaa 5555'], 'inum': ['XXXX.AAAA-5555'], 'jansStatus': ['active'], 'objectClass': ['top', 'jansCustomPerson', 'jansPerson'], 'sn': ['FilterTest'], 'uid': ['aaaa5555'], 'userPassword': ['{SSHA}NuYCT1iY8F6GMogft08qWxitT5Pm5wjM']} 11:36:50 06/21/21 Querying LDAP for dn inum=XXXX.BBBB-1111,ou=people,o=jans 11:36:50 06/21/21 Adding LDAP dn:inum=XXXX.BBBB-1111,ou=people,o=jans entry:{'birthdate': ['20150108000000Z'], 'displayName': ['Test Bbbb 1111'], 'jansEmail': ['{\"value\":\"bbbb1111@test.email\",\"type\":\"home\",\"primary\":true,\"display\":null}'], 'jansExtId': ['21000'], 'givenName': ['Bbbb 1111'], 'inum': ['XXXX.BBBB-1111'], 'jansStatus': ['active'], 'mail': ['bbbb1111@test.email'], 'objectClass': ['top', 'jansCustomPerson', 'jansPerson'], 'sn': ['FilterTest'], 'uid': ['bbbb1111'], 'userPassword': ['{SSHA}NuYCT1iY8F6GMogft08qWxitT5Pm5wjM']} 11:36:50 06/21/21 Querying LDAP for dn inum=XXXX.BBBB-2222,ou=people,o=jans 11:36:50 06/21/21 Adding LDAP dn:inum=XXXX.BBBB-2222,ou=people,o=jans entry:{'birthdate': ['20150214000000Z'], 'displayName': ['Test Bbbb 2222'], 'jansAddres': ['{\"type\":\"home\",\"streetAddress\":\"621 East 6th Street Suite 200\",\"locality\":\"Austin\",\"region\":\"TX\",\"postalCode\":\"78701\",\"country\":\"US\",\"formatted\":\"621 East 6th Street Suite 200  Austin, TX 78701 US\",\"primary\":true}'], 'jansExtId': ['22000'], 'givenName': ['Bbbb 2222'], 'inum': ['XXXX.BBBB-2222'], 'jansStatus': ['active'], 'objectClass': ['top', 'jansCustomPerson', 'jansPerson'], 'sn': ['FilterTest'], 'uid': ['bbbb2222'], 'userPassword': ['{SSHA}NuYCT1iY8F6GMogft08qWxitT5Pm5wjM']} 11:36:50 06/21/21 Querying LDAP for dn inum=XXXX.BBBB-3333,ou=people,o=jans 11:36:50 06/21/21 Adding LDAP dn:inum=XXXX.BBBB-3333,ou=people,o=jans entry:{'birthdate': ['20150321000000Z'], 'displayName': ['Test Bbbb 3333'], 'jansExtId': ['23000'], 'givenName': ['Bbbb 3333'], 'inum': ['XXXX.BBBB-3333'], 'jansStatus': ['active'], 'objectClass': ['top', 'jansCustomPerson', 'jansPerson'], 'sn': ['FilterTest'], 'uid': ['bbbb3333'], 'userPassword': ['{SSHA}NuYCT1iY8F6GMogft08qWxitT5Pm5wjM']} 11:36:50 06/21/21 Querying LDAP for dn inum=XXXX.BBBB-4444,ou=people,o=jans 11:36:50 06/21/21 Adding LDAP dn:inum=XXXX.BBBB-4444,ou=people,o=jans entry:{'birthdate': ['20150420000000Z'], 'displayName': ['Test Bbbb 4444'], 'jansExtId': ['24000'], 'givenName': ['Bbbb 4444'], 'inum': ['XXXX.BBBB-4444'], 'jansStatus': ['active'], 'objectClass': ['top', 'jansCustomPerson', 'jansPerson'], 'sn': ['FilterTest'], 'uid': ['bbbb4444'], 'userPassword': ['{SSHA}NuYCT1iY8F6GMogft08qWxitT5Pm5wjM']} 11:36:50 06/21/21 Querying LDAP for dn inum=XXXX.BBBB-5555,ou=people,o=jans 11:36:50 06/21/21 Adding LDAP dn:inum=XXXX.BBBB-5555,ou=people,o=jans entry:{'birthdate': ['20150530000000Z'], 'displayName': ['Test Bbbb 5555'], 'jansExtId': ['25000'], 'givenName': ['Bbbb 5555'], 'inum': ['XXXX.BBBB-5555'], 'jansStatus': ['active'], 'objectClass': ['top', 'jansCustomPerson', 'jansPerson'], 'sn': ['FilterTest'], 'uid': ['bbbb5555'], 'userPassword': ['{SSHA}NuYCT1iY8F6GMogft08qWxitT5Pm5wjM']} 11:36:50 06/21/21 Querying LDAP for dn inum=XXXX.CCCC-1111,ou=people,o=jans 11:36:50 06/21/21 Adding LDAP dn:inum=XXXX.CCCC-1111,ou=people,o=jans entry:{'birthdate': ['20160125000000Z'], 'displayName': ['Test Cccc 1111'], 'jansEmail': ['{\"value\":\"cccc1111@test.email\",\"type\":\"work\",\"primary\":true,\"display\":null}'], 'jansExtId': ['31000'], 'givenName': ['Cccc 1111'], 'inum': ['XXXX.CCCC-1111'], 'jansStatus': ['active'], 'mail': ['cccc1111@test.email'], 'objectClass': ['top', 'jansCustomPerson', 'jansPerson'], 'sn': ['FilterTest'], 'uid': ['cccc1111'], 'userPassword': ['{SSHA}NuYCT1iY8F6GMogft08qWxitT5Pm5wjM']} 11:36:50 06/21/21 Querying LDAP for dn inum=XXXX.CCCC-2222,ou=people,o=jans 11:36:50 06/21/21 Adding LDAP dn:inum=XXXX.CCCC-2222,ou=people,o=jans entry:{'birthdate': ['20160119000000Z'], 'displayName': ['Test Cccc 2222'], 'jansAddres': ['{\"type\":\"work\",\"streetAddress\":\"621 East 6th Street Suite 200\",\"locality\":\"Austin\",\"region\":\"TX\",\"postalCode\":\"78701\",\"country\":\"US\",\"formatted\":\"621 East 6th Street Suite 200  Austin, TX 78701 US\",\"primary\":true}'], 'jansExtId': ['32000'], 'givenName': ['Cccc 2222'], 'inum': ['XXXX.CCCC-2222'], 'jansStatus': ['active'], 'objectClass': ['top', 'jansCustomPerson', 'jansPerson'], 'sn': ['FilterTest'], 'uid': ['cccc2222'], 'userPassword': ['{SSHA}NuYCT1iY8F6GMogft08qWxitT5Pm5wjM']} 11:36:50 06/21/21 Querying LDAP for dn inum=XXXX.CCCC-3333,ou=people,o=jans 11:36:50 06/21/21 Adding LDAP dn:inum=XXXX.CCCC-3333,ou=people,o=jans entry:{'birthdate': ['20160229194603Z'], 'displayName': ['Test Cccc 3333'], 'jansExtId': ['33000'], 'givenName': ['Cccc 3333'], 'inum': ['XXXX.CCCC-3333'], 'jansStatus': ['active'], 'objectClass': ['top', 'jansCustomPerson', 'jansPerson'], 'sn': ['FilterTest'], 'uid': ['cccc3333'], 'userPassword': ['{SSHA}NuYCT1iY8F6GMogft08qWxitT5Pm5wjM']} 11:36:50 06/21/21 Querying LDAP for dn inum=XXXX.CCCC-4444,ou=people,o=jans 11:36:50 06/21/21 Adding LDAP dn:inum=XXXX.CCCC-4444,ou=people,o=jans entry:{'birthdate': ['20160315000000Z'], 'displayName': ['Test Cccc 4444'], 'jansExtId': ['34000'], 'givenName': ['Cccc 4444'], 'inum': ['XXXX.CCCC-4444'], 'jansStatus': ['active'], 'objectClass': ['top', 'jansCustomPerson', 'jansPerson'], 'sn': ['FilterTest'], 'uid': ['cccc4444'], 'userPassword': ['{SSHA}NuYCT1iY8F6GMogft08qWxitT5Pm5wjM']} 11:36:50 06/21/21 Querying LDAP for dn inum=XXXX.CCCC-5555,ou=people,o=jans 11:36:50 06/21/21 Adding LDAP dn:inum=XXXX.CCCC-5555,ou=people,o=jans entry:{'birthdate': ['20160413000000Z'], 'displayName': ['Test Cccc 5555'], 'jansExtId': ['35000'], 'givenName': ['Cccc 5555'], 'inum': ['XXXX.CCCC-5555'], 'jansStatus': ['active'], 'objectClass': ['top', 'jansCustomPerson', 'jansPerson'], 'sn': ['FilterTest'], 'uid': ['cccc5555'], 'userPassword': ['{SSHA}NuYCT1iY8F6GMogft08qWxitT5Pm5wjM']} 11:36:50 06/21/21 Querying LDAP for dn inum=XXXX.DDDD-1111,ou=people,o=jans 11:36:50 06/21/21 Adding LDAP dn:inum=XXXX.DDDD-1111,ou=people,o=jans entry:{'displayName': ['Test Dddd 1111'], 'givenName': ['Dddd 1111'], 'inum': ['XXXX.DDDD-1111'], 'jansStatus': ['active'], 'objectClass': ['top', 'jansCustomPerson', 'jansPerson'], 'sn': ['FilterTest'], 'uid': ['dddd1111 char']} 11:36:50 06/21/21 Querying LDAP for dn inum=XXXX.DDDD-2222,ou=people,o=jans 11:36:50 06/21/21 Adding LDAP dn:inum=XXXX.DDDD-2222,ou=people,o=jans entry:{'displayName': ['Test Dddd 2222'], 'givenName': ['Dddd 2222'], 'inum': ['XXXX.DDDD-2222'], 'jansStatus': ['active'], 'objectClass': ['top', 'jansCustomPerson', 'jansPerson'], 'sn': ['FilterTest'], 'uid': ['dddd2222 * \\ (char']} 11:36:50 06/21/21 Querying LDAP for dn inum=XXXX.DDDD-3333,ou=people,o=jans 11:36:50 06/21/21 Adding LDAP dn:inum=XXXX.DDDD-3333,ou=people,o=jans entry:{'displayName': ['Test Dddd 3333'], 'givenName': ['Dddd 3333'], 'inum': ['XXXX.DDDD-3333'], 'jansStatus': ['active'], 'objectClass': ['top', 'jansCustomPerson', 'jansPerson'], 'sn': ['FilterTest'], 'uid': ['dddd3333 * \\ (char) /']} 11:36:50 06/21/21 Querying LDAP for dn inum=XXXX.DDDD-4444,ou=people,o=jans 11:36:50 06/21/21 Adding LDAP dn:inum=XXXX.DDDD-4444,ou=people,o=jans entry:{'displayName': ['Test Dddd 4444'], 'givenName': ['(special chars\\)/'], 'inum': ['XXXX.DDDD-4444'], 'jansStatus': ['active'], 'objectClass': ['top', 'jansCustomPerson', 'jansPerson'], 'sn': ['FilterTest'], 'uid': ['dddd4444']} 11:36:50 06/21/21 Querying LDAP for dn inum=XXXX.EEEE-1111,ou=people,o=jans 11:36:50 06/21/21 Adding LDAP dn:inum=XXXX.EEEE-1111,ou=people,o=jans entry:{'objectClass': ['top', 'jansCustomPerson', 'jansPerson'], 'inum': ['XXXX.EEEE-1111'], 'uid': ['eeee1111'], 'jansStatus': ['active']} 11:36:50 06/21/21 Querying LDAP for dn ou=fido,inum=XXXX.EEEE-1111,ou=people,o=jans 11:36:50 06/21/21 Adding LDAP dn:ou=fido,inum=XXXX.EEEE-1111,ou=people,o=jans entry:{'objectClass': ['organizationalUnit', 'top'], 'ou': ['fido']} 11:36:50 06/21/21 Querying LDAP for dn jansId=1613218892033,ou=fido,inum=XXXX.EEEE-1111,ou=people,o=jans 11:36:50 06/21/21 Adding LDAP dn:jansId=1613218892033,ou=fido,inum=XXXX.EEEE-1111,ou=people,o=jans entry:{'objectClass': ['top', 'jansDeviceRegistration'], 'creationDate': ['20210213122132.032Z'], 'del': ['false'], 'displayName': ['My U2F key'], 'jansApp': ['https://buster.gluu.info'], 'jansCounter': ['-1'], 'jansDeviceHashCode': ['31818'], 'jansDeviceKeyHandle': ['3kyqUkMx45FVmz3uZiCdMzUeOG-KhTcOaqSPmupG88fs-E2WKy8C3TCb9FpiLFVh16vZLSQUOWPnfkd2xmG5-Q'], 'jansDeviceRegistrationConf': ['{\"publicKey\":\"BIcxc2bak_hrpV7faS0qBGeOnpNU9kSA25Uf1EBXKaaAIJju5C8a1Y6-61StKpG0LYhfnnVt4DqZdJB-AFwTBZs\",\"attestationCert\":\"MIICSjCCATKgAwIBAgIEEkpy_jANBgkqhkiG9w0BAQsFADAuMSwwKgYDVQQDEyNZdWJpY28gVTJGIFJvb3QgQ0EgU2VyaWFsIDQ1NzIwMDYzMTAgFw0xNDA4MDEwMDAwMDBaGA8yMDUwMDkwNDAwMDAwMFowLDEqMCgGA1UEAwwhWXViaWNvIFUyRiBFRSBTZXJpYWwgMjQ5NDE0OTcyMTU4MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEPYsbvS_L9ghuEHRxYBRoSEFTwcbTtLaKXoVebkB1fuIrzYmIvzvv183yHLC_XXoVDYRK_pgQPGxmB9n6rih8AqM7MDkwIgYJKwYBBAGCxAoCBBUxLjMuNi4xLjQuMS40MTQ4Mi4xLjEwEwYLKwYBBAGC5RwCAQEEBAMCBSAwDQYJKoZIhvcNAQELBQADggEBAKFPHuoAdva4R2oQor5y5g0CcbtGWy37_Hwb0S01GYmRcDJjHXldCX-jCiajJWNOhXIbwtAahjA_a8B15ZlzGeEiFIsElu7I0fT5TPQRDeYmwolEPR8PW7sjnKE-gdHVqp31r442EmR1v8I68GKDFXJSdi_2iHm88O9XjVXWf5UbTzK2PIrqWw-Zxn19gUp_9ab1Lfg-iUo6XZyLguf4vI2vTIAXX_iXL9p5Mz7EZdgG6syUjxurIgRalVWKSMICJtrAA9QfvJ4F6iimu14QpJ3gYKCk9qJnajTWjEq-jGGHQ1W5An6CjKngZLAC1i6NjPB0SSF1PTXjyHxdV3lFPnc\"}'], 'jansId': ['1613218892033'], 'jansStatus': ['active'], 'personInum': ['XXXX.EEEE-1111']} 11:36:50 06/21/21 Querying LDAP for dn jansId=7613218892033,ou=fido,inum=XXXX.EEEE-1111,ou=people,o=jans 11:36:50 06/21/21 Adding LDAP dn:jansId=7613218892033,ou=fido,inum=XXXX.EEEE-1111,ou=people,o=jans entry:{'objectClass': ['top', 'jansDeviceRegistration'], 'creationDate': ['20210213122132.032Z'], 'del': ['false'], 'jansApp': ['https://buster.gluu.info'], 'jansCounter': ['-1'], 'jansDeviceHashCode': ['31818'], 'jansDeviceKeyHandle': ['3kyqUkMx45FVmz3uZiCdMzUeOG-KhTcOaqSPmupG88fs-E2WKy8C3TCb9FpiLFVh16vZLSQUOWPnfkd2xmG5-Q'], 'jansDeviceRegistrationConf': ['{\"publicKey\":\"BIcxc2bak_hrpV7faS0qBGeOnpNU9kSA25Uf1EBXKaaAIJju5C8a1Y6-61StKpG0LYhfnnVt4DqZdJB-AFwTBZs\",\"attestationCert\":\"MIICSjCCATKgAwIBAgIEEkpy_jANBgkqhkiG9w0BAQsFADAuMSwwKgYDVQQDEyNZdWJpY28gVTJGIFJvb3QgQ0EgU2VyaWFsIDQ1NzIwMDYzMTAgFw0xNDA4MDEwMDAwMDBaGA8yMDUwMDkwNDAwMDAwMFowLDEqMCgGA1UEAwwhWXViaWNvIFUyRiBFRSBTZXJpYWwgMjQ5NDE0OTcyMTU4MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEPYsbvS_L9ghuEHRxYBRoSEFTwcbTtLaKXoVebkB1fuIrzYmIvzvv183yHLC_XXoVDYRK_pgQPGxmB9n6rih8AqM7MDkwIgYJKwYBBAGCxAoCBBUxLjMuNi4xLjQuMS40MTQ4Mi4xLjEwEwYLKwYBBAGC5RwCAQEEBAMCBSAwDQYJKoZIhvcNAQELBQADggEBAKFPHuoAdva4R2oQor5y5g0CcbtGWy37_Hwb0S01GYmRcDJjHXldCX-jCiajJWNOhXIbwtAahjA_a8B15ZlzGeEiFIsElu7I0fT5TPQRDeYmwolEPR8PW7sjnKE-gdHVqp31r442EmR1v8I68GKDFXJSdi_2iHm88O9XjVXWf5UbTzK2PIrqWw-Zxn19gUp_9ab1Lfg-iUo6XZyLguf4vI2vTIAXX_iXL9p5Mz7EZdgG6syUjxurIgRalVWKSMICJtrAA9QfvJ4F6iimu14QpJ3gYKCk9qJnajTWjEq-jGGHQ1W5An6CjKngZLAC1i6NjPB0SSF1PTXjyHxdV3lFPnc\"}'], 'jansId': ['7613218892033'], 'jansStatus': ['active'], 'personInum': ['XXXX.EEEE-1111'], 'jansDeviceData': ['{\"uuid\":\"12748db61-754f-3481-b2e5-5dc968deba6b\",\"type\":\"normal\",\"platform\":\"android\",\"name\":\"iSM-J110M\",\"os_name\":\"lollipop_mr1\",\"os_version\":\"-5.1.1\",\"custom_data\":null,\"push_token\":null}']} 11:36:50 06/21/21 Querying LDAP for dn ou=fido2_register,inum=XXXX.EEEE-1111,ou=people,o=jans 11:36:50 06/21/21 Adding LDAP dn:ou=fido2_register,inum=XXXX.EEEE-1111,ou=people,o=jans entry:{'objectClass': ['organizationalUnit', 'top'], 'ou': ['fido2_register']} 11:36:50 06/21/21 Querying LDAP for dn jansId=61a53f4c-07d3-4d3e-84f0-488cdeef5fd2,ou=fido2_register,inum=XXXX.EEEE-1111,ou=people,o=jans 11:36:50 06/21/21 Adding LDAP dn:jansId=61a53f4c-07d3-4d3e-84f0-488cdeef5fd2,ou=fido2_register,inum=XXXX.EEEE-1111,ou=people,o=jans entry:{'objectClass': ['top', 'jansFido2RegistrationEntry'], 'creationDate': ['20210213122333.811Z'], 'displayName': ['Black Fido2 key'], 'jansCodeChallenge': ['6PVFB1E_xkZJJoIJU2wB4ClOOjHQdwmWvpJSU1VFQLA'], 'jansCodeChallengeHash': ['76069'], 'jansCounter': ['0'], 'jansId': ['61a53f4c-07d3-4d3e-84f0-488cdeef5fd2'], 'jansPublicKeyId': ['Ohf3r7UJ8kKOSqV-GVNjToOIoDLz1izDrnPFlB9P1UlXp_zdCpLrvh6aa7ngZV6bywmEJ42kCk06zo0nfeCcMQ'], 'jansRegistrationData': ['{\"createdDate\":1613219013811,\"updatedDate\":1613219022408,\"createdBy\":\"test\",\"updatedBy\":\"test\",\"username\":\"test\",\"domain\":\"buster.gluu.info\",\"userId\":\"XWt4NghuevFiawUdwMJnlOdkaCksuWhX25h1MANMFZM\",\"challenge\":\"6PVFB1E_xkZJJoIJU2wB4ClOOjHQdwmWvpJSU1VFQLA\",\"attenstationRequest\":\"{\\\"attestation\\\":\\\"direct\\\",\\\"displayName\\\":\\\"test\\\",\\\"username\\\":\\\"test\\\"}\",\"attenstationResponse\":\"{\\\"type\\\":\\\"public-key\\\",\\\"id\\\":\\\"Ohf3r7UJ8kKOSqV-GVNjToOIoDLz1izDrnPFlB9P1UlXp_zdCpLrvh6aa7ngZV6bywmEJ42kCk06zo0nfeCcMQ\\\",\\\"response\\\":{\\\"attestationObject\\\":\\\"o2NmbXRmcGFja2VkZ2F0dFN0bXSjY2FsZyZjc2lnWEgwRgIhAL7tjJTwzki4ZK3zxYIEab1MMpOjRaRG3-D3Wb_JSwLfAiEA7wsdZJKB30WELzjlTwCejPLv8FD4rVKBtZGUUz3fvk5jeDVjgVkCwTCCAr0wggGloAMCAQICBBisRsAwDQYJKoZIhvcNAQELBQAwLjEsMCoGA1UEAxMjWXViaWNvIFUyRiBSb290IENBIFNlcmlhbCA0NTcyMDA2MzEwIBcNMTQwODAxMDAwMDAwWhgPMjA1MDA5MDQwMDAwMDBaMG4xCzAJBgNVBAYTAlNFMRIwEAYDVQQKDAlZdWJpY28gQUIxIjAgBgNVBAsMGUF1dGhlbnRpY2F0b3IgQXR0ZXN0YXRpb24xJzAlBgNVBAMMHll1YmljbyBVMkYgRUUgU2VyaWFsIDQxMzk0MzQ4ODBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IABHnqOyx8SXAQYiMM0j_rYOUpMXHUg_EAvoWdaw-DlwMBtUbN1G7PyuPj8w-B6e1ivSaNTB69N7O8vpKowq7rTjqjbDBqMCIGCSsGAQQBgsQKAgQVMS4zLjYuMS40LjEuNDE0ODIuMS43MBMGCysGAQQBguUcAgEBBAQDAgUgMCEGCysGAQQBguUcAQEEBBIEEMtpSB6P90A5k-wKJymhVKgwDAYDVR0TAQH_BAIwADANBgkqhkiG9w0BAQsFAAOCAQEAl50Dl9hg-C7hXTEceW66-yL6p-CE2bq0xhu7V_PmtMGKSDe4XDxO2-SDQ_TWpdmxztqK4f7UkSkhcwWOXuHL3WvawHVXxqDo02gluhWef7WtjNr4BIaM-Q6PH4rqF8AWtVwqetSXyJT7cddT15uaSEtsN21yO5mNLh1DBr8QM7Wu-Myly7JWi2kkIm0io1irfYfkrF8uCRqnFXnzpWkJSX1y9U4GusHDtEE7ul6vlMO2TzT566Qay2rig3dtNkZTeEj-6IS93fWxuleYVM_9zrrDRAWVJ-Vt1Zj49WZxWr5DAd0ZETDmufDGQDkSU-IpgD867ydL7b_eP8u9QurWeWhhdXRoRGF0YVjEHOj4_PrcJxw8Yk9maRxLYDamAqtUDLg96h2pK39v2ClBAAAARctpSB6P90A5k-wKJymhVKgAQDoX96-1CfJCjkqlfhlTY06DiKAy89Ysw65zxZQfT9VJV6f83QqS674emmu54GVem8sJhCeNpApNOs6NJ33gnDGlAQIDJiABIVggYbZ9FhWsyfBF6dPo7dJFWG27MbX_wWf1DBoKl0YupMkiWCCnG0g4QhZpzKMuYfK5No_00xqXmsmwtIcjt8-wN4yo4g\\\",\\\"clientDataJSON\\\":\\\"eyJjaGFsbGVuZ2UiOiI2UFZGQjFFX3hrWkpKb0lKVTJ3QjRDbE9PakhRZHdtV3ZwSlNVMVZGUUxBIiwiZXh0cmFfa2V5c19tYXlfYmVfYWRkZWRfaGVyZSI6ImRvIG5vdCBjb21wYXJlIGNsaWVudERhdGFKU09OIGFnYWluc3QgYSB0ZW1wbGF0ZS4gU2VlIGh0dHBzOi8vZ29vLmdsL3lhYlBleCIsIm9yaWdpbiI6Imh0dHBzOi8vYnVzdGVyLmdsdXUuaW5mbyIsInR5cGUiOiJ3ZWJhdXRobi5jcmVhdGUifQ\\\"},\\\"clientExtensionResults\\\":{}}\",\"uncompressedECPoint\":\"pQECAyYgASFYIGG2fRYVrMnwRenT6O3SRVhtuzG1_8Fn9QwaCpdGLqTJIlggpxtIOEIWacyjLmHyuTaP9NMal5rJsLSHI7fPsDeMqOI\",\"publicKeyId\":\"Ohf3r7UJ8kKOSqV-GVNjToOIoDLz1izDrnPFlB9P1UlXp_zdCpLrvh6aa7ngZV6bywmEJ42kCk06zo0nfeCcMQ\",\"type\":\"public-key\",\"status\":\"registered\",\"counter\":0,\"attestationType\":\"packed\",\"signatureAlgorithm\":-7,\"applicationId\":null}'], 'jansStatus': ['registered'], 'personInum': ['XXXX.EEEE-1111']} 11:36:50 06/21/21 Querying LDAP for dn jansId=0a3236fe-ec36-4308-80dc-9bf6319d780c,ou=fido2_register,inum=XXXX.EEEE-1111,ou=people,o=jans 11:36:50 06/21/21 Adding LDAP dn:jansId=0a3236fe-ec36-4308-80dc-9bf6319d780c,ou=fido2_register,inum=XXXX.EEEE-1111,ou=people,o=jans entry:{'objectClass': ['top', 'jansFido2RegistrationEntry'], 'creationDate': ['20210213122402.477Z'], 'displayName': ['Blue Fido2 key'], 'jansCodeChallenge': ['mXhvHlh0_udGlTyHkoVXJoLmxlD7iSxHe73_sCY4Fr8'], 'jansCodeChallengeHash': ['77976'], 'jansCounter': ['0'], 'jansId': ['0a3236fe-ec36-4308-80dc-9bf6319d780c'], 'jansPublicKeyId': ['1ASsUz7Y5TIMJsy7NQ2h3qW4iyDj00W-GcpOpGOZXLpHgXx95nDjkwWqY9hJdmMqM1cTqtWA6REI8cL1af-Z4Q'], 'jansRegistrationData': ['{\"createdDate\":1613219042477,\"updatedDate\":1613219046555,\"createdBy\":\"test\",\"updatedBy\":\"test\",\"username\":\"test\",\"domain\":\"buster.gluu.info\",\"userId\":\"KwZK_GDZMdCiPVfCuQjbCmp_ZVzDYinTRiTevsGrtZ4\",\"challenge\":\"mXhvHlh0_udGlTyHkoVXJoLmxlD7iSxHe73_sCY4Fr8\",\"attenstationRequest\":\"{\\\"attestation\\\":\\\"direct\\\",\\\"displayName\\\":\\\"test\\\",\\\"username\\\":\\\"test\\\"}\",\"attenstationResponse\":\"{\\\"type\\\":\\\"public-key\\\",\\\"id\\\":\\\"1ASsUz7Y5TIMJsy7NQ2h3qW4iyDj00W-GcpOpGOZXLpHgXx95nDjkwWqY9hJdmMqM1cTqtWA6REI8cL1af-Z4Q\\\",\\\"response\\\":{\\\"attestationObject\\\":\\\"o2NmbXRoZmlkby11MmZnYXR0U3RtdKJjc2lnWEgwRgIhALcCBL52gCn1C-1LiGrYM9hH2ixHI51bF5Bc606g3-PHAiEAoHdR5aFJ8LTUwOCRJmMW52NS4Z5vn8wfX-YHBR3eVc5jeDVjgVkCTjCCAkowggEyoAMCAQICBBJKcv4wDQYJKoZIhvcNAQELBQAwLjEsMCoGA1UEAxMjWXViaWNvIFUyRiBSb290IENBIFNlcmlhbCA0NTcyMDA2MzEwIBcNMTQwODAxMDAwMDAwWhgPMjA1MDA5MDQwMDAwMDBaMCwxKjAoBgNVBAMMIVl1YmljbyBVMkYgRUUgU2VyaWFsIDI0OTQxNDk3MjE1ODBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IABD2LG70vy_YIbhB0cWAUaEhBU8HG07S2il6FXm5AdX7iK82JiL8779fN8hywv116FQ2ESv6YEDxsZgfZ-q4ofAKjOzA5MCIGCSsGAQQBgsQKAgQVMS4zLjYuMS40LjEuNDE0ODIuMS4xMBMGCysGAQQBguUcAgEBBAQDAgUgMA0GCSqGSIb3DQEBCwUAA4IBAQChTx7qAHb2uEdqEKK-cuYNAnG7Rlst-_x8G9EtNRmJkXAyYx15XQl_owomoyVjToVyG8LQGoYwP2vAdeWZcxnhIhSLBJbuyNH0-Uz0EQ3mJsKJRD0fD1u7I5yhPoHR1aqd9a-ONhJkdb_COvBigxVyUnYv9oh5vPDvV41V1n-VG08ytjyK6lsPmcZ9fYFKf_Wm9S34PolKOl2ci4Ln-LyNr0yAF1_4ly_aeTM-xGXYBurMlI8bqyIEWpVVikjCAibawAPUH7yeBeooprteEKSd4GCgpPaiZ2o01oxKvoxhh0NVuQJ-goyp4GSwAtYujYzwdEkhdT0148h8XVd5RT53aGF1dGhEYXRhWMQc6Pj8-twnHDxiT2ZpHEtgNqYCq1QMuD3qHakrf2_YKUEAAAAAAAAAAAAAAAAAAAAAAAAAAABA1ASsUz7Y5TIMJsy7NQ2h3qW4iyDj00W-GcpOpGOZXLpHgXx95nDjkwWqY9hJdmMqM1cTqtWA6REI8cL1af-Z4aUBAgMmIAEhWCBletrDQ8HIc6TAvpbaEvMHyxD9E5UHpPIC4_4WhKRkXCJYIAI8_FFWqvXfKXmsNWYryGEiAs5TKXZphEO9pZT3R3u2\\\",\\\"clientDataJSON\\\":\\\"eyJjaGFsbGVuZ2UiOiJtWGh2SGxoMF91ZEdsVHlIa29WWEpvTG14bEQ3aVN4SGU3M19zQ1k0RnI4Iiwib3JpZ2luIjoiaHR0cHM6Ly9idXN0ZXIuZ2x1dS5pbmZvIiwidHlwZSI6IndlYmF1dGhuLmNyZWF0ZSJ9\\\"},\\\"clientExtensionResults\\\":{}}\",\"uncompressedECPoint\":\"pQECAyYgASFYIGV62sNDwchzpMC-ltoS8wfLEP0TlQek8gLj_haEpGRcIlggAjz8UVaq9d8peaw1ZivIYSICzlMpdmmEQ72llPdHe7Y\",\"publicKeyId\":\"1ASsUz7Y5TIMJsy7NQ2h3qW4iyDj00W-GcpOpGOZXLpHgXx95nDjkwWqY9hJdmMqM1cTqtWA6REI8cL1af-Z4Q\",\"type\":\"public-key\",\"status\":\"registered\",\"counter\":0,\"attestationType\":\"fido-u2f\",\"signatureAlgorithm\":-7,\"applicationId\":null}'], 'jansStatus': ['registered'], 'personInum': ['XXXX.EEEE-1111']} 11:36:50 06/21/21 Downloading https://raw.githubusercontent.com/JanssenProject/jans-auth-server/master/client/src/test/resources/jans_test_client_keys.zip to /var/www/html/jans_test_client_keys.zip 11:36:51 06/21/21 Download size: 9043 bytes 11:36:51 06/21/21 Running: /usr/bin/unzip -o /var/www/html/jans_test_client_keys.zip -d /var/www/html/ 11:36:51 06/21/21 Archive:  /var/www/html/jans_test_client_keys.zip   inflating: /var/www/html/jans-auth-client/test/resources/jwks.json  </p> <p>11:36:51 06/21/21 Running: /bin/rm -rf jans_test_client_keys.zip 11:36:51 06/21/21 Running: /bin/chown -R root:www-data /var/www/html/jans-auth-client 11:36:51 06/21/21 Copying file /opt/jans/jans-setup/output/test/jans-auth/schema/102-oxauth_test.ldif to /opt/opendj/config/schema/ 11:36:51 06/21/21 Copied /opt/jans/jans-setup/output/test/jans-auth/schema/102-oxauth_test.ldif to /opt/opendj/config/schema/ 11:36:51 06/21/21 Copying file /opt/jans/jans-setup/output/test/scim-client/schema/103-scim_test.ldif to /opt/opendj/config/schema/ 11:36:51 06/21/21 Copied /opt/jans/jans-setup/output/test/scim-client/schema/103-scim_test.ldif to /opt/opendj/config/schema/ 11:36:51 06/21/21 Running: cp -f /opt/opendj/config/schema/77-customAttributes.ldif /opt/opendj/config/schema/77-customAttributes.ldif.jans-1.0.0-1~ 11:36:51 06/21/21 Copying file /tmp/77-customAttributes.ldif to /opt/opendj/config/schema/ 11:36:51 06/21/21 Copied /tmp/77-customAttributes.ldif to /opt/opendj/config/schema/ 11:36:51 06/21/21 Making opndj listen all interfaces 11:36:51 06/21/21 Re-starting opendj 11:36:51 06/21/21 Running: /usr/bin/systemctl stop opendj 11:36:56 06/21/21 Run: /usr/bin/systemctl stop opendj with result code: 0 11:36:56 06/21/21 Running: /usr/bin/systemctl start opendj 11:37:02 06/21/21 Run: /usr/bin/systemctl start opendj with result code: 0 11:37:02 06/21/21 Re-binding opendj 11:37:07 06/21/21 Try binding 1 ... 11:37:07 06/21/21 Binding to opendj was successful 11:37:07 06/21/21 Creating Index ds-cfg-attribute=myCustomAttr1,cn=Index,ds-cfg-backend-id=userRoot,cn=Backends,cn=config 11:37:07 06/21/21 Creating Index ds-cfg-attribute=myCustomAttr2,cn=Index,ds-cfg-backend-id=userRoot,cn=Backends,cn=config 11:37:07 06/21/21 Searching database for dn ou=configuration,o=jans with filter (&amp;(jansDbAuth=*)(objectClass=jansAppConf)) 11:37:07 06/21/21 Creating client_keystore.jks 11:37:07 06/21/21 Running: /opt/jre/bin/keytool -genkey -alias dummy -keystore /opt/jans/jans-setup/output/test/jans-auth/client/client_keystore.jks -storepass secret -keypass secret -dname 'CN=Jans Auth CA Certificates' 11:37:08 06/21/21 Running: /opt/jre/bin/java -Dlog4j.defaultInitOverride=true -cp /opt/dist/jans/jans-auth-client-jar-with-dependencies.jar io.jans.as.client.util.KeyGenerator -keystore /opt/jans/jans-setup/output/test/jans-auth/client/client_keystore.jks -keypasswd secret -sig_keys RS256 RS384 RS512 ES256 ES384 ES512 -enc_keys RS256 RS384 RS512 ES256 ES384 ES512 -dnname 'CN=Jans Auth CA Certificates' -expiration 365 &gt; /opt/jans/jans-setup/output/test/jans-auth/client/keys_client_keystore.json 11:37:11 06/21/21 Copying file /opt/jans/jans-setup/output/test/jans-auth/client/client_keystore.jks to /opt/jans/jans-setup/output/test/jans-auth/server 11:37:11 06/21/21 Copied /opt/jans/jans-setup/output/test/jans-auth/client/client_keystore.jks to /opt/jans/jans-setup/output/test/jans-auth/server 11:37:11 06/21/21 Copying file /opt/jans/jans-setup/output/test/jans-auth/client/keys_client_keystore.json to /opt/jans/jans-setup/output/test/jans-auth/server 11:37:11 06/21/21 Copied /opt/jans/jans-setup/output/test/jans-auth/client/keys_client_keystore.json to /opt/jans/jans-setup/output/test/jans-auth/server 11:37:11 06/21/21 Running: a2dismod mod_token_binding 11:37:11 06/21/21 Running: /usr/bin/systemctl stop apache2 11:37:12 06/21/21 Run: /usr/bin/systemctl stop apache2 with result code: 0 11:37:12 06/21/21 Running: /usr/bin/systemctl start apache2 11:37:12 06/21/21 Run: /usr/bin/systemctl start apache2 with result code: 0 11:37:12 06/21/21 Running: /usr/bin/systemctl stop jans-auth 11:37:13 06/21/21 Run: /usr/bin/systemctl stop jans-auth with result code: 0 11:37:13 06/21/21 Running: /usr/bin/systemctl start jans-auth 11:37:25 06/21/21 Run: /usr/bin/systemctl start jans-auth with result code: 0 11:37:25 06/21/21 Running: /usr/bin/tar -zxf /opt/jans/jans-setup/static/eleven/jans-eleven-tokens.tar.gz -C /var/lib/softhsm/tokens/ 11:37:25 06/21/21 Running: /usr/bin/systemctl stop jans-scim 11:37:26 06/21/21 Run: /usr/bin/systemctl stop jans-scim with result code: 0 11:37:26 06/21/21 Running: /usr/bin/systemctl start jans-scim 11:37:38 06/21/21 Run: /usr/bin/systemctl start jans-scim with result code: 0 11:37:38 06/21/21 Running: /usr/bin/systemctl stop jans-fido2 11:37:39 06/21/21 Run: /usr/bin/systemctl stop jans-fido2 with result code: 0 11:37:39 06/21/21 Running: /usr/bin/systemctl start jans-fido2 11:37:51 06/21/21 Run: /usr/bin/systemctl start jans-fido2 with result code: 0 11:37:51 06/21/21 Running: /usr/bin/systemctl stop jans-config-api 11:37:51 06/21/21 Run: /usr/bin/systemctl stop jans-config-api with result code: 0 11:37:51 06/21/21 Running: /usr/bin/systemctl start jans-config-api 11:37:51 06/21/21 Run: /usr/bin/systemctl start jans-config-api with result code: 0 11:37:51 06/21/21 Running: /usr/bin/systemctl stop jans-eleven 11:37:52 06/21/21 Run: /usr/bin/systemctl stop jans-eleven with result code: 0 11:37:52 06/21/21 Running: /usr/bin/systemctl start jans-eleven 11:38:00 06/21/21 Run: /usr/bin/systemctl start jans-eleven with result code: 0</p>"},{"location":"while-coding/janssen/janssen-notes/","title":"Janssen Notes","text":"<p>Note : many times docs mention that run this command from 'Inside the Gluu Server chroot', or 'run it from gluu container' etc. All this means one thing that you first login to the gluu container using</p> <p>/sbin/gluu-serverd login and then run commands.</p> <p>==================================</p> <p>Janssen local install installation instructions :</p> <p>===================================</p> <p>https://github.com/JanssenProject/jans-setup</p> <pre><code>cd ~\n\ndhaval@dhaval-Lenovo-U41-70:~$ curl https://raw.githubusercontent.com/JanssenProject/jans/main/jans-linux-setup/install.py &gt; install.py\n\n  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\n\n                                 Dload  Upload   Total   Spent    Left  Speed\n\n100  8911  100  8911    0     0  16876      0 --:--:-- --:--:-- --:--:-- 16876\n\n\n\n\n\ndhaval@dhaval-Lenovo-U41-70:~$ sudo python3 install.py or if you want to install with test data then sudo python3 install.py --args=\"-t\"\n\n[sudo] password for dhaval: \nDownloading https://github.com/JanssenProject/jans-setup/archive/master.zip to /opt/dist/jans/jans-setup.zip\nDownloading https://corretto.aws/downloads/resources/11.0.8.10.1/amazon-corretto-11.0.8.10.1-linux-x64.tar.gz to /opt/dist/app/amazon-corretto-11.0.8.10.1-linux-x64.tar.gz\nDownloading https://repo1.maven.org/maven2/org/eclipse/jetty/jetty-distribution/9.4.31.v20200723/jetty-distribution-9.4.31.v20200723.tar.gz to /opt/dist/app/jetty-distribution-9.4.31.v20200723.tar.gz\nDownloading https://repo1.maven.org/maven2/org/python/jython-installer/2.7.2/jython-installer-2.7.2.jar to /opt/dist/app/jython-installer-2.7.2.jar\nDownloading https://ox.gluu.org/maven/org/gluufederation/opendj/opendj-server-legacy/4.0.0.gluu/opendj-server-legacy-4.0.0.gluu.zip to /opt/dist/app/opendj-server-legacy-4.0.0.gluu.zip\nDownloading https://maven.jans.io/maven/io/jans/jans-auth-server/1.0.0-SNAPSHOT/jans-auth-server-1.0.0-SNAPSHOT.war to /opt/dist/jans/jans-auth.war\nDownloading https://maven.jans.io/maven/io/jans/jans-auth-client/1.0.0-SNAPSHOT/jans-auth-client-1.0.0-SNAPSHOT-jar-with-dependencies.jar to /opt/dist/jans/jans-auth-client-jar-with-dependencies.jar\nDownloading https://maven.jans.io/maven/io/jans/jans-config-api/1.0.0-SNAPSHOT/jans-config-api-1.0.0-SNAPSHOT-runner.jar to /opt/dist/jans/jans-config-api-runner.jar\nDownloading https://maven.jans.io/maven/io/jans/jans-fido2-server/1.0.0-SNAPSHOT/jans-fido2-server-1.0.0-SNAPSHOT.war to /opt/dist/jans/jans-fido2.war\nDownloading https://maven.jans.io/maven/io/jans/jans-scim-server/1.0.0-SNAPSHOT/jans-scim-server-1.0.0-SNAPSHOT.war to /opt/dist/jans/jans-scim.war\nDownloading https://jenkins.jans.io/maven/io/jans/jans-eleven-server/1.0.0-SNAPSHOT/jans-eleven-server-1.0.0-SNAPSHOT.war to /opt/dist/jans/jans-eleven.war\nDownloading https://api.github.com/repos/JanssenProject/jans-cli/tarball/main to /opt/dist/jans/jans-cli.tgz\nDownloading https://github.com/sqlalchemy/sqlalchemy/archive/rel_1_3_23.zip to /opt/dist/jans/sqlalchemy.zip\nExtracting jans-setup package\nDownloading https://raw.githubusercontent.com/JanssenProject/jans-config-api/master/docs/jans-config-api-swagger.yaml to /opt/jans/jans-setup/setup_app/data/jans-config-api-swagger.yaml\nDownloading https://raw.githubusercontent.com/JanssenProject/jans-scim/master/server/src/main/resources/jans-scim-openapi.yaml to /opt/jans/jans-setup/setup_app/data/jans-scim-openapi.yaml\nLaunching Janssen Setup\nThe following packages are required for Janssen Server\napache2 python3-ldap3 python3-ruamel.yaml python3-pymysql\nDo you want to install these now? [Y/n] y  \nInstalling packages apache2 python3-ldap3 python3-ruamel.yaml python3-pymysql\n\nInstalling Janssen Server...\n\nFor more info see:\n  /opt/jans/jans-setup/logs/setup.log  \n  /opt/jans/jans-setup/logs/setup_error.log\n\nDetected OS     :   ubuntu 20\nJanssen Version :  1.0.0-SNAPSHOT\nDetected init   :  systemd\nDetected Apache :  2.4\n\nDo you acknowledge that use of the Janssen Server is under the Apache-2.0 license? [N|y] : y\nEnter IP Address [192.168.1.6] : \nEnter hostname [dhaval-Lenovo-U41-70] : localhost\nHostname can't be localhost\nEnter hostname [dhaval-Lenovo-U41-70] : dd-lenovo\nEnter your city or locality : Ahm\nEnter your state or province two letter code : gj\nEnter two letter Country Code : in\nEnter Organization Name : myorg\nEnter email address for support at your organization : support@myorg.org\nEnter maximum RAM for applications in MB [6545] : 2000\nEnter Password for LDAP Admin (cn=directory manager) [z7hmG8] : myldapadmin\nEnter Password for Admin User [myldapadmin] : myadmin\nInstall Apache HTTPD Server [Yes] : y\nInstall OAuth2 Authorization Server? [Yes] : y\nInstall Jans Auth Config Api? [Yes] : y\nInstall Scim Server? [Yes] : y\nInstall Fido2 Server? [Yes] : y\nInstall Eleven Server? [No] : y\n\nhostname                                                dd-lenovo\norgName                                                     myorg\nos                                                         ubuntu\ncity                                                          Ahm\nstate                                                          gj\ncountryCode                                                    in\nApplications max ram (MB)                                    1600\nOpenDJ max ram (MB)                                           400\nBackends                                                   opendj\nJava Type                                                     jre\nInstall Apache 2 web server                                  True\nInstall Auth Server                                          True\nInstall Jans Auth Config Api                                 True\nInstall Fido2 Server                                         True\nInstall Scim Server                                          True\nInstall Eleven Server                                        True\n\nProceed with these values [Y|n] y\n\u2713 jans             Calculating application memory\n                                                 \u2713 jre              Installing Jre\n                                                                                  \u2713 jetty            Installing Jetty\n                              \u2713 jans             Calculating application memory\n                                                                               \u2713 jre              Installing Jre\n                                                                                                                \u2713 jetty            Installing Jetty\n                                                            \u2713 jans             Calculating application memory\n                                                                                                             \u2713 jre              Installing Jre\n                                                                                                                                              \u2713 jetty                                                                                           \u2713 jans             Calculating application memory\n                                                                                                                                           \u2713 jre              Installing Jre\n                                                                                                                        \u2713 jans             Calculating application memory\n                   \u2713 jre              Installing Jre\n                                                                                                                                                     \u2713 jans             Calculating application memory\n                                                \u2713 jre              Installing Jre\n                                                                                 \u2713 jetty            Installing Jetty\n                             \u2713 jans             Calculating application memory\n                                                                              \u2713 jre              Installing Jre\n                                                                                                               \u2713 jetty            Installing Jetty\n                                                           \u2713 jans             Calculating application memory\n                                                                                                            \u2713 jre              Installing Jre\n                                                                                                                                             \u2713 jetty                                                                                           \u2713 jans             Calculating application memory\n                                                                                                                                          \u2713 jre              Installing Jre\n                                                                                                                       \u2713 jans             Calculating application memory\n                  \u2713 jre              Installing Jre\n                                                                                                                                                     \u2713 jans             Calculating \n\nJanssen Server installation successful!\nCLI available to manage Jannsen Server:\n/opt/jans/jans-cli/config-cli.py\n/opt/jans/jans-cli/scim-cli.py\n\n\n\u2713 jans             Calculating application memory\n\u2713 jre              Installing Jre\n\u2713 jetty            Installing Jetty\n\u2713 jython           Installing Jython\n\u2713 opendj           OpenDJ post installation\n\u2713 apache2          Configuring apache2\n\u2713 jans-auth        Generating OAuth openid keys\n\u2713 jans-config-api  Installing Jans-Config-Api\n\u2713 jans-fido2       Installing Jans-Fido2\n\u2713 jans-scim        Installing Jans-Scim\n\u2713 jans-eleven      Installing softhsm\n\u2713 jans-cli         Installing Jans Cli\n\u2713 post-setup       Starting Jans Eleven\n</code></pre> <pre><code>dhaval@dhaval-Lenovo-U41-70:~$ \n\n\npython3 install.py\n\nsudo python3 install.py\n\n\n\nquestions and responses : \n\n--------------------------------\n\nDo you acknowledge that use of the Janssen Server is under the Apache-2.0 license? [N|y] : y\n\nEnter IP Address [192.168.1.6] : \n\nEnter hostname [dhaval-Lenovo-U41-70] : localhost\n\nHostname can't be localhost\n\nEnter hostname [dhaval-Lenovo-U41-70] : dd-lenovo\n\nEnter your city or locality : Ahm\n\nEnter your state or province two letter code : gj\n\nEnter two letter Country Code : in\n\nEnter Organization Name : myorg\n\nEnter email address for support at your organization : support@myorg.org\n\nEnter maximum RAM for applications in MB [6545] : 2000\n\nEnter Password for LDAP Admin (cn=directory manager) [z7hmG8] : myldapadmin\n\nEnter Password for Admin User [myldapadmin] : myadmin\n\nInstall Apache HTTPD Server [Yes] : y\n\nInstall OAuth2 Authorization Server? [Yes] : y\n\nInstall Jans Auth Config Api? [Yes] : y\n\nInstall Scim Server? [Yes] : y\n\nInstall Fido2 Server? [Yes] : y\n\nInstall Eleven Server? [No] : y\n\n\n\nhostname                                                dd-lenovo\n\norgName                                                     myorg\n\nos                                                         ubuntu\n\ncity                                                          Ahm\n\nstate                                                          gj\n\ncountryCode                                                    in\n\nApplications max ram (MB)                                    1600\n\nOpenDJ max ram (MB)                                           400\n\nBackends                                                   opendj\n\nJava Type                                                     jre\n\nInstall Apache 2 web server                                  True\n\nInstall Auth Server                                          True\n\nInstall Jans Auth Config Api                                 True\n\nInstall Fido2 Server                                         True\n\nInstall Scim Server                                          True\n\nInstall Eleven Server                                        True\n\n\n\nProceed with these values [Y|n] Y\n\n\n\n\u2713 jans             Calculating application memory\n\n\u2713 jre              Installing Jre\n\n\u2713 jetty            Installing Jetty\n\n\u2713 jython           Installing Jython\n\n\u2713 opendj           OpenDJ post installation\n\n\u2713 apache2          Configuring apache2\n\n\u2713 jans-auth        Generating OAuth openid keys\n\n\u2713 jans-config-api  Installing Jans-Config-Api\n\n\u2713 jans-fido2       Installing Jans-Fido2\n\n\u2713 jans-scim        Installing Jans-Scim\n\n\u2713 jans-eleven      Installing softhsm\n\n\u2713 jans-cli         Installing Jans Cli\n\npost-setup       Starting Jans Scim\n\n\n\nPost setup will start all the components one by one\n\n\n\nJanssen Server installation successful!\n\nCLI available to manage Jannsen Server:\n\n/opt/jans/jans-cli/config-cli.py\n\n/opt/jans/jans-cli/scim-cli.py\n</code></pre> <p>Uninstall</p> <pre><code>dhaval@dd-lenovo:~$ sudo python3 install.py -uninstall\n[sudo] password for dhaval: \n\nThis process is irreversible.\nYou will lose all data related to Janssen Server.\n\n\n\nAre you sure to uninstall Janssen Server? [yes/N] yes\n\nUninstalling Jannsen Server...\nStopping OpenDj Server\nServer already stopped\nRemoving /etc/default/jans-auth\nStopping jans-auth\nRemoving /etc/default/jans-fido2\nStopping jans-fido2\nRemoving /etc/default/jans-scim\nStopping jans-scim\nRemoving /etc/default/jans-eleven\nStopping jans-eleven\nExecuting rm -r -f /etc/certs\nExecuting rm -r -f /etc/jans\nExecuting rm -r -f /opt/jans\nExecuting rm -r -f /opt/amazon-corretto*\nExecuting rm -r -f /opt/jre\nExecuting rm -r -f /opt/jetty*\nExecuting rm -r -f /opt/jython*\nExecuting rm -r -f /opt/opendj\nExecuting rm -r -f /opt/dist\ndhaval@dd-lenovo:~$\n</code></pre> <p>==================================</p> <p>Janssen local install using lxd instructions :</p> <p>===================================</p> <pre><code>snap install lxd\n\nsnap refresh\n\nlxd init # Default settings looks good. I only specified 'dir' (question 4) storage method to access container filesystem /var/snap/lxd/common/lxd/storage-pools/default/containers/ubuntu20/rootfs/\n\nlxc launch images:ubuntu/20.04/amd64 ubuntu20\n\nlxc config device add ubuntu20 myport443 proxy listen=tcp:0.0.0.0:443 connect=tcp:127.0.0.1:443\n\nlxc config device add ubuntu20 myport1636 proxy listen=tcp:0.0.0.0:1636 connect=tcp:127.0.0.1:1636\n\nlxc config set ubuntu20 limits.memory 4GB\n\nlxc exec ubuntu20 -- sudo --user root --login\n\napt install curl\n\ncurl https://raw.githubusercontent.com/JanssenProject/jans/main/jans-linux-setup/install.py &gt; install.py\n\npython3 install.py\nafter this, following questionnaire will come uup:\nDo you acknowledge that use of the Janssen Server is under the Apache-2.0 license? [N|y] : y\nEnter IP Address [10.203.235.5] : \nEnter hostname [ubuntu20.lxd] : \nEnter your city or locality : ah\nEnter your state or province two letter code : gj\nEnter two letter Country Code : in\nEnter Organization Name : gluu inc.\nEnter email address for support at your organization : dhaval@gluu.org\nEnter maximum RAM for applications in MB [6545] : \nEnter Password for LDAP Admin (cn=directory manager) [WCZy19] : Pwd@g1uu\nEnter Password for Admin User [Pwd@g1uu] : \nInstall Apache HTTPD Server [Yes] : \nInstall OAuth2 Authorization Server? [Yes] : \nInstall Jans Auth Config Api? [Yes] : \nInstall Scim Server? [Yes] : \nInstall Fido2 Server? [Yes] : \nInstall Eleven Server? [No] : Yes\n\nhostname                                             ubuntu20.lxd\norgName                                                 gluu inc.\nos                                                         ubuntu\ncity                                                           ah\nstate                                                          gj\ncountryCode                                                    in\nApplications max ram (MB)                                    5236\nOpenDJ max ram (MB)                                          1309\nBackends                                                   opendj\nJava Type                                                     jre\nInstall Apache 2 web server                                  True\nInstall Auth Server                                          True\nInstall Jans Auth Config Api                                 True\nInstall Fido2 Server                                         True\nInstall Scim Server                                          True\nInstall Eleven Server                                        True\n</code></pre> <p>=======================================  installing gluu server on GCP from https://www.youtube.com/watch?v=0RskrQG8km8&amp;t=99s ( but this installs 4.1 ) ==================================</p> <p>=================================================== installing gluu gateway on GCP VM  =================================================== create a E2 instance ( 1 cpu, 2gb ram, 10 gb hdd, enable https, boot  image = ubuntu 18 )</p> <p>Open browser shell from GCP dashboard 'ssh' dropdown sudo su start following  https://gluu.org/docs/gg/4.1/installation/#install-the-gluu-gateway-package</p> <p>=================================== install gluu server 4.2 on GCP (https://gluu.org/docs/gluu-server/4.2/installation-guide/install-ubuntu/) =================================== Remember that though we are installing on GCP, it is not 'cloud' install like GKE. Instead of local VM, we are having VM on GCP, that is the only difference. So, we are not following installation guide for cloud native but simple Ubuntu install.</p>"},{"location":"while-coding/janssen/janssen-notes/#for-vm-preparation","title":"For vm preparation :","text":"<p>useful video at : https://www.youtube.com/watch?v=0RskrQG8km8&amp;t=99s but use this just for understanding purpose, for exact values to be used, refer  to details below : Create a new GCP vm with values below : name: anything ( gluu-server-4-2 ) machine family : E2 type : E2-medium ( 2 cpu, 4 gb ram or 8 gb )</p> <p>Boot disk : OS(Ubuntu), version (20.04 LTS), disk ( balanced persistence ),  size (50 gb)</p> <p>firewall : select 'allow HTTPS traffic' --1,2,3 are optional. Required only if you want to access  1) click on 'Management, security, disks, networking, sole tenancy' 2) under 'security', check 'Block project-wide SSH keys' 3) create public key on your local machine from where you need ssh access to GCP vm and paste public key in 'enter public key' text area Note on how to get public key : cd ~/.ssh cat id_dsa.pub ( if this file exists then copy the content from it and paste it in the GCP text area) if this file doesn't exist then run command 'ssh-keygen -o' to generate this file and copy the content from it to GCP text area)</p> <p>When you paste public key in the 'enter public key' area, GCP will auto detect user name from public key and display it on the left of the text area.  This is your username when trying to ssh connection from your local pc to GCP vm.  So, make note of this name.  ( if you don't want to do ssh setup and all, you can skip 1,2,3 above and instead directly click 'create'. Once your VM is ready, on the GCP 'VM instance' dashboard,  you can click on drop-down under 'connect' column, and select  'open in browser window'. This will give you a in-browser commandline client.)</p> <p>click 'create' Once your VM is creaeted and if you have done ssh setup like in above 1,2,3, then you can connect to your vm from your local machine using command below : ssh -i ~/.ssh/id_rsa dhaval@34.123.24.4 here 'dhaval' is username that we noted in 3 above, and IP is 'external ip'  as mentioned on gcp 'vm instances' dashboard.</p> <p>make external IP as permanent : at this point, the external IP assinged to your VM is ephemeral. It'll change everytime when you restart your instance. To avoid this, On dashboard search for 'vpc network' and to into that section click 'external IP addresses' change type of your IP to 'static' from ephemeral</p> <p>---- now install gluu server 4.2  (reference : https://gluu.org/docs/gluu-server/4.2/installation-guide/install-ubuntu/) connect to your VM via ssh.</p> <pre><code>sudo su\necho \"deb https://repo.gluu.org/ubuntu/ focal main\" &gt; /etc/apt/sources.list.d/gluu-repo.list\ncurl https://repo.gluu.org/ubuntu/gluu-apt.key | apt-key add -\napt update\napt install gluu-server\napt-mark hold gluu-server\n---- now start the server\n/sbin/gluu-serverd enable\n/sbin/gluu-serverd start\n/sbin/gluu-serverd login\n---- start initial setup\ncd /install/community-edition-setup\n./setup.py\nFill out prompts as per below :\nroot@localhost:/install/community-edition-setup# ./setup.py\nDetected OS ubuntu 20\nWarning: Available free disk space was determined to be 34.7 GB. This is less than the required disk space of 40 GB.\nProceed anyways? [Y|n] y\n\nInstalling Gluu Server...\nDetected OS  :  ubuntu\nDetected init:  systemd\nDetected Apache:  2.4\n\nInstalling Gluu Server...\n\nFor more info see:\n  /install/community-edition-setup/setup.log  \n  /install/community-edition-setup/setup_error.log\n\nDo you acknowledge that use of the Gluu Server is under the Apache-2.0 license? [N|y] : y\nEnter IP Address [10.128.0.4] : \nEnter hostname [gluu-server-4-2.us-central1-a.c.xenon-pager-308802.internal] : gluuserver.gluu.org\nEnter your city or locality : ah\nEnter your state or province two letter code : gj\nEnter two letter Country Code : in\nEnter Organization Name : Gluu Inc\nEnter email address for support at your organization : dhaval@gluu.org\nEnter maximum RAM for applications in MB [3432] : \nEnter oxTrust Admin Password [t1Wi&amp;hUdXwvm] : \nEnter Password for LDAP Admin (cn=directory manager) [t1Wi&amp;hUdXwvm] : \nInstall oxAuth OAuth2 Authorization Server? [Yes] : \nInstall oxTrust Admin UI? [Yes] : \nInstall Apache HTTPD Server [Yes] : \nInstall Scim Server? [No] : Yes\nInstall Fido2 Server? [No] : Yes\nInstall Shibboleth SAML IDP? [No] : Yes\nInstall oxAuth RP? [No] : Yes\nInstall Passport? [No] : Yes\nInstall Casa? [No] : Yes\nPlease enter URL of oxd-server if you have one, for example: https://oxd.mygluu.org:8443\nElse leave blank to install oxd server locally.\noxd Server URL: \n  Use Authorization Server's native persistence for oxd? [No] : \nInstall Gluu Radius? [No] : Yes\n\nhostname                                      gluuserver.gluu.org\norgName                                                  Gluu Inc\nos                                                         ubuntu\ncity                                                           ah\nstate                                                          gj\ncountryCode                                                    in\nApplications max ram                                         3432\nInstall oxAuth                                               True\nInstall oxTrust                                              True\nBackends                                                   opendj\nJava Type                                                     jre\nInstall Apache 2 web server                                  True\nInstall Fido2 Server                                         True\nInstall Scim Server                                          True\nInstall Shibboleth SAML IDP                                  True\nInstall oxAuth RP                                            True\nInstall Passport                                             True\nInstall Casa                                                 True\nInstall Oxd                                                  True\nInstall Gluu Radius                                          True\n\nif all the components have been installed successfully, then you'll see below message:\n\nInstalling [#################################] Completed                  \n\nEncrypted properties file saved to /install/community-edition-setup/setup.properties.last.enc with password t1Wi&amp;hUdXwvm\nDecrypt the file with the following command if you want to re-use:\nopenssl enc -d -aes-256-cbc -in setup.properties.last.enc -out setup.properties\n\n\n Gluu Server installation successful! Point your browser to https://gluuserver.gluu.org\n</code></pre> <p>Now, before you acan access UI from you local machine, you have to make  following entry in hosts file of your OS ( for ubuntu : /etc/hosts ) sudo vim /etc/hosts make an entry like :  10.128.0.4      gluuserver.gluu.org Here, IP is external IP as mentioned in the 'vm dashboard' of gcp,  while gluuserver.gluu.org is host name that you have given during setup script execution. Once this is done, you can access gluu server at  https://gluuserver.gluu.org with user: admin and password as mentioned during the setup prompts. In this case 't1Wi&amp;hUdXwvm'.</p> <p>=========================== handy gluu commands =========================== https://gluu.org/docs/gluu-server/4.2/operation/services/ systemctl status [service name] systemctl start [service name] systemctl stop [service name] systemctl restart [service name]</p> <p>eg. : systemctl restart oxd-server</p> <p>============================== Configure oxd in GCP : ============================== from : https://gluu.org/docs/oxd/install/#oxd-server-installation and  https://gluu.org/docs/oxd/configuration/oxd-configuration/</p> <p>after you have installed oxd during installation of gluu server, there are  following steps that you have to take in order to use oxd. first ensure that oxtrust UI is accessible: https://gluuserver.gluu.org/</p> <p>Now, Before we start oxd configuration, if you try to access oxd healthcheck url,  it won't be working. https://gluuserver.gluu.org:8443/health-check</p> <p>oxd configuration has following steps : 1) configure your public IP in oxd conf (/opt/oxd-server/conf/oxd-server.yml) 2) configure GCP firewall to allow traffic from 8443 ( if whole gluu server is install on development machine then you don't need this ) 3) configure certificates (couldn't successfully do this.) ( if whole gluu server is install on development machine then you don't need this )</p> <p>1) configure IP as mentioned in bind_ip_addresses section of  https://gluu.org/docs/oxd/configuration/oxd-configuration/#server-configuration-fields-descriptions if you are going to mention IP of your local system then your external IP needs to be mentioned. Which you can find by 'curl ifconfig.me' on Ubuntu command prompt. But  I suggest you don't use your external IP in oxd config file as external ip may change everytime you restart your local system. Better use ['*'].</p> <p>Now restart oxd service using : systemctl restart oxd-server</p> <p>Now we need to configure GCP firewall to allow traffic on port 8443. Go to your gcp dashboard of your project -&gt; search 'firewall' -&gt; open the firewall  named 'default-allow-https' and edit it to add 8443 in the port list as below.</p> <p>now if you try the health check url, you'll get response as below : {    \"application\": \"oxd\",    \"version\": \"4.2.3.Final\",    \"status\": \"running\" }</p> <p>3) I couldn't successfully execute the third step of configuring letsencrypt certificates. This is due to the fact that in order to get a letsencrypt. but if whole gluu server is install on development machine then you don't need to do this.</p> <p>at this point you below endpoints should be working in your setup : https://test.gcp.gluu.org/identity/home.htm https://test.gcp.gluu.org:8443/health-check https://test.gcp.gluu.org/.well-known/openid-configuration https://test.gcp.gluu.org/.well-known/scim-configuration (if you have install scim)</p> <p>also if you are running oxd demo spring app locally, it should also return 'hello' page with oxd id on below url (port as you configurd) https://localhost:8083/ Now start oxd configuration (reference : https://gluu.org/docs/oxd/configuration/oxd-configuration/) : In the Gluu shell : goto /opt/oxd-server/conf/oxd-server.yml and set below properties. Customise values as per your setup: op_configuration_endpoint: 'https://test.gcp.gluu.org/.well-known/openid-configuration'</p> <p>---- run the spring oxd app : get it from git and change following properties in application.properties server.port=8083 oxd.server.op-host=https://test.gcp.gluu.org oxd.server.host=test.gcp.gluu.org oxd.client.callback-uri=https://localhost:8083/gluu/callback oxd.client.post-logout-uri=https://localhost:8083/gluu/logout</p> <p>Uninstallation</p> <p>For Ubuntu Server 20.x and Ubuntu Server 18.04.x, run the following commands:</p> <p>/sbin/gluu-serverd disable</p> <p>/sbin/gluu-serverd stop</p> <p>apt remove gluu-server</p> <p>rm -fr /opt/gluu-server.save</p>"},{"location":"while-coding/janssen/janssen-notes/#troubleshooting","title":"troubleshooting","text":"<p>getting 503 when trying to access oxtrust of a gluu server newly installed on a kvm ( 2cpu, 4gb ). Just bare minimum server was installed with identity and  oxauth</p> <p>from host root : checked</p> <p>it was found to be active-running. then entered gluu shell and from there check individual service status systemctl status oxauth systemctl status identity both returned with 'jetty not running' status. then went to start individual service manually so that I can debug the failure better. For that, /opt/dist/scripts/oxauth start to see all the parameters being passed /opt/dist/scripts/oxauth status</p> <p>getting </p> <p><code>10:41:56.874 [TestNG-tests-4] ERROR io.jans.as.client.RegisterClient - PKIX path building failed: sun.security.provider.certpath.SunCertPathBuilderException: unable to find valid certification path to requested target</code></p> <p>After installing fresh GCP janssen installation and then running jans-auth-server tests against it from same GCP machine.</p> <p>Fix: couldn't find a root-cause but it only started working when I unintalled and reinstalled Janssen. Plus, when I was reinstalling via ssh session, GCP logged me in as <code>dhaval@test</code> while earlier it was with machine name <code>dhaval@21stJan</code>. Either the reinstallation or change in the login could have solved it. My guess is reinstall solved it.</p> <p>getting <code>package sun.security.x509 does not exist</code> when trying to run few Janssen test cases from Intellij like <code>RegistrationRestWebServiceHttpTest.requestClientAssociate1</code></p> <p>Fix: disable <code>Use --release option</code> from Java compiler settings in Intellij. Reference</p> <p><code>problem:</code></p> <p>Remote debugger was not able to connect to jans server on GCP. This was due to  jans-auth service was not able to start and was getting stuck at below log message in jans-auth.log.</p> <pre><code>2021-06-29 06:20:08,601 INFO  [main] [jans.as.server.model.config.ConfigurationFactory] (ConfigurationFactory.java:395) - Loading configuration from 'ldap' DB...\n</code></pre> <p><code>solution:</code> GCP instance restart worked. root cause was that ldap services were not available even though it showed <code>running</code> in systemctl command status.</p> <p>getting Duplicate fragment name ERROR Jetty Maven Plugin for resteasy library. encountered this while trying to run jans-auth-server/server using jetty:run-war for first time. I had to change POM file of server project as suggested below. solved by: https://stackoverflow.com/questions/5802096/duplicate-fragment-name-error-jetty-maven-plugin</p> <pre><code>Problem\n</code></pre> <p>getting </p> <p><pre><code>Error retreiving data\n\nUnauthorized\nb'ID Token is expired'\n</code></pre> when trying to use config-cli using <code>sudo /opt/jans/jans-cli/config-cli.py</code>. This error doesn't come when you fire the command but it comes when you try to use any of the menu options and give all the inputs. </p> <pre><code>root-cause\n</code></pre> <p>This happens because the token which you had received earlier via device-code authentication, has now expired. You need to request a new token but CLI doesn't give you that prompt</p> <pre><code>solution\n</code></pre> <p>you have to log out of cli using <code>x</code> option and reinvoke cli using same command <code>sudo /opt/jans/jans-cli/config-cli.py</code>. Now when you try to execute any option, it'll give you a device code to authenticate.</p> <p><code>problem</code>:</p> <pre><code>root@jans-node:~# sudo apt install  ./jans_1.1.2.nightly.ubuntu22.04_amd64.deb\nReading package lists... Done\nBuilding dependency tree... Done\nReading state information... Done\nNote, selecting 'jans' instead of './jans_1.1.2.nightly.ubuntu22.04_amd64.deb'\nSome packages could not be installed. This may mean that you have\nrequested an impossible situation or if you are using the unstable\ndistribution that some required packages have not yet been created\nor been moved out of Incoming.\nThe following information may help to resolve the situation:\n\nThe following packages have unmet dependencies:\n jans : Depends: python3-ldap3 but it is not installable\n        Depends: python3-ruamel.yaml but it is not installable\n</code></pre> <p><code>Solution</code>:</p> <p>This usually happens on a fresh ubuntu VM. So, this gets solved if you run <code>sudo apt update</code> and <code>sudo apt upgrade</code> first.</p> <p>============= enable linux GUI on GCP vm ================ Use steps as mentioned here : https://github.com/eerolat/setup-google-linux</p> <p>in short, while creating linux VM :  under <code>management</code> -&gt; automation -&gt; startup script text area. Paste the line below: <code>wget https://github.com/eerolat/setup-google-linux/raw/master/install.sh    sh install.sh -u myusername mypassword</code></p> <p>Here use and password can be anything. Same you have to use when connecting via RDP client from your local machine like remmina.</p> <p>for example: <code>wget https://github.com/eerolat/setup-google-linux/raw/master/install.sh    sh install.sh -u dhaval work</code></p> <p>Remember, only try to connect via UI after sometime of starting the vm. Like 10 mins. </p> <p>=============================</p>"},{"location":"while-coding/janssen/janssen-notes/#general-notes","title":"general notes :","text":"<ul> <li>main component in Janssen and Gluu is jans-auth-server. Same component is  called oxauth in Gluu.</li> <li>About cache refresh (ref): </li> </ul> <p><pre><code>No cache refresh (CR) in Jans\n\nCR is a feature in oxTrust\n\nWe have been talking to Shekhar about making a standalone CR project in Jans\n\nbut it\u2019s not top priority\n\nCR is an enterprise feature, mostly used to connect Active Directory servers\n</code></pre> - Janssen provides authentication using OIDC and authorization using OAuth. When referring to Janssen in context of authentication, it can be called OP(OpenId Connect Provider), while referring to Janssen in context of authorization, it can be called AS (Authorization Server) as well. So, You can refer to Janssen as OP or AS.</p> <ul> <li><code>claims</code> word is also used for multiple things. For Janssen Server configuration properties are also called <code>claims</code> (these are the properties that we see in response to .well-known configuration endpoint <code>https://jans-dynamic-ldap/jans-auth/.well-known/openid-configuration</code>). Better call it <code>server claims</code>. <code>claims</code> is also used in context of user. These should be called <code>user claims</code> or <code>user attributes</code> for better clarity. You can see attributes (user claims) supported by server under <code>claims_supported</code> server claim as part of response to .well-known configuration endpoint mentioned above .</li> </ul> <p>======================</p>"},{"location":"while-coding/janssen/janssen-notes/#ldapopendjdsconfig-commands","title":"LDAP/opendj/dsconfig commands :","text":""},{"location":"while-coding/janssen/janssen-notes/#getting-opendj-on-local-machine-and-connecting-using-apache-directory-studio","title":"getting opendj on local machine and connecting using apache directory studio","text":"<ul> <li>install a Janssen server with LDAP backend on lxc</li> <li>run <code>sudo apt install openssh-server</code> on your local to make sure you can download files from lxc</li> <li>create a directory where you want to download files. <code>mkdir /home/remote</code></li> <li>change the permissions: <code>sudo chmod 777 /home/remote</code></li> <li>open lxc bash and run <code>scp -r /opt/opendj/ dhaval@192.168.1.4:/home/remote</code> to get files from lxc to your local</li> <li>now on your local <code>cd /home/remote/opendj/bin/</code></li> <li>start server using <code>./start-ds</code> you'll see server starting with messages as   <pre><code>[27/Aug/2024:16:18:39 +0530] category=CORE severity=NOTICE msgID=139 msg=The Directory Server has sent an alert notification generated by class \norg.opends.server.core.DirectoryServer (alert type org.opends.server.DirectoryServerStarted, alert ID org.opends.messages.core-135): The Directory Server has started \nsuccessfully\n[27/Aug/2024:16:18:39 +0530] category=PROTOCOL severity=NOTICE msgID=276 msg=Started listening for new connections on LDAPS Connection Handler localhost port 1636\n[27/Aug/2024:16:18:39 +0530] category=PROTOCOL severity=NOTICE msgID=276 msg=Started listening for new connections on Administration Connector localhost port 4444\n</code></pre></li> <li>run <code>./status</code> you will see output with line <code>127.0.0.1:1636 : LDAPS    : Enabled</code></li> <li>Now open eclipse, download apache directory studio plugin from market place. Once installed the eclipse will restart and then you need to go to open LDAP perspective.</li> <li>create a new connection using details as hostname <code>127.0.0.1</code> or <code>localhost</code>, port <code>1636</code>, encryption method <code>use ssl encryption</code> </li> <li>on next screen, keep the authentication as <code>simple authentication</code> and bind DN or user as <code>cn=Directory Manager</code>, password is same as what was given at the installation time, which I useally keep as <code>admin</code>.   </li> <li>click check authentication and after trusting the certificate it'll be successful.</li> </ul>"},{"location":"while-coding/janssen/janssen-notes/#connecting-to-ldap-running-locally-on-a-jans-instance","title":"Connecting to ldap running locally on a jans instance:","text":"<pre><code>sudo /opt/opendj/bin/ldapsearch -h localhost -p 1636 -D \"cn=directory manager\" -w \"Ld@padm1n\" -Z -X -b \"o=jans\" -s one \"objectclass=*\" dn\n</code></pre> <p>To get dn and other details:</p> <pre><code>cat /opt/jans/jans-setup/setup.properties.last | egrep 'ldapPass=|ldap_binddn=|ldap_hostname=|ldaps_port='\n</code></pre>"},{"location":"while-coding/janssen/janssen-notes/#connecting-to-ldap-running-in-an-lxc-container-using-an-apache-directory-studio-running-in-local-machine","title":"Connecting to LDAP running in an lxc container using an apache directory studio running in local machine","text":"<ul> <li>You do not have to open any port and 1636 port on lxc should be open by default</li> <li>first make sure that the ldap is running and it is accessible on 1636 from within lxc using instructions above(#connecting-to-ldap-running-locally-on-a-jans-instance)</li> <li>Now open apache directory studio and create a new connect. Fill out the first form as below (remember to remove <code>/</code> from <code>bind dn</code> value if it exists like this <code>cn\\=directory manager</code>. After removal, the value should be <code>cn=directory manager</code>)</li> <li></li> </ul> <ul> <li>Now click next and fill out next form as below (remember to remove <code>/</code> from <code>bind dn</code> value if it exists like this <code>cn\\=directory manager</code>. After removal, the value should be <code>cn=directory manager</code>):</li> </ul> <ul> <li>click finish and you should be able see a new connection in the listing on bottom left panel. Right click on your connection and click <code>open connection</code>. It should populate tree on the top left panel and be ready to browse.</li> </ul>"},{"location":"while-coding/janssen/janssen-notes/#to-see-all-the-existing-indexes-on-backend-userroot","title":"to see all the existing indexes on backend 'userRoot':","text":"<p><code>/opt/opendj/bin/dsconfig list-backend-indexes --backend-name userRoot</code></p> <p>this will ask few question to connect with Opendj. following are the responses  if you are running server on localhost:</p> <pre><code>root@test:/install/community-edition-setup# /opt/opendj/bin/dsconfig list-backend-indexes --backend-name userRoot\n\n\n&gt;&gt;&gt;&gt; Specify OpenDJ LDAP connection parameters\n\nDirectory server hostname or IP address [localhost]: \n\nDirectory server administration port number [4444]: 1636\n\nAdministrator user bind DN [cn=Directory Manager]: \n\nPassword for user 'cn=Directory Manager': &lt;password that you entered during installation of Janssen&gt;\n\n\n\nBackend Index               : index-type          : index-entry-limit : index-extensible-matching-rule : confidentiality-enabled\n----------------------------:---------------------:-------------------:--------------------------------:------------------------\naci                         : presence            : 4000              : -                              : false\nauthzCode                   : equality            : 4000              : -                              : false\nchlng                       : equality            : 4000              : -                              : false\n</code></pre> <p>reference and more commands :  https://backstage.forgerock.com/docs/ds/5/configref/</p> <p>========================== what actually happens during janssen installation via install.py : =========================</p> <p>There are primarily two scripts, install.py and setup.py. User trigger install.py and this script inturn calls setup.py for installation task. On top of installation Install.py provides uninstall, upgrade like functions.  Below are the actions that install.py and setup.py scripts take when executed.</p> <p>Install.py When triggered this script first downloads third party software like JDK, Jython etc  for example: Downloading https://corretto.aws/downloads/resources/11.0.8.10.1/amazon-corretto-11.0.8.10.1-linux-x64.tar.gz to /opt/dist/app/amazon-corretto-11.0.8.10.1-linux-x64.tar.gz Plus it also downloads Janssen artifacts from Github and maven. Artifacts like jans-setup.zip,  for example : Downloading https://github.com/JanssenProject/jans-setup/archive/master.zip to /opt/dist/jans/jans-setup.zip Downloading https://maven.jans.io/maven/io/jans/jans-auth-server/1.0.0-SNAPSHOT/jans-auth-server-1.0.0-SNAPSHOT.war to /opt/dist/jans/jans-auth.war Downloading https://maven.jans.io/maven/io/jans/jans-auth-client/1.0.0-SNAPSHOT/jans-auth-client-1.0.0-SNAPSHOT-jar-with-dependencies.jar to /opt/dist/jans/jans-auth-client-jar-with-dependencies.jar Downloading https://maven.jans.io/maven/io/jans/jans-config-api/1.0.0-SNAPSHOT/jans-config-api-1.0.0-SNAPSHOT-runner.jar to /opt/dist/jans/jans-config-api-runner.jar Downloading https://maven.jans.io/maven/io/jans/jans-fido2-server/1.0.0-SNAPSHOT/jans-fido2-server-1.0.0-SNAPSHOT.war to /opt/dist/jans/jans-fido2.war Downloading https://maven.jans.io/maven/io/jans/jans-scim-server/1.0.0-SNAPSHOT/jans-scim-server-1.0.0-SNAPSHOT.war to /opt/dist/jans/jans-scim.war Downloading https://jenkins.jans.io/maven/io/jans/jans-eleven-server/1.0.0-SNAPSHOT/jans-eleven-server-1.0.0-SNAPSHOT.war to /opt/dist/jans/jans-eleven.war</p> <p>Please note that all Janssen artifacts are downloaded from https://maven.jans.io/maven/io/jans/</p> <p>then arguments of script invocation are parsed. Here one important usage is of --args argument. If you  want to pass any argument to setup.py which is called by install.py then you have to pass that argument to install.py as below. For example you want to call setup.py with -t argument, then</p> <p>python3 install.py --args=-t</p> <p>Important Jans directories are also set in script :</p> <p>jans_dir = '/opt/jans' app_dir = '/opt/dist/app' jans_app_dir = '/opt/dist/jans' scripts_dir = '/opt/dist/scripts' jetty_home = '/opt/jans/jetty'</p> <p>After this it takes actions according to arguments passed, like upgrade or uninstall or install. For installation option, install.py triggers setup.py</p>"},{"location":"while-coding/janssen/janssen-notes/#setuppy","title":"setup.py","text":"<p>jar and war files for janssen modules like  check if all third party software are already installed. Like python etc.</p> <p>Running: dpkg-query -W -f='${Status}' curl 2&gt;/dev/null | grep -c \"ok installed\"</p> <p>Module notes : config API : this module uses cucumber and karate for integration testing. PujaVS is familiar with the module and wrote these tests.</p> <p>Imp links for this module : cucumber report : https://jenkins.jans.io/jenkins/job/jans-config-api/299/cucumber-html-reports_393f3d47-d30d-3acf-a82f-41b0e41e87bb/overview-features.html swagger : https://gluu.org/swagger-ui/?url=https://raw.githubusercontent.com/JanssenProject/jans-config-api/master/docs/jans-config-api-swagger.yaml</p>"},{"location":"while-coding/janssen/janssen-notes/#installing-janssen-on-a-machine-with-static-ip-in-my-case-gcp-with-static-ip","title":"Installing Janssen on a machine with static IP ( in my case GCP with static IP )","text":"<p>1) <code>cd ~</code> 2) <code>wget https://raw.githubusercontent.com/JanssenProject/jans/main/jans-linux-setup/install.py &gt; install.py</code> 3) <code>sudo python3 install.py.1\"</code> or if you want to load test data too then <code>sudo python3 install.py.1 --args=\"-t\"</code></p> <p>Sample output:</p> <pre><code>dhaval@test:~$ sudo python3 install.py.1 --args=\"-t\"\nDownloading https://github.com/JanssenProject/jans-setup/archive/master.zip to /opt/dist/jans/jans-setup.zip\nDownloading https://corretto.aws/downloads/resources/11.0.8.10.1/amazon-corretto-11.0.8.10.1-linux-x64.tar.gz to /opt/dist/app/amazon-corretto-11.0.8.10.1-linux-x64.tar.gz\nDownloading https://repo1.maven.org/maven2/org/eclipse/jetty/jetty-distribution/9.4.31.v20200723/jetty-distribution-9.4.31.v20200723.tar.gz to /opt/dist/app/jetty-distribution-9.4.31.v20200723.tar.gz\nDownloading https://repo1.maven.org/maven2/org/python/jython-installer/2.7.2/jython-installer-2.7.2.jar to /opt/dist/app/jython-installer-2.7.2.jar\nDownloading https://ox.gluu.org/maven/org/gluufederation/opendj/opendj-server-legacy/4.4.10/opendj-server-legacy-4.4.10.zip to /opt/dist/app/opendj-server-legacy-4.4.10.zip\nDownloading https://maven.jans.io/maven/io/jans/jans-auth-server/1.0.0-SNAPSHOT/jans-auth-server-1.0.0-SNAPSHOT.war to /opt/dist/jans/jans-auth.war\nDownloading https://maven.jans.io/maven/io/jans/jans-auth-client/1.0.0-SNAPSHOT/jans-auth-client-1.0.0-SNAPSHOT-jar-with-dependencies.jar to /opt/dist/jans/jans-auth-client-jar-with-dependencies.jar\nDownloading https://maven.jans.io/maven/io/jans/jans-config-api/1.0.0-SNAPSHOT/jans-config-api-1.0.0-SNAPSHOT-runner.jar to /opt/dist/jans/jans-config-api-runner.jar\nDownloading https://maven.jans.io/maven/io/jans/jans-fido2-server/1.0.0-SNAPSHOT/jans-fido2-server-1.0.0-SNAPSHOT.war to /opt/dist/jans/jans-fido2.war\nDownloading https://maven.jans.io/maven/io/jans/jans-scim-server/1.0.0-SNAPSHOT/jans-scim-server-1.0.0-SNAPSHOT.war to /opt/dist/jans/jans-scim.war\nDownloading https://jenkins.jans.io/maven/io/jans/jans-eleven-server/1.0.0-SNAPSHOT/jans-eleven-server-1.0.0-SNAPSHOT.war to /opt/dist/jans/jans-eleven.war\nDownloading https://api.github.com/repos/JanssenProject/jans-cli/tarball/main to /opt/dist/jans/jans-cli.tgz\nDownloading https://github.com/sqlalchemy/sqlalchemy/archive/rel_1_3_23.zip to /opt/dist/jans/sqlalchemy.zip\nDownloading https://www.apple.com/certificateauthority/Apple_WebAuthn_Root_CA.pem to /opt/dist/app/Apple_WebAuthn_Root_CA.pem\nExtracting jans-setup package\nDownloading https://raw.githubusercontent.com/JanssenProject/jans-config-api/jans-config-api-33/docs/jans-config-api-swagger.yaml to /opt/jans/jans-setup/setup_app/data/jans-config-api-swagger.yaml\nDownloading https://raw.githubusercontent.com/JanssenProject/jans-scim/master/server/src/main/resources/jans-scim-openapi.yaml to /opt/jans/jans-setup/setup_app/data/jans-scim-openapi.yaml\nLaunching Janssen Setup\nWarning: Available free disk space was determined to be 9.3 GB. This is less than the required disk space of 40 GB.\nProceed anyways? [Y|n] Y\n\nInstalling Janssen Server...\n\nFor more info see:\n  /opt/jans/jans-setup/logs/setup.log  \n  /opt/jans/jans-setup/logs/setup_error.log\n\nDetected OS     :   ubuntu 20\nJanssen Version :  1.0.0-SNAPSHOT\nDetected init   :  systemd\nDetected Apache :  2.4\n\nDo you acknowledge that use of the Janssen Server is under the Apache-2.0 license? [N|y] : y\nEnter IP Address [10.160.0.5] : \nEnter hostname [janssen-7may.asia-south1-c.c.my-project-1-309406.internal] : test.jans.gluu.org \nEnter your city or locality : ahm\nEnter your state or province two letter code : gj\nEnter two letter Country Code : in\nEnter Organization Name : gluu org\nEnter email address for support at your organization : dhaval@gluu.org\nEnter maximum RAM for applications in MB [13260] : \nEnter Password for LDAP Admin (cn=directory manager) [pc9XgB] : Pwd@g1uu\nEnter Password for Admin User [Pwd@g1uu] : \nInstall Apache HTTPD Server [Yes] : \nInstall OAuth2 Authorization Server? [Yes] : \nInstall Jans Auth Config Api? [Yes] : \nInstall Gluu Admin UI? [No] : Yes\nInstall Scim Server? [Yes] : \nInstall Fido2 Server? [Yes] : \nInstall Eleven Server? [No] : Yes\nChecking Properties\n\nhostname                                       test.jans.gluu.org\norgName                                                  gluu org\nos                                                         ubuntu\ncity                                                          ahm\nstate                                                          gj\ncountryCode                                                    in\nApplications max ram (MB)                                   10608\nOpenDJ max ram (MB)                                          2652\nBackends                                                   opendj\nJava Type                                                     jre\nInstall Apache 2 web server                                  True\nInstall Auth Server                                          True\nInstall Jans Auth Config Api                                 True\nInstall Gluu Admin UI                                        True\nInstall Fido2 Server                                         True\nInstall Scim Server                                          True\nInstall Eleven Server                                        True\n\nProceed with these values [Y|n] Y\n\n\n\nJanssen Server installation successful!\nCLI available to manage Jannsen Server:\n/opt/jans/jans-cli/config-cli.py\n/opt/jans/jans-cli/scim-cli.py\n\n\n\u2713 jans             Calculating application memory\n\u2713 jre              Installing Jre\n\u2713 jetty            Installing Jetty\n\u2713 jython           Installing Jython\n\u2713 opendj           OpenDJ post installation\n\u2713 apache2          Configuring apache2\n\u2713 jans-auth        Generating OAuth openid keys\n\u2713 jans-config-api  Installing Jans-Config-Api\n\u2713 jans-fido2       Installing Jans-Fido2\n\u2713 jans-scim        Installing Jans-Scim\n\u2713 jans-eleven      Installing softhsm\n\u2713 jans-cli         Installing Jans Cli\n\u2713 gluu-admin-ui    Installing Gluu-Admin-Ui\n\u2713 test-data        Updating schema\n\u2713 post-setup       Starting Gluu Admin Ui\n\ndhaval@test:~$ \n</code></pre>"},{"location":"while-coding/janssen/janssen-notes/#setup-remote-debugging","title":"setup remote debugging","text":""},{"location":"while-coding/janssen/janssen-notes/#changes-required-on-janssen-server","title":"changes required on Janssen server","text":"<ul> <li>Open service config file</li> </ul> <p><code>vim /etc/default/jans-auth</code></p> <ul> <li>add line below at the end of <code>JAVA_OPTIONS</code></li> </ul> <p><code>-Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=6001</code></p> <ul> <li>then restart services</li> </ul> <p><code>systemctl restart jans-auth.service</code></p> <ul> <li>(only if you are using GCP instance as jans server) add port to firewall:</li> <li>search for firewall on dashboard search</li> <li>edit the firewall called <code>default-allow-ssh</code>, and add port <code>6001</code>. Save settings.</li> <li>not sure but you may want to restart your instance once for firewall settings to take effect.</li> </ul>"},{"location":"while-coding/janssen/janssen-notes/#changes-required-in-the-machine-where-your-workspace-is","title":"changes required in the machine where your workspace is:","text":"<ul> <li>setup port forwarding</li> </ul> <p><code>ssh -L 6001:localhost:6001 dhaval@test.dd.jans.io</code></p> <p>this command will open an ssl connection with jans server. Keep the window open.</p> <ul> <li>In IntellijIdea, </li> <li><code>shift+shift</code> -&gt; search for <code>edit configuration</code> -&gt; click on <code>+</code> -&gt; <code>remote jvm debugging</code> -&gt; then give below values</li> <li><code>host:</code> remote host IP or name as in <code>hosts</code> file, <code>port:</code> 6001, <code>use module:</code> give the module which is being debugged on server. </li> </ul>"},{"location":"while-coding/janssen/janssen-notes/#request-and-responses-to-imp-jans-config-endpoints","title":"Request and responses to imp jans config endpoints","text":"<pre><code>OpenID Connect Configuration\n-------------------------------------------------------\nREQUEST:\n-------------------------------------------------------\nGET /.well-known/openid-configuration HTTP/1.1 HTTP/1.1\nHost: test.dd.jans.io\n\n-------------------------------------------------------\nRESPONSE:\n-------------------------------------------------------\nHTTP/1.1 200\nConnection: Keep-Alive\nContent-Length: 7774\nContent-Type: application/json\nDate: Wed, 07 Jul 2021 08:26:48 GMT\nKeep-Alive: timeout=5, max=100\nServer: Apache/2.4.41 (Ubuntu)\nStrict-Transport-Security: max-age=31536000; includeSubDomains\nX-Content-Type-Options: nosniff\nX-Xss-Protection: 1; mode=block\n\n{\n   \"request_parameter_supported\":true,\n   \"token_revocation_endpoint\":\"https://test.dd.jans.io/jans-auth/restv1/revoke\",\n   \"introspection_endpoint\":\"https://test.dd.jans.io/jans-auth/restv1/introspection\",\n   \"claims_parameter_supported\":true,\n   \"issuer\":\"https://test.dd.jans.io\",\n   \"userinfo_encryption_enc_values_supported\":[\n      \"RSA1_5\",\n      \"RSA-OAEP\",\n      \"A128KW\",\n      \"A256KW\"\n   ],\n   \"id_token_encryption_enc_values_supported\":[\n      \"A128CBC+HS256\",\n      \"A256CBC+HS512\",\n      \"A128GCM\",\n      \"A256GCM\"\n   ],\n   \"authorization_endpoint\":\"https://test.dd.jans.io/jans-auth/restv1/authorize\",\n   \"service_documentation\":\"http://jans.org/docs\",\n   \"id_generation_endpoint\":\"https://test.dd.jans.io/jans-auth/restv1/id\",\n   \"claims_supported\":[\n      \"street_address\",\n      \"country\",\n      \"zoneinfo\",\n      \"birthdate\",\n      \"role\",\n      \"gender\",\n      \"formatted\",\n      \"user_name\",\n      \"work_phone\",\n      \"phone_mobile_number\",\n      \"preferred_username\",\n      \"locale\",\n      \"inum\",\n      \"jansIdTknSignedRespAlg\",\n      \"jansRedirectURI\",\n      \"updated_at\",\n      \"nickname\",\n      \"member_of\",\n      \"org_name\",\n      \"email\",\n      \"website\",\n      \"email_verified\",\n      \"jansAppType\",\n      \"profile\",\n      \"locality\",\n      \"phone_number_verified\",\n      \"jansScope\",\n      \"given_name\",\n      \"middle_name\",\n      \"picture\",\n      \"name\",\n      \"phone_number\",\n      \"postal_code\",\n      \"region\",\n      \"family_name\"\n   ],\n   \"scope_to_claims_mapping\":[\n      {\n         \"openid\":[\n\n         ]\n      },\n      {\n         \"profile\":[\n            \"name\",\n            \"family_name\",\n            \"given_name\",\n            \"middle_name\",\n            \"nickname\",\n            \"preferred_username\",\n            \"profile\",\n            \"picture\",\n            \"website\",\n            \"gender\",\n            \"birthdate\",\n            \"zoneinfo\",\n            \"locale\",\n            \"updated_at\"\n         ]\n      },\n      {\n         \"permission\":[\n            \"role\"\n         ]\n      },\n      {\n         \"^/user/.+$\":[\n\n         ]\n      },\n      {\n         \"http://photoz.example.com/dev/scopes/view\":[\n\n         ]\n      },\n      {\n         \"https://jans.io/scim/fido2.read\":[\n\n         ]\n      },\n      {\n         \"http://photoz.example.com/dev/scopes/all\":[\n\n         ]\n      },\n      {\n         \"modify\":[\n\n         ]\n      },\n      {\n         \"https://jans.io/scim/all-resources.search\":[\n\n         ]\n      },\n      {\n         \"https://jans.io/scim/groups.write\":[\n\n         ]\n      },\n      {\n         \"uma_protection\":[\n\n         ]\n      },\n      {\n         \"work_phone\":[\n            \"work_phone\"\n         ]\n      },\n      {\n         \"https://jans.io/scim/users.write\":[\n\n         ]\n      },\n      {\n         \"https://jans.io/oauth/config/database/sql.write\":[\n\n         ]\n      },\n      {\n         \"phone\":[\n            \"phone_number_verified\",\n            \"phone_number\"\n         ]\n      },\n      {\n         \"address\":[\n            \"formatted\",\n            \"postal_code\",\n            \"street_address\",\n            \"locality\",\n            \"country\",\n            \"region\"\n         ]\n      },\n      {\n         \"test\":[\n            \"member_of\"\n         ]\n      },\n      {\n         \"https://jans.io/oauth/config/database/sql.delete\":[\n\n         ]\n      },\n      {\n         \"mobile_phone\":[\n            \"phone_mobile_number\"\n         ]\n      },\n      {\n         \"revoke_session\":[\n\n         ]\n      },\n      {\n         \"user_name\":[\n            \"user_name\"\n         ]\n      },\n      {\n         \"email\":[\n            \"email_verified\",\n            \"email\"\n         ]\n      },\n      {\n         \"https://jans.io/scim/bulk\":[\n\n         ]\n      },\n      {\n         \"https://jans.io/oauth/config/database/sql.readonly\":[\n\n         ]\n      },\n      {\n         \"clientinfo\":[\n            \"name\",\n            \"inum\",\n            \"jansScope\",\n            \"jansAppType\",\n            \"jansIdTknSignedRespAlg\",\n            \"jansRedirectURI\"\n         ]\n      },\n      {\n         \"https://jans.io/scim/fido2.write\":[\n\n         ]\n      },\n      {\n         \"org_name\":[\n            \"org_name\"\n         ]\n      },\n      {\n         \"oxd\":[\n\n         ]\n      },\n      {\n         \"https://jans.io/scim/users.read\":[\n\n         ]\n      },\n      {\n         \"https://jans.io/scim/groups.read\":[\n\n         ]\n      },\n      {\n         \"https://jans.io/scim/fido.read\":[\n\n         ]\n      },\n      {\n         \"offline_access\":[\n\n         ]\n      },\n      {\n         \"https://jans.io/scim/fido.write\":[\n\n         ]\n      }\n   ],\n   \"op_policy_uri\":\"http://www.jans.io/doku.php?id=jans:policy\",\n   \"token_endpoint_auth_methods_supported\":[\n      \"client_secret_basic\",\n      \"client_secret_post\",\n      \"client_secret_jwt\",\n      \"private_key_jwt\",\n      \"tls_client_auth\",\n      \"self_signed_tls_client_auth\",\n      \"none\"\n   ],\n   \"tls_client_certificate_bound_access_tokens\":true,\n   \"response_modes_supported\":[\n      \"fragment\",\n      \"query\",\n      \"form_post\"\n   ],\n   \"backchannel_logout_session_supported\":true,\n   \"token_endpoint\":\"https://test.dd.jans.io/jans-auth/restv1/token\",\n   \"backchannel_authentication_request_signing_alg_values_supported\":[\n      \"RS256\",\n      \"RS384\",\n      \"RS512\",\n      \"ES256\",\n      \"ES384\",\n      \"ES512\",\n      \"PS256\",\n      \"PS384\",\n      \"PS512\"\n   ],\n   \"response_types_supported\":[\n      \"token id_token\",\n      \"token\",\n      \"code id_token\",\n      \"code\",\n      \"token code\",\n      \"token code id_token\",\n      \"id_token\"\n   ],\n   \"backchannel_token_delivery_modes_supported\":[\n      \"poll\",\n      \"ping\",\n      \"push\"\n   ],\n   \"request_uri_parameter_supported\":true,\n   \"backchannel_user_code_parameter_supported\":true,\n   \"grant_types_supported\":[\n      \"authorization_code\",\n      \"implicit\",\n      \"urn:openid:params:grant-type:ciba\",\n      \"client_credentials\",\n      \"urn:ietf:params:oauth:grant-type:uma-ticket\",\n      \"password\",\n      \"urn:ietf:params:oauth:grant-type:device_code\",\n      \"refresh_token\"\n   ],\n   \"ui_locales_supported\":[\n      \"en\",\n      \"bg\",\n      \"de\",\n      \"es\",\n      \"fr\",\n      \"it\",\n      \"ru\",\n      \"tr\"\n   ],\n   \"userinfo_endpoint\":\"https://test.dd.jans.io/jans-auth/restv1/userinfo\",\n   \"op_tos_uri\":\"http://www.jans.io/doku.php?id=jans:tos\",\n   \"auth_level_mapping\":{\n      \"20\":[\n         \"basic_lock\"\n      ],\n      \"10\":[\n         \"basic\"\n      ]\n   },\n   \"require_request_uri_registration\":false,\n   \"id_token_encryption_alg_values_supported\":[\n      \"RSA1_5\",\n      \"RSA-OAEP\",\n      \"A128KW\",\n      \"A256KW\"\n   ],\n   \"frontchannel_logout_session_supported\":true,\n   \"claims_locales_supported\":[\n      \"en\"\n   ],\n   \"clientinfo_endpoint\":\"https://test.dd.jans.io/jans-auth/restv1/clientinfo\",\n   \"request_object_signing_alg_values_supported\":[\n      \"none\",\n      \"HS256\",\n      \"HS384\",\n      \"HS512\",\n      \"RS256\",\n      \"RS384\",\n      \"RS512\",\n      \"ES256\",\n      \"ES384\",\n      \"ES512\",\n      \"PS256\",\n      \"PS384\",\n      \"PS512\"\n   ],\n   \"request_object_encryption_alg_values_supported\":[\n      \"RSA1_5\",\n      \"RSA-OAEP\",\n      \"A128KW\",\n      \"A256KW\"\n   ],\n   \"session_revocation_endpoint\":\"https://test.dd.jans.io/jans-auth/restv1/revoke_session\",\n   \"check_session_iframe\":\"https://test.dd.jans.io/jans-auth/opiframe.htm\",\n   \"scopes_supported\":[\n      \"^/user/.+$\",\n      \"https://jans.io/scim/all-resources.search\",\n      \"user_name\",\n      \"clientinfo\",\n      \"https://jans.io/scim/fido2.write\",\n      \"work_phone\",\n      \"https://jans.io/scim/users.write\",\n      \"https://jans.io/scim/fido.read\",\n      \"revoke_session\",\n      \"https://jans.io/scim/fido.write\",\n      \"mobile_phone\",\n      \"https://jans.io/oauth/config/database/sql.readonly\",\n      \"offline_access\",\n      \"oxd\",\n      \"org_name\",\n      \"email\",\n      \"https://jans.io/scim/fido2.read\",\n      \"address\",\n      \"test\",\n      \"openid\",\n      \"profile\",\n      \"uma_protection\",\n      \"http://photoz.example.com/dev/scopes/view\",\n      \"permission\",\n      \"http://photoz.example.com/dev/scopes/all\",\n      \"https://jans.io/scim/groups.read\",\n      \"https://jans.io/scim/bulk\",\n      \"modify\",\n      \"https://jans.io/scim/users.read\",\n      \"phone\",\n      \"https://jans.io/oauth/config/database/sql.write\",\n      \"https://jans.io/scim/groups.write\",\n      \"https://jans.io/oauth/config/database/sql.delete\"\n   ],\n   \"backchannel_logout_supported\":true,\n   \"acr_values_supported\":[\n      \"basic_lock\",\n      \"basic\"\n   ],\n   \"request_object_encryption_enc_values_supported\":[\n      \"A128CBC+HS256\",\n      \"A256CBC+HS512\",\n      \"A128GCM\",\n      \"A256GCM\"\n   ],\n   \"device_authorization_endpoint\":\"https://test.dd.jans.io/jans-auth/restv1/device_authorization\",\n   \"display_values_supported\":[\n      \"page\",\n      \"popup\"\n   ],\n   \"userinfo_signing_alg_values_supported\":[\n      \"none\",\n      \"HS256\",\n      \"HS384\",\n      \"HS512\",\n      \"RS256\",\n      \"RS384\",\n      \"RS512\",\n      \"ES256\",\n      \"ES384\",\n      \"ES512\",\n      \"PS256\",\n      \"PS384\",\n      \"PS512\"\n   ],\n   \"claim_types_supported\":[\n      \"normal\"\n   ],\n   \"userinfo_encryption_alg_values_supported\":[\n      \"RSA1_5\",\n      \"RSA-OAEP\",\n      \"A128KW\",\n      \"A256KW\"\n   ],\n   \"end_session_endpoint\":\"https://test.dd.jans.io/jans-auth/restv1/end_session\",\n   \"revocation_endpoint\":\"https://test.dd.jans.io/jans-auth/restv1/revoke\",\n   \"backchannel_authentication_endpoint\":\"https://test.dd.jans.io/jans-auth/restv1/bc-authorize\",\n   \"token_endpoint_auth_signing_alg_values_supported\":[\n      \"HS256\",\n      \"HS384\",\n      \"HS512\",\n      \"RS256\",\n      \"RS384\",\n      \"RS512\",\n      \"ES256\",\n      \"ES384\",\n      \"ES512\",\n      \"PS256\",\n      \"PS384\",\n      \"PS512\"\n   ],\n   \"frontchannel_logout_supported\":true,\n   \"jwks_uri\":\"https://test.dd.jans.io/jans-auth/restv1/jwks\",\n   \"subject_types_supported\":[\n      \"public\",\n      \"pairwise\"\n   ],\n   \"id_token_signing_alg_values_supported\":[\n      \"none\",\n      \"HS256\",\n      \"HS384\",\n      \"HS512\",\n      \"RS256\",\n      \"RS384\",\n      \"RS512\",\n      \"ES256\",\n      \"ES384\",\n      \"ES512\",\n      \"PS256\",\n      \"PS384\",\n      \"PS512\"\n   ],\n   \"registration_endpoint\":\"https://test.dd.jans.io/jans-auth/restv1/register\",\n   \"id_token_token_binding_cnf_values_supported\":[\n      \"tbh\"\n   ]\n}\n</code></pre>"},{"location":"while-coding/janssen/janssen-notes/#fido-config","title":"fido config","text":"<p>request: <code>https://test.dd.jans.io/.well-known/fido2-configuration</code></p> <p>Response: <pre><code>{\n   \"version\":\"1.1\",\n   \"issuer\":\"https://test.dd.jans.io\",\n   \"attestation\":{\n      \"base_path\":\"https://test.dd.jans.io/fido2/restv1/attestation\",\n      \"options_enpoint\":\"https://test.dd.jans.io/fido2/restv1/attestation/options\",\n      \"result_enpoint\":\"https://test.dd.jans.io/fido2/restv1/attestation/result\"\n   },\n   \"assertion\":{\n      \"base_path\":\"https://test.dd.jans.io/fido2/restv1/assertion\",\n      \"options_enpoint\":\"https://test.dd.jans.io/fido2/restv1/assertion/options\",\n      \"result_enpoint\":\"https://test.dd.jans.io/fido2/restv1/assertion/result\"\n   }\n}\n</code></pre> SCIM config</p> <p>Request: <code>https://test.dd.jans.io/.well-known/scim-configuration</code></p> <p>Response: <pre><code>[\n   {\n      \"version\":\"2.0\",\n      \"authorization_supported\":[\n         \"oauth2\"\n      ],\n      \"user_endpoint\":\"https://test.dd.jans.io/jans-scim/restv1/v2/Users\",\n      \"group_endpoint\":\"https://test.dd.jans.io/jans-scim/restv1/v2/Groups\",\n      \"fido_devices_endpoint\":\"https://test.dd.jans.io/jans-scim/restv1/v2/FidoDevices\",\n      \"fido2_devices_endpoint\":\"https://test.dd.jans.io/jans-scim/restv1/v2/Fido2Devices\",\n      \"bulk_endpoint\":\"https://test.dd.jans.io/jans-scim/restv1/v2/Bulk\",\n      \"service_provider_endpoint\":\"https://test.dd.jans.io/jans-scim/restv1/v2/ServiceProviderConfig\",\n      \"resource_types_endpoint\":\"https://test.dd.jans.io/jans-scim/restv1/v2/ResourceTypes\",\n      \"schemas_endpoint\":\"https://test.dd.jans.io/jans-scim/restv1/v2/Schemas\"\n   }\n]\n</code></pre></p>"},{"location":"while-coding/janssen/janssen-notes/#client-registration-flow","title":"client registration flow","text":"<p>You can understand client registration flow by running below test case in <code>AccessTokenAsJwtHttpTest</code> class . It has output as given below:</p>"},{"location":"while-coding/janssen/janssen-notes/#test-accesstokenasjwt-request-post-jans-authrestv1register-http11-content-type-applicationjson-accept-applicationjson-host-testddjansio-access_token_as_jwt-true-application_type-web-scope-openid-profile-address-email-phone-user_name-redirect_uris-httpstestddjansiojans-auth-rphomehtm-access_token_signing_alg-rs512-client_name-access-token-as-jwt-test-additional_audience-response_types-code-id_token-token-response-http11-201-cache-control-no-store-connection-keep-alive-content-length-1492-content-type-applicationjson-date-wed-07-jul-2021-082648-gmt-keep-alive-timeout5-max100-pragma-no-cache-server-apache2441-ubuntu-strict-transport-security-max-age31536000-includesubdomains-x-content-type-options-nosniff-x-xss-protection-1-modeblock-allow_spontaneous_scopes-false-application_type-web-rpt_as_jwt-false-registration_client_uri-httpstestddjansiojans-authrestv1registerclient_id2bc0674b-48ce-4221-a19e-fa9fe7f1dc96-tls_client_auth_subject_dn-registration_access_token-237faef9-f3c2-44b6-95fa-71951fcc5d65-client_id-2bc0674b-48ce-4221-a19e-fa9fe7f1dc96-token_endpoint_auth_method-client_secret_basic-scope-user_name-email-openid-profile-phone-address-run_introspection_script_before_access_token_as_jwt_creation_and_include_claims-false-client_secret-3c1fd4a6-ac97-4dde-beb4-2ceba46d0842-client_id_issued_at-1625646408-backchannel_logout_uri-backchannel_logout_session_required-false-client_name-access-token-as-jwt-test-spontaneous_scopes-id_token_signed_response_alg-rs256-access_token_as_jwt-true-grant_types-authorization_code-implicit-refresh_token-subject_type-pairwise-keep_client_authorization_after_expiration-false-redirect_uris-httpstestddjansiojans-auth-rphomehtm-additional_audience-frontchannel_logout_session_required-false-client_secret_expires_at-1625732808-require_auth_time-false-access_token_signing_alg-rs512-response_types-token-code-id_token-authenticateresourceownerandgrantaccess-authorizationrequesturlhttpstestddjansiojans-authrestv1authorizeresponse_typecodeid_tokentokenclient_id2bc0674b-48ce-4221-a19e-fa9fe7f1dc96scopeopenidprofileaddressemailphoneuser_nameredirect_urihttps3a2f2ftestddjansio2fjans-auth-rp2fhomehtmstate214646be-513a-49b5-8344-4a8f77f42955nonce940ae5e7-7049-4f90-8699-4d552f5a0bba-authenticateresourceownerandgrantaccess-sessionstate0ff4dccc6cc5f61d8f1c8be65572bfad2257b02677d139af63b6724042a899179a9c384f-736f-4364-a833-40319fac7fd9-authenticateresourceownerandgrantaccess-sessionid0af7e5fa-9ee6-4048-a87e-c9c3fc768d0e-request-httpstestddjansiojans-authrestv1authorizeresponse_typecodeid_tokentokenclient_id2bc0674b-48ce-4221-a19e-fa9fe7f1dc96scopeopenidprofileaddressemailphoneuser_nameredirect_urihttps3a2f2ftestddjansio2fjans-auth-rp2fhomehtmstate214646be-513a-49b5-8344-4a8f77f42955nonce940ae5e7-7049-4f90-8699-4d552f5a0bba-response-http11-302-found-location-httpstestddjansiojans-auth-rphomehtmaccess_tokeneyjrawqioii1n2e3zgq3zs1lmdixltq1mzatodhjns1iztc1ngyznja4mzlfc2lnx3jznteyiiwidhlwijoislduiiwiywxnijoiulm1mtiifqeyjhdwqioiiyymmwnjc0yi00ognlltqymjetyte5zs1mytlmztdmmwrjotyilcjzdwiioii3txnmtevrddvwcwjvm3nislf3cve0mzvuufjid3fbujjwuwx2ddllzhjviiwiedv0i1myntyioiiilcjjb2rlijoimmq5ntk0ntctoda0oc00ndaxltg4ogmtmtazogezyjc1yzg4iiwic2nvcguiolsiywrkcmvzcyisinbob25liiwib3blbmlkiiwidxnlcl9uyw1liiwichjvzmlszsisimvtywlsil0simlzcyi6imh0dhbzoi8vdgvzdc5kzc5qyw5zlmlviiwidg9rzw5fdhlwzsi6ikjlyxjlciisimv4cci6mtyynty0njcxmiwiawf0ijoxnji1njq2ndeylcjjbgllbnrfawqioiiyymmwnjc0yi00ognlltqymjetyte5zs1mytlmztdmmwrjotyilcj1c2vybmftzsi6ikphbnmgqxv0acbuzxn0ifvzzxiifqjuhmeg6jtlbpib8fo09z_5mcc_sxnw1bslwyl15ubadybwupx-ijdtrt-mljyj9egvu8tqzyv2zonyvaaau7bp4ylz6eyqasu37u5-mlpuiq8yscruqyd1pynq5u4uwp5r5ruazametca1bfw5fj13cyk6vr1ls0_cobsbfayfrju2lwejnvyqxr_rl84du69gmy8axdultchc9xbvm4mjts8kshrlobl1ntjy4x9tjt33kc_xme__bveemqtjcczodki9qs9dkdu4fha60o6s90wfluxtmfa9rjgmsm0i9qla_ausvhij5aspfom-6qubibccbagajisw0shhjo0gcode515d2baf-5e92-41d2-b6c2-114fcb9eb8b9scopeaddressphoneopeniduser_nameprofileemailid_tokeneyjrawqioii2mge5mzqzoc03mta4ltq3yjctowy1oc0wntixmgjlndlhmjdfc2lnx3jzmju2iiwidhlwijoislduiiwiywxnijoiulmyntyifqeyjhdf9oyxnoijoic2lkmzntuwjyzlhxvwfnrgnizdi3qsisinn1yii6ijdnc0xmrwt0nvzxyluzc0hkuxdxutqznw5qumj3cufsmnbrbhz0owvkcm8ilcjjb2rlijoimzc1zjbjmjktntc1ni00mzazltg3otytyti5ywm0nzq5y2qwiiwiyw1yijpbijewil0simlzcyi6imh0dhbzoi8vdgvzdc5kzc5qyw5zlmlviiwibm9uy2uioii5ndbhztvlny03mdq5ltrmotatody5os00zdu1mmy1ytbiymeilcjzawqioii0mda3ntbkzc1moguwltrhmjutytziny0wzgi5zmq2n2qwn2milcjvee9wzw5jrenvbm5ly3rwzxjzaw9uijoib3blbmlky29ubmvjdc0xljailcjhdwqioiiyymmwnjc0yi00ognlltqymjetyte5zs1mytlmztdmmwrjotyilcjhy3iioijiyxnpyyisimnfagfzaci6injtsutwwdjesdizvlaycgjutwrdc2cilcjzx2hhc2gioij1zhc0agrwx1fdzjzyofe2bfm3rlj3iiwiyxv0af90aw1lijoxnji1njq2ndexlcjlehaioje2mju2ntawmtisimdyyw50ijoiyxv0ag9yaxphdglvbl9jb2rliiwiawf0ijoxnji1njq2ndeyfqt9qarzztqwvkp3qvhad5n75sk9daxcd9zmud2kwdg8pj0srni0cpkjr_69iq5eyjsq-bmdkftvr4j-pdn7bz0sai0fwg7qqwrqpcfhrv8kv2rmpmyhajuwfbfigy1glz4ex1uvfaxv-ynuekempc4j-qwisjyvy0tdrxfdeff5ew4m_yeqele-kbn1gatzyiahauprmdjs5blichqxacaser2igedakenakfyfi8ucjmz_icxnts6mk5m65l3rkidm7cdh5dbqz5b8inowe2npkt-bkhioklvpijdqldymba16pjqhwnb15dk6zyzrueksbvudiwj3pe8mnr8kw92wsession_id0af7e5fa-9ee6-4048-a87e-c9c3fc768d0estate214646be-513a-49b5-8344-4a8f77f42955token_typebearersession_state0ff4dccc6cc5f61d8f1c8be65572bfad2257b02677d139af63b6724042a899179a9c384f-736f-4364-a833-40319fac7fd9expires_in299sid400750dd-f8e0-4a25-a6b7-0db9fd67d07c-tests-run-1-failures-0-errors-0-skipped-0-time-elapsed-5701-sec-in-iojansasclientwsrsaccesstokenasjwthttptest","title":"<pre><code>#######################################################\nTEST: accessTokenAsJwt\n#######################################################\n-------------------------------------------------------\nREQUEST:\n-------------------------------------------------------\nPOST /jans-auth/restv1/register HTTP/1.1\nContent-Type: application/json\nAccept: application/json\nHost: test.dd.jans.io\n\n{\n  \"access_token_as_jwt\" : \"true\",\n  \"application_type\" : \"web\",\n  \"scope\" : \"openid profile address email phone user_name\",\n  \"redirect_uris\" : [ \"https://test.dd.jans.io/jans-auth-rp/home.htm\" ],\n  \"access_token_signing_alg\" : \"RS512\",\n  \"client_name\" : \"access token as JWT test\",\n  \"additional_audience\" : [ ],\n  \"response_types\" : [ \"code\", \"id_token\", \"token\" ]\n}\n\n-------------------------------------------------------\nRESPONSE:\n-------------------------------------------------------\nHTTP/1.1 201\nCache-Control: no-store\nConnection: Keep-Alive\nContent-Length: 1492\nContent-Type: application/json\nDate: Wed, 07 Jul 2021 08:26:48 GMT\nKeep-Alive: timeout=5, max=100\nPragma: no-cache\nServer: Apache/2.4.41 (Ubuntu)\nStrict-Transport-Security: max-age=31536000; includeSubDomains\nX-Content-Type-Options: nosniff\nX-Xss-Protection: 1; mode=block\n\n{\n    \"allow_spontaneous_scopes\": false,\n    \"application_type\": \"web\",\n    \"rpt_as_jwt\": false,\n    \"registration_client_uri\": \"https://test.dd.jans.io/jans-auth/restv1/register?client_id=2bc0674b-48ce-4221-a19e-fa9fe7f1dc96\",\n    \"tls_client_auth_subject_dn\": \"\",\n    \"registration_access_token\": \"237faef9-f3c2-44b6-95fa-71951fcc5d65\",\n    \"client_id\": \"2bc0674b-48ce-4221-a19e-fa9fe7f1dc96\",\n    \"token_endpoint_auth_method\": \"client_secret_basic\",\n    \"scope\": \"user_name email openid profile phone address\",\n    \"run_introspection_script_before_access_token_as_jwt_creation_and_include_claims\": false,\n    \"client_secret\": \"3c1fd4a6-ac97-4dde-beb4-2ceba46d0842\",\n    \"client_id_issued_at\": 1625646408,\n    \"backchannel_logout_uri\": [],\n    \"backchannel_logout_session_required\": false,\n    \"client_name\": \"access token as JWT test\",\n    \"spontaneous_scopes\": [],\n    \"id_token_signed_response_alg\": \"RS256\",\n    \"access_token_as_jwt\": true,\n    \"grant_types\": [\n        \"authorization_code\",\n        \"implicit\",\n        \"refresh_token\"\n    ],\n    \"subject_type\": \"pairwise\",\n    \"keep_client_authorization_after_expiration\": false,\n    \"redirect_uris\": [\"https://test.dd.jans.io/jans-auth-rp/home.htm\"],\n    \"additional_audience\": [],\n    \"frontchannel_logout_session_required\": false,\n    \"client_secret_expires_at\": 1625732808,\n    \"require_auth_time\": false,\n    \"access_token_signing_alg\": \"RS512\",\n    \"response_types\": [\n        \"token\",\n        \"code\",\n        \"id_token\"\n    ]\n}\n\nauthenticateResourceOwnerAndGrantAccess: authorizationRequestUrl:https://test.dd.jans.io/jans-auth/restv1/authorize?response_type=code+id_token+token&amp;client_id=2bc0674b-48ce-4221-a19e-fa9fe7f1dc96&amp;scope=openid+profile+address+email+phone+user_name&amp;redirect_uri=https%3A%2F%2Ftest.dd.jans.io%2Fjans-auth-rp%2Fhome.htm&amp;state=214646be-513a-49b5-8344-4a8f77f42955&amp;nonce=940ae5e7-7049-4f90-8699-4d552f5a0bba\nauthenticateResourceOwnerAndGrantAccess: sessionState:0ff4dccc6cc5f61d8f1c8be65572bfad2257b02677d139af63b6724042a89917.9a9c384f-736f-4364-a833-40319fac7fd9\nauthenticateResourceOwnerAndGrantAccess: sessionId:0af7e5fa-9ee6-4048-a87e-c9c3fc768d0e\n-------------------------------------------------------\nREQUEST:\n-------------------------------------------------------\nhttps://test.dd.jans.io/jans-auth/restv1/authorize?response_type=code+id_token+token&amp;client_id=2bc0674b-48ce-4221-a19e-fa9fe7f1dc96&amp;scope=openid+profile+address+email+phone+user_name&amp;redirect_uri=https%3A%2F%2Ftest.dd.jans.io%2Fjans-auth-rp%2Fhome.htm&amp;state=214646be-513a-49b5-8344-4a8f77f42955&amp;nonce=940ae5e7-7049-4f90-8699-4d552f5a0bba\n\n-------------------------------------------------------\nRESPONSE:\n-------------------------------------------------------\nHTTP/1.1 302 Found\nLocation: https://test.dd.jans.io/jans-auth-rp/home.htm#access_token=eyJraWQiOiI1N2E3ZGQ3ZS1lMDIxLTQ1MzAtODhjNS1iZTc1NGYzNjA4Mzlfc2lnX3JzNTEyIiwidHlwIjoiSldUIiwiYWxnIjoiUlM1MTIifQ.eyJhdWQiOiIyYmMwNjc0Yi00OGNlLTQyMjEtYTE5ZS1mYTlmZTdmMWRjOTYiLCJzdWIiOiI3TXNMTEVrdDVWcWJVM3NISlF3cVE0MzVuUFJid3FBUjJwUWx2dDllZHJvIiwieDV0I1MyNTYiOiIiLCJjb2RlIjoiMmQ5NTk0NTctODA0OC00NDAxLTg4OGMtMTAzOGEzYjc1Yzg4Iiwic2NvcGUiOlsiYWRkcmVzcyIsInBob25lIiwib3BlbmlkIiwidXNlcl9uYW1lIiwicHJvZmlsZSIsImVtYWlsIl0sImlzcyI6Imh0dHBzOi8vdGVzdC5kZC5qYW5zLmlvIiwidG9rZW5fdHlwZSI6IkJlYXJlciIsImV4cCI6MTYyNTY0NjcxMiwiaWF0IjoxNjI1NjQ2NDEyLCJjbGllbnRfaWQiOiIyYmMwNjc0Yi00OGNlLTQyMjEtYTE5ZS1mYTlmZTdmMWRjOTYiLCJ1c2VybmFtZSI6IkphbnMgQXV0aCBUZXN0IFVzZXIifQ.JUHmEG6JtlBpIb8fo09Z_5mcC_SXnW1bslWyl15UBADyBwUpX-IjDtRt-mLjyJ9egVU8TQzYv2zONyvaaaU7BP4YLZ6EyQaSu37u5-MLpuIq8YscruQyd1PYnq5u4uWp5r5rUaZaMetca1bfw5fj13cyK6vr1Ls0_cObSbFaYFrJU2LweJnvYQxR_rl84DU69GMY8AxDuLTcHC9xBvm4mjts8KShRLobL1NtJY4X9tJt33kC_xMe__BvEEMqtJcczoDKI9Qs9DKDu4fha60O6S90WfLuxTMFa9RJgmsm0i9qlA_AuSVhIj5aSpFOM-6qUBiBccBaGAjiSW0SHhJO0g&amp;code=515d2baf-5e92-41d2-b6c2-114fcb9eb8b9&amp;scope=address+phone+openid+user_name+profile+email&amp;id_token=eyJraWQiOiI2MGE5MzQzOC03MTA4LTQ3YjctOWY1OC0wNTIxMGJlNDlhMjdfc2lnX3JzMjU2IiwidHlwIjoiSldUIiwiYWxnIjoiUlMyNTYifQ.eyJhdF9oYXNoIjoic2lKMzNTUWJyZlhXVWFNRGNIZDI3QSIsInN1YiI6IjdNc0xMRWt0NVZxYlUzc0hKUXdxUTQzNW5QUmJ3cUFSMnBRbHZ0OWVkcm8iLCJjb2RlIjoiMzc1ZjBjMjktNTc1Ni00MzAzLTg3OTYtYTI5YWM0NzQ5Y2QwIiwiYW1yIjpbIjEwIl0sImlzcyI6Imh0dHBzOi8vdGVzdC5kZC5qYW5zLmlvIiwibm9uY2UiOiI5NDBhZTVlNy03MDQ5LTRmOTAtODY5OS00ZDU1MmY1YTBiYmEiLCJzaWQiOiI0MDA3NTBkZC1mOGUwLTRhMjUtYTZiNy0wZGI5ZmQ2N2QwN2MiLCJveE9wZW5JRENvbm5lY3RWZXJzaW9uIjoib3BlbmlkY29ubmVjdC0xLjAiLCJhdWQiOiIyYmMwNjc0Yi00OGNlLTQyMjEtYTE5ZS1mYTlmZTdmMWRjOTYiLCJhY3IiOiJiYXNpYyIsImNfaGFzaCI6InJTSUtWWDJESDIzVlAycGJUTWRDc2ciLCJzX2hhc2giOiJ1ZHc0aGRwX1FDZjZyOFE2bFM3RlJ3IiwiYXV0aF90aW1lIjoxNjI1NjQ2NDExLCJleHAiOjE2MjU2NTAwMTIsImdyYW50IjoiYXV0aG9yaXphdGlvbl9jb2RlIiwiaWF0IjoxNjI1NjQ2NDEyfQ.t9QARzZTqWvkp3QvHaD5N75sk9DAxCd9zmud2kwdg8pJ0srnI0CPKJR_69Iq5eYJsQ-bmDkfTvR4j-PdN7bZ0sAi0fwG7qqwrQpcFHRV8KV2rMpmyhajuWFbFiGY1gLz4eX1UvfaXv-YNUekEMpC4j-qWiSJyVy0tDRXFdeff5eW4M_yeqeLe-kBn1GATzYIahAUpRmdjs5blichQxAcaser2iGeDAkEnaKFYFI8UCjmZ_ICXNTS6mk5m65L3RkiDm7cDh5dbQz5b8inOwe2nPkt-BKHIOKlvpijdQlDyMBA16pjQHWNb15DK6zyZruEKSbvudiwj3PE8mNr8kW92w&amp;session_id=0af7e5fa-9ee6-4048-a87e-c9c3fc768d0e&amp;state=214646be-513a-49b5-8344-4a8f77f42955&amp;token_type=Bearer&amp;session_state=0ff4dccc6cc5f61d8f1c8be65572bfad2257b02677d139af63b6724042a89917.9a9c384f-736f-4364-a833-40319fac7fd9&amp;expires_in=299&amp;sid=400750dd-f8e0-4a25-a6b7-0db9fd67d07c\n\nTests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 5.701 sec - in io.jans.as.client.ws.rs.AccessTokenAsJwtHttpTest\n</code></pre>","text":"<ul> <li>list of all possible arguments to install.py is at <code>jans-setup</code> repo under <code>setup_app\\utils\\arg_parser.py</code></li> </ul>"},{"location":"while-coding/janssen/janssen-notes/#command-to-setup-janssen-with-mysql-as-backend","title":"command to setup janssen with mysql as backend:","text":"<p>On a blank machine, commands below will install MySQL and complete the setup.</p> <pre><code>wget https://raw.githubusercontent.com/JanssenProject/jans/main/jans-linux-setup/install.py &gt; install.py\nsudo python3 install.py --args=\"-local-rdbm=mysql\"\n</code></pre> <p>it gets you the questionnair like below:</p> <p><pre><code>Do you acknowledge that use of the Janssen Server is under the Apache-2.0 license? [N|y] : y\nEnter IP Address [10.160.0.4] : \nEnter hostname [temp-jans-mysql-14jul.asia-south1-a.c.conductive-coil-317212.internal] : temp.dd.jans.io\nEnter your city or locality : ahm\nEnter your state or province two letter code : gj\nEnter two letter Country Code : in\nEnter Organization Name : gluu.org\nEnter email address for support at your organization : dhaval@gluu.org\nEnter maximum RAM for applications in MB [13260] : \nChose Backend Type:\n  1 Local OpenDj\n  2 Remote OpenDj\n  3 Remote Couchbase\n  4 Local MySQL\n  5 Remote MySQL\n  6 Cloud Spanner\nSelection [1]: 4\nEnter Password for Admin User [yG2v{[1c4bMj] : simplepass\nInstall Jans Auth Config Api? [Yes] : \nInstall Scim Server? [Yes] : \nInstall Fido2 Server? [Yes] : \nInstall Eleven Server? [No] : \nChecking Properties\n\nhostname                                          temp.dd.jans.io\norgName                                                  gluu.org\nos                                                         ubuntu\ncity                                                          ahm\nstate                                                          gj\ncountryCode                                                    in\nApplications max ram (MB)                                   13260\nBackends                                                    mysql\nJava Type                                                     jre\nInstall Apache 2 web server                                  True\nInstall Auth Server                                          True\nInstall Jans Auth Config Api                                 True\nInstall Fido2 Server                                         True\nInstall Scim Server                                          True\nInstall Eleven Server                                       False\n\nProceed with these values [Y|n] y\n\u2713 jans             Calculating application memory\n\u2713 jre              Installing Jre\n\u2713 jetty            Installing Jetty\n\u2713 jython           Installing Jython\n\u2713 rdbm-server      Importing ldif files to mysql\n\u2713 apache2          Configuring apache2\n\u2713 jans-auth        Generating OAuth openid keys\n\u2713 jans-config-api  Installing Jans-Config-Api\n\u2713 jans-fido2       Installing Jans-Fido2\n\u2713 jans-scim        Installing Jans-Scim\n\u2713 jans-cli         Installing Jans Cli\n\u28fb post-setup       Starting Jans Auth\n</code></pre> After installation, you can find rdbm(DB) password and other default input used by jans setup in <code>/opt/jans/jans-setup/setup.properties.last</code></p>"},{"location":"while-coding/janssen/janssen-notes/#steps-involved-in-db-setup-during-janssen-installation","title":"Steps involved in DB setup during janssen installation:","text":"<p>For persistence types like MySQL, Janssen installer translates <code>.ldif</code> files to sql queries and executes them against db. Code flow for the same is given below. This is can only run be run on Linux as it Linux specific paths. setup.py -&gt; rdbmInstaller.start_installation() -&gt; base.py.start_installation()  -&gt; self.install() -&gt; rdbm.py.install() -&gt; create tables, import LDIF files and create indexes.</p>"},{"location":"while-coding/janssen/janssen-notes/#mapping-of-ldap-ldif-files-loaded-into-mysql-tables","title":"Mapping of LDAP (ldif) files loaded into MySQL tables","text":"<ul> <li>ldif files in the code base are at https://github.com/JanssenProject/jans-setup/tree/master/templates and under subfolders like <code>jans-auth</code></li> <li>base.ldif -&gt; only one entry in table jansOrganization with <code>o=jans</code>. Not sure where rest of the data from file goes.</li> <li>attribute.ldif -&gt; jansAttr (70 records)</li> <li>configuration.ldif -&gt; not sure in which table is this added</li> <li>scripts.ldif -&gt; jansCustomScr (37 records)</li> <li>jans-auth/people.ldif -&gt; jansPerson (1 record)</li> <li>jans-auth/groups.ldif -&gt; jansGrp (1 record)</li> <li>jans-auth/configuration.ldif, jans-config-api/config.ldif, jans-fido2/fido2.ldif, jans-scim/configuration.ldif -&gt; jansAppConf</li> <li>templates/scopes.ldif, jans-config-api/scopes.ldif, jans-scim/scopes.ldif -&gt; jansScope</li> <li>jans-auth/clients.ldif, jans-config-api/clients.ldif, jans-scim/clients.ldif -&gt; jansClnt</li> </ul>"},{"location":"while-coding/janssen/janssen-notes/#janssen-ssl-configuration","title":"janssen ssl configuration:","text":"<p>Janssen uses apache 2 as web frontend and SSL configuration happens at the point. Not on Jetty. From the <code>/opt/jans/jans-setup/logs/setup.log</code> ... </p> <p>apache gets installed:</p> <pre><code>Setting up apache2 (2.4.41-4ubuntu3.3) ...\nEnabling module mpm_event.\nEnabling module authz_core.\nEnabling module authz_host.\nEnabling module authn_core.\nEnabling module auth_basic.\nEnabling module access_compat.\nEnabling module authn_file.\nEnabling module authz_user.\nEnablin\n</code></pre> <p>enabling ssl and other modules <pre><code>08:52:46 07/14/21 Running: a2enmod ssl headers proxy proxy_http proxy_ajp\n08:52:46 07/14/21 Considering dependency setenvif for ssl:\nModule setenvif already enabled\nConsidering dependency mime for ssl:\nModule mime already enabled\nConsidering dependency socache_shmcb for ssl:\nEnabling module socache_shmcb.\nEnabling module ssl.\nSee /usr/share/doc/apache2/README.Debian.gz on how to configure SSL and create self-signed certificates.\n</code></pre></p> <p>generating certificates: <pre><code>08:56:30 07/14/21 Generating Certificate for httpd\n08:56:30 07/14/21 Running: /usr/bin/openssl genrsa -des3 -out /etc/certs/httpd.key.orig -passout pass:lsloW9ul0au1 2048\n08:56:30 07/14/21 Running: /usr/bin/openssl rsa -in /etc/certs/httpd.key.orig -passin pass:lsloW9ul0au1 -out /etc/certs/httpd.key\n08:56:30 07/14/21 Running: /usr/bin/openssl req -new -key /etc/certs/httpd.key -out /etc/certs/httpd.csr -subj /C=in/ST=gj/L=ah/O=gluu org/CN=testmysql.dd.jans.io/emailAddress=dhaval@gluu.org\n08:56:30 07/14/21 Running: /usr/bin/openssl x509 -req -days 365 -in /etc/certs/httpd.csr -signkey /etc/certs/httpd.key -out /etc/certs/httpd.crt\n08:56:30 07/14/21 Running: /bin/chown jetty:jetty /etc/certs/httpd.key.orig\n08:56:30 07/14/21 Running: /bin/chmod 700 /etc/certs/httpd.key.orig\n08:56:30 07/14/21 Running: /bin/chown jetty:jetty /etc/certs/httpd.key\n08:56:30 07/14/21 Running: /bin/chmod 700 /etc/certs/httpd.key\n08:56:30 07/14/21 Running: /opt/jre/bin/keytool -import -trustcacerts -alias testmysql.dd.jans.io_httpd -file /etc/certs/httpd.crt -keystore /opt/jre/jre/lib/security/cacerts -storepass changeit -noprompt\n08:56:31 07/14/21 Running: /usr/bin/systemctl enable apache2\n08:56:32 07/14/21 Run: /usr/bin/systemctl enable apache2 with result code: 0\n08:56:32 07/14/21 Running: /usr/bin/systemctl start apache2\n08:56:32 07/14/21 Run: /usr/bin/systemctl start apache2 with result code: 0\n</code></pre></p> <p>Other port related apache config is at httpd_2.4.conf and HTTP redirection is configured in https_jans.conf file.</p>"},{"location":"while-coding/janssen/janssen-notes/#jans-install-guide-with-test-execution-and-remote-debugging","title":"Jans install guide with test execution and remote debugging","text":"<p>This is a guide for setting up a development environment that enables compilation and testing of Janssen components. For a complete development environment, you need three things: </p> <p>1) Janssen server for development</p> <p>2) Workspace which has code and tests that you can run </p> <p>3) Ability to remote debug </p> <p>In this guide, we will see how to setup all three above. You can setup both 1) and 2) on same machine or on different machines.</p>"},{"location":"while-coding/janssen/janssen-notes/#installing-janssen-server","title":"Installing Janssen server:","text":"<p>When you plan to develop and contribute code to Janssen, you need a running Janssen server in order to run your tests and verify that your feature or bug fix is working as intended. You can plan to install Janssen server on local Windows machine, Linux machine or you may planning to install Janssen using Janssen cloud based deployment. </p>"},{"location":"while-coding/janssen/janssen-notes/#hardware-requirements-of-janssen-server","title":"Hardware requirements of Janssen server","text":"<ul> <li>8 GB RAM for Janssen server installation</li> <li>CPU with at least two cores</li> <li>40 GB harddisk space</li> </ul>"},{"location":"while-coding/janssen/janssen-notes/#platform-requirements-of-janssen-server","title":"Platform requirements of Janssen server","text":"<p>Janssen auth server installs on Linux based operating system, primarily, Ubuntu. If your development environment is using a different operating system, like Windows, we have to leverage virtualization tools to install Janssen server. Follow the instructions listed in sections below as appropriate.</p> <p>1) Install Janssen on Windows OS 2) Install Janssen on Ubuntu 20.4 3) Install Janssen on remote server ( like a Google Cloud Platform or AWS Linux instance ) 4) On Cloud based deployment</p>"},{"location":"while-coding/janssen/janssen-notes/#installing-janssen-auth-server-on-windows-machine","title":"Installing Janssen auth server on Windows machine","text":"<p>Janssen runs on Linux based operating system Ubuntu. In order to run it on a Windows machine, we have to leverage virtualization technique as described in steps below.</p>"},{"location":"while-coding/janssen/janssen-notes/#prepare-your-windows-machine","title":"Prepare your Windows machine","text":"<p>Steps:</p> <pre><code>1) `TODO`\n2) `TODO`\n</code></pre> <p>Once you have executed above steps, your Windows machine is ready for Janssen installation.</p>"},{"location":"while-coding/janssen/janssen-notes/#installing-janssen-auth-server-on-ubuntu","title":"Installing Janssen auth server on Ubuntu","text":""},{"location":"while-coding/janssen/janssen-notes/#prepare-your-ubuntu-system","title":"Prepare your Ubuntu system","text":"<p>Steps:</p> <pre><code>1) `TODO`\n2) `TODO`\n</code></pre> <p>Once you have executed above steps, your Ubuntu machine is ready for Janssen installation.</p>"},{"location":"while-coding/janssen/janssen-notes/#installing-janssen-auth-server-on-remote-server","title":"Installing Janssen auth server on remote server","text":"<p>If you have limited hardware resources on your local machine, then you may install Janssen on a remote server. For this you need to have access to a remote server, either standalone or an instance hosted on any cloud platform like GCP or AWS. Here in this guide, we will take example of installing Janssen server on an GCP instance.</p>"},{"location":"while-coding/janssen/janssen-notes/#prepare-gcp-instance","title":"Prepare GCP instance","text":"<p>Steps:</p> <pre><code>1) `TODO`\n2) `TODO`\n</code></pre> <p>Once you have executed above steps, your GCP instance is ready for Janssen installation.</p>"},{"location":"while-coding/janssen/janssen-notes/#install-janssen","title":"Install Janssen","text":"<p>Janssen installation involves running two commands. During installation, setup will prompt few questions and you'll also need to accept license. During this process, among other inputs, the setup will also ask you to name your Janssen server. You can name it anyting but make note of it, as we will need that name in future. For now, we will assume that server is named demoexample.jans.io.</p> <p>First command to run is as below. It'll download required installation script.</p> <p><code>wget https://raw.githubusercontent.com/JanssenProject/jans/main/jans-linux-setup/install.py</code></p> <p>Once you have the script, you can start installation. You can either start installation with or without test data loading along with it. Test data load will help you to run unit tests when you are writing code. You can also choose to load it later when needed.</p> <p>To install with test data load:</p> <pre><code>sudo python3 install.py --args=\"-t\"\n</code></pre> <p>To install without test data load:</p> <p><code>sudo python3 install.py</code></p> <p>Load test data separately from installation process: </p> <pre><code>cd /opt/jans/jans-setup/\nsudo python3 setup.py -t -x -n\n</code></pre> <p>After successful execution, you have a working Janssen setup. </p> <p>Now, to access Janssen end-points, please map <code>IP</code> address of your Janssen server with name of Janssen server which you provided during install process. This mapping needs to be in <code>/etc/hosts</code> file of host from where you intend to access the end-point URLs. Once this mapping is done, you can access below mentioned end-points to verify your Janssen installation:</p> <pre><code>|Service           | Example endpoint                                                       |   \n|------------------|------------------------------------------------------------------------|\n|Auth server       | `https://demoexample.jans.io/.well-known/openid-configuration`         |\n|fido2             | `https://demoexample.jans.io/.well-known/fido2-configuration`          |\n|scim              | `https://demoexample.jans.io/.well-known/scim-configuration`           |\n</code></pre>"},{"location":"while-coding/janssen/janssen-notes/#no-prompt-installation","title":"no prompt installation","text":"<p>Run commands one by one. This will uninstall install janssen with local ldap </p> <pre><code>sudo python3 /opt/jans/jans-setup/install.py -uninstall -y\n\nwget https://github.com/JanssenProject/jans/releases/download/v1.0.20.nightly/jans-1.0.20.nightly-suse15.x86_64.rpm\n\nsudo zypper install -n ~/jans-1.0.20.nightly-suse15.x86_64.rpm\n\nsudo python3 /opt/jans/jans-setup/setup.py -n -ip-address 10.229.38.28 -host-name jans-opensuse -city ah -state gj -country in -org-name gluu -email dhaval@gluu.org -jans-max-mem 26349 -admin-password admin -ldap-admin-password admin --listen_all_interfaces --with-casa --install-jans-keycloak-link -t\n</code></pre>"},{"location":"while-coding/janssen/janssen-notes/#setup-your-workspace","title":"Setup your workspace","text":""},{"location":"while-coding/janssen/janssen-notes/#minimal-software-requirements","title":"Minimal software requirements","text":"<p>Most basic tools required are - <code>git</code>  : To clone and manage the inav code repository - <code>java</code> : Java to run maven and build. Needs Java 1.8 or above - <code>mvn</code>  : latest maven - Other tools like IDE etc can be of your choice</p> <p>Setting up your workspace is as easy as cloning Janssen module repository from Github. You can clone the repository of the module that you intend to work on.</p> <p>Here, we are going ahead with Janssen auth server module.</p>"},{"location":"while-coding/janssen/janssen-notes/#get-code","title":"Get code","text":"<p>You can get code for Janssen modules from Github repository here</p> <p>In the directory where you want to create your workspace, you can clone the module as below:</p> <p><code>git clone https://github.com/JanssenProject/jans-auth-server</code></p>"},{"location":"while-coding/janssen/janssen-notes/#build","title":"Build","text":"<p><code>cd jans-auth-server</code></p> <p>At this point, you should be able to successfully compile the module using <code>mvn compile</code></p>"},{"location":"while-coding/janssen/janssen-notes/#run-tests","title":"Run tests","text":"<p>In order to be able to run tests, your code in your local workspace should be able to connect to Janssen server that you installed previously. This is done by creating a <code>profile</code> and a few more commands. That is what we will do next.</p>"},{"location":"while-coding/janssen/janssen-notes/#create-test-profile","title":"Create test profile","text":""},{"location":"while-coding/janssen/janssen-notes/#what-is-a-profile","title":"What is a profile:","text":"<p>At the most basic level, a profile is a directory, with the same name as your server and contains files that enable your code to connect with Janssen server. In following steps, We will create profile directory where your code is and put required files under it. During it's installation, the Janssen server has already created these files for us to copy.</p> <p>1) Get profile name which we will be using. Run this command where Janssen server is installated.</p> <p><code>cat /opt/jans/jans-setup/output/test/jans-auth/client/config-oxauth-test-data.properties | grep clientKeyStoreFile | cut -d \"/\" -f2 | cut -d \"/\" -f1</code></p> <p>Output of this command is the profile name that you need to use in following steps. Generally, this name is same as name of your Janssen server.</p> <p>2) Create and setup your profile  - Setup profile for client module of jans-auth-server    - <code>mkdir ./client/profiles/&lt;profile_name&gt;/</code>    - <code>cp -rf /opt/jans/jans-setup/output/test/jans-auth/client/* ./client/profiles/&lt;profile_name&gt;/</code>    - <code>cp ./client/profiles/default/client_keystore.jks ./client/profiles/&lt;profile_name&gt;/</code>  - Setup profile for server module of jans-auth-server    - <code>mkdir ./server/profiles/&lt;profile_name&gt;/</code>    - <code>cp -rf /opt/jans/jans-setup/output/test/jans-auth/server/* ./server/profiles/&lt;profile_name&gt;/</code>    - <code>cp ./server/profiles/default/client_keystore.jks ./server/profiles/&lt;profile_name&gt;/</code></p> <p>If your code and installed Janssen server is on the same machine, then at this point you should be able to run full build with tests. If both are on separate machines then you need to take few additional steps before you can run your full build with tests.</p>"},{"location":"while-coding/janssen/janssen-notes/#additional-steps-for-remote-workspace","title":"Additional steps for remote workspace","text":"<p>These steps are only needed if we need to run build and tests on a different machine then the one where you have installed Janssen server. Also its not needed if we deploy CA cert into Janssen instalation.</p> <p>1) Import self signed http cert into java truststore.</p> <p>Copy <code>/etc/certs/httpd.crt</code> from CE server to <code>&lt;path&gt;/httpd.crt</code> or run:</p> <p><code>openssl s_client -connect &lt;ce-server&gt;:443 2&gt;&amp;1 |sed -ne '/-BEGIN CERTIFICATE-/,/-END CERTIFICATE-/p' &gt; /tmp/httpd.crt</code></p> <p><code>/opt/jre/bin/keytool -import -alias jans_http -keystore /opt/jre/lib/security/cacerts -file /tmp/httpd.crt</code></p> <p>2) Fill the right configuration <code>cibaEndUserNotificationConfig</code>. It's in <code>jansConfDyn</code> in ou=jans-auth,ou=configuration,o=jans. After restart Jans Auth server:</p> <pre><code>systemctl restart jans-auth\n</code></pre>"},{"location":"while-coding/janssen/janssen-notes/#run-full-build-with-tests","title":"Run full build with tests:","text":"<pre><code>mvn -fae -Dcfg=&lt;profile_name&gt; -Dcvss-score=9 -Dfindbugs.skip=true -Ddependency.check=false clean compile package\n</code></pre> <p>You should be able to run test cases successfully.</p>"},{"location":"while-coding/janssen/janssen-notes/#setup-remote-debugging_1","title":"Setup remote debugging","text":""},{"location":"while-coding/janssen/janssen-notes/#changes-required-on-janssen-server_1","title":"Changes required on Janssen server","text":"<ul> <li>Open service config file</li> </ul> <p><code>vim /etc/default/jans-auth</code></p> <ul> <li>add line below at the end of <code>JAVA_OPTIONS</code></li> </ul> <p><code>-Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=6001</code></p> <ul> <li>then restart services</li> </ul> <p><code>systemctl restart jans-auth.service</code></p> <ul> <li>(only if you are using GCP instance as jans server) add port to firewall:</li> <li>search for firewall on dashboard search</li> <li>edit the firewall called <code>default-allow-ssh</code>, and add port <code>6001</code>. Save settings.</li> <li>not sure but you may want to restart your instance once for firewall settings to take effect.</li> </ul>"},{"location":"while-coding/janssen/janssen-notes/#changes-required-in-the-machine-where-your-workspace-is_1","title":"changes required in the machine where your workspace is:","text":"<ul> <li>setup port forwarding</li> </ul> <p><code>ssh -L 6001:localhost:6001 &lt;user&gt;@demoexample.jans.io</code></p> <p>this command will open an ssl connection with jans server. Keep the window open.</p> <ul> <li>In IntellijIdea, </li> <li><code>shift+shift</code> -&gt; search for <code>edit configuration</code> -&gt; click on <code>+</code> -&gt; <code>remote jvm debugging</code> -&gt; then give below values</li> <li><code>host:</code> remote host IP or name as in <code>hosts</code> file, <code>port:</code> 6001, <code>use module:</code> give the module which is being debugged on server. </li> </ul>"},{"location":"while-coding/janssen/janssen-notes/#taking-mysql-data-dump-from-janssen-installation","title":"taking mysql data dump from janssen installation","text":"<ul> <li>go to /opt/jans/jans-setup/logs/setup.log</li> <li>search for <code>CREATE DATABASE</code>. this will show you the line where it has created a new database in mysql. Copy name of this db.</li> <li>now on command line, <code>sudo mysqldump -u root  {nameOfDB} &gt; mysql_dump.sql</code></li> <li>take this file to the pc where you want to import the data</li> <li></li> </ul>"},{"location":"while-coding/janssen/janssen-notes/#code-improvement-areas","title":"code improvement areas","text":""},{"location":"while-coding/janssen/janssen-notes/#-this-code-has-if-condition-that-executes-code-based-on-http-method-of-the-request-check-if-this-can-be-avoided-by-having-rest-apis-like-what-spring-boot-has-where-methods-in-controller-are-called-based-on-http-request-method-and-if-check-is-not-required","title":"- this code has if condition that executes code based on http method of the request. Check if this can be avoided by having rest apis like what spring-boot has where methods in controller are called based on http request method and <code>if</code> check is not required.","text":""},{"location":"while-coding/janssen/janssen-notes/#misc-notes","title":"misc notes :","text":"<ul> <li>while trying to setup local workspace, i tried running jans-auth-server.war on Jetty 10.0 but it failed to start due to sax exception in parcing jetty-env.xml. It worked fine when I tried on jetty 9 (jetty-distribution-9.4.31.v20200723.tar.gz) as downloaded from one of the installed janssen server instance from location (/opt/dist/app/jetty-distribution-9.4.31.v20200723.tar.gz).</li> <li>when you are running tests via maven on command line, and there are failure, and you want to see which tests are failing then </li> <li>push output in a file <code>mvn -Dcfg=test.local.jans.io -fae -Dcvss-score=9 -Dfindbugs.skip=true -Ddependency.check=false clean compile test &amp;&gt; ~/temp/log_server_WithAddingServerCertInJreCAcerts.4.log</code></li> <li>then grep <code>grep -nR ' FAILURE' ~/temp/log_server_WithAddingServerCertInJreCAcerts.4.log</code></li> <li>first line is summary and last line can be ignored.</li> <li>janssen default labels are here</li> <li>In <code>codeql</code> and <code>code quality check</code> janssen github actions, there is a basic difference. While both try to build the project, <code>CodeQL</code> builds all dependency projects first and then lastly build current project (see jans-fido). Where <code>code quality check</code> directly builds current project. So, <code>codeql</code> project uses freshly built dependency artifacts, while <code>code quality check</code> downloads everything form maven repo. So if there is a code change that is in master but not reached maven yet, then build might get impact of same.</li> <li>when you install jans using install.py on lxc, then you can access endpoints from host machine browser using   <pre><code>https://&lt;ip-of-lxc-instance&gt;/.well-known/openid-configuration\n</code></pre>   no need to open any port like 443 or 8443.</li> </ul>"},{"location":"while-coding/janssen/janssen-notes/#imp-janssen-commands","title":"Imp Janssen commands","text":"<ul> <li><code>systemctl list-units --type=service --state=running</code> find all running services reference</li> <li><code>systemctl status jans-auth.service</code>: To know status of Janssen auth server service</li> <li><code>systemctl restart jans-auth</code>: Restart Janssen auth service</li> <li><code>systemctl list-units --all \"jans*\"</code>: To know status of all Janssen services</li> <li><code>systemctl list-units --all \"*opendj*\"</code>: To check if opendj ldap service is running or not</li> <li><code>mvn -Dcfg=test.jans.gluu.org -Dmaven.test.skip=false -Ddevelopment-build=false -Dcvss-score=9 -Dfindbugs.skip=true -Ddependency.check=false clean compile install javadoc:javadoc findbugs:findbugs site</code>: maven build command for jans-auth-server</li> <li>file that holds JVM parameters and other environment variable: <code>vim /etc/default/jans-auth</code>. Similarly, there are files for fido2, SCIM etc in same folder.</li> <li><code>sudo journalctl -u [service_name]</code> will show you logs of systemctl. Not very useful but thats where it all starts. e.g <code>sudo journalctl -u jans-auth.service</code></li> <li>Janssen config files are stored under <code>/etc/jans/conf/</code>. For example, <code>jans-ldap.properties</code></li> <li>Janssen code: generating javadoc for janssen modules : <code>dhaval@thinkpad:~/IdeaProjects/Janssen/jans-auth-server$ mvn javadoc:javadoc</code>. After this, you can find javadoc in target folder. eg <code>file:///home/dhaval/IdeaProjects/Janssen/jans-auth-server/model/target/site/apidocs/io/jans/as/model/configuration/Configuration.html</code></li> <li>List of endpoints for janssen after installation: <code>https://github.com/JanssenProject/jans-setup/blob/master/templates/jans-auth/jans-auth-config.json</code></li> <li>for any jans setup, file that contains all the installation options as well as parameters with which jans gets installed are in <code>/opt/jans/jans-setup/setup.properties.last</code>. This file also has password for default jans user, which is <code>admin</code></li> <li>know Janssen version: <code>/opt/jans/bin/show_version.py</code></li> </ul>"},{"location":"while-coding/janssen/janssen-notes/#similar-to-janssengluu","title":"Similar to janssen/Gluu:","text":"<p>1) Curity: they also have a community edition like Gluu. 2) Authlete: They don't have a community edition but they have a strong team. 3) ory 4) keycloak</p>"},{"location":"while-coding/janssen/janssen-notes/#run-janssen-test-suite-using-intellij-ide","title":"Run janssen test suite using intellij IDE:","text":"<ul> <li>go to `run/configuration'</li> <li>click on <code>+</code> on top left corner to add new configuration</li> <li>select <code>testng</code></li> <li>and then select <code>suite</code>, give path to <code>testng.xml</code>. Remove existing <code>-ea</code> vm param and give <code>VM options</code> as required. Note: At times you'l see that <code>vm options</code>  are not being effective. To fix this, put same params in <code>test runner params</code>.</li> <li>save and run</li> </ul> <p>This should bring up <code>run</code> tool window at the bottom of IDE and on left of that window you should be able to see status of each test as they get executed. Remember: - green tick is pass - grey <code>no go</code> symbole is <code>ignored</code> test - amber <code>cross</code> is failed test - red <code>cross</code> is error while executing test</p> <p></p>"},{"location":"while-coding/janssen/janssen-notes/#code-of-your-project-build-on-jenkins","title":"Code of your project build on Jenkins:","text":"<p>For a particular build, if you want to check code on which the build happend,  <pre><code>go to build -&gt; workspace\n</code></pre> You can see the exact code on which the build happend and artifacts that build generated just like your local workspace. For example, you can download test reports etc from here.</p>"},{"location":"while-coding/janssen/janssen-notes/#how-to-change-log-level-on-an-installed-janssen-server","title":"how to change log level on an installed janssen server","text":"<p>Changing the log level involves changing JSON config stored in Persistence. If you are using mysql as persistence, you have to change JSON value stored in </p> <pre><code>SELECT jansConfDyn FROM jansdb.jansAppConf where doc_id = \"jans-auth\";\n</code></pre> <p>In above JSON value, you have to change value for entry <code>loggingLevel</code> to <code>TRACE</code>.</p> <p>after this restart jans auth service using</p> <pre><code>sudo systemctl restart jans-auth.service\n</code></pre> <p>Once you do this, you'll see that logs at below location has started logging the debug and trace logs:</p> <pre><code>/opt/jans/jetty/jans-auth/logs/jans-auth.log\n/opt/jans/jetty/jans-auth/logs/jans-auth_persistence.log\n</code></pre> <p>If you have changed the log level to trace, you can see incoming requests and processing of the same in jans-auth.log like below:</p> <pre><code>2022-06-11 00:24:18,789 TRACE [qtp902478634-21] 020b807c-b8f7-4d53-9394-40c09acd7136 [io.jans.as.server.auth.AuthenticationFilter] (AuthenticationFilter.java:158) - Get request to: 'https://janssen.op.io/jans-auth/restv1/userinfo'\n</code></pre> <p>Also, gluu documentation has this way of changing log level without changing persistence. But I couldn't do it for Jans :</p> <p>https://gluu.org/docs/gluu-server/4.3/operation/logs/#log-levels</p> <p>See the section <code>Changing Log Levels using log4j2.xml</code></p>"},{"location":"while-coding/janssen/janssen-notes/#usecases","title":"Usecases","text":""},{"location":"while-coding/janssen/janssen-notes/#references","title":"References:","text":"<ul> <li>good short video on oauth2 flow. Can be used for Janssen tutorial as well. https://www.youtube.com/watch?v=CPbvxxslDTU</li> </ul>"},{"location":"while-coding/janssen/janssen-notes/#good-online-tool-for-curl","title":"Good online tool for curl","text":"<p>https://reqbin.com/curl</p>"},{"location":"while-coding/janssen/janssen-notes/#jans-instance-for-automated-daily-deployment","title":"jans instance for automated daily deployment","text":"<p>https://jans-ui.jans.io/admin</p>"},{"location":"while-coding/janssen/janssen-notes/#debugging-custominterception-scripts","title":"debugging custom(interception) scripts","text":"<p>Logs are at: /opt/jans/jetty/jans-auth/jans-auth_script.log</p>"},{"location":"while-coding/janssen/janssen-notes/#error-logs-for-jans-cli","title":"error logs for jans-cli","text":"<p>/opt/jans/jans-cli/error.log</p>"},{"location":"while-coding/janssen/janssen-notes/#create-new-user-using-scim-cli","title":"Create new user using scim cli","text":"<ul> <li>Copy file content from here and store it in a file, say <code>~/create-user.json</code>.</li> <li>Then run command below to create the user</li> </ul> <pre><code>/opt/jans/jans-cli/scim-cli.py --operation-id create-user --data /tmp/create-user.json\n</code></pre>"},{"location":"while-coding/janssen/janssen-notes/#useful-curl-commands","title":"useful curl commands","text":""},{"location":"while-coding/janssen/janssen-notes/#accessing-userinfo-endpoint-and-getting-data-about-a-user","title":"accessing userinfo endpoint and getting data about a user","text":"<ul> <li>Get access token using client <code>jans config api</code>, its secret and scope <code>https://jans.io/scim/users.read</code>. Get details about client from TUI</li> </ul> <pre><code>curl -k -u \"1802.c0547ae9-d667-4b5d-8f4e-29556d5cc138:vajPeuiywXHf\" https:/jans-dynamic-ldap/jans-auth/restv1/token -d  \"grant_type=client_credentials&amp;scope=https://jans.io/scim/users.read\"\n\ncurl -k https://jans-dynamic-ldap/jans-auth/restv1/userinfo -H \"Authorization: Bearer 5b37e8fa-e4ed-435c-9ab4-3f62261c6815\"\n</code></pre>"},{"location":"while-coding/janssen/janssen-notes/#tui","title":"TUI","text":"<ul> <li>TUI uses config-api always. Doesn't connect directly with auth-server or any other backend api.</li> </ul>"},{"location":"while-coding/janssen/janssen-notes/#useful-config-cli-commands","title":"useful config-cli commands","text":"<p>Enable debug by adding </p> <pre><code>debug = true\nlog_dir = /opt/jans\n</code></pre> <p>as first lines into</p> <pre><code>vim ~/.config/jans-cli.ini\n</code></pre> <p>restart cli session if already open. Debug logs are available at</p> <pre><code>vim /opt/jans/cli_debug.log\n</code></pre> <p>Get help. This lists all the possible commandline args for cli. It also lists all the possible operations as arguments for <code>--info</code> </p> <pre><code>/opt/jans/jans-cli/config-cli.py --help\n</code></pre> <p>To get information about an operation </p> <pre><code>/opt/jans/jans-cli/config-cli.py --info DefaultAuthenticationMethod\nor\n/opt/jans/jans-cli/config-cli.py --info OauthOpenidConnectClients\n</code></pre> <p>Each operation is made up of multiple <code>operation-id</code>. An operation-id may have a schema associated. Find that from output of above command. Find information about schema using:</p> <pre><code>/opt/jans/jans-cli/config-cli.py --schema AuthenticationMethod\nor\n/opt/jans/jans-cli/config-cli.py --schema Client\n</code></pre>"},{"location":"while-coding/janssen/janssen-notes/#jans-tent","title":"jans-tent","text":"<p>Once you have setup and run the jans-tent using these instructions, to run in next time, you just have to follow below steps:</p> <pre><code>cd IdeaProjects/Janssen/jans-for-tent/jans/demos/jans-tent/\nsource venv/bin/activate\npython main.py\n</code></pre>"},{"location":"while-coding/janssen/janssen-notes/#troubleshooting-jans-tent","title":"Troubleshooting jans tent:","text":"<ul> <li>Error: where server says the client is not authorized to make this request.</li> </ul> <p>Here you should check if the client exists or the server or not. Many times when I tried to start testing on a new day, the client with <code>jans tent client</code> from previous day did not exist on server. I don't know why.   Solution: run the <code>python register_new_client.py</code> command and then start the main program again by runnnig <code>python main.py</code></p> <ul> <li>Error: mismatching_state: CSRF Warning! State not equal in request and response.</li> </ul> <p>This is when there is a mismatch between name of the host mentioned in the redirect URI for the client used by Jans-tent, and the host name mentioned in the url used in browser to initiate the flow. See this issue</p>"},{"location":"while-coding/janssen/janssen-notes/#gluuorg","title":"gluu.org","text":"<p>https://www.gl uu.orghttps://g luu.org/ is hosted on www.glu u.org and can be connected using <code>ssh -p 22222 -i ~/.ssh/id_rsa root@w ww.g luu.o rg</code> while on VPN.</p> <p>swagger UI is hosted at <code>/opt/wordpress/swagger-ui/</code></p> <p>apache is under <code>/etc/apache2</code></p> <p>in order to configure using config parameters, you have to edit <code>vim /opt/wordpress/swagger-ui/index.html</code> and add configuration parameters like below: <pre><code>    &lt;script src=\"./swagger-ui-bundle.js\"&gt; &lt;/script&gt;\n    &lt;script src=\"./swagger-ui-standalone-preset.js\"&gt; &lt;/script&gt;\n    &lt;script&gt;\n    window.onload = function() {\n\n      // Build a system\n      const ui = SwaggerUIBundle({\n        url: \"https://raw.githubusercontent.com/GluuFederation/oxd/version_4.0.0/oxd-server/src/main/resources/swagger.yaml#/developers/setup-client\",\n        dom_id: '#swagger-ui',\n        deepLinking: true,\n        defaultModelRendering: \"model\",    \n        presets: [\n          SwaggerUIBundle.presets.apis,\n          SwaggerUIStandalonePreset\n</code></pre></p> <p>If you are running newer version of swagger UI, you have to edit <code>vim /var/www/html/swagger-initializer.js</code> to add config variables.</p> <p>after adding config variables, just save the file and refresh the webpage on browser. Effect should be visible.</p>"},{"location":"while-coding/janssen/janssen-notes/#jans-lock","title":"jans-lock","text":"<p>Understanding the OPA: </p> <p>This is based on https://play.openpolicyagent.org/</p> <p>OPA is like this equation: </p> <pre><code>input+(policy+data(user-role-mapping, role-action-subject-mapping)) = Output(allow/disallow)\n</code></pre> <p>OPA has 4 parts:</p> <ul> <li>input (this is transactional, current incoming data which talks about the action being performed. By whom, on what, what action)</li> <li>data (this is mapping of role-user, and also which role can do what action on which data)</li> <li>policy (this is the logic or rules which derives whether to give permission or not. Policy basically takes input, looks at data and decides whether the input is eligible to take the requested action or not)</li> <li>output: usually one of the output is allow/deny. There can be other outcomes also after policy execution.</li> </ul> <p>Important notes:</p> <ul> <li>Here, the data basically has all the knowledge about what should be allowed and what should be not. All that policy does is to put this knowledge in the context of the input and give output.</li> <li>Data is the admin data and user data. Like user-role mapping, role-action-subject mappings etc. Hence data can be a collection of multiple sets of data. </li> </ul>"},{"location":"while-coding/janssen/janssen-notes/#installing-flex","title":"installing flex","text":"<p>I was able to install flex using these instructions. Below are few points to take care of. </p> <p>Once after the installation, when I tried accessing admin UI, it showed below. According to a chat from Arnab, it could be because of two reasons. One if the license is obtained from dev, or the VPN is off.  </p> <p>So I turned on the VPN as my license was from PROD already. But after that when I click on <code>start 30 day trial</code>, it gives a screen with message as <code>bad gateway</code>. But when I still click on <code>start 30 day trial</code>, this message goes away and admin login page is shown and admin-ui is accessible. </p>"},{"location":"while-coding/janssen/janssen-notes/#create-easy-cloud-vm","title":"Create easy cloud VM","text":"<p>Easycloud github action is setup to provide you machine with jans (docker) installed on it.</p> <ul> <li>go to this action in https://github.com/GluuFederation/easycloud/actions/workflows/create_ephemerals_envs.yml</li> <li>click on <code>run workflow button</code>. It'll give you a popup form to fill.</li> <li>For VMs choose <code>do</code>(digital ocean) and for k8s choose <code>aws</code></li> <li><code>VM</code> and <code>do</code> are default, and for Jans if you wnat 4-core 8gb machine then everything is set, just change the region from nyc1 to blr1 if you want to.</li> <li>in the select branch as <code>main</code> or give a commit number</li> <li> <p>in persistence, select <code>pgsql</code></p> </li> <li> <p>To create a VM on AWS with 2 core and 8 GB, Ubuntu22.04 for 12 hours use the following inputs</p> </li> <li></li> <li></li> <li>click on run workflow. You should see a workflow created in the list and also a PR getting created with title like <code>ci: ossdhaval</code>. This PR has IP of the system and FQDN of the system. You'll need both of these when installing jans or flex later.</li> <li>This PR stays open till your environment is alive, and gets closed based on the date and time mentioned in its description. If you want to kill an environment quickly then just update the PR description and set the date to yesterdays.</li> <li>Also, you'll get a message on <code>#bot_reporter</code> channel with a pem file in it.</li> <li>download that pem file.</li> <li>change the permissions of the pem file : <code>chmod 600 private.pem</code></li> <li>To access the environment via ssh, run this command <code>ssh -i &lt;path-to-pem&gt; ubuntu@&lt;IP&gt;</code>. For ubuntu the user is <code>ubuntu</code>, (else try <code>ec2-user</code>) as well. Check PR description for more info if it dosn't work.</li> <li>now you can do <code>docker ps</code> to see two docker containers running. One for jans monolith and one for db. As you can see in the output the port <code>80</code> has been forwarded already.</li> <li>On your local machine(not the cloud VM), you can add the IP of the cloud vm in the /etc/hosts so that you can use the browser to send requests. Just ensure that you use the name of the server as <code>&lt;name-of-cloud-vm&gt;.gluu.info</code></li> <li>Now you can access well-known URL: <code>https://ossdhaval-inspired-tahr.gluu.info/jans-auth/.well-known/openid-configuration</code></li> <li>and use the device code url like: <code>https://ossdhaval-inspired-tahr.gluu.info/device-code</code></li> <li>getting user name of the admin user and the password: login to the docker container using <code>docker exec -ti &lt;container-id&gt; bash</code> and then look at the file <code>/opt/jans/jans-setup/setup.properties.last</code>. Here the <code>admin_password</code> is the password and for user name ``</li> </ul>"},{"location":"while-coding/janssen/janssen-notes/#how-to-get-to-various-ui-screens-of-janssen-server","title":"How to get to various UI screens of Janssen Server?","text":""},{"location":"while-coding/janssen/janssen-notes/#authorization-consent-gathering-screen","title":"Authorization (consent gathering) screen","text":"<ul> <li>Using Jans Tarp, create a new client with all the default values. This will create an untrusted client</li> <li>Initiate an authorization code flow.</li> <li>This should first give you a authentication screen and then show the authorization screen. Even if there are no scopes attached to request.</li> </ul>"},{"location":"while-coding/janssen/janssen-notes/#account-selection-screen","title":"account selection screen","text":"<ul> <li>Using Jans Tarp, create a new client with all the default values. This will create an untrusted client</li> <li>Initiate an authorization code flow.</li> <li>This should first give you a authentication screen where you login as a user, let's say <code>admin</code>. Tarp will show the user details page with a logout button. Don't logout and leave the page open.</li> <li>then you open another tab in the same browser and open tarp.</li> <li>tarp will show the client details where under <code>additional params</code> text box, add <code>{\"prompt\":\"select_account\"}</code></li> <li>Initiate an authorization code flow.</li> <li>This will show you a page where you can select the account (existing admin login, or add another one) like below   </li> <li>upon selecting <code>login as another user</code>, you'll be redirected to the authentication screen again where you can login</li> </ul>"},{"location":"while-coding/java-language/","title":"Java Language","text":""},{"location":"while-coding/java-language/creating-custom-annotations/","title":"Java annotations and Custom annotations","text":""},{"location":"while-coding/java-language/creating-custom-annotations/#reference","title":"Reference:","text":"<ul> <li>Could not find updated tutorial for OpenJDK 17 about annotations. Java tutorials for most subjects are still pointing to JDK 8. So, link below may be old but basics would be the same.</li> </ul> <p>https://docs.oracle.com/javase/tutorial/java/annotations/index.html</p>"},{"location":"while-coding/java-language/creating-custom-annotations/#what-is-annotation-and-what-are-different-usecases","title":"What is annotation and what are different usecases:","text":"<p>Annotations, a form of metadata, provide data about a program that is not part of the program itself. Annotations have no direct effect on the operation of the code they annotate.</p> <p>Annotations have a number of uses, among them:</p> <ul> <li>Information for the compiler \u2014 Annotations can be used by the compiler to detect errors or suppress warnings.</li> <li>Compile-time and deployment-time processing \u2014 Software tools can process annotation information to generate code, XML files, and so forth.</li> <li>Runtime processing \u2014 Some annotations are available to be examined at runtime.</li> </ul>"},{"location":"while-coding/java-language/creating-custom-annotations/#where-can-it-be-used","title":"where can it be used:","text":""},{"location":"while-coding/java-language/creating-custom-annotations/#about-parameters-to-annotations","title":"About parameters to annotations","text":"<pre><code>The annotation can include elements, which can be named or unnamed, and there are values for those elements:\n\n@Author(\n   name = \"Benjamin Franklin\",\n   date = \"3/27/2003\"\n)\nclass MyClass { ... }\nor\n\n@SuppressWarnings(value = \"unchecked\")\nvoid myMethod() { ... }\nIf there is just one element named value, then the name can be omitted, as in:\n\n@SuppressWarnings(\"unchecked\")\nvoid myMethod() { ... }\nIf the annotation has no elements, then the parentheses can be omitted, as shown in the previous @Override example.\n\nIt is also possible to use multiple annotations on the same declaration:\n\n@Author(name = \"Jane Doe\")\n@EBook\nclass MyClass { ... }\n</code></pre>"},{"location":"while-coding/java-language/creating-custom-annotations/#defining-custom-annotations","title":"defining custom annotations:","text":"<p>Many annotations replace comments in code.</p> <p>Suppose that a software group traditionally starts the body of every class with comments providing important information:</p> <pre><code>public class Generation3List extends Generation2List {\n\n   // Author: John Doe\n   // Date: 3/17/2002\n   // Current revision: 6\n   // Last modified: 4/12/2004\n   // By: Jane Doe\n   // Reviewers: Alice, Bill, Cindy\n\n   // class code goes here\n\n}\n</code></pre> <p>To add this same metadata with an annotation, you must first define the annotation type. The syntax for doing this is:</p> <pre><code>@interface ClassPreamble {\n   String author();\n   String date();\n   int currentRevision() default 1;\n   String lastModified() default \"N/A\";\n   String lastModifiedBy() default \"N/A\";\n   // Note use of array\n   String[] reviewers();\n}\n</code></pre> <p>The annotation type definition looks similar to an interface definition where the keyword interface is preceded by the at sign (@) (@ = AT, as in annotation type). Annotation types are a form of interface.</p> <p>After the annotation type is defined, you can use annotations of that type, with the values filled in, like this:</p> <pre><code>@ClassPreamble (\n   author = \"John Doe\",\n   date = \"3/17/2002\",\n   currentRevision = 6,\n   lastModified = \"4/12/2004\",\n   lastModifiedBy = \"Jane Doe\",\n   // Note array notation\n   reviewers = {\"Alice\", \"Bob\", \"Cindy\"}\n)\npublic class Generation3List extends Generation2List {\n\n// class code goes here\n\n}\n</code></pre>"},{"location":"while-coding/java-language/creating-custom-annotations/#predefined-annotations","title":"predefined annotations:","text":"<ul> <li>@Deprecated</li> <li>@Override</li> <li>@SuppressWarnings</li> <li>@SafeVarargs</li> <li>@FunctionalInterface meta-annotations (annotations that apply to other annotations)</li> <li>@Retention     <pre><code>RetentionPolicy.SOURCE \u2013 The marked annotation is retained only in the source level and is ignored by the compiler.\nRetentionPolicy.CLASS \u2013 The marked annotation is retained by the compiler at compile time, but is ignored by the Java Virtual Machine (JVM).\nRetentionPolicy.RUNTIME \u2013 The marked annotation is retained by the JVM so it can be used by the runtime environment.\n</code></pre></li> <li> <p>@Documented</p> <ul> <li>annotation indicates that whenever the specified annotation is used those elements should be documented using the Javadoc tool. (By default, annotations are not included in Javadoc.) </li> </ul> </li> <li> <p>@Target</p> </li> <li> <p>annotation marks another annotation to restrict what kind of Java elements the annotation can be applied to.</p> <ul> <li>ElementType.ANNOTATION_TYPE can be applied to an annotation type.</li> <li>ElementType.CONSTRUCTOR can be applied to a constructor.</li> <li>ElementType.FIELD can be applied to a field or property.</li> <li>ElementType.LOCAL_VARIABLE can be applied to a local variable.</li> <li>ElementType.METHOD can be applied to a method-level annotation.</li> <li>ElementType.PACKAGE can be applied to a package declaration.</li> <li>ElementType.PARAMETER can be applied to the parameters of a method.</li> <li>ElementType.TYPE can be applied to any element of a class.</li> </ul> </li> <li> <p>@Inherited</p> </li> <li> <p>annotation indicates that the annotation type can be inherited from the super class. (This is not true by default.) When the user queries the annotation type and the class has no annotation for this type, the class' superclass is queried for the annotation type. This annotation applies only to class declarations.</p> </li> <li> <p>@Repeatable</p> </li> <li>indicates that the marked annotation can be applied more than once to the same declaration or type use</li> </ul>"},{"location":"while-coding/java-language/creating-custom-annotations/#type-annotations-and-pluggable-type-systems","title":"Type Annotations and Pluggable Type Systems","text":"<p>Before the Java SE 8 release, annotations could only be applied to declarations. As of the Java SE 8 release,  annotations can also be applied to any type use. This means that annotations can be used anywhere you use a type.  A few examples of where types are used are class instance creation expressions (new), casts, implements clauses,  and throws clauses. This form of annotation is called a type annotation.</p>"},{"location":"while-coding/java-language/creating-custom-annotations/#work-on-using-custom-annotation-to-auto-generate-documentation-of-class-properties","title":"work on using custom annotation to auto generate documentation of class properties","text":"<p>Check this PR</p> <p>One important thing in above PR is that annotation is processed at compile time and you don't need a running instance of software to produce the result.</p> <p>Reference:  - https://www.baeldung.com/java-annotation-processing-builder - parse java code: https://javaparser.org/</p>"},{"location":"while-coding/java-language/debugging-java-memory-issues/","title":"Java Memory issues","text":""},{"location":"while-coding/java-language/debugging-java-memory-issues/#tools","title":"Tools","text":"<p>As of JDK 17, JDK provides two tools:</p> <ul> <li>JMC - java mission control</li> <li>JFR - java flight recorder</li> </ul> <p>See this for intro of above two tools.</p> <p>Another good OSS tool that is used by intelliJ in their IDE as well is async-profiler  and learning material is here</p> <p>Combine these three to analyse memory. </p> <p>One of the best paid option is JProfiler.</p>"},{"location":"while-working/","title":"While Working","text":""},{"location":"while-working/Learnings-as-open-source-community-manager/","title":"As community manager","text":"<p>My learnings\"</p>"},{"location":"while-working/Learnings-as-open-source-community-manager/#about-documentation","title":"About documentation :","text":"<p>There could be three kinds of documentation: 1) Introduction and marketing material 2) Installation guides 3) Configuration guides ( like how to use various configuration option, enable disable features, setup basic usecases ) 4) Technical documentation (this is technical documentation of code, modules and architecture) 5) developer documentation (How to setup workspace, run tests, remote debug,Contribution process, guidelines etc) 6) dashboard for github data and saved queries: https://github.com/dlvhdr/gh-dash</p> <p>All of above documentation can also be assisted with video tutorials, FAQs etc</p> <p>Google technical writting style: https://developers.google.com/tech-writing</p>"},{"location":"while-working/Learnings-as-open-source-community-manager/#reference-material","title":"Reference material","text":""},{"location":"while-working/Learnings-as-open-source-community-manager/#books","title":"books","text":"<ul> <li>https://www.amazon.com/Art-Community-Building-New-Participation-ebook-dp-B008224FMC/dp/B008224FMC/ref=mt_other?_encoding=UTF8&amp;me=&amp;qid= </li> </ul>"},{"location":"while-working/Learnings-as-open-source-community-manager/#videos","title":"videos","text":"<ul> <li>https://www.youtube.com/watch?v=nGKSnMdBFsk https://www.youtube.com/watch?v=Js0gW8pAnh4</li> <li>quick and informative : https://www.youtube.com/watch?v=b1pyh2XCyrg</li> </ul>"},{"location":"while-working/Learnings-as-open-source-community-manager/#good-articles","title":"Good articles","text":"<ul> <li>good list of tooling with details : https://www.infoq.com/presentations/monzo-tools-deploy/?itm_source=infoq&amp;itm_medium=videos_homepage&amp;itm_campaign=videos_row1</li> </ul>"},{"location":"while-working/Learnings-as-open-source-community-manager/#good-tools","title":"Good tools","text":"<ul> <li>Developer portals : https://backstage.io/</li> <li>cloud software licensing: https://licensespring.com/</li> <li>use stepsecurity to improve security of github actions workflow and to help conform to OpenSSF standards</li> <li>scan open source project dependencies and risks: https://scanoss.com/</li> <li>is an opensource library good and credible and secure: https://stacklok.com/</li> <li>database explorer: https://azimutt.app/</li> <li>managing contributor license agreement (ICLA/CCLA): EasyCLA from Linux Foundation</li> <li>enabling localhost with HTTPS using a certificate that is not self-signed: https://anchor.dev/docs/lcl-host/why-lcl</li> <li>Good sites to find good first issues to contribute: up for grabs, code triage, for good first issue</li> <li>Github repo analytics: ossinsight, starhistory, Linux foundation tools under LFX</li> </ul> <p>Flow of implementation of licensespring in gluu flix licensing: </p>"},{"location":"while-working/Learnings-as-open-source-community-manager/#live-examples","title":"Live examples:","text":"<p>On community chat platform (gitter/slack) : as understood from what 'Pop' user is doing on Falco slack channel. - welcome new users - setup community calls ( ones a week ). and send reminders. - setup and conduct surveys - respond to tech queries if possible. - encourage people to appreciate others like this : https://kubernetes.slack.com/archives/CMWH3EH32/p1617024285139200</p> <p>Large open-source projects that are actively managed and can be looked at as reference: spring kubernetes Angular falco</p>"},{"location":"while-working/Learnings-as-open-source-community-manager/#articles-and-sites","title":"Articles and sites:","text":"<ul> <li>https://opensource.guide/best-practices/</li> <li>https://18f.github.io/open-source-program/pages/maintainer_guidelines/</li> <li>guidelines for labels : https://seantrane.com/posts/logical-colorful-github-labels-18230/</li> <li>good github workflow for contributors: https://www.kubernetes.dev/docs/guide/github-workflow/</li> <li>github's own roadmap managed via project board: https://github.com/github/roadmap/projects/1</li> <li>About open source license trends and which are most used: https://innovationgraph.github.com/global-metrics/licenses</li> <li>analytics and trend reports on github data. Very useful to understand trends. https://innovationgraph.github.com/</li> <li>good guidelines around what are the rights and responsibilities of moderators of a repo: https://squidfunk.github.io/mkdocs-material/contributing/#rights-and-responsibilities</li> <li>good checklist for community for using comments, issues and discussions: https://squidfunk.github.io/mkdocs-material/contributing/#checklist</li> <li>Real life (VSCode) Good OSS project management documentation: https://github.com/microsoft/vscode/wiki</li> </ul>"},{"location":"while-working/Learnings-as-open-source-community-manager/#regular-house-holding-checks","title":"Regular house holding checks :","text":"<ul> <li>stale branches across repos</li> <li>(for sometime)Track PR merges and see if they had met quality criteria and let code owner and developer know</li> <li>issue triage</li> <li>are all the automation successfully running? For example, github actions can fail silently. You have to periodically check their logs to ensure that there are no errors. For instance, one of my github action script was referring to a module in the build command. Later this module was removed from the project and github action script started failing, but nobody knew until a person spotted it. Note: I found out that I was not paying attention to my emails. Github sends email with subject similar to <code>[JanssenProject/jans-auth-server] Run failed: Code quality check - feature-flags-using-ff4j (276ae10)</code> in case there is a failure in the action run .</li> <li>check automated non-dependabot PRs to be merged on Non-CN repos</li> <li>check github notifications </li> <li>PR backlog across all repos and aging PRs</li> <li>backlog should not cross certain number of open PR threshold and aging of PRs shouldn't be more than certain days.</li> </ul>"},{"location":"while-working/Learnings-as-open-source-community-manager/#experience","title":"Experience","text":""},{"location":"while-working/Learnings-as-open-source-community-manager/#rolling-out-branch-protections","title":"Rolling out branch protections","text":"<p>I recently rolled out branch protections on all the Jans repos. Here I am noting how did we do it, what were the issues and hiccups faced.</p>"},{"location":"while-working/Learnings-as-open-source-community-manager/#preconditions","title":"preconditions:","text":"<ul> <li>CODEOWNERs should be in place</li> <li>though it is not a requirement from github, having two or more code owner for each repo will let people know who is going to shephard that repo. Who is going to be the go to person for that repo. When you turn on protections like <code>Require PR review before merge</code> then people would want to know who should they reach out to for review. If your code owner is set then github automatically suggests codeowner as reviewer. Ideally though, reviewer can be anyone from the team who is well aware of the code. Codeowner is usually a person who is responsible for that repo and generally the senior most developer but he/she can't be a reviewer everywhere. </li> </ul>"},{"location":"while-working/Learnings-as-open-source-community-manager/#how-to-roll-out","title":"How to roll out:","text":"<ul> <li>we rolled out below mentioned protections</li> <li>for master</li> <li> <p>for all other</p> </li> <li> <p>how we should have done it:</p> </li> <li>signed commits and deletion of protected branches first.</li> <li>enabling and mendating a check where github action builds code in the PR</li> <li>Requiring PRs to be reviewed and approved before merge</li> </ul>"},{"location":"while-working/Learnings-as-open-source-community-manager/#problems-faced","title":"problems faced","text":"<ul> <li>Branches that were created before we enabled protections had unsigned commits.</li> <li>Some of the master builds were broken since before we enabled protections (jans-orm had failed testcases, jans-client-api code was not up-to-date with corresponding changes in the jans-auth-client)</li> <li>problem with code owner not able to merge without approval from someone else ( may be another code owner)</li> </ul>"},{"location":"while-working/Learnings-as-open-source-community-manager/#useful-github-automation","title":"Useful github automation:","text":"<ul> <li>If you have PRs that get auto generated by bots and then it is a routine task to just merge those PRs then, to automate that routine task, enabling auto merge for repositories and PRs will help. First you'll have to enable auto merge for repo and then configure bot to raise PRs with automerge enabled.</li> <li>use https://www.coderabbit.ai/ for AI based code reviews</li> </ul>"},{"location":"while-working/Learnings-as-open-source-community-manager/#performance-parameters-for-oss-project","title":"Performance parameters for OSS project:","text":"<p>These are metrics and parameters developed by Linux foundation: - CII best practice badge: To ensure that project is following OSS best practices. For health and stregth of engineering process in an OSS project. - CHAOSS project: to define how healthy your community is. They also have tools that will give you analytics on top of your OSS repo data. - Good OSS tool for Github repo analytics: https://devstats.cncf.io/. Kubernetes is using this tool. Kubernetes dashboard: https://k8s.devstats.cncf.io/d/12/dashboards?orgId=1&amp;refresh=15m - open decision framework: https://opensource.com/open-organization/resources/open-decision-framework</p>"},{"location":"while-working/Learnings-as-open-source-community-manager/#issue-triage","title":"issue triage","text":"<p>good article: https://medium.com/@clarkbw/github-issue-triage-and-transparency-be35acd8e85d</p> <p>issue triaging needs correct set of labels in place: Look at this for reference. https://github.com/falcosecurity/falco/labels?page=1&amp;sort=name-asc</p> <p>Triage process as Kubernates: https://www.kubernetes.dev/docs/guide/issue-triage/</p> <p>How to run bug triage: - triage PRs first, then Issues - For every issue/PR we want to decide on what is the next action and who is going to take that action. Like status is <code>require-more-analysis</code> assign <code>owner</code> also who will do that analysis </p> <p>Labels:</p> <ul> <li> <p>Triage:</p> <ul> <li>needs-triage</li> <li>needs-information    </li> <li>triaged(used to flag that PR/Issue has been discussed and it is ready to enter active development), triaged/duplicate, triaged/will-not-fix </li> <li>kind/bug, enhancement, feature, support</li> <li>size/xs, s, m, l, xl, xxl</li> <li>value/high, medium, low</li> <li>area/, release-notes, documentation <li>good first issue</li> <li> <p>Tracking:</p> <ul> <li>status/backlog,WIP,test,completed</li> <li>priority/high, medium, low</li> <li>help wanted</li> </ul> </li> <li> <p>github milestones are usually used to represent sprints    </p> </li>"},{"location":"while-working/Learnings-as-open-source-community-manager/#tech-writing-notes","title":"Tech writing notes:","text":"<p>(From: https://developers.google.com/tech-writing)</p> <ul> <li>Prefer full term over acronym. Benefit of short forms and acronyms is they reduce length of text, but make understanding difficult as user has to translate everytime. So use acronyms when you know a lengthy term is going to be used many times in text. This rule doesn't apply to popular acronyn like HTML.</li> <li>If you are referring to a term which reader may not be aware of then give a link to explaination of that term or define yourself.</li> <li>Prefer to use noun itself instead of pronoun(it, them, they, this, that etc)  as pronoun may lead to confusion. Use it only if it is situated very close to the noun in the sentence.</li> <li>The vast majority of sentences in technical writing should be in active voice. Good sentences in technical documentation identify who is doing what to whom.</li> <li>Prefer active voice to passive voice<ul> <li>Use the active voice most of the time. Use the passive voice sparingly. Active voice provides the following advantages:</li> <li>Most readers mentally convert passive voice to active voice. Why subject your readers to extra processing time? By sticking to active voice, readers can skip the preprocessor stage and go straight to compilation.</li> <li>Passive voice obfuscates your ideas, turning sentences on their head. Passive voice reports action indirectly.</li> <li>Some passive voice sentences omit an actor altogether, which forces the reader to guess the actor's identity.</li> <li>Active voice is generally shorter than passive voice.</li> </ul> </li> <li>remember: Be bold\u2014be active.</li> <li>Write clear sentences</li> <li>Choose strong verbs</li> </ul>"},{"location":"while-working/Learnings-as-open-source-community-manager/#good-reference","title":"Good reference","text":"<ul> <li>How to avoid he/she confusion: https://medium.com/technical-writing-is-easy/how-to-make-your-documentation-gender-neutral-5592c9591b65</li> </ul>"},{"location":"while-working/Learnings-as-open-source-community-manager/#setup-meetings-and-calendar-app","title":"setup meetings and calendar app","text":"<ul> <li>problem is that everyone uses a different calendar. Google, outlook, iOS etc. </li> <li>in Janssen google calendar is generally acceptable to all. So I have created a separate calendar for Janssen in my google account and create event in that    calendar. then I share link of that <code>event</code> on Rocket chat. Problem with this approach is that when you reschedule, everyone's calendar doesn't get updated automatically. I have to send the link again and people have to save the event again. Same for cancellation, You have to verbally cancel the meeting over chat but invites would stay in everyone's calendar.</li> <li>Then I started to check how other major open source project do this and I found </li> <li>Linux foundation : https://events.linuxfoundation.org/lfx-mentorship-showcase/program/schedule/</li> <li>Kubernetes: https://www.kubernetes.dev/resources/calendar/</li> <li>most of them give google calendar and may be few others. But there is no unified way of doing this. They also have this kind of instructions for user to </li> <li>then I read about <code>iCal</code> a.k.a <code>.ics</code> format. This is a neutral format which also allows people to respond to the meetings. May be this is the best way to use do this task.</li> </ul>"},{"location":"while-working/Learnings-as-open-source-community-manager/#how-to-organize-teams-in-an-open-source-project","title":"how to organize teams in an open source project","text":"<p>https://docs.github.com/en/organizations</p> <ul> <li>github by default has one distinction: org member and contributor</li> </ul>"},{"location":"while-working/Learnings-as-open-source-community-manager/#create-diagrams-and-flowcharts","title":"create diagrams and flowcharts","text":"<p>https://docs.github.com/en/get-started/writing-on-github/working-with-advanced-formatting/creating-diagrams</p>"},{"location":"while-working/Learnings-as-open-source-community-manager/#approaches-to-documentation","title":"approaches to documentation","text":"<p>There are two places where documentation of a project can live. - Wiki - in repo like <code>docs</code></p> <p>Preferred one is in the repo and not wiki. As there are many advantages: - it is versioned - you can integrate it with automation (e.g. trigger a GH action when someone commits in <code>docs</code> repo) - Can become part of release notes - Developers can submit relevant documentation changes along with code changes in the same PR. Reviewer can see complete set of changes and review it.</p> <p>Wiki can be used to hold temporary documentation. For example, documenting a workaround for a problem that is going to be fixed very soon. It is kind of notepad for project. </p>"},{"location":"while-working/Learnings-as-open-source-community-manager/#storing-images-in-your-gh-repo-for-documentation","title":"storing images in your GH repo for documentation","text":"<ul> <li>There has to be guidelines around storing images in GH repo to support documentation, because images can be huge in size and can increse size of your repo dramatically. You should also specify image types allowed.</li> <li>There are two ways of storing images:</li> <li>along with the consuming items. for example, images consumed by <code>docs</code> can be stored within that directory/repo</li> <li>In case of polyrepo, have a separate repo at org level or in case of monorepo, store images in the same repo but in a separate top level folder, for example <code>media-assets</code>. </li> </ul> <p>Second approach is better because we will need to keep the size of assets in check. And there is no systematic check for that. So, if the media assets are spread across the repo, it is hard to see what is the total size of media assets. If the all the media assets (images, gifs, mp4 videos etc) are in one place then it is easy to watch the size as well as do the clean up.   Also, we can have GH actions triggered whenever anything is checked into this separate folder/repo. This action can check the size and type of asset being uploaded. It can fail and stop the merge if the asset is not conforming with recommendations.</p>"},{"location":"while-working/Learnings-as-open-source-community-manager/#branding-guidelines","title":"branding guidelines","text":"<p>have something like : https://github.com/falcosecurity/falco/tree/master/brand</p>"},{"location":"while-working/Learnings-as-open-source-community-manager/#test-plans-and-other-project-management-documents","title":"test plans and other project management documents","text":"<p>Question is: what is the approach that OSS project take towards storing project management documents (like test-plan document, or may be an mpp)? I think, most of the time they try to convert documents like test plan in to markdown and maintain it in github. If it has to be in word/pdf of any other format, I think project use google drive etc. But need to find out more.</p>"},{"location":"while-working/Learnings-as-open-source-community-manager/#oss-projects-writting-test-cases-for-manual-tests","title":"OSS projects, writting test cases for manual tests","text":"<p>How to do this when using github? I think Jira (Atlassian) lets you create testcases like issues, but in Github there is nothing similar. So we have to document all the test cases in files and store somewhere.</p>"},{"location":"while-working/Learnings-as-open-source-community-manager/#hosting-source-code-documentation-like-javadocs-using-mkdocs","title":"Hosting source code documentation (like Javadocs) using mkdocs","text":"<p>https://mkdocstrings.github.io/</p> <p>Right now, only handlers for python are available</p> <p>https://mkdocstrings.github.io/handlers/overview/</p>"},{"location":"while-working/Learnings-as-open-source-community-manager/#running-markdown-linting-tool","title":"running markdown linting tool","text":"<p>To install <pre><code>gem install mdl\n</code></pre></p> <p>To run <pre><code>mdl ~/IdeaProjects/Janssen/jans/docs/\n</code></pre></p> <p>To run with some rule definitions <pre><code>mdl ~/IdeaProjects/Janssen/jans/docs/ -s ~/IdeaProjects/Janssen/jans/automation/markdown/.mdl_style.rb\n</code></pre></p>"},{"location":"while-working/Learnings-as-open-source-community-manager/#api-design","title":"API design","text":"<ul> <li>API design should happen by creating skeleton code structure first and then generating swagger spec out of it using annotations. See the section on <code>code first</code> approach on swagger site</li> <li>Also, stoplight.io is a good tool</li> </ul>"},{"location":"while-working/Learnings-as-open-source-community-manager/#open-source-projects-and-secure-supply-chain","title":"Open source projects and secure supply chain","text":"<ul> <li>Reference: https://github.com/microsoft/oss-ssc-framework/blob/main/specification/framework.md</li> </ul>"},{"location":"while-working/Learnings-as-open-source-community-manager/#tool-for-providing-on-demand-k8s-instances-to-devs-and-testers","title":"tool for providing on-demand k8s instances to devs and testers","text":"<p>for the https://github.com/Federation/easycloud/ lovers coming next week you will be also able to create a hassle free k8s clusters on aws with a simple management ui added on top of it. The ui is rancher UI btw. Here is what to expect:</p> <p>a full blown k8s cluster Rancher ui which will allow you to easily toggle and view the k8s cluster, install gluu or jans simply with a click of a button and easily view logs and open a terminal without knowing any k8s terminology , sytnax or anything. The rancher ui will have a dns record assigned and posted for you with the password to login in the PR You will also be given another dns url to use for gluu or jans deployment as your hostname Coming next would be adding https://karpenter.sh/ for autoscalling then the last step will finally be enabling the load tests so that we can view any setup and enjoy it without making a hassle about it \ud83c\udf7f</p>"},{"location":"while-working/Learnings-as-open-source-community-manager/#how-to-handle-discussions-on-issues","title":"How to handle discussions on issues","text":"<p>Here are some examples where the community manager, or dev has supported an issue/troubleshooting in a nice way:</p> <p>https://github.com/canonical/lxd/issues/7910</p>"},{"location":"while-working/Learnings-as-open-source-community-manager/#communication","title":"Communication","text":""},{"location":"while-working/Learnings-as-open-source-community-manager/#how-to-handle-discussions-on-issues_1","title":"How to handle discussions on issues","text":"<p>Here are some examples where the community manager, or dev has supported an issue/troubleshooting in a nice way:</p> <p>https://github.com/canonical/lxd/issues/7910</p>"},{"location":"while-working/Learnings-as-open-source-community-manager/#how-to-revert-certain-decisions-which-were-not-received-well-by-community","title":"how to revert certain decisions which were not received well by community","text":"<p>https://www.keycloak.org/2023/10/reactivating-discourse.html</p>"},{"location":"while-working/Learnings-as-open-source-community-manager/#how-to-communicate-big-and-complex-roadmap-change-and-engineering-choices","title":"How to communicate big and complex roadmap change and engineering choices","text":"<p>https://www.redhat.com/en/blog/rhel-10-plans-wayland-and-xorg-server</p>"},{"location":"while-working/Learnings-as-open-source-community-manager/#checklist-when-adding-a-new-module","title":"checklist when adding a new module","text":"<ul> <li>decide on technical name, formal name and if required an informal name</li> <li>jenkins build</li> <li>gh actions</li> <li>tools integration (like sonar)</li> <li>GH <code>component</code> label creation</li> <li>GH team creation</li> <li>GH codeowner updates</li> <li>where to put documentation on the documention site navigation</li> <li>Updates to readme files where all the modules are listed</li> </ul>"},{"location":"while-working/Learnings-as-open-source-community-manager/#in-the-role-of-opensource-releasecommunity-manager","title":"in the role of opensource release/community manager","text":"<ul> <li>release management (backlog grooming, sprint planning, tracking) (tools: github projects, issues, PRs)</li> <li>Process : PR flow, automatic checks, contribution guidelines</li> <li>Open source project initiation: Starting from README, PR-issue templates, issue triage, codeowners, security best practises(Open Source Security Foundation (OpenSSF) Best Practices badge), </li> <li>polyrepo to monorepo migration</li> <li>community engagement: Hosting Office hours, meet-ups, community calls/events, PRs, issues and discussions, gitter, twitter, </li> <li>Documentation and multimedia content creation</li> </ul>"},{"location":"while-working/Learnings-as-open-source-community-manager/#gaining-stars-and-forks","title":"Gaining stars and forks","text":"<ul> <li>stars and forks can be bought for Rs. 20 per star and Rs. 20 per fork. Here: stars Fork</li> <li>Create good first issues and help wanted issues</li> <li>Go to colleges and offices for sessions on open source contributions. Here, you'll get bulk of people to star and contribute in one go.</li> <li>Go to local identity and cyber security specific meetups and take sessions around how to contribute to Jans.</li> <li>give interviews to podcasts, spotlight shows where you can show off your open source project. </li> <li>Start your own live contribution stream where you show people how to contribute to the Janssen project</li> </ul>"},{"location":"while-working/Learnings-as-open-source-community-manager/#setting-up-clacontributor-license-agreement","title":"Setting up CLA(contributor license agreement)","text":""},{"location":"while-working/Learnings-as-open-source-community-manager/#difference","title":"difference","text":"<p>Some projects use CLA and some use DCO. First understand the difference between C</p>"},{"location":"while-working/Learnings-as-open-source-community-manager/#examples","title":"Examples","text":"<p>Here is the text of Meta's CLA. You have to sign this if you want to contribute to React for example.</p> <p>Here is the form that you have to fill:</p> <p></p> <p>Here is the complete CLA text.</p> <pre><code>Meta Platforms, Inc. Individual Contributor License Agreement (\"Agreement\"), v2.0\n\nYou accept and agree to the following terms and conditions for Your present and future Contributions submitted to Meta Platforms, Inc. (\"Meta\"). Except for the license granted herein to Meta and recipients of software distributed by Meta, You reserve all right, title, and interest in and to Your Contributions.\n\n1. Definitions.\n\n\"You\" (or \"Your\") shall mean the copyright owner or legal entity authorized by the copyright owner that is making this Agreement with Meta. For legal entities, the entity making a Contribution and all other entities that control, are controlled by, or are under common control with that entity are considered to be a single Contributor. For the purposes of this definition, \"control\" means (i) the power, direct or indirect, to cause the direction or management of such entity, whether by contract or otherwise, or (ii) ownership of fifty percent (50%) or more of the outstanding shares, or (iii) beneficial ownership of such entity.\n\n\"Contribution\" shall mean any original work of authorship, including any modifications or additions to an existing work, that is intentionally submitted by You to Meta for inclusion in, or documentation of, any of the products owned or managed by Meta (the \"Work\"). For the purposes of this definition, \"submitted\" means any form of electronic, verbal, or written communication sent to Meta or its representatives, including but not limited to communication on electronic mailing lists, source code control systems, and issue tracking systems that are managed by, or on behalf of, Meta for the purpose of discussing and improving the Work, but excluding communication that is conspicuously marked or otherwise designated in writing by You as \"Not a Contribution.\"\n\n2. Grant of Copyright License. Subject to the terms and conditions of this Agreement, You hereby grant to Meta and to recipients of software distributed by Meta a perpetual, worldwide, non-exclusive, no-charge, royalty-free, irrevocable copyright license to reproduce, prepare derivative works of, publicly display, publicly perform, sublicense, and distribute Your Contributions and such derivative works.\n\n3. Grant of Patent License. Subject to the terms and conditions of this Agreement, You hereby grant to Meta and to recipients of software distributed by Meta a perpetual, worldwide, non-exclusive, no-charge, royalty-free, irrevocable (except as stated in this section) patent license to make, have made, use, offer to sell, sell, import, and otherwise transfer the Work, where such license applies only to those patent claims licensable by You that are necessarily infringed by Your Contribution(s) alone or by combination of Your Contribution(s) with the Work to which such Contribution(s) was submitted. If any entity institutes patent litigation against You or any other entity (including a cross-claim or counterclaim in a lawsuit) alleging that your Contribution, or the Work to which you have contributed, constitutes direct or contributory patent infringement, then any patent licenses granted to that entity under this Agreement for that Contribution or Work shall terminate as of the date such litigation is filed.\n\n4. You represent that you are legally entitled to grant the above license. If your employer(s) has rights to intellectual property that you create that includes your Contributions, you represent that you have received permission to make Contributions on behalf of that employer, that your employer has waived such rights for your Contributions to Meta, or that your employer has executed a separate Corporate CLA with Meta.\n\n5. You represent that each of Your Contributions is Your original creation (see section 7 for submissions on behalf of others). You represent that Your Contribution submissions include complete details of any third-party license or other restriction (including, but not limited to, related patents and trademarks) of which you are personally aware and which are associated with any part of Your Contributions.\n\n6. You are not expected to provide support for Your Contributions, except to the extent You desire to provide support. You may provide support for free, for a fee, or not at all. Unless required by applicable law or agreed to in writing, You provide Your Contributions on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied, including, without limitation, any warranties or conditions of TITLE, NON- INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A PARTICULAR PURPOSE.\n\n7. Should You wish to submit work that is not Your original creation, You may submit it to Meta separately from any Contribution, identifying the complete details of its source and of any license or other restriction (including, but not limited to, related patents, trademarks, and license agreements) of which you are personally aware, and conspicuously marking the work as \"Submitted on behalf of a third-party: [named here]\".\n\n8. You agree to notify Meta of any facts or circumstances of which you become aware that would make these representations inaccurate in any respect.\n</code></pre> <p>Once you fill the form above and authenticate using github, CLA is immediately active and you can start contributing.</p>"},{"location":"while-working/need-for-high-commit-quality-in-open-source/","title":"Why open-source projects need high quality code","text":"<p>Because of two factors: - People are not dedicatedly available to work in urgent situations - And bad code can create such urgent situations like broken builds or production outages</p> <p>So, bottom line is that since open-source projects don't have people to fix  something 'right-away', it is better to avoid getting into those situations. And to do that the best option is to ensure code getting committed is high-quality. Hence, it is very  importan that an open-source project follow strict checks and balances to make sure that reviews are done, static code analysis is happening and warnings are being fixed etc etc </p>"},{"location":"while-working/open-banking/","title":"Open Banking Notes","text":"<p>From https://gluu.org/open-banking-apis-2021/</p> <p>PSD2 : 'Payment Services Directive' is an E.U regulation. FCA  : Financial Conduct Authority. This is an EU authority that give licences to companies to be AISP or PISP or both. AISP : Account Information Service Provider. A company authorised to retrieve account data provided by banks and financial institutions PISP : Payment Initiation Service Provider. A company authorised to initiate payments into or out of a user\u2019s account</p>"},{"location":"while-working/remote-team-organization/","title":"Remote Team Organization","text":""},{"location":"while-working/remote-team-organization/#gluu-4","title":"Gluu 4","text":"<ul> <li>Project in maintainence mode. We are only fixing security issues and other on-demand issues. We have a scheduled 2 monthly release. </li> <li>So strategic roadmap is not required since there is no feature development.</li> <li>What we need is to aling issues with future releases (created as milestones in the GH).</li> <li>Start with accumulating issues in GH, then groom these issues by adding more details about impact and issue type etc. Ask the issue author to do this.</li> <li>Once the issues are groomed, add priority to them in discussion with Mike.</li> <li>Once the priority is added, assign milestone to the issues. And let the developer know so that they have a say in the delivery timeline.</li> </ul>"},{"location":"while-working/remote-team-organization/#janssen","title":"Janssen","text":"<ul> <li>Project is in development phase. We have features being added, bugs being fixed etc. We have a twice-a-month release schedule.</li> <li>Here, we will take a step by step approach. We will first create a roadmap with features and descriptions only. timelines will be quarterly, to decide which   features are getting delivered when. This will help the team understand what is at the priority. This can be achieved by involving Mike and Mo.   At this stage, we don't want to go down to the   level of determining the content of each 15 day release. Because that will need lot of clarity from Mike's side and descipline and commitment from the developer side.   In the second phase, we will try to aling features in the roadmap to the sub issues and tasks. Like a sprint planning, developers will participate to determine which issue   can be delivered in which milestone(release).</li> <li>At the end of first phase: we will have clarity about the strategy, direction and quaterly timelines</li> <li>At the end of second phase: we will have clarity about the execution and the timelines. Release contents for upcoming releases. </li> </ul>"},{"location":"while-working/trello-workflow/","title":"Trello Workflow","text":""},{"location":"while-working/trello-workflow/#trello-board","title":"Trello Board","text":"<p>Trello board to have 4 states: backlog, in progress, test, done</p> <p></p>"},{"location":"while-working/trello-workflow/#creating-new-cards","title":"Creating new cards","text":"<ul> <li>Add project label:</li> <li>Epics and stories for a project are identified by a project label, for example <code>Terminal-cards</code> label. For every new module/project, a new card should be created. Each epic or story must have a project label. This is also how we can connect multiple stories of a project to its epic. You can filter on this project label to view overall status of the project</li> <li>Add epic-story-defect label:</li> <li>Each card is either an <code>epic</code> or a <code>story</code> or a <code>defect</code>. Assign one of this label to the card. Any project can have only one epic labelled card.</li> </ul>"},{"location":"while-working/trello-workflow/#tasks-and-time-tracking","title":"Tasks and Time tracking","text":"<ul> <li>Each user-story should be broken down into tasks for front-end and back-end in different sections. Tasks should be small enough to be completed within a day. Everyday, a developer should be able to complete at least one task and update Trello accordingly.</li> </ul>"},{"location":"while-working/trello-workflow/#communicating-using-labels","title":"Communicating using Labels","text":"<ul> <li><code>Question</code> label</li> <li>Use this label to indicate that developer has a question to be answered by product owner or technical lead.</li> <li>When this label is used, the product owner will look into the card comments for a question from developer. Developer should ask detailed and well-explained question in the card comments.</li> <li><code>Blocked</code> label:</li> <li>Developer will apply this label to a card to highlight a need for urgent discussion or a question to be answered in order to make progress for that card.</li> </ul>"},{"location":"while-working/trello-workflow/#defect-workflow","title":"Defect workflow","text":"<ul> <li>Cards with label <code>defect</code> will have the same life-cycle as <code>story</code> cards. Meaning, when a defect is created, it should be placed in the backlog and assigned to a developer. Developer picks it up and moves it to in-progress. When it is fixed, the developer will move it to test phase. Here, test engineer will retest it and move it either to completed state or back to backlog with relevant comments.</li> </ul>"},{"location":"while-working/product-mgmt/prd-notes/","title":"PRD Notes","text":""},{"location":"while-working/product-mgmt/prd-notes/#prd-created-using-chatprdai","title":"PRD created using ChatPRD.ai","text":""},{"location":"while-working/product-mgmt/prd-notes/#inputs","title":"Inputs:","text":"<p>prompt-1:</p> <p>create an app that lets parents and kids create and share a wishlist of gifts for upcoming birthdays. A link can be shared with invitees. Invitees can see the wishlist and choose the gift that they'll be giving. Two invitees can share expense of one gift and give it collectively.</p> <p>Ans-1</p> <p>Nice idea \u2014 I can help. Quick questions to make feedback actionable:</p> <ol> <li>Primary goal: validate concept, prioritize features, draft a PRD, or create investor-facing pitch?</li> <li>Target audience: parents only, parents + kids, extended family, friends, or event hosts?</li> <li>Platform(s): mobile (iOS/Android), web, or both?</li> <li>Payments &amp; logistics: do you want integrated payments/split-payments + shipping, or just reservation/claiming with external fulfillment?</li> <li>Privacy &amp; visibility: should wishlists be public via link, invite-only, or support anonymous contributors?</li> <li>Gift sharing rules: max contributors per gift? automatic split calculation? deadlines for claiming?</li> <li>UX questions: should kids be able to edit lists independently or only with parental approval?</li> <li>Monetization: commissions, featured listings, ads, premium features, or none?</li> <li>Any regulatory/age constraints or countries to support at launch?</li> <li>Deliverable preference: quick bulleted critique, prioritized feature list, or a full PRD (I can draft one).</li> </ol> <p>Tell me answers (or skip ones you don\u2019t care about). I\u2019ll then give a focused critique and proposed next steps \u2014 or I can draft the PRD immediately if you pick that.</p> <p>Prompt-2</p> <ol> <li>validate concept  </li> <li>parents only  </li> <li>mobile  </li> <li>reservation with external fulfillment  </li> <li>public via link  </li> <li>deadlines for claiming, automatic split calculations  </li> <li>Only parent can  </li> <li>commisions  </li> <li>India  </li> <li>full PRD</li> </ol>"},{"location":"while-working/product-mgmt/prd-notes/#generated-prd","title":"Generated PRD","text":"<pre><code>/\\*\\*\n\n* NOTE: This is a template, not a completed PRD.\n\n* Replace all placeholders (e.g., , , ) with details\n\n* specific to your project. \\*/\n\n# WishShare \u2014 Family Gift Wishlist (India) PRD\n\n### TL;DR\n\nWishShare is a mobile app for parents in India to create and share curated gift wishlists for their children\u2019s birthdays. The app enables parents to easily share a public link with invitees, who can reserve gifts and split contributions, while WishShare earns commissions on successful reservations. The MVP focuses on reservation and split calculation, with external fulfillment and no in-app payments at launch.\n\n---\n\n## Goals\n\n### Business Goals\n\n* Achieve 10,000 wishlist creations within 90 days of launch.\n\n* Drive at least 30% of wishlists to have one or more items reserved by invitees.\n\n* Generate initial commission revenue from at least 20% of reserved gifts.\n\n* Establish partnerships with 3+ major Indian e-commerce retailers for product link integration.\n\n* Maintain a reservation success rate (no double-claims) above 99%.\n\n### User Goals\n\n* Allow parents to easily create and manage a wishlist for their child\u2019s birthday.\n\n* Enable seamless sharing of the wishlist link with family and friends.\n\n* Ensure invitees can reserve gifts and coordinate split contributions without confusion.\n\n* Provide clear visibility to parents on which gifts are claimed and by whom.\n\n* Reduce duplicate gifting and social friction around gift selection.\n\n### Non-Goals\n\n* No child or non-parent editing of wishlists in the MVP.\n\n* No in-app payment processing or direct fulfillment at launch.\n\n* No support for anonymous or invite-only wishlists in the MVP (public link only).\n\n---\n\n## User Personas &amp; Stories\n\n### Parent Organizer (Primary User)\n\n* As a parent, I want to create a wishlist for my child\u2019s birthday, so that I can guide friends and family on what gifts are most suitable.\n\n* As a parent, I want to add items from any online retailer or enter custom gifts, so that the wishlist is flexible.\n\n* As a parent, I want to share a single link with all invitees, so that I don\u2019t have to coordinate individually.\n\n* As a parent, I want to see which gifts have been reserved and by whom, so that I can avoid duplicate gifts.\n\n* As a parent, I want to set a deadline for reservations, so that invitees respond in time.\n\n### Invitee (Family Member or Friend)\n\n* As an invitee, I want to view the wishlist without creating an account, so that it\u2019s easy to participate.\n\n* As an invitee, I want to reserve a gift, so that others know I am giving it.\n\n* As an invitee, I want to split the cost of a gift with another person, so that we can give a more expensive gift together.\n\n* As an invitee, I want to see which gifts are already reserved, so that I don\u2019t pick the same one.\n\n* As an invitee, I want to receive a reminder if I haven\u2019t reserved a gift before the deadline, so that I don\u2019t forget.\n\n### Occasional Contributor (Edge Case)\n\n* As an occasional contributor, I want to join an existing split contribution, so that I can participate even if I can\u2019t afford the full gift.\n\n* As an occasional contributor, I want to see if a reservation has expired, so that I know if I can claim it.\n\n* As an occasional contributor, I want to cancel my reservation if I change my mind, so that others can claim the gift.\n\n* As an occasional contributor, I want to see the total number of contributors for a split gift, so that I know how much I need to pay.\n\n* As an occasional contributor, I want to avoid seeing personal information of other contributors, so that my privacy is protected.\n\n---\n\n## Functional Requirements\n\n* **Wishlist Creation &amp; Management** (Priority: High)\n\n  * Create new wishlist for a child\u2019s birthday.\n\n    * Acceptance: Parent can create, name, and set event date for wishlist.\n\n  * Add, edit, or remove items (with image, link, price, description).\n\n    * Acceptance: Items can be added via URL or manual entry; images auto-fetched or uploaded.\n\n  * Set reservation deadline.\n\n    * Acceptance: Deadline is visible to all invitees.\n\n* **Sharing &amp; Access Control** (Priority: High)\n\n  * Generate a public, shareable link for each wishlist.\n\n    * Acceptance: Link can be copied or shared via SMS/WhatsApp.\n\n  * No login required for invitees to view or reserve.\n\n* **Reservation &amp; Claiming** (Priority: High)\n\n  * Invitees can reserve an item with their name and contact info.\n\n    * Acceptance: Reserved items are marked as claimed; parent notified.\n\n  * Prevent double-claiming of the same item.\n\n    * Acceptance: Real-time locking or confirmation to avoid race conditions.\n\n* **Split Contribution Calculator** (Priority: High)\n\n  * Allow multiple invitees to split a gift.\n\n    * Acceptance: Contributors can join a split; app calculates and displays per-person amount.\n\n  * Automatic rounding and contributor limits.\n\n    * Acceptance: Rounding rules and max contributors enforced.\n\n* **Notifications &amp; Deadlines** (Priority: Medium)\n\n  * Send reminders to invitees before deadline.\n\n    * Acceptance: SMS/WhatsApp/email reminders sent X days before deadline.\n\n  * Notify parent of new reservations or cancellations.\n\n* **Payments &amp; External Fulfillment** (Priority: Low for MVP)\n\n  * No in-app payments; display \u201cmark as purchased\u201d for invitees.\n\n    * Acceptance: Invitee marks item as purchased externally; app records status.\n\n* **Privacy &amp; Security** (Priority: High)\n\n  * Public link access; no search/discovery.\n\n    * Acceptance: Only those with the link can access.\n\n  * Mask contributor contact info from other invitees.\n\n* **Admin/Analytics** (Priority: Medium)\n\n  * Dashboard for tracking wishlists, reservations, and commissions.\n\n    * Acceptance: Admin can view aggregate stats.\n\n* **Monetization (Commissions)** (Priority: Medium)\n\n  * Track and report commissionable reservations.\n\n    * Acceptance: Commission logic applied to eligible items.\n\n---\n\n## User Experience\n\n**Entry Point &amp; First-Time User Experience**\n\n* Users discover WishShare via app store, social media, or word of mouth.\n\n* On first launch, onboarding screens explain the value proposition and privacy.\n\n* Parent signs up with mobile number and basic info (name, child\u2019s name, event date).\n\n* Optional: Short tutorial on creating and sharing a wishlist.\n\n**Core Experience**\n\n* **Step 1:** Parent creates a new wishlist for their child.\n\n  * Simple, guided form with event details and child\u2019s info.\n\n  * Error handling for missing or invalid data.\n\n  * Success: Wishlist created, prompt to add items.\n\n* **Step 2:** Parent adds items to the wishlist.\n\n  * Add via product link (auto-fetch image, price, description) or manual entry.\n\n  * UI: Large \u201cAdd Item\u201d button, clear feedback on successful addition.\n\n  * Option to edit or remove items.\n\n* **Step 3:** Parent sets a reservation deadline.\n\n  * Calendar picker, with default suggestions (e.g., 7 days before event).\n\n* **Step 4:** Parent shares the wishlist link.\n\n  * Prominent \u201cShare\u201d button with SMS/WhatsApp integration.\n\n  * Copy link option for manual sharing.\n\n* **Step 5:** Invitee opens the link (no login required).\n\n  * Mobile-optimized web view or in-app deep link.\n\n  * Sees wishlist, item images, prices, and reservation status.\n\n* **Step 6:** Invitee reserves a gift.\n\n  * Selects item, enters name and contact info, confirms reservation.\n\n  * If item allows split, can invite others to join or join existing split.\n\n  * App calculates and displays per-person amount.\n\n  * Confirmation screen and reminder of external purchase.\n\n* **Step 7:** Parent receives notification of reservation.\n\n  * Real-time update in app and optional SMS/email.\n\n* **Step 8:** Deadline and expiration handling.\n\n  * After deadline, unclaimed items are marked as \u201cunreserved.\u201d\n\n  * Invitees can no longer reserve expired items.\n\n* **Step 9:** Parent can view reservation status and contributors.\n\n  * Dashboard shows all items, reservation status, and contributor names.\n\n**Advanced Features &amp; Edge Cases**\n\n* Multi-contributor rounding: App handles rounding so total matches item price.\n\n* Canceled reservations: If a contributor cancels, item becomes available again.\n\n* Duplicate claims: Real-time locking prevents two users from reserving at once.\n\n* Gift delivered externally: Invitee marks as \u201cpurchased\u201d after buying outside app.\n\n* Privacy: Only parent sees full contributor info; invitees see only their own.\n\n* Fraud mitigation: Rate limits, phone verification, and monitoring for abuse.\n\n* Family account linking: Future feature for multiple parents/guardians.\n\n**UI/UX Highlights**\n\n* High-contrast, accessible color palette.\n\n* Responsive design for all major Indian mobile devices.\n\n* INR currency formatting and support for Indian languages (Hindi, English at launch).\n\n* Offline handling: Local caching for parent\u2019s wishlist editing.\n\n* Clear error messages and undo for destructive actions.\n\n---\n\n## Narrative\n\nPriya, a mother in Bengaluru, wants to make her son Aarav\u2019s 7th birthday special. She\u2019s tired of receiving duplicate gifts and wants to make it easier for her family to choose something Aarav will truly love. Priya downloads WishShare, quickly creates a wishlist with toys, books, and a cricket set, and sets a reservation deadline a week before the party. She shares the link with her family WhatsApp group.\n\nAarav\u2019s uncle and aunt open the link, see the wishlist, and decide to reserve the cricket set together using the split contribution feature. The app calculates their share and confirms their reservation. Priya\u2019s sister picks a book and reserves it in one tap. As the deadline approaches, Priya receives notifications showing which gifts are claimed and by whom, giving her peace of mind that there will be no duplicates.\n\nOn the day of the party, Aarav receives the gifts he wanted, and Priya\u2019s family feels happy to have contributed meaningfully. WishShare earns a commission on the reserved items, and Priya recommends the app to her friends. The experience is seamless, transparent, and joyful for everyone involved.\n\n---\n\n## Success Metrics\n\n### User-Centric Metrics\n\n* Number of wishlists created per user\n\n* % of wishlists with at least one reserved item\n\n* User satisfaction (NPS, app store ratings)\n\n* Repeat usage rate (parents creating &gt;1 wishlist)\n\n### Business Metrics\n\n* Commission revenue per reserved item\n\n* Conversion rate from reservation to external purchase (where trackable)\n\n* Number of retailer partnerships\n\n### Technical Metrics\n\n* Reservation system uptime (&gt;99.5%)\n\n* Double-claim error rate (&lt;1%)\n\n* Notification delivery success rate (&gt;98%)\n\n### Tracking Plan\n\n* wishlist_created\n\n* item_added\n\n* link_shared\n\n* item_reserved\n\n* contribution_initiated\n\n* contribution_completed\n\n* reservation_expired\n\nProperties to capture:\n\n* user_id\n\n* child_age\n\n* item_price\n\n* currency\n\n* contributor_count\n\n* region\n\n---\n\n## Technical Considerations\n\n### Technical Needs\n\n* Mobile front-end (Android/iOS) with offline support for parents.\n\n* Backend APIs for wishlist, item, reservation, and notification management.\n\n* Real-time reservation locking to prevent double-claims.\n\n* Data models for users, wishlists, items, reservations, and contributions.\n\n* Notification system (SMS, WhatsApp, email).\n\n* Admin dashboard for analytics and commission tracking.\n\n### Integration Points\n\n* SMS/WhatsApp deep link sharing.\n\n* Image hosting for wishlist items.\n\n* Product link metadata scraping (title, image, price).\n\n* Analytics provider (e.g., Mixpanel, Firebase).\n\n* Placeholder for future payment provider integration.\n\n* Localization for Indian languages and INR.\n\n### Data Storage &amp; Privacy\n\n* All data stored in secure, cloud-based infrastructure with Indian data localization.\n\n* PII (names, contact info) encrypted at rest and in transit.\n\n* Consent required for public link sharing; clear privacy policy.\n\n* Data retention: user data deleted upon request; reservation data retained for 90 days post-event.\n\n* Compliance with Indian IT rules and data privacy regulations.\n\n### Scalability &amp; Performance\n\n* Designed for 100,000+ concurrent users at peak (birthday season).\n\n* Reservation system optimized for low-latency, high-concurrency.\n\n* Scalable notification delivery (SMS/WhatsApp).\n\n### Potential Challenges\n\n* Preventing double-claims and race conditions in reservations.\n\n* Handling SMS/WhatsApp delivery failures.\n\n* Ensuring data privacy and compliance with Indian regulations.\n\n* Managing external product link changes or dead links.\n\n---\n\n## Milestones &amp; Sequencing\n\n### Project Estimate\n\n* MVP: Medium (2\u20134 weeks)\n\n* Full product (with advanced features): Large (4\u20138 weeks)\n\n### Team Size &amp; Composition\n\n* Small Team: 2\u20133 people (Product/Design, Full-stack Engineer, QA/Support as needed)\n\n### Suggested Phases\n\n**Phase 1: MVP Launch (2\u20134 weeks)**\n\n* Key Deliverables: Core mobile app (wishlist creation, item management, sharing, reservation, split calculator, notifications, admin dashboard)\n\n* Dependencies: SMS/WhatsApp integration, image hosting, analytics setup\n\n**Phase 2: Social &amp; Discovery Features (2\u20133 weeks)**\n\n* Key Deliverables: Enhanced sharing, family account linking, improved analytics, language support\n\n* Dependencies: User feedback from MVP, localization resources\n\n**Phase 3: Integrated Payments &amp; Fulfillment (4+ weeks, post-MVP traction)**\n\n* Key Deliverables: In-app payment/split-pay, direct merchant integration, advanced fraud prevention\n\n* Dependencies: Payment provider partnership, regulatory review\n\n---\n\n## Risks &amp; Mitigations\n\n---\n\n## Open Questions\n\n* What is the exact commission model (flat fee, % of item price, only for certain retailers)?\n\n* What is the maximum number of contributors allowed per split gift?\n\n* Are only retailer-linked items allowed, or can parents add generic/custom gifts?\n\n* Which Indian languages should be supported at launch (Hindi, English, others)?\n\n* What is the customer support plan (in-app chat, email, phone)?\n\n\n\n* Should invitees be able to edit or cancel their reservations after claiming?\n\n* How will external purchase confirmation be handled (optional upload of receipt, honor system, etc.)?\n</code></pre> <p>Prompt -3</p> <p>suggest how to monetise this app</p> <p>Ans:</p> <pre><code>Good \u2014 here are focused, actionable monetization options for WishShare (India), ranked and with implementation notes and trade-offs.\n\nCore (highest priority)\n- Platform commission on fulfilled purchases (affiliate/referral): earn ~5\u201312% by partnering with major Indian e\u2011commerce platforms (Flipkart, Amazon, Myntra) and local merchants. Low friction for users; reliable volume play. Trade-off: requires partner integrations and tracking.\n- Convenience fee on reservations/payments: charge a small fixed fee (\u20b910\u2013\u20b950) per claimed gift or a 1\u20133% processing fee for split-pay collections. Predictable revenue and easier to explain. Risk: sensitivity to fees for low-value gifts.\n\nFeature / product-led revenue\n- Premium family tier (monthly/yearly): \u20b999\u2013\u20b9299/month or \u20b9699\u2013\u20b91,999/year with features: unlimited wishlists, priority placement in share link, no convenience fees, smart gift suggestions, calendar sync, locked parental controls, advanced analytics (who viewed/when). Good ARPU; conversion depends on perceived value.\n- Featured placement / promoted gifts: merchants or parents can pay to pin or highlight items in a wishlist or in discovery flows. High-margin but must avoid degrading trust.\n\nTransaction-adjacent services\n- Gift contribution management / escrow: hold pooled contributions until deadline; charge 1\u20132% escrow fee. Reduces failed payments and increases completion rates; requires stronger compliance/KYC for payments.\n- Gift wrapping / concierge + shipping referrals: partner with local vendors and collect referral fees or markups. Higher margin but needs logistics partnerships.\n\nMarketplace and merchant partnerships\n- Affiliate store / curated marketplace: show merchants within the app; take referral fees and run co-marketing with brands targeting parents/children. Drives stickiness and monetizes browsing behavior.\n- Bulk/offline gifting for extended family (corporate gifting): offering corporate/large-family packages for festivals; higher ticket size and margins.\n\nAdvertising &amp; data\n- Non-intrusive contextual ads: only in discovery or merchant browse (no ads on private wishlists). Low-yield; risk to UX.\n- Aggregated insights for brands (anonymized): trends, popular gifts by age/region \u2014 sell as periodic reports or APIs. Must ensure strict privacy and compliance.\n\nGrowth-to-revenue levers (recommended sequence)\n1. Launch with reservation + affiliate links + small convenience fee to validate conversion and partner tracking.  \n2. Introduce split-pay escrow and convenience fee once group payments scale.  \n3. Add premium subscription with clear, measurable benefits (no fees, priority links) at month 3\u20136.  \n4. Open merchant partnerships and promoted placements after user base and usage patterns are clear.  \n5. Explore concierge/wrapping and B2B packages once logistics partners are secured.\n\nPricing guidance and KPIs\n- Commission: start 5\u20138% for affiliates; test up to 12% with exclusive partners.  \n- Convenience/escrow fee: \u20b910\u2013\u20b950 or 1\u20133% per transaction.  \n- Subscription price: test \u20b999/mo and \u20b9699/yr; target 2\u20135% conversion of active families.  \n- KPIs to track: take rate (net rev / GMV), conversion from view\u2192claim, split-pay completion rate, ARPU by cohort, churn for premium, CAC payback.\n\nRisks &amp; mitigations\n- Fee sensitivity: mitigate with a clear value proposition (guaranteed claim, escrow safety, no duplicate gifts).  \n- Partner dependence: diversify merchant partners, add direct merchant onboarding for high-margin SKUs.  \n- Trust/privacy: be transparent on data use and keep wishlists private-by\u2011link.\n\nPick two monetization paths you want prioritized (e.g., affiliate + convenience fee; or premium + escrow) and I\u2019ll map required product changes, partner types, and a 3\u2011month revenue experiment plan.\n</code></pre> <p>prompt - 4</p> <p>what are the existing competitors for this kind of app worldwide?</p> <p>ans - 4</p> <pre><code>Below are existing competitors (global and India-relevant), grouped by product type with one-line differentiator and source links.\n\nUniversal / gift-wishlist apps\n- Giftful \u2014 shareable wishlists with claiming and group-gift support. ([marketingscoop.com](https://www.marketingscoop.com/tech/10-universal-wishlist-apps-to-effortlessly-track-and-share-products-2023/?utm_source=chatgpt.com))  \n- Giftster \u2014 family-centered wishlists and claiming across devices. ([makeuseof.com](https://www.makeuseof.com/best-gift-registry-apps/?utm_source=chatgpt.com))  \n- Listery \u2014 mobile-first shared wishlists with browser add/remove and group lists. ([listery.app](https://listery.app/group-wishlist/?utm_source=chatgpt.com), [sofi.com](https://www.sofi.com/learn/content/best-wishlist-apps/?utm_source=chatgpt.com))  \n- WishList / Wishlistr / Wishfinity \u2014 general-purpose wishlist apps that aggregate items from multiple stores. ([sofi.com](https://www.sofi.com/learn/content/best-wishlist-apps/?utm_source=chatgpt.com), [makeuseof.com](https://www.makeuseof.com/best-gift-registry-apps/?utm_source=chatgpt.com))\n\nGroup gifting / pooled contributions\n- GroupTogether \u2014 group-gift coordination, card + pooled payments and reminders. ([the-sun.com](https://www.the-sun.com/shopping/14955779/group-together-new-greeting-cards-save/?utm_source=chatgpt.com))  \n- GiftRocket / Giftly-style (digital gift cards &amp; pooled gift solutions) \u2014 simple cash/gift-card contributions (see Giftful features for group gifting overlap). ([marketingscoop.com](https://www.marketingscoop.com/tech/10-universal-wishlist-apps-to-effortlessly-track-and-share-products-2023/?utm_source=chatgpt.com), [makeuseof.com](https://www.makeuseof.com/best-gift-registry-apps/?utm_source=chatgpt.com))\n\nRegistry-focused platforms (wider registry + group gifting)\n- Zola / Joy / MyRegistry \u2014 universal registries (weddings but also general registries) with add-from-any-store and group gift options. ([en.wikipedia.org](https://en.wikipedia.org/wiki/Zola_%28company%29?utm_source=chatgpt.com), [nypost.com](https://nypost.com/2024/07/22/shopping/why-with-joy-serves-as-a-great-wedding-registry-destination/?utm_source=chatgpt.com), [brides.com](https://www.brides.com/what-to-know-about-universal-wedding-registries-5324095?utm_source=chatgpt.com))\n\nIndia / local group-payment &amp; gifting adjacent apps\n- MyPoolin \u2014 India-focused pooling/group payment app used for group gifting and event collections. ([en.wikipedia.org](https://en.wikipedia.org/wiki/MyPoolin?utm_source=chatgpt.com))  \n- Local UPI/group-payment tools (multiple players) \u2014 widely used for splitting and contributing to gifts in India (category context). ([en.wikipedia.org](https://en.wikipedia.org/wiki/MyPoolin?utm_source=chatgpt.com))\n\nNiche / occasion-specific tools\n- Elfster \u2014 Secret-Santa and wishlist + claiming features popular for groups. ([southernliving.com](https://www.southernliving.com/secret-santa-app-elfster-8752355?utm_source=chatgpt.com))\n\nNotes on the competitive landscape\n- Two clusters matter most: (1) wishlist/registry apps that focus on discovery and preventing duplicate gifts (Giftful, Giftster, Listery, universal registries), and (2) group-pay/pooling tools that handle money collection and split payments (GroupTogether, MyPoolin, UPI-based apps). Integrating both well is a market gap. ([marketingscoop.com](https://www.marketingscoop.com/tech/10-universal-wishlist-apps-to-effortlessly-track-and-share-products-2023/?utm_source=chatgpt.com), [the-sun.com](https://www.the-sun.com/shopping/14955779/group-together-new-greeting-cards-save/?utm_source=chatgpt.com), [en.wikipedia.org](https://en.wikipedia.org/wiki/MyPoolin?utm_source=chatgpt.com))\n\nWant a prioritized competitor map (feature-by-feature, UX screenshots, and what to copy/avoid) for your PRD? Which three competitors should I analyze in depth?\n</code></pre> <p>Prompt - 5</p> <p>let's prioritize competitor map. We are focused on preventing duplicate gifts and getting more useful and meaningful gifts. We don't want to handle payments.</p> <p>Ans - 5</p> <pre><code>I reviewed your PRD. Below is a prioritized competitor map focused on duplicate-prevention and improving gift relevance (no payments).\n\nTop competitors to analyze (ranked)\n1. Giftster \u2014 family-centered wishlists; strong at duplicate prevention and cross-device syncing.  \n2. Giftful \u2014 shareable wishlists + group-gift reservation; good UX for claiming items.  \n3. Listery \u2014 mobile-first list aggregation from multiple stores; simple sharing and add-from-web.  \n4. MyRegistry / MyRegistry-like universal registries (Zola-style) \u2014 powerful add-from-any-store and duplication checks at scale.  \n5. Elfster \u2014 wishlist + Secret-Santa; good social features that drive meaningful gift selection.  \n6. GroupTogether (feature-level) \u2014 group-gift coordination (useful UX patterns for contributors, but payment-focused).\n\nFeature-by-feature comparison (what matters for your goals)\n- Add-from-any-store / browser clipper\n  - Winners: Listery, MyRegistry \u2014 easy aggregation reduces manual entries and increases relevance.\n  - Opportunity: Many apps miss localized Indian merchants and UPI/WhatsApp flows.\n- Duplicate detection &amp; reservation\n  - Winners: Giftster, Giftful \u2014 realtime claiming, visible \u201creserved by X\u201d badges, and expiry windows.\n  - Gap: Few offer intelligent duplicate alerts for similar SKUs (e.g., same toy model at different sellers).\n- Social signals &amp; context (why this gift matters)\n  - Winners: Elfster, Giftful \u2014 comments, senders\u2019 notes, gift stories increase meaning.\n  - Gap: Limited structured prompts (e.g., \u201cWhy child wants this / occasion relevance / size/color\u201d).\n- Guidance for useful gifts (age-fit, longevity, educational value)\n  - Winners: N/A (mostly manual) \u2014 registries rarely score gifts for \u201cusefulness.\u201d  \n  - Opportunity: algorithmic tagging (age appropriateness, developmental benefits) plus curator badges.\n- Frictionless sharing/viewing (no-login link access)\n  - Winners: Giftful, Giftster \u2014 link-based access and SMS/WhatsApp friendly.\n  - Your PRD already targets this; good competitive parity.\n- Group-claiming without payments\n  - Winners: Giftful supports reservation; GroupTogether handles money.  \n  - Opportunity: allow multi-invitee reservation commitment (e.g., pledge %/role) without collecting funds.\n- Privacy / parental control\n  - Winners: Giftster (family privacy controls).  \n  - Must-have: parent-only edit + child-preview mode per your spec.\n\nGaps in market (opportunities to win)\n- Localized store integrations for India (Flipkart, Amazon India, FirstCry, local kirana/brands). Many competitors focus Western stores.  \n- Intelligent duplicate detection across SKUs and variants (model, size, color, UPC/title similarity).  \n- Structured context fields that encourage more meaningful gifts (reason, how it will be used, longevity score).  \n- \u201cIntent to buy\u201d commitments (non-payment pledges) and soft reservations with deadline escalation (reminder nudges, reassignment if expired).  \n- Curated suggestions prioritized by age, educational value, eco/fair-trade badges \u2014 help parents craft more useful lists.  \n- Social proof from family (ratings, past-gift success) to guide meaningful choices.\n\nWhat to copy (fast wins)\n- Link-based viewing + one-tap reserve (Giftful/Giftster UX).  \n- Browser/mobile clipper to add items from any store (Listery/MyRegistry).  \n- Visible reservation badges and expiry timers (Giftster/Giftful).\n\nWhat to avoid or change\n- Avoid over-reliance on manual list entry \u2014 increases friction.  \n- Avoid payment-first UX patterns (GroupTogether) since you won\u2019t handle payments; instead use clear pledge/reservation states.  \n- Avoid generic discovery feeds that push merchants over useful/age\u2011appropriate suggestions.\n\nRecommended product features to prioritize (MVP)\n1. Add-from-any-store mobile clipper + manual add with image/title/URL/price.  \n2. Robust duplicate-detection engine (title/UPC/image similarity + variant matching) with admin override.  \n3. Link-sharing with no-login view and one-tap \u201cReserve\u201d (show reserver name + pledge note).  \n4. Multi-person pledge (e.g., \u201cI\u2019ll chip in\u201d toggle) without money handling; support deadline and automatic release on expiry.  \n5. Structured gift-context fields: age range, why wanted, usage frequency, durability score (parent inputs).  \n6. Curated suggestions/rules engine that scores items for usefulness and surfaces alternatives.  \n7. Nudges &amp; reassignment flows: reminders before deadline, automatic suggestions for unreserved high-priority items.\n\nQuick experiment plan (first 8 weeks)\n- Week 0\u20132: Build clipper + add-item flow + shareable link + simple reserve toggle.  \n- Week 3\u20135: Implement duplicate-detection and visible reservation/expiry badges.  \n- Week 6\u20138: Add structured gift-context fields + basic suggestion engine; run 50-family pilot in one Indian city (WhatsApp distribution).\n\nIf you want, I\u2019ll: (A) create a competitor feature matrix (spreadsheet) with exact UX examples and screenshots for the six competitors; or (B) draft the MVP feature spec and 8-week roadmap to implement the prioritized features. Which do you prefer?\n</code></pre> <p>Prompt: How profitable is the giftster? what is the revenue? and major markets?</p> <p>Ans:</p> <pre><code>Short answer: Giftster is a privately held company so it does not publish full financial statements or public profit figures. Public signals we can cite:\n\n- Giftster reports &gt;2 million members (2023) and says tracked conversion dollar volume sent to retail partners totaled about $102M in 2024. ([giftster.com](https://www.giftster.com/advertising/?utm_source=chatgpt.com), [globenewswire.com](https://www.globenewswire.com/tc/news-release/2024/08/07/2926263/0/en/Giftster-Announces-the-All-New-Android-Phone-Tablet-App-for-Sharing-Gift-Wish-Lists-Among-Family.html?utm_source=chatgpt.com))  \n- Giftster\u2019s site and traffic estimates show the United States is its largest market, with sizable audiences in Canada, the UK and some European countries; Giftster states it has active members in ~40 countries. ([giftster.com](https://www.giftster.com/advertising/?utm_source=chatgpt.com), [help.giftster.com](https://help.giftster.com/article/45-international-use?utm_source=chatgpt.com), [sem.jupiterseotool.com](https://sem.jupiterseotool.com/website/giftster.com/overview/?utm_source=chatgpt.com))\n\nWhat we can infer (with assumptions)\n- Revenue: Giftster relies largely on affiliate/referral fees and limited advertising/partner deals. Using the $102M in partner-directed GMV (2024) and a plausible affiliate take-rate of 3\u20138% implies estimated gross revenue from affiliate/referral activity in the range of roughly $3M\u2013$8M for that activity alone (this is an estimate, not an official figure). Profitability cannot be determined from this alone because operating costs, other revenue streams, and margins are private. (I\u2019m making this inference from the cited GMV + typical affiliate rates; it should be verified with Giftster or a financial database for accuracy). ([giftster.com](https://www.giftster.com/advertising/?utm_source=chatgpt.com))\n\nMajor markets\n- Primary: United States (largest share of traffic and the company\u2019s stated majority audience).  \n- Secondary: Canada, United Kingdom, parts of Europe (traffic tools list Switzerland notably), and smaller pockets worldwide (Giftster claims activity in ~40 countries). ([sem.jupiterseotool.com](https://sem.jupiterseotool.com/website/giftster.com/overview/?utm_source=chatgpt.com), [help.giftster.com](https://help.giftster.com/article/45-international-use?utm_source=chatgpt.com))\n\nIf you want exact revenue or profit figures I can:\n- Try to find interviews, press filings, or media reporting that cite company revenue or valuation (I\u2019ll search company registries and news).  \n- Or, if you prefer, I can build a short financial-estimate model using plausible affiliate rates, traffic-to-conversion assumptions, and subscription/other revenue scenarios \u2014 tell me which.\n</code></pre>"},{"location":"while-working/product-mgmt/product-content/","title":"Product content notes","text":""},{"location":"while-working/product-mgmt/product-content/#resources","title":"Resources","text":""},{"location":"while-working/product-mgmt/product-content/#tofu-mofu-and-bofu","title":"TOFU, MOFU, and BOFU","text":"<p>https://www.lucidchart.com/blog/what-is-tofu-mofu-bofu</p>"},{"location":"while-working/product-mgmt/product-manager/","title":"As A Product Manager","text":"<p>Learning Material:</p> <ul> <li>udemy course: https://www.udemy.com/course/become-a-product-manager-learn-the-skills-get-a-job/</li> <li>https://productlogic.org/2014/09/13/the-product-triangle-a-visual-vocabulary-for-product-building/</li> <li>https://medium.com/earnest-product-management</li> <li>PM daily routine: https://www.linkedin.com/posts/sachin-sharma-product-career-coach_careercoach-sachinsharma-productmanagers-activity-7327550621127966720-Rs0q?utm_source=share&amp;utm_medium=member_desktop&amp;rcm=ACoAAADcnXwB2SGQ3YB0J31qjo1zUTB5LqDuqag</li> <li>Product manager interview guides:</li> <li>https://www.linkedin.com/posts/sachin-sharma-product-career-coach_google-career-skills-activity-7326463447863349248-xaAn?utm_source=share&amp;utm_medium=member_desktop&amp;rcm=ACoAAADcnXwB2SGQ3YB0J31qjo1zUTB5LqDuqag</li> <li>https://www.linkedin.com/posts/sachin-sharma-product-career-coach_career-skills-interview-activity-7325376290356629504-uYIe?utm_source=share&amp;utm_medium=member_desktop&amp;rcm=ACoAAADcnXwB2SGQ3YB0J31qjo1zUTB5LqDuqag</li> <li>Free product management interviews: https://productschool.com/product-management-events</li> <li>Free product management e-books: https://productschool.com/resources/ebooks</li> <li>Blog to follow: https://productschool.com/blog</li> <li>PM's stakeholders : https://www.linkedin.com/posts/sachin-sharma-product-career-coach_productmanagement-careercoach-sachinsharma-activity-7321027648397213696-2ES9?utm_source=share&amp;utm_medium=member_desktop&amp;rcm=ACoAAADcnXwB2SGQ3YB0J31qjo1zUTB5LqDuqag</li> <li>Hello PM curriculam: https://hellopm.co/#curriculum (price: 60k)</li> <li>product roadmapping microcertification: https://productschool.teachable.com/p/productroadmapping</li> <li>product manager certification by microsoft: https://www.coursera.org/professional-certificates/microsoft-ai-product-manager#courses</li> <li>what is product intution: https://www.linkedin.com/posts/saugatasingh_product-intuition-for-product-managers-activity-7358700889873833984-KgIg?utm_source=share&amp;utm_medium=member_desktop&amp;rcm=ACoAAADcnXwB2SGQ3YB0J31qjo1zUTB5LqDuqag</li> </ul> <p>Roadmap examples:</p> <ul> <li>Very good OSS roadmap. GitHub's own: https://github.com/orgs/github/projects/4247/views/1?sliceBy%5Bvalue%5D=%F0%9F%8C%B1+Secure+at+every+step</li> <li>VScode roadmap:https://github.com/microsoft/vscode/wiki</li> <li>Azure AKS product public roadmap: https://github.com/orgs/Azure/projects/685</li> <li>Roadmap published as article for a licensed product: https://tuskr.app/article/roadmap</li> </ul>"},{"location":"while-working/product-mgmt/product-manager/#notes","title":"Notes","text":"<pre><code>One thing that every Product Manager must understand is how every moving part of a\nproduct interacts with other moving parts.\n</code></pre>"},{"location":"while-working/product-mgmt/product-manager/#lecture-notes","title":"lecture notes","text":""},{"location":"while-working/product-mgmt/product-manager/#17","title":"17","text":"<p>Four stages of product lifecycle. </p> <ul> <li>introduction</li> <li>Company has just introduced a new product. Need and the market for the product is still not proven</li> <li>Only early adoptors are buying the product, so product is lossing money at this time due to little or no revenue</li> <li>There are almost no or very few competitors in the market</li> <li>growth</li> <li>Products need and market has been proven to exist and consumers have accepted the product</li> <li>Wider base of consumers are quickly buying the product. Product sees a rapid growth in revenue month on month or year on year. Revenue growth is a good indicator of product being in the growth phase.</li> <li>Product starts to see new competition in the market with other players introducing similar products</li> <li>maturity</li> <li>product revenue peaks. The market is mature with lot of competitors. </li> <li>decline</li> <li>product revenue declines. Products can be phased out at this point, or relaunched with new features etc. Strategy may vary.</li> </ul>"},{"location":"while-working/product-mgmt/product-manager/#20","title":"20","text":"<p>Product development process or lifecycle stages</p> <ul> <li>conceive</li> <li>plan</li> <li>develop</li> <li>iterate</li> <li>launch</li> <li>steady</li> <li>maintain or kill</li> </ul> <p>there is no definitive guide on how to tell in which phase your product is going through right now. There are only few characteristic of each phase by which you may be able to judge. There phases may also differe from product to product and market to market. </p>"},{"location":"while-working/product-mgmt/product-manager/#25","title":"25","text":"<p>agile has two styles: scrum and kanban</p> <p>kanban is different from scrum </p> <ul> <li>In Kanban doesn't timebox the work (as in 2 week or 4 week sprints). Kanban doesn't have sprints. Hence it doesn't have sprint backlog etc. But it has product backlog.</li> <li>Kanban has not prescribed any meeting types. Like stand up meeting, sprint planning, retrospective etc.</li> <li>In Kanban, the team should decide how many items can be in a particular state. For example, no more than 4 items in <code>in-progress</code> state.</li> <li>Kanban is suited for the team working on items where estimates do not vary too much and hence the team keeps on moving items to completion one-after-another. For example, customer service team working on tickets.</li> </ul>"},{"location":"while-working/product-mgmt/product-manager/#30","title":"30","text":"<ul> <li>Sources of Ideas</li> <li>Employees (yourself, co-workers, management)</li> <li>Metrics (for example, pattern of UI usage)</li> <li>Users (user feedback via forums, emails, complaints etc)</li> <li>Clients (client feedback)</li> </ul> <p>The difference between user vs client: </p> <p>Client is someone who pays. The term users is a broader term which may refer to free users. For example, I am a user of gmail. But if I pay for google business suit, then I am google's client.</p> <p>When product is a B2B product, you might have client and users in the same organization. For example, if citibank buys a software, the decision to buy and the payment comes from a director level person, but then the software gets used by someone who actually reports to him/her. So from a feedback perspective, you may get feedback from a different perspective from the director about your product, while the person who is actually using the product may also give you a different feedback.</p>"},{"location":"while-working/product-mgmt/product-manager/#35","title":"35","text":"<p>compatitive market analysis: Question is that if the market that you are addressing is large enough to worth going into. This question comes when you are working on a feature or product that will put you in another market, or you are starting a fresh product.</p> <p>There are two approaches to market sizing:</p> <ul> <li>Top down</li> <li>bottom up</li> </ul>"},{"location":"while-working/product-mgmt/product-manager/#top-down","title":"Top down","text":"<p>Here you think about number of potential users first. Then target a market share that you can capture considering the current competition.</p> <p>This is an optimistic approach. Not preferred if you have an option to do a bottom up approach.</p> <p>For example: </p> <p>Great question. Let\u2019s take the same fitness app targeting urban millennials in the U.S. and apply a top-down market sizing approach instead.</p>"},{"location":"while-working/product-mgmt/product-manager/#top-down-market-sizing-for-the-fitness-app","title":"Top-Down Market Sizing for the Fitness App","text":""},{"location":"while-working/product-mgmt/product-manager/#step-1-start-with-the-broad-market","title":"Step 1: Start with the Broad Market","text":"<p>Start with the total market size of the fitness and wellness industry in the U.S.</p> <ul> <li>Let's say the U.S. fitness and wellness market is \\$35 billion/year (based on industry reports).</li> </ul>"},{"location":"while-working/product-mgmt/product-manager/#step-2-narrow-down-to-your-product-category","title":"Step 2: Narrow Down to Your Product Category","text":"<p>You're in the digital fitness app sub-segment.</p> <ul> <li>Digital fitness is about 10% of the total fitness market \u2192   \\$35B \u00d7 10% = \\$3.5 billion</li> </ul>"},{"location":"while-working/product-mgmt/product-manager/#step-3-narrow-further-by-demographic-geography","title":"Step 3: Narrow Further by Demographic &amp; Geography","text":"<p>You're targeting urban millennials.</p> <ul> <li>Millennials make up \\~22% of the U.S. population.</li> <li>Urban population is \\~83% of the U.S. population.</li> <li>So, millennial urban share \u2248 22% \u00d7 83% \u2248 18% of total U.S. population.</li> </ul> <p>Apply that 18% to the digital fitness market:</p> <ul> <li>\\$3.5B \u00d7 18% = \\$630 million</li> </ul>"},{"location":"while-working/product-mgmt/product-manager/#step-4-refine-for-competitive-position-market-share","title":"Step 4: Refine for Competitive Position / Market Share","text":"<p>You might conservatively aim to capture 5% of that segment over time.</p> <ul> <li>\\$630M \u00d7 5% = \\$31.5 million potential revenue for your app.</li> </ul>"},{"location":"while-working/product-mgmt/product-manager/#top-down-estimate-of-addressable-market-630-million","title":"\u2705 Top-Down Estimate of Addressable Market: \\~\\$630 million","text":""},{"location":"while-working/product-mgmt/product-manager/#your-target-share-som-315-million","title":"\u2705 Your Target Share (SOM): \\~\\$31.5 million","text":""},{"location":"while-working/product-mgmt/product-manager/#bottom-up","title":"Bottom-up:","text":"<p>Here you look at the current users base of your competition and see how much market share you can capture.</p> <p>This approach is much more realistic because it looks at size of real users. Sizing using this approach takes more time. But it gives a conservative and more realistic number which is better than optimistic sizing using top down.</p> <p>example of bottom up sizing:</p> <p>Sure! Here's a different example of the bottom-up market sizing approach, this time for a subscription-based fitness app targeting urban millennials in the U.S.</p>"},{"location":"while-working/product-mgmt/product-manager/#scenario","title":"Scenario:","text":"<p>You\u2019re launching a fitness app that costs \\$15 per month, and you want to estimate the market size using a bottom-up approach.</p>"},{"location":"while-working/product-mgmt/product-manager/#step-by-step-bottom-up-example","title":"Step-by-Step Bottom-Up Example:","text":""},{"location":"while-working/product-mgmt/product-manager/#1-identify-your-target-segment","title":"1. Identify Your Target Segment","text":"<ul> <li>Target: Urban millennials (aged 25\u201340) in the U.S.</li> <li>According to census data, there are about 72 million millennials in the U.S.</li> <li>Let\u2019s assume 60% live in urban areas \u2192 43.2 million people.</li> </ul>"},{"location":"while-working/product-mgmt/product-manager/#2-estimate-adoption-rate","title":"2. Estimate Adoption Rate","text":"<ul> <li>Not everyone will subscribe to a fitness app.</li> <li>Assume a realistic penetration rate of 5% based on competition and behavior trends \u2192   5% of 43.2 million = 2.16 million potential users</li> </ul>"},{"location":"while-working/product-mgmt/product-manager/#3-calculate-annual-revenue-per-user-arpu","title":"3. Calculate Annual Revenue Per User (ARPU)","text":"<ul> <li>Monthly subscription = \\$15</li> <li>Annual revenue per user = \\$15 \u00d7 12 = \\$180</li> </ul>"},{"location":"while-working/product-mgmt/product-manager/#4-multiply-to-get-market-size","title":"4. Multiply to Get Market Size","text":"<ul> <li>Market size = 2.16 million users \u00d7 \\$180 = \\$388.8 million</li> </ul>"},{"location":"while-working/product-mgmt/product-manager/#bottom-up-market-size-estimate-389-million","title":"\u2705 Bottom-Up Market Size Estimate: \\~\\$389 million","text":"<p>This estimate is grounded in actual user numbers, realistic assumptions about behavior, and product pricing, making it a strong case for early-stage planning or investor conversations.</p>"},{"location":"while-working/product-mgmt/product-manager/#comparing-approaches","title":"\ud83d\udd01 Comparing Approaches:","text":"Method Estimate Strength Risk Bottom-Up \\~\\$389 million Grounded in user behavior Slower, needs more data Top-Down \\~\\$630 million Fast, uses existing data Depends on accurate filters <p>Would you like a simple table or visual to compare these two methods side by side?</p>"},{"location":"while-working/product-mgmt/product-manager/#other-approaches-from-chatgpt","title":"Other approaches From chatgpt","text":"<p>Product market sizing is the process of estimating the potential value or volume of a market for a particular product or service. There are several common methods to approach market sizing, broadly categorized into top-down, bottom-up, and value-theory-based approaches. Here's a breakdown:</p>"},{"location":"while-working/product-mgmt/product-manager/#3-value-theory-or-economic-value-based-sizing","title":"3. Value-Theory (or Economic-Value) Based Sizing","text":"<p>This approach estimates how much value your product creates and how much customers might be willing to pay based on that.</p> <ul> <li> <p>Steps:</p> </li> <li> <p>Determine the value your product adds (time saved, revenue increased, cost saved).</p> </li> <li>Estimate how much of that value you can capture through pricing.</li> <li> <p>Multiply by the number of target customers.</p> </li> <li> <p>Example:   If your tool saves a business \\$10,000/year and you're pricing at \\$2,000/year, and there are 5,000 businesses, market size = \\$10M.</p> </li> <li> <p>Pros: Useful for new or disruptive products.</p> </li> <li> <p>Cons: Assumes value perception aligns with pricing.</p> </li> </ul>"},{"location":"while-working/product-mgmt/product-manager/#4-comparables-approach","title":"4. Comparables Approach","text":"<p>Use similar businesses or products to estimate your own market size.</p> <ul> <li> <p>Steps:</p> </li> <li> <p>Identify analog companies or markets.</p> </li> <li> <p>Adjust for differences in geography, market maturity, price points.</p> </li> <li> <p>Example:   If a competitor has \\$100M revenue in a market you\u2019re entering and you're targeting 10% of their segment, your opportunity might be \\$10M.</p> </li> <li> <p>Pros: Quick and practical.</p> </li> <li> <p>Cons: May overlook uniqueness of your product or market.</p> </li> </ul>"},{"location":"while-working/product-mgmt/product-manager/#5-customer-surveys-and-primary-research","title":"5. Customer Surveys and Primary Research","text":"<p>Gather data directly from potential customers to estimate market size.</p> <ul> <li> <p>Steps:</p> </li> <li> <p>Survey or interview potential buyers about willingness to pay and usage.</p> </li> <li>Extrapolate to broader population.</li> <li>Pros: Customized, direct feedback.</li> <li>Cons: Costly, can have sample bias.</li> </ul>"},{"location":"while-working/product-mgmt/product-manager/#useful-terms-to-talk-about-market-sizing","title":"useful terms to talk about market sizing","text":"<p>SOM stands for Serviceable Obtainable Market \u2014 it's the portion of the market you can realistically capture, considering your current resources, competition, and go-to-market strategy.</p>"},{"location":"while-working/product-mgmt/product-manager/#heres-a-breakdown-of-the-related-terms","title":"Here's a breakdown of the related terms:","text":"Term Meaning Example (Fitness App) TAM (Total Addressable Market) The total demand for your product/service, assuming no constraints. Entire U.S. fitness and wellness market (\\~\\$35B) SAM (Serviceable Available Market) The part of the TAM targeted by your product's features and geography. U.S. digital fitness app segment (\\~\\$3.5B) SOM (Serviceable Obtainable Market) The part of the SAM that you can realistically capture in the near future. Urban millennials who might actually use your app (\\~\\$30M\u2013\\$50M, depending on assumptions) <p>Think of it like this:</p> <ul> <li>TAM = \u201cIf everyone in the world who could use this, did.\u201d</li> <li>SAM = \u201cIf everyone in your target market did.\u201d</li> <li>SOM = \u201cWhat you could actually get.\u201d</li> </ul> <p>Market analysis/research sources: - Google industry reports - Look at websites that provide traffic data. Check what kind of traffic or app downloads your competitors are getting.</p>"},{"location":"while-working/product-mgmt/product-manager/#37","title":"37","text":""},{"location":"while-working/product-mgmt/product-manager/#find-the-competitors","title":"Find the competitors","text":"<ol> <li>Known competitors:</li> <li>based on your experience with the product and domain, you already know who your primary competitors are. Every product manager should know this. It is essential.</li> <li>feature competitors: not all competitors have the same set of features. So, if your focus is on a feature of your product, for example, cedarling (a embedable, light weight PDP), then you need to know which of your competitors have features that solve the same problem.</li> <li>Unknown competitors:</li> <li>When you are building a new feature or a new product altogether. Also, for an existing product the competetors keep on changing (companies shutdown, new companies come up, existing competitors may change the direction) etc, you should periodically survey the current competition state.</li> </ol>"},{"location":"while-working/product-mgmt/product-manager/#looking-for-unknown-competitors","title":"Looking for unknown competitors","text":"<ul> <li>google search for <code>&lt;your product name&gt; versus</code>. And google will suggest most likely searches. with possible names. This is because people have searched for it. But this will only be helpful if your product is well known.</li> <li>You can do a chatgpt search</li> <li>search for what your product is e.g <code>embedable PDP</code></li> <li>search reddit, twitter etc for what user issue your product solves. You may find users that are complaining about the same thing and other suggesting them products that solve that problem.</li> <li>check sites like below and look for alternatives of a product or product category.</li> <li>https://www.gartner.com/peer-insights/home</li> <li>https://www.g2.com</li> <li> <p>https://www.capterra.com/</p> </li> <li></li> </ul>"},{"location":"while-working/product-mgmt/product-manager/#types-of-competitors","title":"types of competitors","text":"<ul> <li>Direct</li> <li>Products that solve the same problem as your product</li> <li>They solve the same problem in the same way</li> <li>They solve the same problem in the same way for the same set of market or geography</li> <li>Example: Red Hat Single Sign-On (RH-SSO) is Gluu's direct competitor. RH-SSO is built on top of Keycloak which is OSS, just like Flex is built on top of Janssen Server.</li> <li>Action item for PM: Keep a close eye on roadmap of such products and feature releases of such products and company news. What features are being developed, released, how are they marketing their product, where are they marketing their product, their market share movements, leadership changes, acquisitions etc.</li> <li>Indirect</li> <li>Products that solve same problem but in a different way and may be for a different user market. Their market could be superset of yours or a subset or may be having a little bit of overlap.</li> <li>Example:</li> <li>Action item for PM: You shouldn't be losing too many customers to these competitors.</li> <li>Potential</li> <li>companies that have a product that solves a different problem but it is in the same domain as yours. They serve the same set of market (customer group). They could expand their portfolio and add a new product with competing features as your product and then they can potentially become a direct competetor.</li> <li>Example: <code>https://www.cerbos.dev/</code> is a company that provides authorization software. But they could potentially add authentication features and become a direct competetors.</li> <li>Action item for PM: Add features that these competitors can't add easily in your core domain area.</li> <li>Substitute</li> <li>solves the same problem but doesn't deliver to the same people in the same way and it is far from what you are offering to the market.</li> <li>For instance, gluu offers IAM software which is backed by a core team and an enterprise support plan. Substitute could be an opensource IAM repository in the GitHub which doesn't have any sponsor or a company backing it with an enterprise plan. Yes, it may provide the same function and large enterprises can use it as their IAM server but it is not the same as Gluu.</li> <li>Action item for PM: Be better then these in solving the problem. Meaning feature parity perspective.</li> </ul>"},{"location":"while-working/product-mgmt/product-manager/#what-you-should-know-about-your-competitors","title":"what you should know about your competitors","text":"<ul> <li> <p>Need to closely monitor and watch your competetors. On following criterias.</p> </li> <li> <p>product core (product team):</p> <ul> <li>better team can out pace you in feature delivery, out engineer you by building better and stable product. If you have a team with much lower quality than your competitor, then features and markets won't matter. Features that depend on high quality engineering are difficult to imitate by your competetors.</li> </ul> </li> <li>user base size:<ul> <li>Companies with large user base(e.g microsoft) have certain advantages</li> <li>New product and feature launches are easier get initial set of users. As existing customers would easily adopt those new features.</li> <li>publicity: new products and new features from a company with large user base get more publicity quickly. Content creators and early adoptors start             immediately talking about those things.</li> <li>. Easier to make deals with other companies and have collaboration and integrations:</li> <li>For a product with large userbase, other companies will readily agree to create integrations and collaborations</li> </ul> </li> <li>Design<ul> <li>Be aware of competetor's ability to design an intuitive user experience.</li> </ul> </li> <li>Brand<ul> <li>A company's brand can give them advantage in certain markets while it will be of disadvantage in other markets. Like for example, Sony as a brand can easily make and sell kitchen appliences if they wanted to. But Mercedese which is known only for cars will find it difficult to get into kitchen appliences market. Same thing with Sony, it'll hard to get into making cars.</li> <li>At the same time, apple could move easily from making Phone to making watches. This is because their brand stands for inituitively designed and high quality consumer goods.</li> </ul> </li> <li>Speed<ul> <li>Understand the speed at which your competetor can move to build a new feature in the product. Generally, larget companies are slower that smaller companies. In case of opensource products, you can check your competetor's GH account and see how long an new feature request takes to compete.</li> </ul> </li> </ul>"},{"location":"while-working/product-mgmt/product-manager/#42","title":"42","text":"<p>feature tables:</p> <ul> <li>table where you compare your product with your competitor's. Mostly the direct competitors.</li> <li>It can also cover the factors(price, reliability etc) and not just features.</li> </ul> feature table compete 1 compete 2 compete 3 You feature 1 compete 1 compete 2 compete 3 You"},{"location":"while-working/product-mgmt/product-manager/#general-notes","title":"General notes","text":""},{"location":"while-working/product-mgmt/product-manager/#feature-prioritization-roadmapping","title":"Feature prioritization (roadmapping)","text":"<ul> <li>Prioritization, roadmap, feature analysis</li> <li>Feature analysis methods compared : RICE/ICE/MoSCoW : https://www.linkedin.com/posts/sachin-sharma-product-career-coach_projects-productmanagement-careercoach-activity-7322839576505372672-InQ_?utm_source=share&amp;utm_medium=member_desktop&amp;rcm=ACoAAADcnXwB2SGQ3YB0J31qjo1zUTB5LqDuqag</li> <li>Analysis methods list: https://www.productplan.com/learn/strategies-prioritize-product-features/</li> <li>simple 2x2 technique of value vs effort analysis: https://mtp2017.wpenginepowered.com/enter-matrix-lean-prioritisation/</li> <li>One critical aspect in any prioritization/roadmap effort is to estimate business value of the feature. A feature's value can be derived by considering two factors:</li> <li>Value offered to users: The value an initiative will deliver to your user personas or your market more broadly. This type of value would include, for example, the degree to which your initiative will reduce users\u2019 pain or improve their efficiency, and how urgently your market seems to be demanding it.</li> <li>Value offered to the business: An estimation of the initiative\u2019s direct business value to your company. This value might be reflected in terms of acquiring new customers, retaining existing customers, the ability to upsell customers, and the anticipated new revenue the initiative will bring.</li> </ul>"},{"location":"while-working/product-mgmt/product-manager/#product-design-ui-ux","title":"Product design, UI, UX","text":"<ul> <li>UX: UX is the experience that a person gets while using the product. Each person would feel(expereince) the same product differently based on what they value. A sports car's experience would be fantastic to a person who loves thrills and speed. While Same sports car would be experienced differently by someone who has been troumatized by a recent car accident. So, it is not the design of the car that is at fault. It is knowing what is the value that user is seeking from the product.</li> <li>How user experiences the product is also dependent on under what circumstances that product is being used. High pressure, leisure etc.</li> <li> <p>Use 5-why technique to get some idea of what customer values about the product</p> </li> <li> <p>12 principles : https://hellopm.co/12-key-product-design-principles-every-product-manager-should-master/</p> </li> <li>figma course: https://www.youtube.com/watch?v=urVHC-ReSV0</li> </ul>"},{"location":"while-working/product-mgmt/product-manager/#product-analytics","title":"product analytics","text":"<p>Ref: https://www.youtube.com/watch?v=N-Igkw7__z0</p> <p>Product analytics: </p> <p>product lifecycle: discovery, delivery, distribution</p> <p>Metrics: Any thing that you can measure about your product. KPIs are metrics that are important.</p> <p>Few well known metrics:</p> <p>Revenue, MRR : monthly recurring revenue (imp for SaaS) ARPU: average revenue per user DAU: Daily active users   - DAU's definition can be specific to each company. For example, Facebook may consider a user as an active user if the user has spent 5 minutes on the facebook. While Netflix may decide to call a user active only if they have watched content for 20 minutes. Flipkart may only call a user active if they have put something in the cart. </p> <p>Metric tree: </p> <p>For SaaS companies like Zoho:</p> <pre><code>Revenue = MRR x 12\n           |\n           |\n           Active users x ARPU\n                |          \n          New users        \n          +                \n          Old users(Active users last month - churn rate(ie users who left your system)\n</code></pre>"},{"location":"while-working/product-mgmt/product-manager/#product-roadmapping-microcertification","title":"product roadmapping microcertification","text":"<p>https://productschool.teachable.com/p/productroadmapping</p> <ul> <li>What is a product roadmap?   Product roadmap is a communication and collaboration tool. With primarily 3 consumers of it. The product team, business and customers. Roadmap is used by these three stackholders to understand different things.</li> <li>Product team: what needs to be build and when (priority)</li> <li>Business: How efforts will align to gain business values</li> <li>customer: how product will deliver value to customers in terms of useful features and fixes</li> <li>Roadmap as part of the culture</li> <li>Roadmap should be a central piece where all 3 stakeholders of the product collaborate and come to know the real picture. You need to build a culture in the company that refer to product roadmap to collaborate on delivering features, priorities, values. Hence, It is important that product roadmap is dependable. To make it dependeble, refer to avoid the difficulties listed below.</li> <li> <p>Roadmap needs these as input: product vision, and product objectives to realize that vision. These two will guide product roadmap to correctly identify and prioritize features. Product vision provides the direction while the objectives tell you how to move in that direction. </p> </li> <li> <p>Difficulties with a product roadmap</p> </li> <li>People find it hard to keep the product roadmap updated. If not updated frequently, slowly it loses it's importance and it is then updated only when it needs to be presented to someone. Just for namesake.</li> <li>Product roadmap should be balanced with details. Not too detailed and not too high level. If it is too high level then it loses the value for product teams. At the same time, if it is too detailed, then the business stackholders and customers will get drowned in the details. </li> <li>Organisations may lack futuristic long term view. Or may lack clearly definded product vision, strategy and business values to achieve. These things are input into creating a meaningful roadmap. Without these a roadmap will not be able to priorise or de-prioritise competing features. </li> <li>Organisations may have other driving factors like regulatory, budgetory etc which make it hard to create a long term plan and hence creating roadmap for a very short term is not so useful.</li> <li> <p>If business has frequently changing priorities then product roadmap would be changing too often. That also makes it unreliable. </p> </li> <li> <p>What product roadmaps are made up of?</p> </li> <li>Product OKRs</li> </ul>"},{"location":"while-working/product-mgmt/product-manager/#okrs-objectives-and-key-results","title":"OKRs (Objectives and Key Results)","text":"<p>Template example:</p> <pre><code>Objective: Increase new user adoption\n\n\ud83d\udcd6 Objective Description\n&lt;explain why this is an objective, clarify terms in the title if needed. Give high-level HOW which talks about approach or areas of product that would be instrumental in achieving this objective.&gt;\n\nTo increase the user base we need to have continuous addition of new users on the platform. \nThis involves \n\n- creating features/integrations/tools that open new channels for reaching out to potential users. For example, ability refer a friend\n- creating features/integrations/tools that enrich existing channels of getting in touch with potential users. For example, by improving on-boarding experience\n- creating features/integrations/tools that provide potential users with immediate value propositions so that they are motivated to join the platform. For example, providing them access to premium features for first 10 days.\n\n\n\ud83c\udfaf Measuring Success\n&lt;To write this, read the objective title again and then think what are the matrics&gt;\nIncludes the main success metric(s) for the Objective\nExample \u2013 Key Results:\nProduct fully localized for languages X, Y, and Z\nAt least 20 new customers in each region by end of Q3\nWithin 90 days, the Monthly Active Users in all new regions is 30% or higher\n\n\n\n\ud83d\udd17 Related Objectives\nExplain if this objective is dependent on any other objective and why.\n\n\n\ud83d\udce3 Segment\n&lt;list of user segmanets or your product varients (SKUs) this objective is applicable to&gt;\nNew Users: New users of the Zlack platform between day 1-90.\n\n\ud83d\udcda Other considerations\nTimeframe \u2013 Provide a timeline for this objective\nTeam \u2013 Assign a team that will own this objective\nFeatures \u2013 Link relevant features to this objective\nIllustrative design \u2013 Consider adding a screenshot or embed a design link to portray how the potential feature/solution could look like\n</code></pre> <p>Example 2:</p> <pre><code>Objective: Improve User Productivity and Efficiency\n\n\ud83d\udcd6 Objective Description\n&lt;explain why this is an objective, clarify terms in the title if needed. Give high-level HOW which talks about approach or areas of product that would be instrumental in achieving this objective.&gt;\n\nTo improve retention rates we need to increase user's productivity and efficiency. \nUser productivity for our platform is defined [here]().\nUser efficiency for our platform is defined [here]().\nThis should include providing more efficient user journeys that require lesser clicks to integration of AI tools to assist users. \n\n\n\ud83c\udfaf Measuring Success\n&lt;To write this, read the objective title again and then think what are the matrics&gt;\n\n- 20% reduction in time it takes to complete the payment process\n- 20% reduction in time it takes to complete the checkout process\n- Make search results more accurate so that customers can quickly find what they need\n\n\n\n\n\ud83d\udd17 Related Objectives\nExplain if this objective is dependent on any other objective and why.\n\n\n\ud83d\udce3 Segment\n&lt;list of user segmanets or your product varients (SKUs) this objective is applicable to&gt;\nExisting users who buy more than 3 products every month from our portal\n\n\ud83d\udcda Other considerations\nTimeframe \u2013 Provide a timeline for this objective\nTeam \u2013 Assign a team that will own this objective\nFeatures \u2013 Link relevant features to this objective\nIllustrative design \u2013 Consider adding a screenshot or embed a design link to portray how the potential feature/solution could look like\n</code></pre>"},{"location":"while-working/product-mgmt/product-manager/#prioritization-and-planning","title":"prioritization and planning","text":"<p>Prioritization process of grooming feature with following details: - Voice of customer (notes, positive/negative, align notes with features and finally deriving <code>customer importance score</code>) - Voice of product team (capture RICE(reach, impact, confidence, effort) for each feature and derive a rice score from that) - voice of business   - Business value on the prioritization board is represented by adding <code>segments</code> that we want to grow in.   - A segment field will show a score that is derived using the <code>segment</code> - <code>company</code> - <code>feature feedback</code> connection   - How segment - company are connected? There are two ways in Productboard to do so. One is automatic where rules are manually defined (say a company with greater revenue than 10000 should be aligned to <code>enterprise</code> segment) while creating a segment. Company and revenue data comes via Salesforce integration.   - How feature feedback - company are connectd? This is done via notes in the <code>insights</code> section. Insight section essentially pulls all the data from email, slack and other customer communication channels. Then you can manually read the notes and link them to features. Also, each note can be annotated with importance score and positive/negative/neutral sentiment. Using all this data, you know what feature is important for a customer.</p> <ul> <li>Prioritization board should be different from planning board</li> <li>You prepare prioritization board first to groom the features. Then create a copy of that board and call it quaterly planning board. And remove some of the columns which are not needed anymore (like individual columns for RICE. But only keep the final RICE score column). Add new columns to denote Quaterly(or any other) releases.</li> </ul>"},{"location":"while-working/product-mgmt/product-manager/#using-roadmaps-for-communication","title":"Using Roadmaps for communication","text":"<ul> <li>After the prioritization and planning has been done, it is time to create different views of the same roadmap. Each view is tailored for audience below.</li> <li>Product team<ul> <li>Product roadmap for product teams should be detailed one. Because they are going to base their development priorities on this roadmap.</li> <li>Info to include: Detailed effort estimates of features, timelines, customer impact, confidence levels etc.</li> </ul> </li> <li>Business leadership team<ul> <li>From roadmap they want to understand if the efforts are being spent towards the strategic direction of the product or company.</li> <li>Info to include: target segments for features, related OKRs (objectives), themes, relation with customer feedback etc. Shouldn't be too detailed.</li> </ul> </li> <li>External audience<ul> <li>External audience groups consists of customers, investors, partners</li> <li>info to include: forward looking information like feature delivery quarters, when features will be available in beta, themes that you are going to deliver your features on.</li> <li>Here it is not important to show exact delivery timelines. That detail will confuse this audience. Similarly, things like effort estimates should not be in this view of the roadmap.</li> </ul> </li> <li>Customer facing teams<ul> <li>These teams are sales, support, customer success, Go-to-market etc. They will look at the roadmap to get answers to questions like <code>what can I tell to the customer about availability of this feature</code>, <code>which customer feedbacks are being targetted by features</code>, <code>Are we working on features to improve maintainebility and supportability of the product?</code> etc.</li> <li>Information to inlcude: High level feature delivery timelines, team's confidence levels for deliveries that are far in future, feedback to feature mapping, major themes are we are targetting (like UI overhaul etc that impact customers).</li> </ul> </li> <li>Development partners<ul> <li>These are the external companies that are developing 3rd party integrations with your product. Where they are running development cycles in tendum with yours.</li> <li>They need details with availability of the feature in alpha, beta or GA. Themes that we are targetting. etc</li> </ul> </li> </ul>"},{"location":"while-working/product-mgmt/product-manager/#types-or-formats-of-roadmaps","title":"types (or formats) of roadmaps","text":"<p>Each Roadmap format serves a unique purpose and is suited to different communication needs. The choice of Roadmap depends on the nature of your project, the audience you're communicating with, and the level of detail you wish to provide. Properly utilized, these Roadmap formats can significantly enhance your product planning and communication processes.</p> <ul> <li>Release plans (Granularity: feature(i.e epic) level)</li> <li>shows features(epics) planned per release</li> <li>doesn't show exact release dates to reduce the clutter and to accomodate the fact that release dates may change</li> <li>Sprint plans (Granularity: user story level)</li> <li>used to run sprints</li> <li>more granular where dates are tracked at the userstory level </li> <li>primarily used by development org</li> <li>now-next-later (Granularity: feature(i.e epic) level)</li> <li>used to show what features are being worked on right now, what comes after that and what is in the <code>later</code> bucket.</li> <li>This allows to show how features are prioritized without showing releases or timelines</li> <li>Kanban/status based roadmaps (Granularity: feature(i.e epic) level)</li> <li>This is more of an detailed view of <code>now</code> part of the <code>now-next-later</code> roadmap. </li> <li>unlike sprint plan, This shows features in various stage of development and doesn't go to the userstory level</li> <li>Timeline based roadmaps</li> <li>These are detailed version of <code>now-next-later</code> roadmaps where features that are being worked and when they are going to be delivered with dates</li> <li>If you choose to show dates for features coming up <code>later</code> (i.e far future), it is important to make sure to communicate the fact that those may change. Otherwise, external partners, development partners, customers may start banking on those dates.</li> <li>Timeline-based Roadmaps can be further categorized based on their focus. These are:<ul> <li>Features Timeline: Focusing on when features will be developed and launched, this Roadmap helps internal teams plan and communicate upcoming releases and allows customers to anticipate what's next. Due to its granular nature, it's best used for high-certainty planning.</li> <li>Objectives Timeline: Focusing on achieving specific objectives over time, this Roadmap emphasizes the \"why\" over the \"what.\" Depending on communication needs, you can include aligned features or just the objectives.</li> <li>Release Timeline: Similar to Release Plans, this Roadmap visually depicts when different product versions or updates are planned for release, giving stakeholders an overview of the product's future.</li> </ul> </li> </ul>"},{"location":"while-working/product-mgmt/product-manager/#which-format-to-use-for-which-audience","title":"which format to use for which audience","text":"<p>When it comes to choosing Roadmap types, it's essential to consider the needs of different audience groups within your organization:</p> <p>Note: release roadmap and release timeline roadmaps are different. The later one has timelines details available. </p> <ol> <li> <p>Leadership: This group is typically interested in a high-level view of the product team's work, aligned with the company or product objectives. Two effective Roadmap types for this group are the Release Timeline and the Objectives Timeline. These formats can provide a strategic perspective, outlining how the product initiatives contribute to overarching objectives, without delving into granular details. Release Timeline, Objectives Timeline</p> </li> <li> <p>Customer-facing Teams: These teams, including sales, customer success, marketing, and support, need more detail to communicate effectively with prospects or customers. The Release Plan, supplemented with a Kanban or Status-based Roadmap, can be highly beneficial for these teams. These Roadmaps provide detailed insights into upcoming features and functionalities, enabling these teams to prepare internal and external materials and confidently answer customer queries about upcoming product enhancements. Release Plan, Release Timeline, Kanban/Status-based</p> </li> <li> <p>External Audiences: External customers generally appreciate a high-level product vision and near-term expected functionalities. Roadmap types similar to those used by Customer-facing teams can be suitable here. However, it's often best to provide summarized information and avoid committing to specific release timeframes to maintain trust and minimize potential frustrations. Examples of public opensource project roadmaps:</p> </li> <li> <p>GitHub roadmap: It is most detailed and well managed roadmap. Along with committed timelines and maximum details such as themes, product lines mentioned as labels. Even the feature descriptions are well writen.  See this microsoft AKS roadmap where they have not marked any features to a specific release. It is kanban/status-based board without timelines. It is also important to note that this is an open source product so it is even harder to commit timelines because contribution is done by contributors. Another example is VScode roadmap. Again a major open source project. It manages roadmap in a very different format. But again, doesn't give any timelines for features on a public roadmap to external audience. But surely, there would be more roadmaps managed internally for stackholders, paid customers etc. Release Plan, Kanban/Status-based</p> </li> <li> <p>Product Teams: These teams require granular information about what's being built, how it's being built, the required timeframe, and dependencies between functions and other teams. Several Roadmap types can meet these needs, including Now-Next-Later, Release Plans, Sprint Plans, and Kanban/Status-based formats. These Roadmaps aid in planning and execution, providing a clear direction for the product development process. Now-Next-Later, Release Plans, Sprint Plans, Kanban/Status-based</p> </li> <li> <p>Development Partners: For partners who need to align their development efforts with yours, a Release Timeline Roadmap is the most suitable. This Roadmap shows when different product versions or updates are planned, enabling partners to coordinate their efforts accordingly. Release Timeline Roadmap</p> </li> </ol> <p>Remember, while these are common examples, every audience and organization has unique needs. The key is to identify your different audiences and select the Roadmap type that best represents the information they need. This will ensure effective communication and alignment across all stakeholders, contributing to successful product development and delivery.</p>"},{"location":"while-working/product-mgmt/product-manager/#product-led-growth","title":"Product led growth","text":"<p>A good summary from ChatGPT --------------------------------------------------------------------</p> <p>Product-Led Growth (PLG) is a go-to-market strategy where the product itself drives customer acquisition, expansion, conversion, and retention. In PLG, the product is the main vehicle for delivering value and generating growth, rather than relying primarily on sales or marketing efforts.</p>"},{"location":"while-working/product-mgmt/product-manager/#key-characteristics-of-plg","title":"Key Characteristics of PLG:","text":"<ol> <li>Self-serve onboarding \u2013 Users can sign up, try, and start getting value from the product on their own.</li> <li>Freemium or free trial model \u2013 Users can experience the product without a paywall.</li> <li>Product virality \u2013 The product has built-in features that encourage users to share, invite others, or collaborate.</li> <li>Usage-based expansion \u2013 As customers use more of the product (users, data, features), they move into higher-tier plans.</li> <li>User-centric design \u2013 The product is intuitive and valuable from day one without needing heavy support or training.</li> </ol>"},{"location":"while-working/product-mgmt/product-manager/#examples-of-plg-companies","title":"Examples of PLG Companies:","text":"<ul> <li>Slack \u2013 Free teams grow into paid workspaces.</li> <li>Zoom \u2013 Free meetings lead to upgrades for longer calls or more participants.</li> <li>Notion \u2013 Individuals start using it, then teams adopt it.</li> </ul>"},{"location":"while-working/product-mgmt/product-manager/#plg-funnel-typical-flow","title":"PLG Funnel (Typical Flow):","text":"<ol> <li>Acquisition \u2013 User finds and signs up for the product.</li> <li>Activation \u2013 User hits a key milestone (e.g., creates first note, hosts a meeting).</li> <li>Retention \u2013 User continues to return and use the product.</li> <li>Expansion \u2013 User invites others or moves to a paid plan.</li> <li>Referral \u2013 User shares product with others.</li> </ol>"},{"location":"while-working/product-mgmt/product-manager/#advantages","title":"Advantages:","text":"<ul> <li>Lower customer acquisition costs (CAC)</li> <li>Faster and scalable growth</li> <li>Better product-market fit visibility (based on usage data)</li> <li>Reduced friction in the buying process</li> </ul>"},{"location":"while-working/product-mgmt/product-manager/#when-plg-works-best","title":"When PLG Works Best:","text":"<ul> <li>The product can be easily adopted by end users.</li> <li>The value of the product is quickly apparent.</li> <li>There\u2019s low dependency on integration or setup.</li> </ul> <p>Let me know if you\u2019d like a comparison between PLG and Sales-Led or Marketing-Led Growth models.</p>"},{"location":"while-working/product-mgmt/product-manager/#product-prioritization-microcertification","title":"product prioritization microcertification","text":"<p>Prioritization is about focusing your team\u2019s energy on the initiatives that will have the greatest impact.</p> <p>Prioritization helps you stay confident about delivering value and not get swayed by the loudest stackholder or latest market trend.</p>"},{"location":"while-working/product-mgmt/product-manager/#ruthless-prioritization","title":"Ruthless prioritization","text":"<p>One concept you\u2019ll often encounter in product management is ruthless prioritization. This means saying \u201cno\u201d to certain ideas (even good ones!) to protect your product\u2019s focus and ensure the most valuable work gets done first.</p> <p>As Sheryl Sandberg, former Chief Operating Officer at Meta, explains, ruthless prioritization means making deliberate, sometimes tough choices about what goes on the product roadmap\u2014and just as importantly, what doesn\u2019t. It\u2019s about focusing on the initiatives that truly matter rather than spreading your resources across everything that \u201ccould\u201d be done.</p>"},{"location":"while-working/product-mgmt/product-manager/#why-its-important-to-say-no","title":"Why It's Important to Say \"No\"","text":"<ul> <li>Resource Realities</li> </ul> <p>As a Product Manager, you're constantly working within constraints\u2014limited time, limited budget, and a finite team's bandwidth. Saying \u201cyes\u201d to everything stretches those resources too thin. The result? Delayed timelines, rushed features, or work that doesn\u2019t meet the bar. Prioritization is about protecting focus and ensuring that what does move forward gets the attention it needs to be high-quality and truly impactful.</p> <ul> <li>Value First</li> </ul> <p>Not all requests are equal. Some features might sound exciting or come from influential stakeholders, but if they don\u2019t meaningfully move the needle for your users or your business, they\u2019re not worth the investment. Saying \u201cno\u201d to lower-impact ideas allows you to say \u201cyes\u201d to the ones that matter most. It\u2019s all about being intentional, not rigid.</p>"},{"location":"while-working/product-mgmt/product-manager/#saying-no-doesnt-mean-youre-dismissive","title":"Saying \"No\" Doesn't Mean You're Dismissive","text":"<ul> <li>Clarity Over Rejection</li> </ul> <p>Declining a request doesn\u2019t mean disregarding the person who suggested it. In fact, the way you say \u2018no\u2019 may actually strengthen your relationships. When you can explain your reasoning, whether it\u2019s tied to user research, alignment with company goals, or current technical constraints, you show that your decisions are thoughtful, not arbitrary. That\u2019s the kind of clarity that builds trust for future projects.</p> <ul> <li>\"No\" Doesn't Mean \"Never\"</li> </ul> <p>A lower-priority request today might rise in importance tomorrow. New data, evolving customer needs, or strategic shifts can quickly change what\u2019s worth building. Be sure to document these decisions and remain open to re-evaluation. This will help you stay agile without losing sight of what matters most right now.</p> <p>In 1997, when steve jobs came back to Apple, a loss making company at that time, He famously slashed the product lineup from around fifteen different models to just four primary categories: a consumer desktop, a consumer laptop, a professional desktop, and a professional laptop. This wasn't just a matter of reducing numbers to bring costs down; it was about making hard decisions and eliminating distractions so the company could regain its focus. Jobs' vision for Apple was clear: by focusing on a smaller set of products, the company could make a real impact, which would drive long-term success.</p> <p>While ruthless prioritization is essential, that doesn\u2019t mean the answer is always \u201cno.\u201d</p> <p>Great Product Managers also know when to say \u201cyes\u201d\u2014and here\u2019s a hint: it\u2019s not about pleasing everyone. Fundamentally, it\u2019s about recognizing when a feature aligns with your product\u2019s goals, users\u2019 needs, and the company\u2019s long-term vision.</p> <p>Signals when you should say <code>yes</code>:</p> <ul> <li>Significant Customer Impact</li> </ul> <p>If a key customer, especially one that contributes meaningfully to your revenue, requests a feature that would improve their experience or prevent churn, it\u2019s worth considering. Losing that customer could have ripple effects beyond just lost income, including internal stakeholder pressure or reputational risk.</p> <ul> <li>Common Customer Issue</li> </ul> <p>When multiple customers raise the same issue or ask for similar functionality, it often signals a broader need. But don\u2019t jump straight to \u201cyes.\u201d Validate the pattern, check if it aligns with your product strategy, and determine whether solving it will improve the experience for a meaningful portion of your user base.</p> <ul> <li>Opportunity for Market Expansion</li> </ul> <p>Some requests do more than just serve existing customers\u2014they unlock new use cases or attract new segments. If a feature has the potential to open the door to a new market or strengthen your competitive edge, it may carry long-term strategic value.</p> <ul> <li>Prerequisite for Future Development</li> </ul> <p>Sometimes, a request may not feel high-impact on its own, but it lays the groundwork for something bigger. Think of it as an enabler, a building block that allows your team to deliver more valuable functionality down the line.</p> <ul> <li>Aligned with Company Capabilities</li> </ul> <p>Not every good idea is right for your team to execute. Before saying \u201cyes,\u201d make sure the request is feasible within your current capabilities, whether that\u2019s technical expertise, budget, timeline, or business model. The best feature ideas are the ones you can execute well and sustainably.</p> <p>So\u2014what is prioritization really all about?</p> <p>It\u2019s about making intentional choices in a world of competing demands. Every decision to prioritize one feature over another involves trade-offs: speed vs. impact, user needs vs. business goals, and short-term wins vs. long-term vision.</p>"},{"location":"while-working/product-mgmt/product-manager/#prioritization-frameworks","title":"Prioritization frameworks","text":""},{"location":"while-working/product-mgmt/product-manager/#moscow","title":"MoSCoW","text":"<p>MoSCoW is one of the simplest and most widely used prioritization frameworks in product management.  It helps you sort features, ideas, or requests into four clear categories:</p> <ul> <li> <p>Must-haves: Critical to success. The product can\u2019t function without these.</p> </li> <li> <p>Should-haves: Valuable, but not essential. Can be postponed without major risk.</p> </li> <li> <p>Could-haves: Nice-to-haves. Low-priority items that only make the cut if there\u2019s extra time.</p> </li> <li> <p>Won\u2019t-haves (for now): Explicitly deprioritized to keep focus on what matters most.</p> </li> </ul> <p>When to Use MoSCoW</p> <p>It\u2019s a great fit for prioritizing:</p> <p>\u270d\ufe0f Scoping a release or MVP: When you need to decide what\u2019s absolutely required to ship. \u270d\ufe0f Backlog grooming: When your list of ideas is long and time is short. \u270d\ufe0f Sprint or planning meetings: When you need agreement on what the team should work on next. \u270d\ufe0f Early-stage product work: When there\u2019s limited data, but decisions still need to be made.</p> <p>Part of what makes MoSCoW work well with cross-functional groups is its ability to structure the conversation without getting overly technical, especially when not everyone has a product background. MoSCoW is a qualitative approach and not quantitative as it depends on individual judgement and not data. </p> <p>How MoSCoW Works in Practice</p> <p>MoSCoW is often run as a collaborative exercise. You can do it in a shared document, with a whiteboard, or via virtual tools like Miro, Mural, FigJam, or Notion.</p> <p>Start by listing all current ideas, requests, or features. Then sort each into one of the four categories.</p> <p>Once that\u2019s done, ask:</p> <ol> <li>Are there too many \u201cMusts\u201d?</li> <li>Can we downgrade any \u201cShoulds\u201d?</li> <li>What are we confident saying \u201cNo\u201d to (for now)?</li> </ol> <p>Example</p> <p>You're scoping your MVP. \"Login\" and \"core task flow\" go in Must-have. A \u201cdark mode toggle\u201d goes in Could-have. And that complex calendar sync? It\u2019s a Won\u2019t-have...at least for this release.</p> Pros Cons Easy to understand and apply: No complex math or scoring is needed. Subjective by nature: Without clear criteria, what\u2019s a \u201cMust\u201d for one person might be a \u201cShould\u201d for another. Drives quick alignment: Great for team discussions when time is limited. Not data-driven: May oversimplify trade-offs in more mature or complex products. Works with low data environments: Useful even when you\u2019re early in the product lifecycle or lacking metrics. Doesn\u2019t account for effort: Doesn\u2019t factor in cost, time, or difficulty unless you layer that in separately, such as a Level of Effort (LOE) measurement. Encourages constraint-based thinking: Forces teams to distinguish between \u201cessential\u201d and \u201cnice-to-have.\u201d"},{"location":"while-working/product-mgmt/product-manager/#rice","title":"RICE","text":"<p>Unlike MoSCoW, which is a fast, qualitative approach, RICE adds structure by using a simple formula to score and compare initiatives. It helps product teams evaluate different types of work on a more objective scale, using four factors:</p> <ul> <li> <p>Reach: How many users will this initiative affect in a given time period?</p> </li> <li> <p>Impact: How much will it move the needle on user behavior, satisfaction, or business goals?</p> </li> <li> <p>Confidence: How certain are you about the reach and impact estimates?</p> </li> <li> <p>Effort: How much time or work will it take to build?</p> </li> </ul> <p>calculation of RICE Score = (Reach \u00d7 Impact \u00d7 Confidence) \u00f7 Effort</p> <p>When to Use RICE</p> <p>RICE is especially useful when you're dealing with a long list of ideas and need a consistent, objective way to weigh them, especially when team opinions differ or resources are tight. While it\u2019s not perfect, it helps remove some of the emotion or gut instinct from prioritization and replaces it with logic that teams can align around.</p> <p>It\u2019s useful for prioritizing:</p> <p>\u270d\ufe0f Competing priorities that all seem valuable: It brings clarity to decisions that might otherwise come down to opinion. \u270d\ufe0f New roadmap or sprint cycle planning: RICE can help surface the highest-impact, lowest-effort opportunities. \u270d\ufe0f How to justify your choices to stakeholders: The numbers provide a simple, shareable rationale for what\u2019s getting prioritized and why. \u270d\ufe0f Where to reduce bias: It forces teams to articulate assumptions about value and effort, which can reveal blind spots or overconfidence.</p> <p>You don\u2019t need perfect data to use RICE. In fact, even rough estimates are helpful. What matters most is that you apply the same logic across each option.</p> <p>How RICE Works in Practice</p> <p>Each factor in the RICE framework is given a numeric estimate based on available data or team judgment. Just remember, it\u2019s not about precision, it\u2019s about consistent, directional scoring.</p> <p>Here\u2019s how each input typically works:</p> <p>Reach: How many users will this affect? (e.g., 500 users/30%) This is scored as either a number or a total percent of the user base</p> <p>Impact: How much will the initiative move the needle on user behavior or business goals? (e.g. 2) This is rated on a 3-point scale: 3 = high, 2 = medium, 1 = low, 0.5 = minimal)</p> <p>Confidence: How sure are you about your reach and impact values? (e.g., 80%) This is expressed as a %, based on how sure you are.</p> <p>Effort: How much time will it take to complete? (e.g., 5) This is a rough estimate in person-days or \u201csmall/medium/large,\u201d converted to numbers like 2 (quick win), 5 (moderate effort), or 8+ (big lift).</p> <p>\ud83d\udca1EXAMPLE:</p> <p>Let\u2019s say you\u2019re comparing two initiatives: improving user onboarding and adding a new feature. For onboarding, you estimate:</p> <ol> <li>Reach = 500 users</li> <li>Impact = 3 (high)</li> <li>Confidence = 80% (0.8)</li> <li>Effort = 5</li> </ol> <p>RICE Score = (500 \u00d7 3 \u00d7 0.8) \u00f7 5 = 240</p> <p>As a comparative, the RICE score of the new feature initiative might be lower due to the higher effort required and lower confidence in its execution.</p> <p>RICE Pros and Cons After walking through how RICE helps quantify trade-offs, let\u2019s explore where it shines and where it may require more nuance or setup to be effective.</p> <p>|Pros   | Cons| |Brings structure to prioritization: Helps remove bias and emotional decision-making.   | Requires at least some data: Harder to apply when you have little user or usage info. | |Useful for long lists of ideas: Makes it easier to compare multiple initiatives at once. | Estimates can feel subjective: Scores are only as reliable as the assumptions behind them.| |Makes trade-offs visible: Helps teams think critically about effort vs. impact.    | Can give a false sense of precision: A higher score doesn\u2019t always mean a better decision. | |Supports stakeholder communication: Provides a transparent rationale behind choices.   | More time-consuming than lightweight frameworks: Not ideal for rapid decision-making.|</p>"},{"location":"while-working/product-mgmt/product-manager/#weighted-scoring","title":"Weighted scoring","text":"<p>(good for representing trade-offs between high-level initiatives and prioritising them)</p> <p>Weighted Scoring is a customizable prioritization framework that helps you evaluate and compare initiatives based on the factors that matter most to your product, team, or business. Unlike MoSCoW or RICE, it gives you full control over the criteria you evaluate and how much influence each one should have.</p> <p></p> <p>When to Use Weighted Scoring</p> <p>Weighted Scoring works best when you\u2019re faced with multiple initiatives that all seem important, and you need to make a confident, transparent decision. Because it forces teams to clarify what matters most, it\u2019s particularly valuable when you\u2019re balancing strategic priorities, working across cross-functional teams, or need to justify trade-offs to stakeholders.</p> <p>It\u2019s especially useful for prioritizing:</p> <p>\u270d\ufe0f Strategic roadmap planning: It helps to evaluate big bets or initiatives with long-term implications. \u270d\ufe0f Cross-functional trade-offs: It provides a common language when product, design, and engineering need to make decisions together. \u270d\ufe0f Stakeholder alignment and presentation: It helps provide evidence when you need to defend or explain prioritization decisions. \u270d\ufe0f Resource-constrained environments: It clearly demonstrates where it\u2019s critical to invest time and energy, and where it counts most.</p> <p>How Weighted Scoring Works in Practice</p> <p>To apply Weighted Scoring effectively, you\u2019ll need a consistent way to rate each initiative against your chosen criteria. One simple and accessible approach is to use a nonlinear scale, such as 0, 1, 3, 7, and 10. This allows you to reflect meaningful differences without getting stuck in precision.</p> <p>Here\u2019s how to put it into action:</p> <ol> <li> <p>Start with your list of initiatives These could be features, fixes, experiments, or anything you're considering for the roadmap.</p> </li> <li> <p>Choose your evaluation criteria Decide what to evaluate ideas against based on your goals. Some common examples include:</p> </li> </ol> <p>Value to Customers: How much will this help your users? Will it solve a meaningful problem or significantly improve the experience? Risk: How uncertain is the outcome? Consider technical unknowns, delivery complexity, or business risk. Effort: How much time and work will this take? Higher effort typically lowers priority, unless the payoff is worth it. 3. \u26a0\ufe0f A quick note on risk and effort Since high risk and high effort are typically less desirable, you\u2019ll assign negative weights to those criteria. That way, a high score (e.g., 10 for \"very risky\") reduces the overall priority instead of increasing it. You don\u2019t need to reverse your scoring\u2014the negative weight does the work for you. This lets you use the same 0\u201310 scale across all criteria while keeping the math aligned with intelligent trade-offs.</p> <ol> <li> <p>Assign weights to each criterion If user value is more important than effort or risk, give it a higher percentage. Your weights should total 100%.</p> </li> <li> <p>Score each initiative To evaluate how each initiative performs on each criterion, apply a consistent scale (like the 0, 1, 3, 7, or 10 mentioned earlier). </p> </li> <li> <p>Calculate and compare Multiply the score by the weight for each criterion, then add up the results. The higher the total, the higher the priority.</p> </li> </ol> <p>\ud83d\udca1EXAMPLE: You\u2019re evaluating an initiative to fix a sync issue in your calendar planner app. The team agrees on the following evaluation weights:</p> <ol> <li>Value = 50% (0.5)</li> <li>Risk = -30% (-0.3)</li> <li>Effort = -20% (-0.2)</li> </ol> <p>Here's how you might score it: 1. Value = 7: It solves a known pain point for a wide user segment 2. Risk: 1: It's technically straightforward with minimal unknowns 3. Effort: 3: It's a moderate lift that can be handled within a sprint</p> <p>Now apply the formula: 1. 7 x 0.5 = 3.5 2. 1 x -0.3 = -0.3 3. 3 x -0.2 = -0.6 Final Score = 3.5 - 0.3 - 0.6 = 2.6</p> <p>This initiative is high\u2014value, low-risk, and manageable in scope. The final score helps the team see it as a smart, high-priority opportunity.</p> <p>|Pros   | Cons| |Custom-fit to your context: You define the criteria and weights based on what matters most to your team and product.   | Takes time to set up: Requires upfront effort to define scoring rules and agree on weights.| |Great for stakeholder alignment: Makes trade-offs visible and brings structure to cross-functional prioritization conversations.   | Still subjective: Even with a system, people may score things differently\u2014and that\u2019s okay.| |Backs up your strategy: Helps you clearly communicate why you're prioritizing one initiative over another. | Looks more precise than it is: The math can feel official, but the inputs are still based on human judgment.|</p> <p>Template</p> <p>Note: Remember: Frameworks don\u2019t replace judgment, they sharpen it.</p>"},{"location":"while-working/product-mgmt/product-manager/#how-ai-tools-can-help-in-prioritization","title":"How AI tools can help in prioritization","text":"<p>Here are a few powerful ways to bring AI into your prioritization process within the three frameworks you\u2019ve just learned:</p> <p>Idea Clustering and Theme Detection AI tools can analyze user feedback, support tickets, survey responses, and product reviews to automatically surface common themes or pain points. This helps you group related ideas and spot high-frequency requests you might have missed.</p> <p>In MoSCoW, clustering helps you determine what truly qualifies as a Must-have vs. a Could-have. In RICE, identifying high-frequency requests improves your Reach input, giving you stronger signals about how many users are impacted. Example: AI reveals that \u201csync issues\u201d come up in 30% of support tickets. That strengthens its case as a Must-have or high-Reach item.  Effort Estimation Support AI models trained on internal engineering data can suggest effort ranges for new initiatives based on past work. This makes your scoring more consistent, especially when you\u2019re uncertain or lacking time.</p> <p>In RICE, it refines your Effort estimate. In Weighted Scoring, it can improve effort-related inputs like \u201cCost,\u201d \u201cComplexity,\u201d or \u201cTime to Build,\u201d depending on which criteria you\u2019ve included in your custom scorecard.  Example: AI analyzes similar backlog tickets and predicts the sync initiative will take 12 dev days. You now feel confident assigning a medium effort score.  Predictive Scoring and Pattern Matching</p> <p>Some AI tools go a step further and are able to analyze historical product decisions and business results to forecast which initiatives are likely to succeed. These aren\u2019t perfect, but they can help you sense-check your roadmap.</p> <p>In RICE, it can refine your Impact and Confidence inputs. In Weighted Scoring, it offers an early signal to adjust weights or reconsider assumptions. Example: AI flags that a feature similar to what you\u2019re considering (calendar integration) had low adoption last year. You lower your Impact or Confidence score accordingly.  Drafting and Communicating Priorities You can also use AI tools like ChatGPT to draft stakeholder updates, roadmap rationales, or internal documentation. This ensures clear, consistent messaging, especially when time is tight or you\u2019re juggling multiple requests.</p> <p>No matter which method you use, explaining your prioritization is key.  AI can help you articulate your logic and write clear summaries others can rally behind. \ud83d\udca1 More on communicating with confidence coming up in Module 4!</p> <p>Example: After scoring with Weighted Scoring, you use AI to generate a 1-slide summary explaining how each initiative ranked and why.</p> <p>As a PM, you may look at backlog items in 4 different categories:    -  tech debt: improved logging, reducing memory footprint   -  customer delight: UX improvements   -  feature requests: frequently requested feature on the user forums   -  strategic bets: new feature request from stackholders to expand into new markets</p>"},{"location":"while-working/product-mgmt/product-manager/#communication-to-get-buy-in","title":"Communication to get buy-in","text":"<p>Note: when prioritizing you have to gauge things like reach, impact, business value, must-have etc with respect to a feature. At this point understand the difference between <code>opinion</code> vs <code>data-driven judgement</code>. Try to give a <code>data-driven jugdgement</code> as much as possible. Try to find data from your own product. If not possible then try to find data from market and competitor products. Some relevant data is better than a personal opinion. This will be evident when you communicate your prioritization to the stakeholders and broader teams.</p> <p>product team does something critical: they didn\u2019t just share what they prioritized, they explained why. They walked stakeholders through their decision-making framework, explained how each initiative had been scored, and made the trade-offs clear.</p> <p>Bring others along in your prioritization journey, whether it\u2019s your designers, engineers, executives, or customers. </p> <p>Product success isn\u2019t just about what you build; it\u2019s about how well you help others see why it matters.</p> <p>How to communicate your roadmaps and prioritization:</p> <ul> <li>Explain Your Logic Clearly (Even If It\u2019s Not Perfect)</li> </ul> <p>People don\u2019t need every detail. In fact, that may just bog them down. But they do need to see your thought process.</p> <p>Try this:   Use a 1-slide summary or 2-minute verbal walkthrough to explain how you prioritized. Reference the criteria you used (value, effort, risk, etc.), not just the   outcome. Include a lightweight explanation like:</p> <pre><code>\"We prioritized this feature because it helps 70% of users, has a high trust impact, can be shipped in under two weeks, plus it builds trust and reduces resistance.\"\n</code></pre> <p>Pitfalls to Avoid:</p> <ul> <li>Don't Flood Them with Data: Focus on clarity, not complexity.</li> <li> <p>Don't Wait for Perfect Info: Prioritize transparency over precision.</p> </li> <li> <p>Get Alignment Early (Before You Announce the Plan)</p> </li> </ul> <p>Surprises break trust. Proactive conversations build it. Give others space to raise concerns before decisions feel locked in.</p> <p>Try this:</p> <p>Before finalizing your roadmap or sprint, check in with key stakeholders, such as design, engineering, sales, or leadership. Ask:</p> <pre><code>\u201cHere\u2019s how I\u2019m thinking about priorities. Does anything feel misaligned from your side?\u201d\n</code></pre> <p>Pitfalls to Avoid:</p> <ul> <li>Don\u2019t Anounce Prirorities Without Input : Give a heads up as often as posssible.</li> <li> <p>Avoid Only Aligning Up With Leadership: Peer alignment is just as critical.</p> </li> <li> <p>Manage Trade-Offs Out Loud (Not Just in Your Head)</p> </li> </ul> <p>Trade-offs are inevitable. What matters is that others see you making them intentionally. Reframing trade-offs as intentional choices helps others understand your strategy.</p> <p>Try this:   When saying no (or \u201cnot now\u201d), show what you\u2019re saying yes to. For example:</p> <pre><code>\u201cWe\u2019re holding off on this feature not because it\u2019s a bad idea, but because the sync fix impacts more users and supports our Q3 retention goals.\u201d\n</code></pre> <p>Pitfalls to Avoid:</p> <p>\u274c Don't Just Say \"It's Not a Priority\": Explain why.   \u274c Don't Assume Trade-Offs are Obvious: Even great PMs forget others need context.</p> <ul> <li>Revisit Priorities as Inputs Change (and Let People Know When You Do)</li> </ul> <p>Prioritization isn\u2019t a one-time event\u2014it\u2019s an ongoing practice. Build a simple habit of revisiting your prioritization assumptions every 2\u20134 weeks, especially when new user data comes in, resources shift, or a major opportunity or risk emerges.</p> <p>Try this:    Let others know when something changes and why. For example:</p> <pre><code>\u201cGiven the surge in feedback about calendar syncing, we\u2019re moving it up from \u2018Could-have\u2019 to \u2018Should-have\u2019 in our next cycle.\u201d\n</code></pre> <p>Pitfalls to Avoid:</p> <p>\u274c Don't Stick to a Plan Just Because It's Written Down: Adapt with intention.   \u274c Don't Update Priorities Silently: Keep all teams in the loop to build trust and visibility.</p> <p>Remember: Prioritization doesn\u2019t end when you make the decision. It becomes real when others understand it, support it, and move forward with you.</p>"},{"location":"while-working/product-mgmt/product-manager/#conclusion","title":"Conclusion","text":"<ul> <li>Prioritization is about focus, not just ranking</li> <li>You\u2019ll never have enough time or resources to do everything. Great product managers make intentional choices about what to do next and what to say \u201cno\u201d to.</li> <li>Use frameworks to bring structure and clarity</li> <li>Whether it\u2019s MoSCoW for fast alignment, RICE for lightweight scoring, or Weighted Scoring for deeper analysis, frameworks help you compare competing priorities through a consistent lens.</li> <li>Apply the right tool for the moment</li> <li>Each framework has its strengths. Use MoSCoW when you need to move quickly, RICE when you have data to guide you, and Weighted Scoring when alignment and customization matter most.</li> <li>Communication is just as important as the decision itself</li> <li>Getting buy-in means showing your logic, managing trade-offs transparently, and staying open to change as new insights come in. Prioritization is a team sport\u2014and you're the one keeping everyone on the same page.</li> </ul> <p>Resources: ROI calculator : https://productschool.com/download/templates/roi-calculator-resource</p> <p>ROI calculator PPT: on my PC: /home/dhaval/docs/learning/tech/certifications/product-management</p>"},{"location":"while-working/product-mgmt/product-manager/#product-launch-microcertification","title":"product launch microcertification","text":"<p>The launch event keynotes:</p> <p>Should have</p> <ul> <li>product positioning: Why of the product</li> <li>value proposition: What it enables users to do</li> <li>excitement: Tell why you and (audience) should be excited about the product</li> </ul> <p>Look at steve jobs launch videos:</p> <ul> <li>MacBook Air launch</li> <li>iPhone launch</li> </ul>"},{"location":"while-working/product-mgmt/product-manager/#product-launch-key-elements","title":"Product launch key elements","text":"<p>The four foundational elements of an effective product launch are:</p> <ul> <li>Positioning</li> <li>Messaging</li> <li>Pricing and Packaging</li> <li>Competitive Intelligence</li> </ul> <p>Specifically for foundational elements, you will need to ensure that each of these have their own dedicated work stream, and rely on internal stakeholders, such as Sales, Marketing, Customer Success or even senior level executives to help bring them to life.</p>"},{"location":"while-working/product-mgmt/product-manager/#positioning","title":"Positioning","text":"<p>As such, developing and iterating on positioning should begin early on in the product development lifecycle, this way, everyone is on the same page from the beginning. Positioning is essential not only to help capture the attention of your target audiences, but also instrumental for your internal teams.</p> <p>An effective product launch starts with positioning. Positioning provides all the crucial context about a product required to effectively build it and bring it to market.</p> <p>Positioning allows to effective articulate your product\u2019s position in the market by clearly stating:</p> <ul> <li>Who your product serves (During MacBook air launch, steve jobs did not make this clear. But at the end of the keynote speech, you know that it was for everyone)</li> <li>What your product does (Again, in the launch speech, steve jobs didn't mention that the MacBook air does anything extra. But he stressed that it does everything that larger laptops could do)</li> <li>How your product is different (MacBook air's differentiator was slim profile. And still do everything that other laptops could do. So in the entire speech, steve jobs stressed on this one point only)</li> </ul> <p>So, all in all, you don't have to be a differentiator in all 3 aspects above. Any one is enough. </p> <p>Having your internal teams understand these three core elements will help provide clarity and drive alignment. </p> <p>Here are some questions you should ask yourself to gather relevant information for each of the six components and construct your framework.</p> <ul> <li>Who is the core target audience for the product?</li> <li>This product is for\u2026</li> <li>who is this product intended for, who will get the most value</li> <li>What is the core need that you solve for them? Who want/need\u2026</li> <li>what problem is your product solving</li> <li>What is your product? We offer\u2026</li> <li>what do you offer, how do you do it</li> <li>What is our specific value that you provide to customers? Because of\u2026</li> <li>what benefits the customer will get by using your product. Remember, value is not the functionality of the product, but it is the benefit that the customer going to get. </li> <li>What are the shortcomings that you must get past? Despite\u2026</li> <li>what push back you may received from the customer, how to overcome that.</li> <li>In MacBook air launch speech, steve jobs has addressed the lack of CD drive. A limitation of MacBook air and a possible point of pushback. He also explained what apple is doing to workaround this limitation. And in doing so, the justified the priority decision they have taken about droping the cd drive.</li> <li>How do you do this better than competing products? Better than\u2026</li> <li>talk about competitor devices, what areas are they lacking, how your product/service plug those gaps.</li> <li>Steve jobs does this in MacBook air launch speech. Rather the speech start from that. He also brings in competitor phone's mention in iPhone speech. </li> </ul>"},{"location":"while-working/product-mgmt/product-manager/#messaging","title":"messaging","text":"<ul> <li>if positioning is like defining goals for the product (who is it for, what need is catered to, what is the product etc), then the messaging is about communicating all this to the customers</li> <li>So how is messaging developed? As mentioned, it comes from the core content you have defined in your positioning framework. However, one key element that is unique to messaging is that, while it is important to clearly communicate your product\u2019s value and benefits, these must first be done in the context of the product in the general market. Using your messaging to set the stage on your point of view of the market is key to ensuring customers can attach meaning to why they need your product and why they should care about your product right now.</li> <li>Messaging Pillars: Remember that messaging is constructed from two parts: the context and the content. You\u2019ve covered the market shift (aka the context), now it\u2019s time to build your messaging pillars and get into the content.</li> <li>In simple terms, think of constructing your messaging pillars as a three step plan:</li> </ul> <p>Step 1: Articulate the values your product delivers to your customers.</p> <p>Step 2: Highlight the specific product capabilities that deliver those values.</p> <p>Step 3: Back it up with social proof.</p> <ul> <li>Messaging Activations:   Once your messaging has been constructed around context and content, you can use it to create messaging activations across a variety of channels.</li> </ul> <p>These may be:</p> <p>Marketing Copy: Web pages, emails, promotions, and other assets</p> <p>In-Product Copy: Words that appear within the product to reinforce functionality and value</p> <p>Sales Assets: Pitch decks, webinar narratives, and other materials used in B2B sales</p> <p>Just remember, for your messaging to be most effective it needs to be consistent - even if it's been tailored to marketing, sales, or is kept for in-product copy.</p>"},{"location":"while-working/product-mgmt/product-manager/#pricing-and-packaging","title":"Pricing and packaging","text":"<p>pricing and packaging needs to be finalized before your product is ready to launch. This is to ensure that there is alignment between internal teams and key stakeholders.</p> <ul> <li>packaging: The grouping of features or attributes into different bundles (gluu vs Solo (gluu's cloud offering)), (basic vs pro subscription plans)</li> <li>pricing: Amount of money that you charge for each bundle</li> </ul> <p>As your pricing and packaging develops, there are three key steps to plan for to ensure that you are ready to launch.</p> <ul> <li>Test the pricing and bundling</li> <li>check and ask a small set of customers or sales teams to experiment with xyz price to see the customer response</li> <li>Enable customer facing teams: make sure that the teams like customer success, PR, marketing, sales etc are up-to-date of pricing and packaging before the launch. This can be done via video conference, etc</li> <li>update and test systems: systems like company website, CRM, inventory etc where the orders are going to come should be updated with new data and should be kept ready before the launch. Make sure that systems like websites don't reveal products before launch.</li> </ul>"},{"location":"while-working/product-mgmt/product-manager/#competitive-intelligence","title":"Competitive Intelligence","text":"<p>And the final foundational element is competitive intelligence, which is relevant for all functions related to an effective product launch. </p> <p>What is it? Competitive intelligence is the practice of collecting and sharing knowledge about competitors to improve organizational performance. </p> <p>Who can benefit from competitive intelligence?</p> <p>Product Managers: to make sure that they are building differentiated products. </p> <p>Product Marketers: to influence the positioning and messaging that we just talked about. </p> <p>Sales Reps: to make sure that they're armed with the relevant information they need to win deals.</p> <p>Where can you find the information you need to build your competitive intelligence?</p> <ul> <li>Competitor's website</li> <li>help and product documentation</li> <li>your sales teams</li> <li>your partner ecosystem</li> <li>Review sites like G2</li> <li>industry analysts</li> <li>win/loss interviews</li> </ul>"},{"location":"while-working/product-mgmt/product-manager/#go-to-market-gtm-plan","title":"Go to market (GTM) plan","text":"<ul> <li>What is a GTM plan?</li> </ul> <p>It is basically what, who, when, how plan a product or a feature to the market. It has details about how to conduct a launch event, to communication and marketing, to planning for content for communication and marketing, what parameters to measure to decide if the launch was success, beta releases etc </p>"},{"location":"while-working/product-mgmt/product-manager/#what","title":"What","text":"<p>What are you releasing and does it need GTM?</p> <ul> <li>Do you need GTM for this release?</li> </ul> <p>A company may be releasing a completely new product, or a major revision/version of a flagship product, or a major feature in a product, or a minor feature in a product.    Not all the releases need a Go-To-Market effort. A minor feature can be just release with an accompaniying blog on the company website. No major launch event like iPhone is needed. So, not everything needs a GTM/launch event.</p> <ul> <li> <p>First decide what kind of launch is needed for this release?</p> </li> <li> <p>Tier-1: Big launch event hosted by company, engagement on all channels</p> <ul> <li>This is required if a new product is being launched, or a major upgrade to company's main product where this upgrade is going to touch every or majority of company's customer base. Like iPhone's next upgrade. Or Launching iPad air.</li> </ul> </li> <li>Tier-2: No event or small company launch event with specific on-invite audience. Engagement on <code>owned</code> channels only, like company website.<ul> <li>When a smaller feature or product gets released. This feature is of interest for only specific set of customers. Like for example, feature for enterprise customers.</li> </ul> </li> <li>Tier-3: Release and then tell. A minor feature or release that touches many people but the feature is not significant. Just a blog on company website announcing availability of the feature is enough. Like service pack release for OS. </li> </ul> <p>Ask yourself the following questions to help determine which tier your launch might fall into:</p> <ul> <li>Reach: How many customers will be affected? Usually, more customers mean more visibility.</li> <li>Impact: What is the potential impact on overall business goals and the user experience? Will it drive growth and revenue? Is it worth being proactive to help us achieve more ambitious goals more quickly? Do we need users to change their actions somehow?</li> <li>Risk: What risk is there if this feature is not communicated proactively to users? Will there be blowback?</li> </ul>"},{"location":"while-working/product-mgmt/product-manager/#who","title":"Who","text":"<p>Knowing who you are launching for by identifying your target audience is another key element to consider in your go-to-market plan.</p> <p>While you will likely have an idea of who your product is for, there are some additional granularities to consider when building your go-to-market plan. Developing a more rigorous set of audiences will set you up to develop a channel plan that will reach them effectively, so this is a crucial step. </p> <p>Your primary question should be: \u2018Who am I aiming to connect with and market our product to?\u2019</p> <p>Here are some potential questions to consider when deciding on who you aim to target:</p> <ul> <li>Are you trying to reach current customers or attract new ones?</li> <li>Are you adjusting your go-to-market based on whether a customer is a subscriber or not?</li> <li>Are you adjusting your go-to-market to consider lapsed inactive customers? How might you target them if they\u2019re not actively using your product?</li> <li>Are you considering your go-to-market approach based on how long a user has been using your product?</li> <li> <p>Do these audiences have specific titles, work in specific regions, certain industries or have other similar characteristics?</p> </li> <li> <p>What are the goals of this GTM?</p> </li> <li> <p>Usually there are three catagories in which a GTM initiative would set it's goals:</p> <ul> <li>Awareness</li> <li>Engagement</li> <li>Conversion and revenue impact</li> </ul> </li> <li> <p>What is the target for</p> <ul> <li>user engagement: how frequently and how much time users are spending with your product</li> <li>new user on-boarding: how many new users the product has gained after launch</li> <li>user churn: How many users have stopped using your product after launch  </li> <li>Revenue impact</li> <li>user conversion rates: how many users have actually started paying for your product</li> <li>etc</li> </ul> </li> <li> <p>What metrics are being used?</p> </li> <li> <p>Your metrics should highlight and explain what you\u2019re tracking for your launch and how you will evaluate progress towards success.</p> <p>These may be:</p> <ul> <li>Quantitatively: with numbers or percentages showing if you achieved or exceed your metrics for the launch.</li> <li>Qualitatively: with positive feedback or industry recognition.</li> </ul> </li> <li> <p>GTM timelines</p> </li> <li>Schedule for each activity. When to release beta, when to have launch event, when to update websites with new content about this product, when to send product/feature briefs to the sales/marketing teams,</li> <li>It is important to build your go-to-market timeline so you can figure out exactly when and over what time horizon to bring your plan to life.</li> <li>But remember, a go-to-market plan is not a one-off moment in time. It's a structured journey ensuring engagement and growth over longer time horizons, so consider a phased approach so there\u2019s sustainable momentum after your initial launch date. Your GTM plan should include:<ul> <li>A high level timeline that shows exactly when certain channels and marketing tactics will go live.</li> <li>Potential breakdown of different phases of product launch and what the goals are for each phase.</li> </ul> </li> <li> <p>Phased approach:</p> </li> <li> <p>Enablement Plan</p> </li> </ul> <p>Since you will likely be working with a variety of key stakeholders in order to get your product successfully launched, ensure that your enablement plan keeps everyone informed and on the same page.</p> <p>Every launch (or release!) will require some level of enablement to ensure that internal stakeholders have the information they need. Different teams have different priorities and tasks, so make sure that you are sharing your enablement documents to help everyone contextualize the product and get up to speed.</p> <ul> <li> <p>Who needs to know?     Revenue Enablement, Sales, Customer Support, Social, Marketing, and PR are your primary stakeholders who would benefit from your enablement plan.</p> </li> <li> <p>What do they need to know?</p> <ul> <li>The Product Description: Keep the formula clear and concise.</li> </ul> <p>Try (type of product) + (main benefit)</p> <ul> <li> <p>Its Key Features: List them separately using snappy, action verbs.</p> <p>Try enables / monitors / tracks</p> </li> <li> <p>How it Works: Include a quick product demo so that these stakeholders quickly understand it and explain how to use it.</p> </li> </ul> </li> <li> <p>Channel Plan</p> <p>Channel plans can help you identify which channels to use for your launch. Great go-to-market plans incorporate and leverage a mix of different channels that work to achieve specific goals. </p> <p>Channels are dictated by:</p> <p>Your campaign goals and metrics Your target audiences Think about it this way: if your goal is to reactivate lapsed or inactive users of your fitness app, you shouldn\u2019t rely too heavily on in-app messages, since those users won\u2019t see them anyway! Three Common Kinds of Channels to Think About In order for your messaging to reach the right audiences, your channel plan should incorporate the three most common channels: owned, paid and earned.</p> <ul> <li>Owned channels:</li> </ul> <p></p> <ul> <li>Paid channels:</li> </ul> <p></p> <ul> <li>earned channels:</li> </ul> <p></p> </li> <li> <p>Launch Assets</p> </li> </ul> <p>In order to fully bring you go-to-market plan to life, you will need to develop and build assets to generate awareness, interest and excitement in your product. These assets will play a crucial role in your launch strategy and are the final piece of the go-to-market puzzle.</p> <p>There are many different types of assets, and each serves a different function or is useful for different teams. Whichever you choose, be sure that your vision and message for your product launch is clearly understood and communicated - especially when getting help from your creative teams.</p> <ul> <li>sales slides</li> <li>landing pages</li> <li>one pagers</li> <li>email templates</li> <li>customer stories</li> <li>Blog posts</li> <li>webinars</li> <li>Launch videos</li> <li>Interactive product tours</li> <li>demo environments for sales</li> </ul> <p>Keep in mind: Product Marketing Managers (PMMs) in particular are your key partners for go-to-market. They can help support go-to-market activities like segmenting customers, choosing the appropriate customer acquisition channels, and creating external-facing messaging.  </p> <p>Resources:</p> <ul> <li>https://productschool.com/resources/glossary/go-to-market-gtm</li> <li>GTM from a product marketer's perspective: https://productschool.teachable.com/courses/2406983/lectures/50625699</li> <li>measure launch success using these three Metrics: https://productschool.com/blog/product-marketing/how-to-measure-product-launch-success</li> </ul>"},{"location":"while-working/product-mgmt/product-manager/#-breaking-down-the-different-phases-of-your-launch-can-help-strategically-place-activities-for-sustained-momentum-while-also-planning-for-maximum-initial-impact-many-gtm-plans-include-multiple-channel-activations-to-amplify-the-launch-moment-and-then-cycle-through-additional-channels-over-time-to-sustain-engagement-check-out-this-example-of-a-typical-phased-marketing-plan-approach-as-you-can-see-it-has-been-divided-into-three-phases-the-key-is-that-each-phase-has-been-designed-to-achieve-a-specific-goal-with-tactics-and-channels-to-match","title":"-  Breaking down the different phases of your launch can help strategically place activities for sustained momentum while also planning for maximum initial impact. Many GTM plans include multiple channel activations to amplify the launch moment and then cycle through additional channels over time to sustain engagement. Check out this example of a typical phased marketing plan approach. As you can see, it has been divided into three phases. The key is that each phase has been designed to achieve a specific goal with tactics and channels to match:","text":"<ul> <li>Phase 1: Beta/early access     </li> <li>Phase 2: Launch moment     </li> <li>Phase 3: Post launch adoption     </li> </ul>"},{"location":"while-working/product-mgmt/product-manager/#product-discovery-microcertification","title":"product discovery microcertification","text":"<p>https://productschool.teachable.com/courses/enrolled/2600192</p> <p>Product discovery is about identify real user problems, validate solutions, and ensure that your product resonates with its target audience.</p>"},{"location":"while-working/product-mgmt/product-manager/#user-research","title":"User research","text":"<p>useful to understand customer's</p> <ul> <li>behaviour</li> <li>needs</li> <li>motivations</li> <li>pain points</li> </ul> <p>Two main types of user research: </p> <ul> <li>Behavioural</li> <li>Focuses on what users do</li> <li>Observes actions and interaction with the product</li> <li>Attitudinal</li> <li>Explores what users say</li> <li>Gathers feedback about products experiences and opinions</li> </ul> <p>Two main methods of conducting any user research:</p> <ul> <li>Quantitative</li> <li>Offers measurable data to be analysed (surveys, data matrics)</li> <li>Qualitative</li> <li>Provides insights into user's motivations and experiences (interviews, focus group discussions)</li> </ul>"},{"location":"while-working/product-mgmt/product-manager/#product-datasheets","title":"product datasheets","text":"<p>Guidelines: https://www.pragmaticinstitute.com/resources/articles/product/how-to-write-a-kick-butt-product-datasheet/</p> <p>Ping identity datasheets: https://hub.pingidentity.com/datasheets (better than okta below) Okta datasheets: https://www.okta.com/resources/content-library/?field_resource_solutions_target_id=All&amp;type=datasheet</p>"},{"location":"while-working/product-mgmt/product-marketing/","title":"Product marketing","text":""},{"location":"while-working/product-mgmt/product-marketing/#at-gluu-and-iam","title":"At Gluu and IAM","text":""},{"location":"while-working/product-mgmt/product-marketing/#reference","title":"Reference","text":"<p>Market research and intelligence firms:</p> <ul> <li>https://liminal.co/ is very good</li> <li>https://www.kuppingercole.com/</li> </ul>"},{"location":"while-working/product-mgmt/product-marketing/#what-is-icp","title":"What is ICP?","text":"<p>An Ideal Customer Profile (ICP) in marketing is a detailed description of the perfect  customer or company that would benefit most from a product or service while  providing maximum value in return. It serves as a strategic guide for aligning sales and marketing efforts toward high-value prospects most likely to convert, remain loyal, and drive revenue growth.</p>"},{"location":"while-working/product-mgmt/product-marketing/#3-places-to-find-new-market","title":"3 places to find new market","text":"<ul> <li>dominate existing market category</li> <li>segment existing category</li> <li>invent new category - authz is not a category</li> </ul>"},{"location":"while-working/product-mgmt/product-marketing/#iam-and-adjecent-markets-layout","title":"IAM and adjecent markets layout","text":"<p>This is by liniar:</p> <p></p>"},{"location":"while-working/product-mgmt/product-ux-ui-design/","title":"Product ux ui design","text":"<p>Learn from course: https://www.coursera.org/learn/microsoft-product-design-and-ux-ui-fundamentals?specialization=microsoft-ai-product-manager</p>"},{"location":"while-working/product-mgmt/product-ux-ui-design/#ai-tools","title":"AI tools","text":"<ul> <li>Uizard from miro labs</li> <li>stitch from google - free with some initial credits</li> <li>figma ai's starter plan doesn't provide any ai feature</li> </ul>"}]}